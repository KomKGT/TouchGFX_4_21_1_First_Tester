
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001d5cc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000025ac  0801d77c  0801d77c  0002d77c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000011b2  0801fd28  0801fd28  0002fd28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000010  08020edc  08020edc  00030edc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000040  08020eec  08020eec  00030eec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00070e2c  08020f2c  08020f2c  00030f2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08091d58  08091d58  000b0164  2**0
                  CONTENTS
  8 .ARM          00000008  08091d58  08091d58  000a1d58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08091d60  08091d60  000b0164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08091d60  08091d60  000a1d60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08091d74  08091d74  000a1d74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  08091d7c  000b0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00017890  20000164  08091ee0  000b0164  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  200179f4  08091ee0  000b79f4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000b0164  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000c0000  2**2
                  ALLOC
 17 .debug_line   0004cfe1  00000000  00000000  000b0194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000d2a40  00000000  00000000  000fd175  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00015fc5  00000000  00000000  001cfbb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030c0  00000000  00000000  001e5b80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00112e29  00000000  00000000  001e8c40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00005ac8  00000000  00000000  002fba70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0002b619  00000000  00000000  00301538  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  0002fa28  00000000  00000000  0032cb51  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  0035c579  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000903c  00000000  00000000  0035c648  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000164 	.word	0x20000164
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801d764 	.word	0x0801d764

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000168 	.word	0x20000168
 80001ec:	0801d764 	.word	0x0801d764

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f004 fc53 	bl	8004e68 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f01c f869 	bl	801c698 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 feeb 	bl	80013a0 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	08091d7c 	.word	0x08091d7c
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80005dc:	20000164 	.word	0x20000164
  ldr  r3, = _ebss
 80005e0:	200179f4 	.word	0x200179f4

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e6:	4770      	bx	lr

080005e8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e8:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005ea:	f000 fd23 	bl	8001034 <touchgfx_components_init>
  touchgfx_init();
}
 80005ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005f2:	f000 bcab 	b.w	8000f4c <touchgfx_init>

080005f6 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f6:	f000 bd1f 	b.w	8001038 <touchgfx_taskEntry>

080005fa <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005fa:	4770      	bx	lr

080005fc <_ZN20STM32TouchControllerD0Ev>:
 80005fc:	b510      	push	{r4, lr}
 80005fe:	2104      	movs	r1, #4
 8000600:	4604      	mov	r4, r0
 8000602:	f01b fa2f 	bl	801ba64 <_ZdlPvj>
 8000606:	4620      	mov	r0, r4
 8000608:	bd10      	pop	{r4, pc}
	...

0800060c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800060c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060e:	4b0c      	ldr	r3, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000610:	4c0c      	ldr	r4, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000612:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000614:	4b0c      	ldr	r3, [pc, #48]	; (8000648 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000618:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800061a:	6863      	ldr	r3, [r4, #4]
 800061c:	4798      	blx	r3
 800061e:	f640 0311 	movw	r3, #2065	; 0x811
 8000622:	4298      	cmp	r0, r3
 8000624:	d10a      	bne.n	800063c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000626:	4d09      	ldr	r5, [pc, #36]	; (800064c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800062a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800062c:	2082      	movs	r0, #130	; 0x82
 800062e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000630:	682b      	ldr	r3, [r5, #0]
 8000632:	2082      	movs	r0, #130	; 0x82
 8000634:	68db      	ldr	r3, [r3, #12]
 8000636:	4798      	blx	r3
 8000638:	2000      	movs	r0, #0
    }

    return ret;
}
 800063a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800063c:	2001      	movs	r0, #1
 800063e:	e7fc      	b.n	800063a <_Z11BSP_TS_Inittt+0x2e>
 8000640:	20000180 	.word	0x20000180
 8000644:	2000004c 	.word	0x2000004c
 8000648:	20000182 	.word	0x20000182
 800064c:	20000184 	.word	0x20000184

08000650 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000650:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000654:	20f0      	movs	r0, #240	; 0xf0
 8000656:	f7ff bfd9 	b.w	800060c <_Z11BSP_TS_Inittt>
	...

0800065c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800065c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065e:	4d2d      	ldr	r5, [pc, #180]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000660:	682b      	ldr	r3, [r5, #0]
{
 8000662:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000664:	691b      	ldr	r3, [r3, #16]
 8000666:	2082      	movs	r0, #130	; 0x82
 8000668:	4798      	blx	r3
 800066a:	b280      	uxth	r0, r0
 800066c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066e:	2800      	cmp	r0, #0
 8000670:	d043      	beq.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000672:	682b      	ldr	r3, [r5, #0]
 8000674:	f10d 0206 	add.w	r2, sp, #6
 8000678:	695b      	ldr	r3, [r3, #20]
 800067a:	a901      	add	r1, sp, #4
 800067c:	2082      	movs	r0, #130	; 0x82
 800067e:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000680:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000684:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 8000688:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800068a:	2a0a      	cmp	r2, #10
 800068c:	d937      	bls.n	80006fe <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 800068e:	230b      	movs	r3, #11
 8000690:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000694:	4b20      	ldr	r3, [pc, #128]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8000696:	881b      	ldrh	r3, [r3, #0]
 8000698:	429a      	cmp	r2, r3
 800069a:	d901      	bls.n	80006a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 800069c:	3b01      	subs	r3, #1
 800069e:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006a4:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006a8:	428b      	cmp	r3, r1
 80006aa:	d82a      	bhi.n	8000702 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006ac:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006b0:	330e      	adds	r3, #14
 80006b2:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006b4:	210f      	movs	r1, #15
 80006b6:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ba:	4918      	ldr	r1, [pc, #96]	; (800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006bc:	8809      	ldrh	r1, [r1, #0]
 80006be:	428b      	cmp	r3, r1
 80006c0:	d901      	bls.n	80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006c2:	1e4b      	subs	r3, r1, #1
 80006c4:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4e16      	ldr	r6, [pc, #88]	; (8000720 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c8:	4d16      	ldr	r5, [pc, #88]	; (8000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ca:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ce:	4283      	cmp	r3, r0
 80006d0:	b281      	uxth	r1, r0
 80006d2:	bf8c      	ite	hi
 80006d4:	1a59      	subhi	r1, r3, r1
 80006d6:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b2b8      	uxth	r0, r7
 80006da:	42ba      	cmp	r2, r7
 80006dc:	bf8c      	ite	hi
 80006de:	1a10      	subhi	r0, r2, r0
 80006e0:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e2:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e4:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006e6:	4401      	add	r1, r0
 80006e8:	2905      	cmp	r1, #5
        {
            _x = x;
 80006ea:	bfc8      	it	gt
 80006ec:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006ee:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006f0:	bfc8      	it	gt
 80006f2:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006f4:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006f6:	682b      	ldr	r3, [r5, #0]
 80006f8:	80a3      	strh	r3, [r4, #4]
    }
}
 80006fa:	b003      	add	sp, #12
 80006fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006fe:	2200      	movs	r2, #0
 8000700:	e7ce      	b.n	80006a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 8000702:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8000706:	3308      	adds	r3, #8
 8000708:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800070a:	2b0e      	cmp	r3, #14
 800070c:	d8d2      	bhi.n	80006b4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 800070e:	2300      	movs	r3, #0
 8000710:	e7d9      	b.n	80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000712:	bf00      	nop
 8000714:	20000184 	.word	0x20000184
 8000718:	20000182 	.word	0x20000182
 800071c:	20000180 	.word	0x20000180
 8000720:	20000188 	.word	0x20000188
 8000724:	2000018c 	.word	0x2000018c

08000728 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000728:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800072a:	4668      	mov	r0, sp
{
 800072c:	460d      	mov	r5, r1
 800072e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000730:	f7ff ff94 	bl	800065c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000734:	f8bd 0000 	ldrh.w	r0, [sp]
 8000738:	b130      	cbz	r0, 8000748 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800073a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800073e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000740:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000744:	6023      	str	r3, [r4, #0]
        return true;
 8000746:	2001      	movs	r0, #1
}
 8000748:	b003      	add	sp, #12
 800074a:	bd30      	pop	{r4, r5, pc}

0800074c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800074c:	2803      	cmp	r0, #3
 800074e:	d821      	bhi.n	8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000750:	e8df f000 	tbb	[pc, r0]
 8000754:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000758:	4b0f      	ldr	r3, [pc, #60]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800075a:	681a      	ldr	r2, [r3, #0]
 800075c:	fab2 f282 	clz	r2, r2
 8000760:	0952      	lsrs	r2, r2, #5
 8000762:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000764:	480d      	ldr	r0, [pc, #52]	; (800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000766:	f004 be17 	b.w	8005398 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	4b0b      	ldr	r3, [pc, #44]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800076c:	685a      	ldr	r2, [r3, #4]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2108      	movs	r1, #8
 8000776:	e7f5      	b.n	8000764 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000778:	4b07      	ldr	r3, [pc, #28]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800077a:	689a      	ldr	r2, [r3, #8]
 800077c:	fab2 f282 	clz	r2, r2
 8000780:	0952      	lsrs	r2, r2, #5
 8000782:	2110      	movs	r1, #16
 8000784:	e7ee      	b.n	8000764 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000786:	4b04      	ldr	r3, [pc, #16]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000788:	68da      	ldr	r2, [r3, #12]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2120      	movs	r1, #32
 8000792:	e7e7      	b.n	8000764 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000794:	4770      	bx	lr
 8000796:	bf00      	nop
 8000798:	20000190 	.word	0x20000190
 800079c:	40021000 	.word	0x40021000

080007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007a0:	2803      	cmp	r0, #3
 80007a2:	d821      	bhi.n	80007e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80007a4:	e8df f000 	tbb	[pc, r0]
 80007a8:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007ac:	4b0f      	ldr	r3, [pc, #60]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007ae:	681a      	ldr	r2, [r3, #0]
 80007b0:	3a00      	subs	r2, #0
 80007b2:	bf18      	it	ne
 80007b4:	2201      	movne	r2, #1
 80007b6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007b8:	480d      	ldr	r0, [pc, #52]	; (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80007ba:	f004 bded 	b.w	8005398 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007be:	4b0b      	ldr	r3, [pc, #44]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007c0:	685a      	ldr	r2, [r3, #4]
 80007c2:	3a00      	subs	r2, #0
 80007c4:	bf18      	it	ne
 80007c6:	2201      	movne	r2, #1
 80007c8:	2108      	movs	r1, #8
 80007ca:	e7f5      	b.n	80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007cc:	4b07      	ldr	r3, [pc, #28]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007ce:	689a      	ldr	r2, [r3, #8]
 80007d0:	3a00      	subs	r2, #0
 80007d2:	bf18      	it	ne
 80007d4:	2201      	movne	r2, #1
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7ee      	b.n	80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007da:	4b04      	ldr	r3, [pc, #16]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007dc:	68da      	ldr	r2, [r3, #12]
 80007de:	3a00      	subs	r2, #0
 80007e0:	bf18      	it	ne
 80007e2:	2201      	movne	r2, #1
 80007e4:	2120      	movs	r1, #32
 80007e6:	e7e7      	b.n	80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	20000190 	.word	0x20000190
 80007f0:	40021000 	.word	0x40021000

080007f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007f4:	2803      	cmp	r0, #3
 80007f6:	d80d      	bhi.n	8000814 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80007f8:	e8df f000 	tbb	[pc, r0]
 80007fc:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000800:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000802:	4805      	ldr	r0, [pc, #20]	; (8000818 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000804:	f004 bdcd 	b.w	80053a2 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000808:	2108      	movs	r1, #8
 800080a:	e7fa      	b.n	8000802 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800080c:	2110      	movs	r1, #16
 800080e:	e7f8      	b.n	8000802 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000810:	2120      	movs	r1, #32
 8000812:	e7f6      	b.n	8000802 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000814:	4770      	bx	lr
 8000816:	bf00      	nop
 8000818:	40021000 	.word	0x40021000

0800081c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 800081c:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800081e:	2803      	cmp	r0, #3
 8000820:	d811      	bhi.n	8000846 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8000822:	e8df f000 	tbb	[pc, r0]
 8000826:	0a02      	.short	0x0a02
 8000828:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800082a:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800082c:	4807      	ldr	r0, [pc, #28]	; (800084c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800082e:	f004 fdad 	bl	800538c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000832:	1e43      	subs	r3, r0, #1
 8000834:	4258      	negs	r0, r3
 8000836:	4158      	adcs	r0, r3
 8000838:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800083a:	2108      	movs	r1, #8
 800083c:	e7f6      	b.n	800082c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800083e:	2110      	movs	r1, #16
 8000840:	e7f4      	b.n	800082c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000842:	2120      	movs	r1, #32
 8000844:	e7f2      	b.n	800082c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000846:	2000      	movs	r0, #0
 8000848:	e7f3      	b.n	8000832 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800084a:	bf00      	nop
 800084c:	40021000 	.word	0x40021000

08000850 <_ZN8touchgfx4GPIO4initEv>:
{
 8000850:	b570      	push	{r4, r5, r6, lr}
 8000852:	4d08      	ldr	r5, [pc, #32]	; (8000874 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000854:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000856:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000858:	b2e0      	uxtb	r0, r4
 800085a:	f7ff ffdf 	bl	800081c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800085e:	b118      	cbz	r0, 8000868 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000860:	682b      	ldr	r3, [r5, #0]
 8000862:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000864:	bf18      	it	ne
 8000866:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000868:	3401      	adds	r4, #1
 800086a:	2c05      	cmp	r4, #5
 800086c:	f105 0504 	add.w	r5, r5, #4
 8000870:	d1f2      	bne.n	8000858 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000872:	bd70      	pop	{r4, r5, r6, pc}
 8000874:	20000190 	.word	0x20000190

08000878 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000878:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800087a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800087e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000882:	4770      	bx	lr

08000884 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000884:	2000      	movs	r0, #0
 8000886:	4770      	bx	lr

08000888 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000888:	4b03      	ldr	r3, [pc, #12]	; (8000898 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800088a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800088c:	3900      	subs	r1, #0
 800088e:	bf18      	it	ne
 8000890:	2101      	movne	r1, #1
 8000892:	7019      	strb	r1, [r3, #0]
    }
 8000894:	4770      	bx	lr
 8000896:	bf00      	nop
 8000898:	2001774f 	.word	0x2001774f

0800089c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800089c:	2000      	movs	r0, #0
 800089e:	4770      	bx	lr

080008a0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008a0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80008a2:	b10b      	cbz	r3, 80008a8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008a4:	4608      	mov	r0, r1
 80008a6:	4718      	bx	r3
        }
    }
 80008a8:	4770      	bx	lr

080008aa <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008aa:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80008ae:	4770      	bx	lr

080008b0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008b0:	6840      	ldr	r0, [r0, #4]
 80008b2:	6803      	ldr	r3, [r0, #0]
 80008b4:	699b      	ldr	r3, [r3, #24]
 80008b6:	4718      	bx	r3

080008b8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008b8:	4770      	bx	lr

080008ba <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008ba:	4770      	bx	lr

080008bc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008bc:	4770      	bx	lr
	...

080008c0 <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 80008c0:	b570      	push	{r4, r5, r6, lr}
 80008c2:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80008c4:	f000 fc86 	bl	80011d4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80008c8:	6823      	ldr	r3, [r4, #0]
 80008ca:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80008ce:	4b04      	ldr	r3, [pc, #16]	; (80008e0 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 80008d0:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 80008d4:	4620      	mov	r0, r4
 80008d6:	46ac      	mov	ip, r5
}
 80008d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80008dc:	4760      	bx	ip
 80008de:	bf00      	nop
 80008e0:	d0000000 	.word	0xd0000000

080008e4 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80008e4:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80008e6:	6803      	ldr	r3, [r0, #0]
{
 80008e8:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80008ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80008ee:	4798      	blx	r3
    enableInterrupts();
 80008f0:	6823      	ldr	r3, [r4, #0]
 80008f2:	4620      	mov	r0, r4
 80008f4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008f6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008f8:	f000 f8ec 	bl	8000ad4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008fc:	6823      	ldr	r3, [r4, #0]
 80008fe:	4620      	mov	r0, r4
 8000900:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000902:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000904:	2029      	movs	r0, #41	; 0x29
 8000906:	f000 ff83 	bl	8001810 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800090a:	f000 f8e3 	bl	8000ad4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800090e:	6823      	ldr	r3, [r4, #0]
 8000910:	4620      	mov	r0, r4
 8000912:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000914:	4798      	blx	r3
    for (;;)
 8000916:	e7f8      	b.n	800090a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000918 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000918:	b510      	push	{r4, lr}
 800091a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800091c:	f009 fe20 	bl	800a560 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000920:	6823      	ldr	r3, [r4, #0]
 8000922:	4620      	mov	r0, r4
 8000924:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800092c:	4718      	bx	r3

0800092e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800092e:	f000 bc43 	b.w	80011b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000932 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000932:	f000 bc47 	b.w	80011c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000936 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000936:	f000 bc73 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800093a <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800093a:	f000 bc19 	b.w	8001170 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800093e <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800093e:	f000 bc7b 	b.w	8001238 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000942 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000942:	f000 bc83 	b.w	800124c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000946 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000946:	f000 bc1d 	b.w	8001184 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800094a <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800094a:	f009 b86f 	b.w	8009a2c <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800094e <_ZN11TouchGFXHALD0Ev>:
 800094e:	b510      	push	{r4, lr}
 8000950:	217c      	movs	r1, #124	; 0x7c
 8000952:	4604      	mov	r4, r0
 8000954:	f01b f886 	bl	801ba64 <_ZdlPvj>
 8000958:	4620      	mov	r0, r4
 800095a:	bd10      	pop	{r4, pc}

0800095c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800095c:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000960:	b11b      	cbz	r3, 800096a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000962:	6840      	ldr	r0, [r0, #4]
 8000964:	6803      	ldr	r3, [r0, #0]
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	4718      	bx	r3
    }
 800096a:	4618      	mov	r0, r3
 800096c:	4770      	bx	lr
	...

08000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000970:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000972:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000976:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 800097a:	4b0c      	ldr	r3, [pc, #48]	; (80009ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800097c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800097e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000980:	d009      	beq.n	8000996 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000982:	b93a      	cbnz	r2, 8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000984:	4a0a      	ldr	r2, [pc, #40]	; (80009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000986:	490b      	ldr	r1, [pc, #44]	; (80009b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000988:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800098a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800098c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800098e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000990:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000992:	701a      	strb	r2, [r3, #0]
    }
 8000994:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000996:	2a00      	cmp	r2, #0
 8000998:	d0fc      	beq.n	8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800099a:	4a05      	ldr	r2, [pc, #20]	; (80009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800099c:	4905      	ldr	r1, [pc, #20]	; (80009b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800099e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009a0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009a2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009a4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009a6:	2200      	movs	r2, #0
 80009a8:	e7f3      	b.n	8000992 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009aa:	bf00      	nop
 80009ac:	20017748 	.word	0x20017748
 80009b0:	20017744 	.word	0x20017744
 80009b4:	20017746 	.word	0x20017746

080009b8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80009b8:	b570      	push	{r4, r5, r6, lr}
 80009ba:	460d      	mov	r5, r1
 80009bc:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009be:	b935      	cbnz	r5, 80009ce <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80009c0:	4b09      	ldr	r3, [pc, #36]	; (80009e8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80009c2:	4a0a      	ldr	r2, [pc, #40]	; (80009ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80009c4:	480a      	ldr	r0, [pc, #40]	; (80009f0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80009c6:	f240 21d2 	movw	r1, #722	; 0x2d2
 80009ca:	f01b fe1b 	bl	801c604 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ce:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009d2:	4b08      	ldr	r3, [pc, #32]	; (80009f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80009d4:	3a00      	subs	r2, #0
 80009d6:	bf18      	it	ne
 80009d8:	2201      	movne	r2, #1
 80009da:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80009dc:	6803      	ldr	r3, [r0, #0]
    }
 80009de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80009e2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80009e6:	4718      	bx	r3
 80009e8:	0801d824 	.word	0x0801d824
 80009ec:	0801d85c 	.word	0x0801d85c
 80009f0:	0801d8aa 	.word	0x0801d8aa
 80009f4:	2001774e 	.word	0x2001774e

080009f8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009f8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009fa:	4b09      	ldr	r3, [pc, #36]	; (8000a20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009fc:	881b      	ldrh	r3, [r3, #0]
 80009fe:	428b      	cmp	r3, r1
 8000a00:	d803      	bhi.n	8000a0a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a02:	4b08      	ldr	r3, [pc, #32]	; (8000a24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a04:	881b      	ldrh	r3, [r3, #0]
 8000a06:	4293      	cmp	r3, r2
 8000a08:	d905      	bls.n	8000a16 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a0a:	4b07      	ldr	r3, [pc, #28]	; (8000a28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a0c:	4a07      	ldr	r2, [pc, #28]	; (8000a2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a0e:	4808      	ldr	r0, [pc, #32]	; (8000a30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a10:	219e      	movs	r1, #158	; 0x9e
 8000a12:	f01b fdf7 	bl	801c604 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a16:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a18:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a1c:	801a      	strh	r2, [r3, #0]
    }
 8000a1e:	bd08      	pop	{r3, pc}
 8000a20:	20017744 	.word	0x20017744
 8000a24:	20017746 	.word	0x20017746
 8000a28:	0801d8ef 	.word	0x0801d8ef
 8000a2c:	0801d952 	.word	0x0801d952
 8000a30:	0801d8aa 	.word	0x0801d8aa
 8000a34:	2001774a 	.word	0x2001774a
 8000a38:	2001774c 	.word	0x2001774c

08000a3c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a3c:	2101      	movs	r1, #1
{
 8000a3e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a40:	2200      	movs	r2, #0
 8000a42:	4608      	mov	r0, r1
 8000a44:	f006 fcc5 	bl	80073d2 <osSemaphoreNew>
 8000a48:	4b0a      	ldr	r3, [pc, #40]	; (8000a74 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000a4a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000a4c:	b928      	cbnz	r0, 8000a5a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000a4e:	4b0a      	ldr	r3, [pc, #40]	; (8000a78 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a50:	4a0a      	ldr	r2, [pc, #40]	; (8000a7c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a52:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a54:	480a      	ldr	r0, [pc, #40]	; (8000a80 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a56:	f01b fdd5 	bl	801c604 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a5a:	2200      	movs	r2, #0
 8000a5c:	2104      	movs	r1, #4
 8000a5e:	2001      	movs	r0, #1
 8000a60:	f006 fd54 	bl	800750c <osMessageQueueNew>
 8000a64:	4b07      	ldr	r3, [pc, #28]	; (8000a84 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a66:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a68:	b918      	cbnz	r0, 8000a72 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a6a:	4b07      	ldr	r3, [pc, #28]	; (8000a88 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a6c:	4a03      	ldr	r2, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a6e:	212c      	movs	r1, #44	; 0x2c
 8000a70:	e7f0      	b.n	8000a54 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a72:	bd08      	pop	{r3, pc}
 8000a74:	200001a4 	.word	0x200001a4
 8000a78:	0801da70 	.word	0x0801da70
 8000a7c:	0801dab9 	.word	0x0801dab9
 8000a80:	0801dae8 	.word	0x0801dae8
 8000a84:	200001a0 	.word	0x200001a0
 8000a88:	0801db5c 	.word	0x0801db5c

08000a8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a8c:	4b02      	ldr	r3, [pc, #8]	; (8000a98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a8e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a92:	6818      	ldr	r0, [r3, #0]
 8000a94:	f006 bce7 	b.w	8007466 <osSemaphoreAcquire>
 8000a98:	200001a4 	.word	0x200001a4

08000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a9c:	4b01      	ldr	r3, [pc, #4]	; (8000aa4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a9e:	6818      	ldr	r0, [r3, #0]
 8000aa0:	f006 bd0c 	b.w	80074bc <osSemaphoreRelease>
 8000aa4:	200001a4 	.word	0x200001a4

08000aa8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000aa8:	4b02      	ldr	r3, [pc, #8]	; (8000ab4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000aaa:	2100      	movs	r1, #0
 8000aac:	6818      	ldr	r0, [r3, #0]
 8000aae:	f006 bcda 	b.w	8007466 <osSemaphoreAcquire>
 8000ab2:	bf00      	nop
 8000ab4:	200001a4 	.word	0x200001a4

08000ab8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000ab8:	f7ff bff0 	b.w	8000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000abc <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000abc:	4803      	ldr	r0, [pc, #12]	; (8000acc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000abe:	4904      	ldr	r1, [pc, #16]	; (8000ad0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000ac0:	6800      	ldr	r0, [r0, #0]
 8000ac2:	2300      	movs	r3, #0
 8000ac4:	461a      	mov	r2, r3
 8000ac6:	f006 bd5c 	b.w	8007582 <osMessageQueuePut>
 8000aca:	bf00      	nop
 8000acc:	200001a0 	.word	0x200001a0
 8000ad0:	20000004 	.word	0x20000004

08000ad4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000ad4:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000ad6:	4c08      	ldr	r4, [pc, #32]	; (8000af8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000ad8:	2300      	movs	r3, #0
 8000ada:	461a      	mov	r2, r3
 8000adc:	a901      	add	r1, sp, #4
 8000ade:	6820      	ldr	r0, [r4, #0]
 8000ae0:	f006 fd7f 	bl	80075e2 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000ae4:	6820      	ldr	r0, [r4, #0]
 8000ae6:	f04f 33ff 	mov.w	r3, #4294967295
 8000aea:	2200      	movs	r2, #0
 8000aec:	a901      	add	r1, sp, #4
 8000aee:	f006 fd78 	bl	80075e2 <osMessageQueueGet>
}
 8000af2:	b002      	add	sp, #8
 8000af4:	bd10      	pop	{r4, pc}
 8000af6:	bf00      	nop
 8000af8:	200001a0 	.word	0x200001a0

08000afc <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000afc:	6803      	ldr	r3, [r0, #0]
 8000afe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b00:	4718      	bx	r3

08000b02 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000b02:	2001      	movs	r0, #1
 8000b04:	4770      	bx	lr

08000b06 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000b06:	6803      	ldr	r3, [r0, #0]
 8000b08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000b0a:	4718      	bx	r3

08000b0c <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000b0c:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000b0e:	2300      	movs	r3, #0
 8000b10:	9301      	str	r3, [sp, #4]
 8000b12:	4b0d      	ldr	r3, [pc, #52]	; (8000b48 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000b14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b16:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000b1a:	631a      	str	r2, [r3, #48]	; 0x30
 8000b1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b1e:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000b22:	9201      	str	r2, [sp, #4]
 8000b24:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000b26:	691a      	ldr	r2, [r3, #16]
 8000b28:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000b2c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000b2e:	691a      	ldr	r2, [r3, #16]
 8000b30:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000b34:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000b36:	4b05      	ldr	r3, [pc, #20]	; (8000b4c <_ZN8STM32DMA10initializeEv+0x40>)
 8000b38:	4a05      	ldr	r2, [pc, #20]	; (8000b50 <_ZN8STM32DMA10initializeEv+0x44>)
 8000b3a:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b3c:	4b05      	ldr	r3, [pc, #20]	; (8000b54 <_ZN8STM32DMA10initializeEv+0x48>)
 8000b3e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b42:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000b44:	b002      	add	sp, #8
 8000b46:	4770      	bx	lr
 8000b48:	40023800 	.word	0x40023800
 8000b4c:	2000674c 	.word	0x2000674c
 8000b50:	08000b99 	.word	0x08000b99
 8000b54:	e000e100 	.word	0xe000e100

08000b58 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b58:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b5c:	4770      	bx	lr
	...

08000b60 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b60:	4b05      	ldr	r3, [pc, #20]	; (8000b78 <_ZN8STM32DMAD1Ev+0x18>)
 8000b62:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b64:	4b05      	ldr	r3, [pc, #20]	; (8000b7c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b66:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b6a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b6e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b72:	f3bf 8f6f 	isb	sy
}
 8000b76:	4770      	bx	lr
 8000b78:	0801dd20 	.word	0x0801dd20
 8000b7c:	e000e100 	.word	0xe000e100

08000b80 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b80:	b510      	push	{r4, lr}
 8000b82:	4604      	mov	r4, r0
}
 8000b84:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b88:	f7ff ffea 	bl	8000b60 <_ZN8STM32DMAD1Ev>
 8000b8c:	4620      	mov	r0, r4
 8000b8e:	f01a ff69 	bl	801ba64 <_ZdlPvj>
 8000b92:	4620      	mov	r0, r4
 8000b94:	bd10      	pop	{r4, pc}
	...

08000b98 <DMA2D_XferCpltCallback>:
        return instance;
 8000b98:	4b02      	ldr	r3, [pc, #8]	; (8000ba4 <DMA2D_XferCpltCallback+0xc>)
 8000b9a:	681b      	ldr	r3, [r3, #0]
 8000b9c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b9e:	6803      	ldr	r3, [r0, #0]
 8000ba0:	695b      	ldr	r3, [r3, #20]
 8000ba2:	4718      	bx	r3
 8000ba4:	20017750 	.word	0x20017750

08000ba8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ba8:	b570      	push	{r4, r5, r6, lr}
 8000baa:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000bac:	4625      	mov	r5, r4
 8000bae:	4b0a      	ldr	r3, [pc, #40]	; (8000bd8 <_ZN8STM32DMAC1Ev+0x30>)
 8000bb0:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bb2:	2600      	movs	r6, #0
 8000bb4:	6060      	str	r0, [r4, #4]
 8000bb6:	7226      	strb	r6, [r4, #8]
 8000bb8:	7266      	strb	r6, [r4, #9]
 8000bba:	f845 3b20 	str.w	r3, [r5], #32
 8000bbe:	2260      	movs	r2, #96	; 0x60
 8000bc0:	4629      	mov	r1, r5
 8000bc2:	f009 fe0b 	bl	800a7dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000bc6:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000bca:	60ee      	str	r6, [r5, #12]
 8000bcc:	3524      	adds	r5, #36	; 0x24
 8000bce:	42ab      	cmp	r3, r5
 8000bd0:	d1fb      	bne.n	8000bca <_ZN8STM32DMAC1Ev+0x22>
}
 8000bd2:	4620      	mov	r0, r4
 8000bd4:	bd70      	pop	{r4, r5, r6, pc}
 8000bd6:	bf00      	nop
 8000bd8:	0801dd20 	.word	0x0801dd20

08000bdc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bdc:	b508      	push	{r3, lr}
    switch (format)
 8000bde:	290b      	cmp	r1, #11
 8000be0:	d80b      	bhi.n	8000bfa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000be2:	e8df f001 	tbb	[pc, r1]
 8000be6:	0612      	.short	0x0612
 8000be8:	0a0a0a10 	.word	0x0a0a0a10
 8000bec:	0808080a 	.word	0x0808080a
 8000bf0:	0808      	.short	0x0808
 8000bf2:	2001      	movs	r0, #1
}
 8000bf4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000bf6:	2005      	movs	r0, #5
        break;
 8000bf8:	e7fc      	b.n	8000bf4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000bfa:	4b05      	ldr	r3, [pc, #20]	; (8000c10 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bfc:	4a05      	ldr	r2, [pc, #20]	; (8000c14 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bfe:	4806      	ldr	r0, [pc, #24]	; (8000c18 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000c00:	2166      	movs	r1, #102	; 0x66
 8000c02:	f01b fcff 	bl	801c604 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000c06:	2000      	movs	r0, #0
 8000c08:	e7f4      	b.n	8000bf4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000c0a:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000c0c:	e7f2      	b.n	8000bf4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000c0e:	bf00      	nop
 8000c10:	0801db9e 	.word	0x0801db9e
 8000c14:	0801dbb9 	.word	0x0801dbb9
 8000c18:	0801dc03 	.word	0x0801dc03

08000c1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000c1c:	b508      	push	{r3, lr}
    switch (format)
 8000c1e:	290a      	cmp	r1, #10
 8000c20:	d809      	bhi.n	8000c36 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000c22:	e8df f001 	tbb	[pc, r1]
 8000c26:	0610      	.short	0x0610
 8000c28:	0808080e 	.word	0x0808080e
 8000c2c:	06060608 	.word	0x06060608
 8000c30:	06          	.byte	0x06
 8000c31:	00          	.byte	0x00
 8000c32:	2001      	movs	r0, #1
}
 8000c34:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000c36:	4b05      	ldr	r3, [pc, #20]	; (8000c4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000c38:	4a05      	ldr	r2, [pc, #20]	; (8000c50 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000c3a:	4806      	ldr	r0, [pc, #24]	; (8000c54 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000c3c:	2187      	movs	r1, #135	; 0x87
 8000c3e:	f01b fce1 	bl	801c604 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000c42:	2000      	movs	r0, #0
 8000c44:	e7f6      	b.n	8000c34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000c46:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000c48:	e7f4      	b.n	8000c34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000c4a:	bf00      	nop
 8000c4c:	0801db9e 	.word	0x0801db9e
 8000c50:	0801dc75 	.word	0x0801dc75
 8000c54:	0801dc03 	.word	0x0801dc03

08000c58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c5c:	7f4f      	ldrb	r7, [r1, #29]
{
 8000c5e:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c60:	4639      	mov	r1, r7
{
 8000c62:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c64:	f7ff ffba 	bl	8000bdc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c68:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c6c:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c6e:	4641      	mov	r1, r8
 8000c70:	4648      	mov	r0, r9
 8000c72:	f7ff ffb3 	bl	8000bdc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c76:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c78:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c7a:	4648      	mov	r0, r9
 8000c7c:	f7ff ffce 	bl	8000c1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	8aa1      	ldrh	r1, [r4, #20]
 8000c82:	8b62      	ldrh	r2, [r4, #26]
 8000c84:	4b42      	ldr	r3, [pc, #264]	; (8000d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000c86:	1a52      	subs	r2, r2, r1
 8000c88:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c8a:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c8c:	8b22      	ldrh	r2, [r4, #24]
 8000c8e:	1a52      	subs	r2, r2, r1
 8000c90:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c92:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c94:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c96:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c9a:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9c:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c9e:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ca0:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000ca2:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000ca4:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca6:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000caa:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cac:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000cb0:	d026      	beq.n	8000d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000cb2:	d810      	bhi.n	8000cd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000cb4:	2920      	cmp	r1, #32
 8000cb6:	ea45 0402 	orr.w	r4, r5, r2
 8000cba:	d061      	beq.n	8000d80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000cbc:	2940      	cmp	r1, #64	; 0x40
 8000cbe:	d05f      	beq.n	8000d80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000cc0:	2904      	cmp	r1, #4
 8000cc2:	d05d      	beq.n	8000d80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cc4:	4b32      	ldr	r3, [pc, #200]	; (8000d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000cc6:	432a      	orrs	r2, r5
 8000cc8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000ccc:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cce:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000cd0:	d05a      	beq.n	8000d88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000cd2:	4a30      	ldr	r2, [pc, #192]	; (8000d94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cd4:	e040      	b.n	8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000cd6:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000cda:	d007      	beq.n	8000cec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000cdc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000ce0:	d1f0      	bne.n	8000cc4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ce2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ce6:	f042 0209 	orr.w	r2, r2, #9
 8000cea:	e003      	b.n	8000cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cec:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000cf0:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cf4:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000cf6:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000cf8:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cfa:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cfc:	6158      	str	r0, [r3, #20]
 8000cfe:	e02a      	b.n	8000d56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000d00:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d02:	432a      	orrs	r2, r5
 8000d04:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000d08:	1d21      	adds	r1, r4, #4
 8000d0a:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d0c:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000d0e:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d10:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d12:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000d14:	b142      	cbz	r2, 8000d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000d16:	2a01      	cmp	r2, #1
 8000d18:	d021      	beq.n	8000d5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000d1a:	4b1f      	ldr	r3, [pc, #124]	; (8000d98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000d1c:	4a1f      	ldr	r2, [pc, #124]	; (8000d9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000d1e:	4820      	ldr	r0, [pc, #128]	; (8000da0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000d20:	f240 1111 	movw	r1, #273	; 0x111
 8000d24:	f01b fc6e 	bl	801c604 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d28:	69da      	ldr	r2, [r3, #28]
 8000d2a:	8861      	ldrh	r1, [r4, #2]
 8000d2c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d30:	3901      	subs	r1, #1
 8000d32:	f022 0210 	bic.w	r2, r2, #16
 8000d36:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000d3a:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000d3c:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000d3e:	4b14      	ldr	r3, [pc, #80]	; (8000d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000d40:	69da      	ldr	r2, [r3, #28]
 8000d42:	f042 0220 	orr.w	r2, r2, #32
 8000d46:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000d48:	69da      	ldr	r2, [r3, #28]
 8000d4a:	0692      	lsls	r2, r2, #26
 8000d4c:	d4fc      	bmi.n	8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d4e:	2210      	movs	r2, #16
 8000d50:	609a      	str	r2, [r3, #8]
            if(blend)
 8000d52:	2800      	cmp	r0, #0
 8000d54:	d0bd      	beq.n	8000cd2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d56:	4a13      	ldr	r2, [pc, #76]	; (8000da4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d58:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d5e:	8862      	ldrh	r2, [r4, #2]
 8000d60:	69d9      	ldr	r1, [r3, #28]
 8000d62:	1e54      	subs	r4, r2, #1
 8000d64:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000d68:	f022 0210 	bic.w	r2, r2, #16
 8000d6c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000d70:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d74:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000d78:	bf18      	it	ne
 8000d7a:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d7c:	61da      	str	r2, [r3, #28]
                break;
 8000d7e:	e7de      	b.n	8000d3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d80:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000d84:	61dc      	str	r4, [r3, #28]
 8000d86:	e7b8      	b.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d88:	f240 2201 	movw	r2, #513	; 0x201
 8000d8c:	e7e4      	b.n	8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000d8e:	bf00      	nop
 8000d90:	4002b000 	.word	0x4002b000
 8000d94:	00010201 	.word	0x00010201
 8000d98:	0801dcc0 	.word	0x0801dcc0
 8000d9c:	0801dcda 	.word	0x0801dcda
 8000da0:	0801dc03 	.word	0x0801dc03
 8000da4:	00020201 	.word	0x00020201

08000da8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000da8:	b570      	push	{r4, r5, r6, lr}
 8000daa:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dac:	7f89      	ldrb	r1, [r1, #30]
 8000dae:	f7ff ff35 	bl	8000c1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000db2:	8aa6      	ldrh	r6, [r4, #20]
 8000db4:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000db6:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000db8:	4b15      	ldr	r3, [pc, #84]	; (8000e10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dba:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dbc:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dbe:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc2:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dc4:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dc6:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc8:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000dca:	6826      	ldr	r6, [r4, #0]
 8000dcc:	68e1      	ldr	r1, [r4, #12]
 8000dce:	2e08      	cmp	r6, #8
 8000dd0:	d10d      	bne.n	8000dee <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dd2:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dd4:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000dd6:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000dd8:	7f20      	ldrb	r0, [r4, #28]
 8000dda:	4a0e      	ldr	r2, [pc, #56]	; (8000e14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000ddc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000de0:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000de2:	4a0d      	ldr	r2, [pc, #52]	; (8000e18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000de4:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de6:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de8:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dea:	601a      	str	r2, [r3, #0]
    }
}
 8000dec:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000dee:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000df0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000df2:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000df4:	0948      	lsrs	r0, r1, #5
 8000df6:	0a0a      	lsrs	r2, r1, #8
 8000df8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dfc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000e00:	4302      	orrs	r2, r0
 8000e02:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000e06:	430a      	orrs	r2, r1
 8000e08:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000e0a:	4a04      	ldr	r2, [pc, #16]	; (8000e1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000e0c:	e7ed      	b.n	8000dea <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000e0e:	bf00      	nop
 8000e10:	4002b000 	.word	0x4002b000
 8000e14:	00010009 	.word	0x00010009
 8000e18:	00020201 	.word	0x00020201
 8000e1c:	00030201 	.word	0x00030201

08000e20 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e20:	2001      	movs	r0, #1
 8000e22:	4770      	bx	lr

08000e24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e24:	200c      	movs	r0, #12
 8000e26:	4770      	bx	lr

08000e28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e28:	230c      	movs	r3, #12
 8000e2a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e2e:	3008      	adds	r0, #8
 8000e30:	4770      	bx	lr

08000e32 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e32:	230c      	movs	r3, #12
 8000e34:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e38:	3008      	adds	r0, #8
 8000e3a:	4770      	bx	lr

08000e3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e3c:	2001      	movs	r0, #1
 8000e3e:	4770      	bx	lr

08000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e40:	f245 5040 	movw	r0, #21824	; 0x5540
 8000e44:	4770      	bx	lr

08000e46 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e46:	f245 5340 	movw	r3, #21824	; 0x5540
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e52:	f245 5340 	movw	r3, #21824	; 0x5540
 8000e56:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e5a:	3008      	adds	r0, #8
 8000e5c:	4770      	bx	lr

08000e5e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5e:	2001      	movs	r0, #1
 8000e60:	4770      	bx	lr

08000e62 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e62:	2010      	movs	r0, #16
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e6a:	3008      	adds	r0, #8
 8000e6c:	4770      	bx	lr

08000e6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e6e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e72:	3008      	adds	r0, #8
 8000e74:	4770      	bx	lr

08000e76 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 8000e76:	4608      	mov	r0, r1
 8000e78:	f001 b99e 	b.w	80021b8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e7c:	b510      	push	{r4, lr}
 8000e7e:	4b03      	ldr	r3, [pc, #12]	; (8000e8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e80:	6003      	str	r3, [r0, #0]
 8000e82:	4604      	mov	r4, r0
 8000e84:	f008 fb29 	bl	80094da <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e88:	4620      	mov	r0, r4
 8000e8a:	bd10      	pop	{r4, pc}
 8000e8c:	0801ddd8 	.word	0x0801ddd8

08000e90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e90:	b510      	push	{r4, lr}
 8000e92:	4604      	mov	r4, r0
 8000e94:	f7ff fff2 	bl	8000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e98:	4620      	mov	r0, r4
 8000e9a:	2114      	movs	r1, #20
 8000e9c:	f01a fde2 	bl	801ba64 <_ZdlPvj>
 8000ea0:	4620      	mov	r0, r4
 8000ea2:	bd10      	pop	{r4, pc}

08000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ea4:	b510      	push	{r4, lr}
 8000ea6:	4b03      	ldr	r3, [pc, #12]	; (8000eb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ea8:	6003      	str	r3, [r0, #0]
 8000eaa:	4604      	mov	r4, r0
 8000eac:	f008 fb15 	bl	80094da <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000eb0:	4620      	mov	r0, r4
 8000eb2:	bd10      	pop	{r4, pc}
 8000eb4:	0801dda4 	.word	0x0801dda4

08000eb8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000eb8:	b510      	push	{r4, lr}
 8000eba:	4604      	mov	r4, r0
 8000ebc:	f7ff fff2 	bl	8000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	f245 5148 	movw	r1, #21832	; 0x5548
 8000ec6:	f01a fdcd 	bl	801ba64 <_ZdlPvj>
 8000eca:	4620      	mov	r0, r4
 8000ecc:	bd10      	pop	{r4, pc}
	...

08000ed0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ed0:	b510      	push	{r4, lr}
 8000ed2:	4b03      	ldr	r3, [pc, #12]	; (8000ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ed4:	6003      	str	r3, [r0, #0]
 8000ed6:	4604      	mov	r4, r0
 8000ed8:	f008 faff 	bl	80094da <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000edc:	4620      	mov	r0, r4
 8000ede:	bd10      	pop	{r4, pc}
 8000ee0:	0801dd70 	.word	0x0801dd70

08000ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ee4:	b510      	push	{r4, lr}
 8000ee6:	4604      	mov	r4, r0
 8000ee8:	f7ff fff2 	bl	8000ed0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000eec:	4620      	mov	r0, r4
 8000eee:	2118      	movs	r1, #24
 8000ef0:	f01a fdb8 	bl	801ba64 <_ZdlPvj>
 8000ef4:	4620      	mov	r0, r4
 8000ef6:	bd10      	pop	{r4, pc}

08000ef8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000ef8:	b510      	push	{r4, lr}
 8000efa:	4b09      	ldr	r3, [pc, #36]	; (8000f20 <_ZN12FrontendHeapD1Ev+0x28>)
 8000efc:	6003      	str	r3, [r0, #0]
 8000efe:	4604      	mov	r4, r0
 8000f00:	f500 40aa 	add.w	r0, r0, #21760	; 0x5500
 8000f04:	3074      	adds	r0, #116	; 0x74
 8000f06:	f7ff ffb9 	bl	8000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f0e:	f7ff ffc9 	bl	8000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f12:	f104 0014 	add.w	r0, r4, #20
 8000f16:	f7ff ffdb 	bl	8000ed0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f1a:	4620      	mov	r0, r4
 8000f1c:	bd10      	pop	{r4, pc}
 8000f1e:	bf00      	nop
 8000f20:	0801de0c 	.word	0x0801de0c

08000f24 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f24:	b508      	push	{r3, lr}
 8000f26:	4802      	ldr	r0, [pc, #8]	; (8000f30 <__tcf_0+0xc>)
 8000f28:	f7ff ffe6 	bl	8000ef8 <_ZN12FrontendHeapD1Ev>
 8000f2c:	bd08      	pop	{r3, pc}
 8000f2e:	bf00      	nop
 8000f30:	200001ac 	.word	0x200001ac

08000f34 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f34:	b510      	push	{r4, lr}
 8000f36:	4604      	mov	r4, r0
 8000f38:	f7ff ffde 	bl	8000ef8 <_ZN12FrontendHeapD1Ev>
 8000f3c:	4620      	mov	r0, r4
 8000f3e:	f245 61e8 	movw	r1, #22248	; 0x56e8
 8000f42:	f01a fd8f 	bl	801ba64 <_ZdlPvj>
 8000f46:	4620      	mov	r0, r4
 8000f48:	bd10      	pop	{r4, pc}
	...

08000f4c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f4c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f50:	f000 ffbe 	bl	8001ed0 <_ZN14BitmapDatabase11getInstanceEv>
 8000f54:	4605      	mov	r5, r0
 8000f56:	f000 ffbf 	bl	8001ed8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f5a:	2400      	movs	r4, #0
 8000f5c:	4601      	mov	r1, r0
 8000f5e:	4623      	mov	r3, r4
 8000f60:	4628      	mov	r0, r5
 8000f62:	4622      	mov	r2, r4
 8000f64:	9400      	str	r4, [sp, #0]
 8000f66:	f00e ff71 	bl	800fe4c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f6a:	4b26      	ldr	r3, [pc, #152]	; (8001004 <touchgfx_init+0xb8>)
 8000f6c:	4a26      	ldr	r2, [pc, #152]	; (8001008 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f6e:	4d27      	ldr	r5, [pc, #156]	; (800100c <touchgfx_init+0xc0>)
 8000f70:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f72:	4620      	mov	r0, r4
 8000f74:	f001 fd32 	bl	80029dc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f78:	4825      	ldr	r0, [pc, #148]	; (8001010 <touchgfx_init+0xc4>)
 8000f7a:	f00e fecf 	bl	800fd1c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f7e:	782b      	ldrb	r3, [r5, #0]
 8000f80:	f3bf 8f5b 	dmb	ish
 8000f84:	07db      	lsls	r3, r3, #31
 8000f86:	d436      	bmi.n	8000ff6 <touchgfx_init+0xaa>
 8000f88:	4628      	mov	r0, r5
 8000f8a:	f01a fd6d 	bl	801ba68 <__cxa_guard_acquire>
 8000f8e:	b390      	cbz	r0, 8000ff6 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000f90:	4c20      	ldr	r4, [pc, #128]	; (8001014 <touchgfx_init+0xc8>)
 8000f92:	4f21      	ldr	r7, [pc, #132]	; (8001018 <touchgfx_init+0xcc>)
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 8000f94:	4b21      	ldr	r3, [pc, #132]	; (800101c <touchgfx_init+0xd0>)
 8000f96:	6023      	str	r3, [r4, #0]
 8000f98:	f107 0614 	add.w	r6, r7, #20
 8000f9c:	f104 0014 	add.w	r0, r4, #20
 8000fa0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000fa4:	6060      	str	r0, [r4, #4]
 8000fa6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000faa:	60e7      	str	r7, [r4, #12]
 8000fac:	6126      	str	r6, [r4, #16]
 8000fae:	f008 fa95 	bl	80094dc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fb2:	4b1b      	ldr	r3, [pc, #108]	; (8001020 <touchgfx_init+0xd4>)
 8000fb4:	6163      	str	r3, [r4, #20]
 8000fb6:	4640      	mov	r0, r8
 8000fb8:	f008 fa90 	bl	80094dc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fbc:	4b19      	ldr	r3, [pc, #100]	; (8001024 <touchgfx_init+0xd8>)
 8000fbe:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fc0:	4638      	mov	r0, r7
 8000fc2:	f008 fa8b 	bl	80094dc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fc6:	f504 43a0 	add.w	r3, r4, #20480	; 0x5000
 8000fca:	4a17      	ldr	r2, [pc, #92]	; (8001028 <touchgfx_init+0xdc>)
 8000fcc:	f8c3 2574 	str.w	r2, [r3, #1396]	; 0x574
 8000fd0:	f203 61e4 	addw	r1, r3, #1764	; 0x6e4
 8000fd4:	4622      	mov	r2, r4
 8000fd6:	4630      	mov	r0, r6
 8000fd8:	f001 ff66 	bl	8002ea8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000fdc:	f507 70b8 	add.w	r0, r7, #368	; 0x170
 8000fe0:	f002 fa27 	bl	8003432 <_ZN5ModelC1Ev>
 8000fe4:	4630      	mov	r0, r6
 8000fe6:	f001 f8e7 	bl	80021b8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8000fea:	4810      	ldr	r0, [pc, #64]	; (800102c <touchgfx_init+0xe0>)
 8000fec:	f01b fb28 	bl	801c640 <atexit>
 8000ff0:	4628      	mov	r0, r5
 8000ff2:	f01a fd45 	bl	801ba80 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000ff6:	480e      	ldr	r0, [pc, #56]	; (8001030 <touchgfx_init+0xe4>)
}
 8000ff8:	b002      	add	sp, #8
 8000ffa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000ffe:	f7ff bc5f 	b.w	80008c0 <_ZN11TouchGFXHAL10initializeEv>
 8001002:	bf00      	nop
 8001004:	200177ac 	.word	0x200177ac
 8001008:	200066b4 	.word	0x200066b4
 800100c:	200001a8 	.word	0x200001a8
 8001010:	20000008 	.word	0x20000008
 8001014:	200001ac 	.word	0x200001ac
 8001018:	20005720 	.word	0x20005720
 800101c:	0801de0c 	.word	0x0801de0c
 8001020:	0801dd70 	.word	0x0801dd70
 8001024:	0801dda4 	.word	0x0801dda4
 8001028:	0801ddd8 	.word	0x0801ddd8
 800102c:	08000f25 	.word	0x08000f25
 8001030:	20006638 	.word	0x20006638

08001034 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001034:	4770      	bx	lr
	...

08001038 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001038:	4801      	ldr	r0, [pc, #4]	; (8001040 <touchgfx_taskEntry+0x8>)
 800103a:	f7ff bc53 	b.w	80008e4 <_ZN11TouchGFXHAL9taskEntryEv>
 800103e:	bf00      	nop
 8001040:	20006638 	.word	0x20006638

08001044 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001044:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8001046:	4c23      	ldr	r4, [pc, #140]	; (80010d4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8001048:	4e23      	ldr	r6, [pc, #140]	; (80010d8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800104a:	4b24      	ldr	r3, [pc, #144]	; (80010dc <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 800104c:	4d24      	ldr	r5, [pc, #144]	; (80010e0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 800104e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001050:	4630      	mov	r0, r6
 8001052:	f7ff fda9 	bl	8000ba8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001056:	4628      	mov	r0, r5
 8001058:	f012 f802 	bl	8013060 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 800105c:	4b21      	ldr	r3, [pc, #132]	; (80010e4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 800105e:	4822      	ldr	r0, [pc, #136]	; (80010e8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8001060:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001062:	4c22      	ldr	r4, [pc, #136]	; (80010ec <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8001064:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8001066:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001068:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 800106a:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800106e:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8001070:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001074:	4c1e      	ldr	r4, [pc, #120]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001076:	491f      	ldr	r1, [pc, #124]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001078:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 800107a:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800107e:	4c1e      	ldr	r4, [pc, #120]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001080:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8001082:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001086:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 800108a:	6759      	str	r1, [r3, #116]	; 0x74
 800108c:	2101      	movs	r1, #1
 800108e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001092:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001096:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800109a:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 800109e:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 80010a2:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010a6:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 80010aa:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 80010ae:	661a      	str	r2, [r3, #96]	; 0x60
 80010b0:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 80010b4:	671a      	str	r2, [r3, #112]	; 0x70
 80010b6:	e9c3 6501 	strd	r6, r5, [r3, #4]
 80010ba:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010be:	8020      	strh	r0, [r4, #0]
 80010c0:	4c0e      	ldr	r4, [pc, #56]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010c2:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010c6:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 80010c8:	480d      	ldr	r0, [pc, #52]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010ca:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010cc:	4a0d      	ldr	r2, [pc, #52]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ce:	601a      	str	r2, [r3, #0]
}
 80010d0:	bd70      	pop	{r4, r5, r6, pc}
 80010d2:	bf00      	nop
 80010d4:	20005894 	.word	0x20005894
 80010d8:	20005898 	.word	0x20005898
 80010dc:	0801d814 	.word	0x0801d814
 80010e0:	200066b8 	.word	0x200066b8
 80010e4:	20006638 	.word	0x20006638
 80010e8:	20017750 	.word	0x20017750
 80010ec:	20017744 	.word	0x20017744
 80010f0:	2001774a 	.word	0x2001774a
 80010f4:	01000001 	.word	0x01000001
 80010f8:	20017746 	.word	0x20017746
 80010fc:	2001774c 	.word	0x2001774c
 8001100:	20017748 	.word	0x20017748
 8001104:	0801d9a0 	.word	0x0801d9a0

08001108 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001108:	4801      	ldr	r0, [pc, #4]	; (8001110 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800110a:	f7ff bd29 	b.w	8000b60 <_ZN8STM32DMAD1Ev>
 800110e:	bf00      	nop
 8001110:	20005898 	.word	0x20005898

08001114 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001114:	2000      	movs	r0, #0
 8001116:	4770      	bx	lr

08001118 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001118:	8081      	strh	r1, [r0, #4]
    }
 800111a:	4770      	bx	lr

0800111c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800111c:	80c1      	strh	r1, [r0, #6]
    }
 800111e:	4770      	bx	lr

08001120 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001120:	8101      	strh	r1, [r0, #8]
    }
 8001122:	4770      	bx	lr

08001124 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001124:	8141      	strh	r1, [r0, #10]
    }
 8001126:	4770      	bx	lr

08001128 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001128:	4770      	bx	lr

0800112a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800112a:	4770      	bx	lr

0800112c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800112c:	4770      	bx	lr

0800112e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800112e:	4770      	bx	lr

08001130 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001130:	4770      	bx	lr

08001132 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001132:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001134:	88c4      	ldrh	r4, [r0, #6]
 8001136:	6803      	ldr	r3, [r0, #0]
 8001138:	1b12      	subs	r2, r2, r4
 800113a:	8884      	ldrh	r4, [r0, #4]
 800113c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800113e:	1b09      	subs	r1, r1, r4
 8001140:	b212      	sxth	r2, r2
    }
 8001142:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001146:	b209      	sxth	r1, r1
 8001148:	4718      	bx	r3

0800114a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800114a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800114e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001150:	f04f 33ff 	mov.w	r3, #4294967295
 8001154:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001156:	6813      	ldr	r3, [r2, #0]
 8001158:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800115a:	6010      	str	r0, [r2, #0]
    }
 800115c:	4770      	bx	lr

0800115e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800115e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001162:	b11a      	cbz	r2, 800116c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001164:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001168:	b102      	cbz	r2, 800116c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800116a:	6018      	str	r0, [r3, #0]
        }
    }
 800116c:	4770      	bx	lr
	...

08001170 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001170:	4b03      	ldr	r3, [pc, #12]	; (8001180 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001172:	2290      	movs	r2, #144	; 0x90
 8001174:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001178:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800117c:	4770      	bx	lr
 800117e:	bf00      	nop
 8001180:	e000e100 	.word	0xe000e100

08001184 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001184:	4a09      	ldr	r2, [pc, #36]	; (80011ac <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001186:	490a      	ldr	r1, [pc, #40]	; (80011b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001188:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800118a:	480a      	ldr	r0, [pc, #40]	; (80011b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800118c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001190:	3b01      	subs	r3, #1
 8001192:	b29b      	uxth	r3, r3
 8001194:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001196:	6911      	ldr	r1, [r2, #16]
 8001198:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800119c:	3901      	subs	r1, #1
 800119e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011a0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011a2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80011a4:	f043 0301 	orr.w	r3, r3, #1
 80011a8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80011aa:	4770      	bx	lr
 80011ac:	40016800 	.word	0x40016800
 80011b0:	20006734 	.word	0x20006734
 80011b4:	20006732 	.word	0x20006732

080011b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80011b8:	4b01      	ldr	r3, [pc, #4]	; (80011c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80011ba:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80011be:	4770      	bx	lr
 80011c0:	40016800 	.word	0x40016800

080011c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80011c4:	4b02      	ldr	r3, [pc, #8]	; (80011d0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80011c6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80011c8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80011cc:	625a      	str	r2, [r3, #36]	; 0x24
}
 80011ce:	4770      	bx	lr
 80011d0:	40016800 	.word	0x40016800

080011d4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80011d4:	b570      	push	{r4, r5, r6, lr}
 80011d6:	4604      	mov	r4, r0
    HAL::initialize();
 80011d8:	f008 fc7d 	bl	8009ad6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80011dc:	6823      	ldr	r3, [r4, #0]
 80011de:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80011e0:	f00b fd30 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
 80011e4:	4601      	mov	r1, r0
 80011e6:	4620      	mov	r0, r4
 80011e8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80011ea:	6823      	ldr	r3, [r4, #0]
 80011ec:	4a05      	ldr	r2, [pc, #20]	; (8001204 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80011ee:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80011f2:	4620      	mov	r0, r4
 80011f4:	46ac      	mov	ip, r5
 80011f6:	2300      	movs	r3, #0
}
 80011f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80011fc:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001200:	4760      	bx	ip
 8001202:	bf00      	nop
 8001204:	d004b000 	.word	0xd004b000

08001208 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001208:	f008 bc4c 	b.w	8009aa4 <_ZN8touchgfx3HAL10beginFrameEv>

0800120c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 800120c:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 8001210:	b113      	cbz	r3, 8001218 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 8001212:	4b02      	ldr	r3, [pc, #8]	; (800121c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 8001214:	2201      	movs	r2, #1
 8001216:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 8001218:	f008 bc50 	b.w	8009abc <_ZN8touchgfx3HAL8endFrameEv>
 800121c:	20006730 	.word	0x20006730

08001220 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001220:	f008 bc0a 	b.w	8009a38 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001224 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001224:	f008 bd65 	b.w	8009cf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001228 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001228:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800122c:	b112      	cbz	r2, 8001234 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800122e:	6803      	ldr	r3, [r0, #0]
 8001230:	695b      	ldr	r3, [r3, #20]
 8001232:	4718      	bx	r3
    }
 8001234:	4770      	bx	lr
	...

08001238 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001238:	4b03      	ldr	r3, [pc, #12]	; (8001248 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800123a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800123e:	609a      	str	r2, [r3, #8]
 8001240:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001244:	609a      	str	r2, [r3, #8]
}
 8001246:	4770      	bx	lr
 8001248:	e000e100 	.word	0xe000e100

0800124c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800124c:	4b08      	ldr	r3, [pc, #32]	; (8001270 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800124e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001252:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001256:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800125a:	f3bf 8f6f 	isb	sy
 800125e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001262:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001266:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800126a:	f3bf 8f6f 	isb	sy
}
 800126e:	4770      	bx	lr
 8001270:	e000e100 	.word	0xe000e100

08001274 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001274:	b510      	push	{r4, lr}
        return instance;
 8001276:	4c14      	ldr	r4, [pc, #80]	; (80012c8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001278:	6823      	ldr	r3, [r4, #0]
 800127a:	b323      	cbz	r3, 80012c6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800127c:	4b13      	ldr	r3, [pc, #76]	; (80012cc <HAL_LTDC_LineEventCallback+0x58>)
 800127e:	4a14      	ldr	r2, [pc, #80]	; (80012d0 <HAL_LTDC_LineEventCallback+0x5c>)
 8001280:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001282:	8811      	ldrh	r1, [r2, #0]
 8001284:	428b      	cmp	r3, r1
 8001286:	d113      	bne.n	80012b0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001288:	4b12      	ldr	r3, [pc, #72]	; (80012d4 <HAL_LTDC_LineEventCallback+0x60>)
 800128a:	8819      	ldrh	r1, [r3, #0]
 800128c:	f004 fe6a 	bl	8005f64 <HAL_LTDC_ProgramLineEvent>
 8001290:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001292:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001296:	3301      	adds	r3, #1
 8001298:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800129c:	f7ff fc0e 	bl	8000abc <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80012a0:	6820      	ldr	r0, [r4, #0]
 80012a2:	f009 f95d 	bl	800a560 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80012a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80012aa:	2000      	movs	r0, #0
 80012ac:	f7ff ba4e 	b.w	800074c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80012b0:	f004 fe58 	bl	8005f64 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80012b4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80012b6:	6803      	ldr	r3, [r0, #0]
 80012b8:	6a1b      	ldr	r3, [r3, #32]
 80012ba:	4798      	blx	r3
    }
 80012bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80012c0:	2000      	movs	r0, #0
 80012c2:	f7ff ba6d 	b.w	80007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80012c6:	bd10      	pop	{r4, pc}
 80012c8:	20017750 	.word	0x20017750
 80012cc:	40016800 	.word	0x40016800
 80012d0:	20006734 	.word	0x20006734
 80012d4:	20006732 	.word	0x20006732

080012d8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80012d8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012da:	4b06      	ldr	r3, [pc, #24]	; (80012f4 <SPI5_Write+0x1c>)
{
 80012dc:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012e0:	681b      	ldr	r3, [r3, #0]
 80012e2:	4805      	ldr	r0, [pc, #20]	; (80012f8 <SPI5_Write+0x20>)
 80012e4:	2201      	movs	r2, #1
 80012e6:	f10d 0106 	add.w	r1, sp, #6
 80012ea:	f005 fb87 	bl	80069fc <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80012ee:	b003      	add	sp, #12
 80012f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80012f4:	20000010 	.word	0x20000010
 80012f8:	200068bc 	.word	0x200068bc

080012fc <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80012fc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80012fe:	2064      	movs	r0, #100	; 0x64
 8001300:	f006 f85b 	bl	80073ba <osDelay>
  for(;;)
 8001304:	e7fb      	b.n	80012fe <StartDefaultTask+0x2>
	...

08001308 <SystemClock_Config>:
{
 8001308:	b530      	push	{r4, r5, lr}
 800130a:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800130c:	2210      	movs	r2, #16
 800130e:	2100      	movs	r1, #0
 8001310:	a80a      	add	r0, sp, #40	; 0x28
 8001312:	f01b fa03 	bl	801c71c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001316:	2214      	movs	r2, #20
 8001318:	2100      	movs	r1, #0
 800131a:	a803      	add	r0, sp, #12
 800131c:	f01b f9fe 	bl	801c71c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001320:	2400      	movs	r4, #0
 8001322:	4b1d      	ldr	r3, [pc, #116]	; (8001398 <SystemClock_Config+0x90>)
 8001324:	9401      	str	r4, [sp, #4]
 8001326:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001328:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800132c:	641a      	str	r2, [r3, #64]	; 0x40
 800132e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001330:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001334:	9301      	str	r3, [sp, #4]
 8001336:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001338:	4b18      	ldr	r3, [pc, #96]	; (800139c <SystemClock_Config+0x94>)
 800133a:	9402      	str	r4, [sp, #8]
 800133c:	681a      	ldr	r2, [r3, #0]
 800133e:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001342:	601a      	str	r2, [r3, #0]
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800134a:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800134c:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800134e:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001350:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001354:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001358:	2502      	movs	r5, #2
 800135a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800135e:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001362:	2108      	movs	r1, #8
 8001364:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8001368:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800136c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800136e:	2304      	movs	r3, #4
 8001370:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001372:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001374:	f004 fe14 	bl	8005fa0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001378:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800137a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800137e:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 8001382:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001386:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800138a:	2105      	movs	r1, #5
 800138c:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800138e:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001390:	f004 ffe4 	bl	800635c <HAL_RCC_ClockConfig>
}
 8001394:	b015      	add	sp, #84	; 0x54
 8001396:	bd30      	pop	{r4, r5, pc}
 8001398:	40023800 	.word	0x40023800
 800139c:	40007000 	.word	0x40007000

080013a0 <main>:
{
 80013a0:	b580      	push	{r7, lr}
 80013a2:	b09a      	sub	sp, #104	; 0x68
  HAL_Init();
 80013a4:	f003 fd6e 	bl	8004e84 <HAL_Init>
  SystemClock_Config();
 80013a8:	f7ff ffae 	bl	8001308 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013ac:	2214      	movs	r2, #20
 80013ae:	2100      	movs	r1, #0
 80013b0:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013b2:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013b4:	f01b f9b2 	bl	801c71c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013b8:	4bc0      	ldr	r3, [pc, #768]	; (80016bc <main+0x31c>)
 80013ba:	9400      	str	r4, [sp, #0]
 80013bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80013be:	48c0      	ldr	r0, [pc, #768]	; (80016c0 <main+0x320>)
  hi2c3.Instance = I2C3;
 80013c0:	4dc0      	ldr	r5, [pc, #768]	; (80016c4 <main+0x324>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013c2:	f042 0210 	orr.w	r2, r2, #16
 80013c6:	631a      	str	r2, [r3, #48]	; 0x30
 80013c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013ca:	f002 0210 	and.w	r2, r2, #16
 80013ce:	9200      	str	r2, [sp, #0]
 80013d0:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013d2:	9401      	str	r4, [sp, #4]
 80013d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013d6:	f042 0220 	orr.w	r2, r2, #32
 80013da:	631a      	str	r2, [r3, #48]	; 0x30
 80013dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013de:	f002 0220 	and.w	r2, r2, #32
 80013e2:	9201      	str	r2, [sp, #4]
 80013e4:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013e6:	9402      	str	r4, [sp, #8]
 80013e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013ea:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80013ee:	631a      	str	r2, [r3, #48]	; 0x30
 80013f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f2:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80013f6:	9202      	str	r2, [sp, #8]
 80013f8:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80013fa:	9403      	str	r4, [sp, #12]
 80013fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013fe:	f042 0204 	orr.w	r2, r2, #4
 8001402:	631a      	str	r2, [r3, #48]	; 0x30
 8001404:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001406:	f002 0204 	and.w	r2, r2, #4
 800140a:	9203      	str	r2, [sp, #12]
 800140c:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800140e:	9404      	str	r4, [sp, #16]
 8001410:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001412:	f042 0201 	orr.w	r2, r2, #1
 8001416:	631a      	str	r2, [r3, #48]	; 0x30
 8001418:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800141a:	f002 0201 	and.w	r2, r2, #1
 800141e:	9204      	str	r2, [sp, #16]
 8001420:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001422:	9405      	str	r4, [sp, #20]
 8001424:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001426:	f042 0202 	orr.w	r2, r2, #2
 800142a:	631a      	str	r2, [r3, #48]	; 0x30
 800142c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800142e:	f002 0202 	and.w	r2, r2, #2
 8001432:	9205      	str	r2, [sp, #20]
 8001434:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001436:	9406      	str	r4, [sp, #24]
 8001438:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800143a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800143e:	631a      	str	r2, [r3, #48]	; 0x30
 8001440:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001442:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001446:	9206      	str	r2, [sp, #24]
 8001448:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800144a:	9407      	str	r4, [sp, #28]
 800144c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800144e:	f042 0208 	orr.w	r2, r2, #8
 8001452:	631a      	str	r2, [r3, #48]	; 0x30
 8001454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001456:	f003 0308 	and.w	r3, r3, #8
 800145a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800145c:	4622      	mov	r2, r4
 800145e:	213c      	movs	r1, #60	; 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001460:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001462:	f003 ff99 	bl	8005398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001466:	4898      	ldr	r0, [pc, #608]	; (80016c8 <main+0x328>)
 8001468:	4622      	mov	r2, r4
 800146a:	2104      	movs	r1, #4
 800146c:	f003 ff94 	bl	8005398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001470:	4622      	mov	r2, r4
 8001472:	4896      	ldr	r0, [pc, #600]	; (80016cc <main+0x32c>)
 8001474:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001478:	f003 ff8e 	bl	8005398 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800147c:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800147e:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001482:	233c      	movs	r3, #60	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001484:	488e      	ldr	r0, [pc, #568]	; (80016c0 <main+0x320>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001486:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800148a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800148c:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800148e:	f04f 0904 	mov.w	r9, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001492:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001496:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001498:	f003 fe92 	bl	80051c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800149c:	488a      	ldr	r0, [pc, #552]	; (80016c8 <main+0x328>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800149e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014a0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a2:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014a6:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014a8:	f003 fe8a 	bl	80051c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014ac:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014ae:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014b2:	4886      	ldr	r0, [pc, #536]	; (80016cc <main+0x32c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014b4:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014b8:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014bc:	f003 fe80 	bl	80051c0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80014c0:	4883      	ldr	r0, [pc, #524]	; (80016d0 <main+0x330>)
 80014c2:	4b84      	ldr	r3, [pc, #528]	; (80016d4 <main+0x334>)
 80014c4:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80014c6:	f003 fd6f 	bl	8004fa8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80014ca:	4a83      	ldr	r2, [pc, #524]	; (80016d8 <main+0x338>)
 80014cc:	4b83      	ldr	r3, [pc, #524]	; (80016dc <main+0x33c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014ce:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80014d0:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014d4:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014d6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014da:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80014de:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80014e2:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014e6:	f004 f941 	bl	800576c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80014ea:	2110      	movs	r1, #16
 80014ec:	4628      	mov	r0, r5
 80014ee:	f004 fb7d 	bl	8005bec <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80014f2:	4621      	mov	r1, r4
 80014f4:	4628      	mov	r0, r5
 80014f6:	f004 fb98 	bl	8005c2a <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80014fa:	4879      	ldr	r0, [pc, #484]	; (80016e0 <main+0x340>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014fc:	4979      	ldr	r1, [pc, #484]	; (80016e4 <main+0x344>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80014fe:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001500:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001504:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001508:	f44f 7500 	mov.w	r5, #512	; 0x200
 800150c:	2318      	movs	r3, #24
 800150e:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001512:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001514:	4d74      	ldr	r5, [pc, #464]	; (80016e8 <main+0x348>)
  hspi5.Init.CRCPolynomial = 10;
 8001516:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001518:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800151c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001520:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001524:	f005 fa0e 	bl	8006944 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001528:	4b70      	ldr	r3, [pc, #448]	; (80016ec <main+0x34c>)
  SdramTiming.LoadToActiveDelay = 2;
 800152a:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800152c:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001530:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001534:	2340      	movs	r3, #64	; 0x40
 8001536:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800153a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800153e:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001542:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001546:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800154a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800154e:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001550:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001552:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001554:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 8001556:	e9cd 390e 	strd	r3, r9, [sp, #56]	; 0x38
  SdramTiming.WriteRecoveryTime = 3;
 800155a:	e9cd 3810 	strd	r3, r8, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800155e:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001562:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RCDDelay = 2;
 8001566:	e9cd 7712 	strd	r7, r7, [sp, #72]	; 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800156a:	f005 f8eb 	bl	8006744 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800156e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001572:	a909      	add	r1, sp, #36	; 0x24
 8001574:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001576:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 800157a:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 800157c:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800157e:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001580:	f005 f900 	bl	8006784 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001584:	4630      	mov	r0, r6
 8001586:	f003 fca9 	bl	8004edc <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800158a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800158e:	a909      	add	r1, sp, #36	; 0x24
 8001590:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001592:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001596:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800159a:	f005 f8f3 	bl	8006784 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800159e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015a2:	a909      	add	r1, sp, #36	; 0x24
 80015a4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015a6:	e9cd 8a09 	strd	r8, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015aa:	e9cd 940b 	strd	r9, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ae:	f005 f8e9 	bl	8006784 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80015b2:	f44f 730c 	mov.w	r3, #560	; 0x230
 80015b6:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80015b8:	9b08      	ldr	r3, [sp, #32]
 80015ba:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015c0:	a909      	add	r1, sp, #36	; 0x24
 80015c2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015c4:	e9cd 9a09 	strd	r9, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80015c8:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ca:	f005 f8db 	bl	8006784 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80015ce:	f240 516a 	movw	r1, #1386	; 0x56a
 80015d2:	4628      	mov	r0, r5
 80015d4:	f005 f8f4 	bl	80067c0 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80015d8:	2234      	movs	r2, #52	; 0x34
 80015da:	4621      	mov	r1, r4
 80015dc:	eb0d 0002 	add.w	r0, sp, r2
 80015e0:	f01b f89c 	bl	801c71c <memset>
  hltdc.Instance = LTDC;
 80015e4:	4d42      	ldr	r5, [pc, #264]	; (80016f0 <main+0x350>)
 80015e6:	4b43      	ldr	r3, [pc, #268]	; (80016f4 <main+0x354>)
  hltdc.Init.Backcolor.Blue = 0;
 80015e8:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80015ea:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 80015ee:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 80015f0:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80015f4:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 80015f6:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80015fa:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80015fe:	f240 1343 	movw	r3, #323	; 0x143
 8001602:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001606:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001608:	f240 1347 	movw	r3, #327	; 0x147
 800160c:	f240 1817 	movw	r8, #279	; 0x117
 8001610:	e9c5 830b 	strd	r8, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001614:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001618:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800161a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800161e:	f004 fba9 	bl	8005d74 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001622:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001624:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001626:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800162a:	f44f 6980 	mov.w	r9, #1024	; 0x400
 800162e:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001630:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001634:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001638:	e9cd 9114 	strd	r9, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 800163c:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001640:	a90d      	add	r1, sp, #52	; 0x34
 8001642:	4622      	mov	r2, r4
 8001644:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001646:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 800164a:	4d2b      	ldr	r5, [pc, #172]	; (80016f8 <main+0x358>)
  pLayerCfg.ImageHeight = 320;
 800164c:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 800164e:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001650:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001654:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001658:	f004 fc57 	bl	8005f0a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800165c:	4b27      	ldr	r3, [pc, #156]	; (80016fc <main+0x35c>)
 800165e:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001660:	681b      	ldr	r3, [r3, #0]
 8001662:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001664:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001666:	4d26      	ldr	r5, [pc, #152]	; (8001700 <main+0x360>)
  LcdDrv->DisplayOff();
 8001668:	68db      	ldr	r3, [r3, #12]
 800166a:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800166c:	4b25      	ldr	r3, [pc, #148]	; (8001704 <main+0x364>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800166e:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001672:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001676:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001678:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800167c:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001680:	f003 fca2 	bl	8004fc8 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001684:	4631      	mov	r1, r6
 8001686:	4628      	mov	r0, r5
 8001688:	f003 fd56 	bl	8005138 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 800168c:	f7fe ffac 	bl	80005e8 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001690:	f7fe ffa9 	bl	80005e6 <MX_TouchGFX_PreOSInit>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001694:	4a1c      	ldr	r2, [pc, #112]	; (8001708 <main+0x368>)
 8001696:	481d      	ldr	r0, [pc, #116]	; (800170c <main+0x36c>)
 8001698:	4621      	mov	r1, r4
 800169a:	f005 fe45 	bl	8007328 <osThreadNew>
 800169e:	4b1c      	ldr	r3, [pc, #112]	; (8001710 <main+0x370>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80016a0:	4a1c      	ldr	r2, [pc, #112]	; (8001714 <main+0x374>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80016a2:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80016a4:	4621      	mov	r1, r4
 80016a6:	481c      	ldr	r0, [pc, #112]	; (8001718 <main+0x378>)
 80016a8:	f005 fe3e 	bl	8007328 <osThreadNew>
 80016ac:	4b1b      	ldr	r3, [pc, #108]	; (800171c <main+0x37c>)
 80016ae:	6018      	str	r0, [r3, #0]
  osKernelInitialize();
 80016b0:	f005 fe0e 	bl	80072d0 <osKernelInitialize>
  osKernelStart();
 80016b4:	f005 fe1e 	bl	80072f4 <osKernelStart>
  while (1)
 80016b8:	e7fe      	b.n	80016b8 <main+0x318>
 80016ba:	bf00      	nop
 80016bc:	40023800 	.word	0x40023800
 80016c0:	40021000 	.word	0x40021000
 80016c4:	2000678c 	.word	0x2000678c
 80016c8:	40020800 	.word	0x40020800
 80016cc:	40020c00 	.word	0x40020c00
 80016d0:	20006744 	.word	0x20006744
 80016d4:	40023000 	.word	0x40023000
 80016d8:	40005c00 	.word	0x40005c00
 80016dc:	000186a0 	.word	0x000186a0
 80016e0:	200068bc 	.word	0x200068bc
 80016e4:	40015000 	.word	0x40015000
 80016e8:	20006888 	.word	0x20006888
 80016ec:	a0000140 	.word	0xa0000140
 80016f0:	200067e0 	.word	0x200067e0
 80016f4:	40016800 	.word	0x40016800
 80016f8:	2000673c 	.word	0x2000673c
 80016fc:	20000014 	.word	0x20000014
 8001700:	2000674c 	.word	0x2000674c
 8001704:	4002b000 	.word	0x4002b000
 8001708:	0801de54 	.word	0x0801de54
 800170c:	080012fd 	.word	0x080012fd
 8001710:	20006740 	.word	0x20006740
 8001714:	0801de30 	.word	0x0801de30
 8001718:	080005f7 	.word	0x080005f7
 800171c:	20006738 	.word	0x20006738

08001720 <IOE_Init>:
 8001720:	4770      	bx	lr

08001722 <IOE_ITConfig>:
 8001722:	4770      	bx	lr

08001724 <IOE_Write>:
{
 8001724:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001726:	4b09      	ldr	r3, [pc, #36]	; (800174c <IOE_Write+0x28>)
 8001728:	f88d 2017 	strb.w	r2, [sp, #23]
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	9302      	str	r3, [sp, #8]
 8001730:	f10d 0217 	add.w	r2, sp, #23
 8001734:	2301      	movs	r3, #1
 8001736:	9200      	str	r2, [sp, #0]
 8001738:	9301      	str	r3, [sp, #4]
 800173a:	460a      	mov	r2, r1
 800173c:	4601      	mov	r1, r0
 800173e:	4804      	ldr	r0, [pc, #16]	; (8001750 <IOE_Write+0x2c>)
 8001740:	f004 f8bc 	bl	80058bc <HAL_I2C_Mem_Write>
}
 8001744:	b007      	add	sp, #28
 8001746:	f85d fb04 	ldr.w	pc, [sp], #4
 800174a:	bf00      	nop
 800174c:	2000000c 	.word	0x2000000c
 8001750:	2000678c 	.word	0x2000678c

08001754 <IOE_Read>:
{
 8001754:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001756:	2300      	movs	r3, #0
 8001758:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800175c:	4b08      	ldr	r3, [pc, #32]	; (8001780 <IOE_Read+0x2c>)
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	9302      	str	r3, [sp, #8]
{
 8001762:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001764:	2301      	movs	r3, #1
 8001766:	f10d 0117 	add.w	r1, sp, #23
 800176a:	9100      	str	r1, [sp, #0]
 800176c:	9301      	str	r3, [sp, #4]
 800176e:	4601      	mov	r1, r0
 8001770:	4804      	ldr	r0, [pc, #16]	; (8001784 <IOE_Read+0x30>)
 8001772:	f004 f933 	bl	80059dc <HAL_I2C_Mem_Read>
}
 8001776:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800177a:	b007      	add	sp, #28
 800177c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001780:	2000000c 	.word	0x2000000c
 8001784:	2000678c 	.word	0x2000678c

08001788 <IOE_ReadMultiple>:
{
 8001788:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800178a:	4c08      	ldr	r4, [pc, #32]	; (80017ac <IOE_ReadMultiple+0x24>)
 800178c:	6824      	ldr	r4, [r4, #0]
 800178e:	9200      	str	r2, [sp, #0]
 8001790:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001794:	460a      	mov	r2, r1
 8001796:	2301      	movs	r3, #1
 8001798:	4601      	mov	r1, r0
 800179a:	4805      	ldr	r0, [pc, #20]	; (80017b0 <IOE_ReadMultiple+0x28>)
 800179c:	f004 f91e 	bl	80059dc <HAL_I2C_Mem_Read>
}
 80017a0:	3800      	subs	r0, #0
 80017a2:	bf18      	it	ne
 80017a4:	2001      	movne	r0, #1
 80017a6:	b004      	add	sp, #16
 80017a8:	bd10      	pop	{r4, pc}
 80017aa:	bf00      	nop
 80017ac:	2000000c 	.word	0x2000000c
 80017b0:	2000678c 	.word	0x2000678c

080017b4 <IOE_Delay>:
 80017b4:	f003 bb92 	b.w	8004edc <HAL_Delay>

080017b8 <LCD_IO_Init>:
{
 80017b8:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017ba:	4806      	ldr	r0, [pc, #24]	; (80017d4 <LCD_IO_Init+0x1c>)
 80017bc:	2200      	movs	r2, #0
 80017be:	2104      	movs	r1, #4
 80017c0:	f003 fdea 	bl	8005398 <HAL_GPIO_WritePin>
}
 80017c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017c8:	4802      	ldr	r0, [pc, #8]	; (80017d4 <LCD_IO_Init+0x1c>)
 80017ca:	2201      	movs	r2, #1
 80017cc:	2104      	movs	r1, #4
 80017ce:	f003 bde3 	b.w	8005398 <HAL_GPIO_WritePin>
 80017d2:	bf00      	nop
 80017d4:	40020800 	.word	0x40020800

080017d8 <LCD_IO_WriteData>:
{
 80017d8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017da:	4d0b      	ldr	r5, [pc, #44]	; (8001808 <LCD_IO_WriteData+0x30>)
{
 80017dc:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80017de:	2201      	movs	r2, #1
 80017e0:	480a      	ldr	r0, [pc, #40]	; (800180c <LCD_IO_WriteData+0x34>)
 80017e2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80017e6:	f003 fdd7 	bl	8005398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017ea:	2200      	movs	r2, #0
 80017ec:	2104      	movs	r1, #4
 80017ee:	4628      	mov	r0, r5
 80017f0:	f003 fdd2 	bl	8005398 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80017f4:	4620      	mov	r0, r4
 80017f6:	f7ff fd6f 	bl	80012d8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017fa:	4628      	mov	r0, r5
 80017fc:	2201      	movs	r2, #1
}
 80017fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001802:	2104      	movs	r1, #4
 8001804:	f003 bdc8 	b.w	8005398 <HAL_GPIO_WritePin>
 8001808:	40020800 	.word	0x40020800
 800180c:	40020c00 	.word	0x40020c00

08001810 <LCD_IO_WriteReg>:
{
 8001810:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001812:	4d0b      	ldr	r5, [pc, #44]	; (8001840 <LCD_IO_WriteReg+0x30>)
{
 8001814:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001816:	2200      	movs	r2, #0
 8001818:	480a      	ldr	r0, [pc, #40]	; (8001844 <LCD_IO_WriteReg+0x34>)
 800181a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800181e:	f003 fdbb 	bl	8005398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001822:	2200      	movs	r2, #0
 8001824:	2104      	movs	r1, #4
 8001826:	4628      	mov	r0, r5
 8001828:	f003 fdb6 	bl	8005398 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 800182c:	4620      	mov	r0, r4
 800182e:	f7ff fd53 	bl	80012d8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001832:	4628      	mov	r0, r5
 8001834:	2201      	movs	r2, #1
}
 8001836:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800183a:	2104      	movs	r1, #4
 800183c:	f003 bdac 	b.w	8005398 <HAL_GPIO_WritePin>
 8001840:	40020800 	.word	0x40020800
 8001844:	40020c00 	.word	0x40020c00

08001848 <LCD_IO_ReadData>:
{
 8001848:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800184a:	4e14      	ldr	r6, [pc, #80]	; (800189c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800184c:	4f14      	ldr	r7, [pc, #80]	; (80018a0 <LCD_IO_ReadData+0x58>)
{
 800184e:	4605      	mov	r5, r0
 8001850:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001852:	4630      	mov	r0, r6
 8001854:	2200      	movs	r2, #0
 8001856:	2104      	movs	r1, #4
 8001858:	f003 fd9e 	bl	8005398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800185c:	2200      	movs	r2, #0
 800185e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001862:	4638      	mov	r0, r7
 8001864:	f003 fd98 	bl	8005398 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001868:	4628      	mov	r0, r5
 800186a:	f7ff fd35 	bl	80012d8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800186e:	4b0d      	ldr	r3, [pc, #52]	; (80018a4 <LCD_IO_ReadData+0x5c>)
 8001870:	480d      	ldr	r0, [pc, #52]	; (80018a8 <LCD_IO_ReadData+0x60>)
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	4622      	mov	r2, r4
 8001876:	a901      	add	r1, sp, #4
 8001878:	f005 fa62 	bl	8006d40 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800187c:	4638      	mov	r0, r7
 800187e:	2201      	movs	r2, #1
 8001880:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001884:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001886:	f003 fd87 	bl	8005398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800188a:	4630      	mov	r0, r6
 800188c:	2201      	movs	r2, #1
 800188e:	2104      	movs	r1, #4
 8001890:	f003 fd82 	bl	8005398 <HAL_GPIO_WritePin>
}
 8001894:	4620      	mov	r0, r4
 8001896:	b003      	add	sp, #12
 8001898:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800189a:	bf00      	nop
 800189c:	40020800 	.word	0x40020800
 80018a0:	40020c00 	.word	0x40020c00
 80018a4:	20000010 	.word	0x20000010
 80018a8:	200068bc 	.word	0x200068bc

080018ac <LCD_Delay>:
  HAL_Delay(Delay);
 80018ac:	f003 bb16 	b.w	8004edc <HAL_Delay>

080018b0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80018b0:	6802      	ldr	r2, [r0, #0]
 80018b2:	4b03      	ldr	r3, [pc, #12]	; (80018c0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80018b4:	429a      	cmp	r2, r3
 80018b6:	d101      	bne.n	80018bc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80018b8:	f003 bafe 	b.w	8004eb8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80018bc:	4770      	bx	lr
 80018be:	bf00      	nop
 80018c0:	40001000 	.word	0x40001000

080018c4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80018c4:	4770      	bx	lr
	...

080018c8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80018c8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80018ca:	4b0e      	ldr	r3, [pc, #56]	; (8001904 <HAL_MspInit+0x3c>)
 80018cc:	2200      	movs	r2, #0
 80018ce:	9200      	str	r2, [sp, #0]
 80018d0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80018d2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80018d6:	6459      	str	r1, [r3, #68]	; 0x44
 80018d8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80018da:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80018de:	9100      	str	r1, [sp, #0]
 80018e0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80018e2:	9201      	str	r2, [sp, #4]
 80018e4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80018e6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80018ea:	6419      	str	r1, [r3, #64]	; 0x40
 80018ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80018ee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018f2:	9301      	str	r3, [sp, #4]
 80018f4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80018f6:	210f      	movs	r1, #15
 80018f8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80018fc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80018fe:	f003 bb13 	b.w	8004f28 <HAL_NVIC_SetPriority>
 8001902:	bf00      	nop
 8001904:	40023800 	.word	0x40023800

08001908 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001908:	6802      	ldr	r2, [r0, #0]
 800190a:	4b09      	ldr	r3, [pc, #36]	; (8001930 <HAL_CRC_MspInit+0x28>)
 800190c:	429a      	cmp	r2, r3
{
 800190e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001910:	d10b      	bne.n	800192a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001912:	2300      	movs	r3, #0
 8001914:	9301      	str	r3, [sp, #4]
 8001916:	4b07      	ldr	r3, [pc, #28]	; (8001934 <HAL_CRC_MspInit+0x2c>)
 8001918:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800191a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800191e:	631a      	str	r2, [r3, #48]	; 0x30
 8001920:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001922:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001926:	9301      	str	r3, [sp, #4]
 8001928:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800192a:	b002      	add	sp, #8
 800192c:	4770      	bx	lr
 800192e:	bf00      	nop
 8001930:	40023000 	.word	0x40023000
 8001934:	40023800 	.word	0x40023800

08001938 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001938:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800193a:	4b0f      	ldr	r3, [pc, #60]	; (8001978 <HAL_DMA2D_MspInit+0x40>)
 800193c:	6802      	ldr	r2, [r0, #0]
 800193e:	429a      	cmp	r2, r3
 8001940:	d116      	bne.n	8001970 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001942:	2200      	movs	r2, #0
 8001944:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001948:	9201      	str	r2, [sp, #4]
 800194a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800194c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001950:	6319      	str	r1, [r3, #48]	; 0x30
 8001952:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001954:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001958:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800195a:	2105      	movs	r1, #5
 800195c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800195e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001960:	f003 fae2 	bl	8004f28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001964:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001966:	b003      	add	sp, #12
 8001968:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800196c:	f003 bb0e 	b.w	8004f8c <HAL_NVIC_EnableIRQ>
}
 8001970:	b003      	add	sp, #12
 8001972:	f85d fb04 	ldr.w	pc, [sp], #4
 8001976:	bf00      	nop
 8001978:	4002b000 	.word	0x4002b000

0800197c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 800197c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001980:	4604      	mov	r4, r0
 8001982:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001984:	2214      	movs	r2, #20
 8001986:	2100      	movs	r1, #0
 8001988:	a803      	add	r0, sp, #12
 800198a:	f01a fec7 	bl	801c71c <memset>
  if(hi2c->Instance==I2C3)
 800198e:	6822      	ldr	r2, [r4, #0]
 8001990:	4b24      	ldr	r3, [pc, #144]	; (8001a24 <HAL_I2C_MspInit+0xa8>)
 8001992:	429a      	cmp	r2, r3
 8001994:	d143      	bne.n	8001a1e <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001996:	4c24      	ldr	r4, [pc, #144]	; (8001a28 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001998:	4824      	ldr	r0, [pc, #144]	; (8001a2c <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800199a:	2500      	movs	r5, #0
 800199c:	9500      	str	r5, [sp, #0]
 800199e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80019a0:	f043 0304 	orr.w	r3, r3, #4
 80019a4:	6323      	str	r3, [r4, #48]	; 0x30
 80019a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80019a8:	f003 0304 	and.w	r3, r3, #4
 80019ac:	9300      	str	r3, [sp, #0]
 80019ae:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019b0:	9501      	str	r5, [sp, #4]
 80019b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80019b4:	f043 0301 	orr.w	r3, r3, #1
 80019b8:	6323      	str	r3, [r4, #48]	; 0x30
 80019ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80019bc:	f003 0301 	and.w	r3, r3, #1
 80019c0:	9301      	str	r3, [sp, #4]
 80019c2:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019c4:	f04f 0912 	mov.w	r9, #18
 80019c8:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019cc:	f04f 0801 	mov.w	r8, #1
 80019d0:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80019d2:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019d4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019d6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019da:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80019de:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019e0:	f003 fbee 	bl	80051c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80019e4:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019e8:	4811      	ldr	r0, [pc, #68]	; (8001a30 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80019ea:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019ec:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019ee:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019f2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019f6:	f003 fbe3 	bl	80051c0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80019fa:	9502      	str	r5, [sp, #8]
 80019fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80019fe:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001a02:	6423      	str	r3, [r4, #64]	; 0x40
 8001a04:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001a06:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a0a:	9302      	str	r3, [sp, #8]
 8001a0c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001a0e:	6a23      	ldr	r3, [r4, #32]
 8001a10:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001a14:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001a16:	6a23      	ldr	r3, [r4, #32]
 8001a18:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001a1c:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001a1e:	b009      	add	sp, #36	; 0x24
 8001a20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a24:	40005c00 	.word	0x40005c00
 8001a28:	40023800 	.word	0x40023800
 8001a2c:	40020800 	.word	0x40020800
 8001a30:	40020000 	.word	0x40020000

08001a34 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001a34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a36:	b099      	sub	sp, #100	; 0x64
 8001a38:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a3a:	2214      	movs	r2, #20
 8001a3c:	2100      	movs	r1, #0
 8001a3e:	a807      	add	r0, sp, #28
 8001a40:	f01a fe6c 	bl	801c71c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001a44:	2230      	movs	r2, #48	; 0x30
 8001a46:	eb0d 0002 	add.w	r0, sp, r2
 8001a4a:	2100      	movs	r1, #0
 8001a4c:	f01a fe66 	bl	801c71c <memset>
  if(hltdc->Instance==LTDC)
 8001a50:	6822      	ldr	r2, [r4, #0]
 8001a52:	4b5e      	ldr	r3, [pc, #376]	; (8001bcc <HAL_LTDC_MspInit+0x198>)
 8001a54:	429a      	cmp	r2, r3
 8001a56:	f040 80b7 	bne.w	8001bc8 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001a5a:	2308      	movs	r3, #8
 8001a5c:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001a5e:	23c0      	movs	r3, #192	; 0xc0
 8001a60:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001a62:	2304      	movs	r3, #4
 8001a64:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001a66:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001a68:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001a6c:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001a6e:	f004 fd3f 	bl	80064f0 <HAL_RCCEx_PeriphCLKConfig>
 8001a72:	b108      	cbz	r0, 8001a78 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001a74:	f7ff ff26 	bl	80018c4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001a78:	4b55      	ldr	r3, [pc, #340]	; (8001bd0 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a7a:	4856      	ldr	r0, [pc, #344]	; (8001bd4 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001a7c:	2400      	movs	r4, #0
 8001a7e:	9400      	str	r4, [sp, #0]
 8001a80:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a82:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001a86:	645a      	str	r2, [r3, #68]	; 0x44
 8001a88:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a8a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001a8e:	9200      	str	r2, [sp, #0]
 8001a90:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001a92:	9401      	str	r4, [sp, #4]
 8001a94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a96:	f042 0220 	orr.w	r2, r2, #32
 8001a9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001a9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a9e:	f002 0220 	and.w	r2, r2, #32
 8001aa2:	9201      	str	r2, [sp, #4]
 8001aa4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001aa6:	9402      	str	r4, [sp, #8]
 8001aa8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001aaa:	f042 0201 	orr.w	r2, r2, #1
 8001aae:	631a      	str	r2, [r3, #48]	; 0x30
 8001ab0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ab2:	f002 0201 	and.w	r2, r2, #1
 8001ab6:	9202      	str	r2, [sp, #8]
 8001ab8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001aba:	9403      	str	r4, [sp, #12]
 8001abc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001abe:	f042 0202 	orr.w	r2, r2, #2
 8001ac2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ac6:	f002 0202 	and.w	r2, r2, #2
 8001aca:	9203      	str	r2, [sp, #12]
 8001acc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001ace:	9404      	str	r4, [sp, #16]
 8001ad0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ad2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001ad6:	631a      	str	r2, [r3, #48]	; 0x30
 8001ad8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ada:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001ade:	9204      	str	r2, [sp, #16]
 8001ae0:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ae2:	9405      	str	r4, [sp, #20]
 8001ae4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ae6:	f042 0204 	orr.w	r2, r2, #4
 8001aea:	631a      	str	r2, [r3, #48]	; 0x30
 8001aec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001aee:	f002 0204 	and.w	r2, r2, #4
 8001af2:	9205      	str	r2, [sp, #20]
 8001af4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001af6:	9406      	str	r4, [sp, #24]
 8001af8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001afa:	f042 0208 	orr.w	r2, r2, #8
 8001afe:	631a      	str	r2, [r3, #48]	; 0x30
 8001b00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b02:	f003 0308 	and.w	r3, r3, #8
 8001b06:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b08:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b0a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b0c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b0e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b10:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b14:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b16:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b1a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b1e:	f003 fb4f 	bl	80051c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001b22:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b26:	482c      	ldr	r0, [pc, #176]	; (8001bd8 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b28:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b2a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b2c:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001b30:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b32:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b36:	f003 fb43 	bl	80051c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001b3a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b3c:	4827      	ldr	r0, [pc, #156]	; (8001bdc <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001b3e:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b40:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b42:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b46:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b4a:	f003 fb39 	bl	80051c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001b4e:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b52:	4822      	ldr	r0, [pc, #136]	; (8001bdc <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b54:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b56:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b58:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b5c:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b60:	f003 fb2e 	bl	80051c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001b64:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b68:	481d      	ldr	r0, [pc, #116]	; (8001be0 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b6a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b6c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b6e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b72:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b76:	f003 fb23 	bl	80051c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001b7a:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b7c:	4819      	ldr	r0, [pc, #100]	; (8001be4 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b7e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b80:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b82:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b86:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b8a:	f003 fb19 	bl	80051c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001b8e:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b90:	4815      	ldr	r0, [pc, #84]	; (8001be8 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b92:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b94:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b96:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b9a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b9e:	f003 fb0f 	bl	80051c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001ba2:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ba6:	480e      	ldr	r0, [pc, #56]	; (8001be0 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001ba8:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001baa:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bac:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bb0:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bb4:	f003 fb04 	bl	80051c0 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bb8:	2058      	movs	r0, #88	; 0x58
 8001bba:	4622      	mov	r2, r4
 8001bbc:	2105      	movs	r1, #5
 8001bbe:	f003 f9b3 	bl	8004f28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bc2:	2058      	movs	r0, #88	; 0x58
 8001bc4:	f003 f9e2 	bl	8004f8c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001bc8:	b019      	add	sp, #100	; 0x64
 8001bca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bcc:	40016800 	.word	0x40016800
 8001bd0:	40023800 	.word	0x40023800
 8001bd4:	40021400 	.word	0x40021400
 8001bd8:	40020000 	.word	0x40020000
 8001bdc:	40020400 	.word	0x40020400
 8001be0:	40021800 	.word	0x40021800
 8001be4:	40020800 	.word	0x40020800
 8001be8:	40020c00 	.word	0x40020c00

08001bec <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001bec:	b510      	push	{r4, lr}
 8001bee:	4604      	mov	r4, r0
 8001bf0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bf2:	2214      	movs	r2, #20
 8001bf4:	2100      	movs	r1, #0
 8001bf6:	a803      	add	r0, sp, #12
 8001bf8:	f01a fd90 	bl	801c71c <memset>
  if(hspi->Instance==SPI5)
 8001bfc:	6822      	ldr	r2, [r4, #0]
 8001bfe:	4b14      	ldr	r3, [pc, #80]	; (8001c50 <HAL_SPI_MspInit+0x64>)
 8001c00:	429a      	cmp	r2, r3
 8001c02:	d123      	bne.n	8001c4c <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001c04:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001c08:	2100      	movs	r1, #0
 8001c0a:	9101      	str	r1, [sp, #4]
 8001c0c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c0e:	4811      	ldr	r0, [pc, #68]	; (8001c54 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001c10:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001c14:	645a      	str	r2, [r3, #68]	; 0x44
 8001c16:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c18:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001c1c:	9201      	str	r2, [sp, #4]
 8001c1e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c20:	9102      	str	r1, [sp, #8]
 8001c22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c24:	f042 0220 	orr.w	r2, r2, #32
 8001c28:	631a      	str	r2, [r3, #48]	; 0x30
 8001c2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c2c:	f003 0320 	and.w	r3, r3, #32
 8001c30:	9302      	str	r3, [sp, #8]
 8001c32:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c34:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001c38:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001c3a:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c3c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001c40:	2305      	movs	r3, #5
 8001c42:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c46:	a903      	add	r1, sp, #12
 8001c48:	f003 faba 	bl	80051c0 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001c4c:	b008      	add	sp, #32
 8001c4e:	bd10      	pop	{r4, pc}
 8001c50:	40015000 	.word	0x40015000
 8001c54:	40021400 	.word	0x40021400

08001c58 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001c5c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001c5e:	2300      	movs	r3, #0
 8001c60:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001c62:	4b2b      	ldr	r3, [pc, #172]	; (8001d10 <HAL_SDRAM_MspInit+0xb8>)
 8001c64:	681c      	ldr	r4, [r3, #0]
 8001c66:	2c00      	cmp	r4, #0
 8001c68:	d14f      	bne.n	8001d0a <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001c6a:	f04f 0801 	mov.w	r8, #1
 8001c6e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c72:	4b28      	ldr	r3, [pc, #160]	; (8001d14 <HAL_SDRAM_MspInit+0xbc>)
 8001c74:	9400      	str	r4, [sp, #0]
 8001c76:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c78:	4827      	ldr	r0, [pc, #156]	; (8001d18 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c7a:	ea42 0208 	orr.w	r2, r2, r8
 8001c7e:	639a      	str	r2, [r3, #56]	; 0x38
 8001c80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001c82:	ea03 0308 	and.w	r3, r3, r8
 8001c86:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c88:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c8a:	2603      	movs	r6, #3
 8001c8c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c8e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c90:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c92:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001c96:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c9a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c9e:	f003 fa8f 	bl	80051c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ca2:	481e      	ldr	r0, [pc, #120]	; (8001d1c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ca4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ca6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca8:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cac:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cb0:	f003 fa86 	bl	80051c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001cb4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cb8:	4819      	ldr	r0, [pc, #100]	; (8001d20 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cba:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cbc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cbe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cc2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cc6:	f003 fa7b 	bl	80051c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001cca:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cce:	4815      	ldr	r0, [pc, #84]	; (8001d24 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cd0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cd2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cd8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cdc:	f003 fa70 	bl	80051c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ce0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ce4:	4810      	ldr	r0, [pc, #64]	; (8001d28 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ce6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ce8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cea:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cee:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cf2:	f003 fa65 	bl	80051c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001cf6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cf8:	480c      	ldr	r0, [pc, #48]	; (8001d2c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cfa:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cfc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cfe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d02:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d06:	f003 fa5b 	bl	80051c0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001d0a:	b006      	add	sp, #24
 8001d0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001d10:	20006914 	.word	0x20006914
 8001d14:	40023800 	.word	0x40023800
 8001d18:	40021400 	.word	0x40021400
 8001d1c:	40020800 	.word	0x40020800
 8001d20:	40021800 	.word	0x40021800
 8001d24:	40021000 	.word	0x40021000
 8001d28:	40020c00 	.word	0x40020c00
 8001d2c:	40020400 	.word	0x40020400

08001d30 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001d30:	b570      	push	{r4, r5, r6, lr}
 8001d32:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001d34:	2300      	movs	r3, #0
 8001d36:	9302      	str	r3, [sp, #8]
 8001d38:	4b20      	ldr	r3, [pc, #128]	; (8001dbc <HAL_InitTick+0x8c>)
 8001d3a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d3c:	f042 0210 	orr.w	r2, r2, #16
 8001d40:	641a      	str	r2, [r3, #64]	; 0x40
 8001d42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d44:	f003 0310 	and.w	r3, r3, #16
 8001d48:	9302      	str	r3, [sp, #8]
{
 8001d4a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001d4c:	a901      	add	r1, sp, #4
 8001d4e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001d50:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001d52:	f004 fbaf 	bl	80064b4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001d56:	9b06      	ldr	r3, [sp, #24]
 8001d58:	bb4b      	cbnz	r3, 8001dae <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001d5a:	f004 fb9b 	bl	8006494 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001d5e:	4e18      	ldr	r6, [pc, #96]	; (8001dc0 <HAL_InitTick+0x90>)
 8001d60:	4b18      	ldr	r3, [pc, #96]	; (8001dc4 <HAL_InitTick+0x94>)
 8001d62:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001d64:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001d68:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001d6a:	4b17      	ldr	r3, [pc, #92]	; (8001dc8 <HAL_InitTick+0x98>)
 8001d6c:	fbb0 f3f3 	udiv	r3, r0, r3
 8001d70:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001d72:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001d74:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8001d76:	2300      	movs	r3, #0
 8001d78:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d7a:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001d7c:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8001d7e:	f005 f9cb 	bl	8007118 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001d82:	4604      	mov	r4, r0
 8001d84:	b980      	cbnz	r0, 8001da8 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001d86:	4630      	mov	r0, r6
 8001d88:	f005 f880 	bl	8006e8c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001d8c:	4604      	mov	r4, r0
 8001d8e:	b958      	cbnz	r0, 8001da8 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001d90:	2036      	movs	r0, #54	; 0x36
 8001d92:	f003 f8fb 	bl	8004f8c <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001d96:	2d0f      	cmp	r5, #15
 8001d98:	d80d      	bhi.n	8001db6 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001d9a:	4622      	mov	r2, r4
 8001d9c:	4629      	mov	r1, r5
 8001d9e:	2036      	movs	r0, #54	; 0x36
 8001da0:	f003 f8c2 	bl	8004f28 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001da4:	4b09      	ldr	r3, [pc, #36]	; (8001dcc <HAL_InitTick+0x9c>)
 8001da6:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001da8:	4620      	mov	r0, r4
 8001daa:	b008      	add	sp, #32
 8001dac:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001dae:	f004 fb71 	bl	8006494 <HAL_RCC_GetPCLK1Freq>
 8001db2:	0040      	lsls	r0, r0, #1
 8001db4:	e7d3      	b.n	8001d5e <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8001db6:	2401      	movs	r4, #1
 8001db8:	e7f6      	b.n	8001da8 <HAL_InitTick+0x78>
 8001dba:	bf00      	nop
 8001dbc:	40023800 	.word	0x40023800
 8001dc0:	20006918 	.word	0x20006918
 8001dc4:	40001000 	.word	0x40001000
 8001dc8:	000f4240 	.word	0x000f4240
 8001dcc:	2000007c 	.word	0x2000007c

08001dd0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001dd0:	4770      	bx	lr

08001dd2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001dd2:	e7fe      	b.n	8001dd2 <HardFault_Handler>

08001dd4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001dd4:	e7fe      	b.n	8001dd4 <MemManage_Handler>

08001dd6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001dd6:	e7fe      	b.n	8001dd6 <BusFault_Handler>

08001dd8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001dd8:	e7fe      	b.n	8001dd8 <UsageFault_Handler>

08001dda <DebugMon_Handler>:
 8001dda:	4770      	bx	lr

08001ddc <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001ddc:	4801      	ldr	r0, [pc, #4]	; (8001de4 <TIM6_DAC_IRQHandler+0x8>)
 8001dde:	f005 b893 	b.w	8006f08 <HAL_TIM_IRQHandler>
 8001de2:	bf00      	nop
 8001de4:	20006918 	.word	0x20006918

08001de8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001de8:	4801      	ldr	r0, [pc, #4]	; (8001df0 <LTDC_IRQHandler+0x8>)
 8001dea:	f004 b831 	b.w	8005e50 <HAL_LTDC_IRQHandler>
 8001dee:	bf00      	nop
 8001df0:	200067e0 	.word	0x200067e0

08001df4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001df4:	4801      	ldr	r0, [pc, #4]	; (8001dfc <DMA2D_IRQHandler+0x8>)
 8001df6:	f003 b915 	b.w	8005024 <HAL_DMA2D_IRQHandler>
 8001dfa:	bf00      	nop
 8001dfc:	2000674c 	.word	0x2000674c

08001e00 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001e00:	2001      	movs	r0, #1
 8001e02:	4770      	bx	lr

08001e04 <_kill>:

int _kill(int pid, int sig)
{
 8001e04:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001e06:	f01a fc2f 	bl	801c668 <__errno>
 8001e0a:	2316      	movs	r3, #22
 8001e0c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001e0e:	f04f 30ff 	mov.w	r0, #4294967295
 8001e12:	bd08      	pop	{r3, pc}

08001e14 <_exit>:

void _exit (int status)
{
 8001e14:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001e16:	f01a fc27 	bl	801c668 <__errno>
 8001e1a:	2316      	movs	r3, #22
 8001e1c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001e1e:	e7fe      	b.n	8001e1e <_exit+0xa>

08001e20 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001e20:	b570      	push	{r4, r5, r6, lr}
 8001e22:	460d      	mov	r5, r1
 8001e24:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e26:	460e      	mov	r6, r1
 8001e28:	1b73      	subs	r3, r6, r5
 8001e2a:	429c      	cmp	r4, r3
 8001e2c:	dc01      	bgt.n	8001e32 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001e2e:	4620      	mov	r0, r4
 8001e30:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001e32:	f3af 8000 	nop.w
 8001e36:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e3a:	e7f5      	b.n	8001e28 <_read+0x8>

08001e3c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001e3c:	b570      	push	{r4, r5, r6, lr}
 8001e3e:	460d      	mov	r5, r1
 8001e40:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e42:	460e      	mov	r6, r1
 8001e44:	1b73      	subs	r3, r6, r5
 8001e46:	429c      	cmp	r4, r3
 8001e48:	dc01      	bgt.n	8001e4e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001e4a:	4620      	mov	r0, r4
 8001e4c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001e4e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001e52:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e56:	e7f5      	b.n	8001e44 <_write+0x8>

08001e58 <_close>:

int _close(int file)
{
	return -1;
}
 8001e58:	f04f 30ff 	mov.w	r0, #4294967295
 8001e5c:	4770      	bx	lr

08001e5e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001e5e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e62:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001e64:	2000      	movs	r0, #0
 8001e66:	4770      	bx	lr

08001e68 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001e68:	2001      	movs	r0, #1
 8001e6a:	4770      	bx	lr

08001e6c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001e6c:	2000      	movs	r0, #0
 8001e6e:	4770      	bx	lr

08001e70 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001e70:	4a0a      	ldr	r2, [pc, #40]	; (8001e9c <_sbrk+0x2c>)
 8001e72:	6811      	ldr	r1, [r2, #0]
{
 8001e74:	b508      	push	{r3, lr}
 8001e76:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001e78:	b909      	cbnz	r1, 8001e7e <_sbrk+0xe>
		heap_end = &end;
 8001e7a:	4909      	ldr	r1, [pc, #36]	; (8001ea0 <_sbrk+0x30>)
 8001e7c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001e7e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001e80:	4669      	mov	r1, sp
 8001e82:	4403      	add	r3, r0
 8001e84:	428b      	cmp	r3, r1
 8001e86:	d906      	bls.n	8001e96 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001e88:	f01a fbee 	bl	801c668 <__errno>
 8001e8c:	230c      	movs	r3, #12
 8001e8e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001e90:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001e94:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001e96:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001e98:	e7fc      	b.n	8001e94 <_sbrk+0x24>
 8001e9a:	bf00      	nop
 8001e9c:	20006960 	.word	0x20006960
 8001ea0:	200179f8 	.word	0x200179f8

08001ea4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId WHEEL_SELECTOR_SMALL = 0; // Asap_Regular_24_4bpp
    static const touchgfx::FontId WHEEL_SELECTOR_LARGE = 1; // Asap_Regular_32_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001ea4:	4770      	bx	lr

08001ea6 <_ZN23ApplicationFontProviderD0Ev>:
 8001ea6:	b510      	push	{r4, lr}
 8001ea8:	2104      	movs	r1, #4
 8001eaa:	4604      	mov	r4, r0
 8001eac:	f019 fdda 	bl	801ba64 <_ZdlPvj>
 8001eb0:	4620      	mov	r0, r4
 8001eb2:	bd10      	pop	{r4, pc}

08001eb4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8001eb4:	b508      	push	{r3, lr}
    switch (typography)
 8001eb6:	b119      	cbz	r1, 8001ec0 <_ZN23ApplicationFontProvider7getFontEt+0xc>
 8001eb8:	2901      	cmp	r1, #1
 8001eba:	d005      	beq.n	8001ec8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001ebc:	2000      	movs	r0, #0
        // Asap_Regular_32_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    default:
        return 0;
    }
}
 8001ebe:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001ec0:	f000 fdd8 	bl	8002a74 <_ZN17TypedTextDatabase8getFontsEv>
 8001ec4:	6800      	ldr	r0, [r0, #0]
 8001ec6:	e7fa      	b.n	8001ebe <_ZN23ApplicationFontProvider7getFontEt+0xa>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001ec8:	f000 fdd4 	bl	8002a74 <_ZN17TypedTextDatabase8getFontsEv>
 8001ecc:	6840      	ldr	r0, [r0, #4]
 8001ece:	e7f6      	b.n	8001ebe <_ZN23ApplicationFontProvider7getFontEt+0xa>

08001ed0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001ed0:	4800      	ldr	r0, [pc, #0]	; (8001ed4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001ed2:	4770      	bx	lr
 8001ed4:	0801de8c 	.word	0x0801de8c

08001ed8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001ed8:	2010      	movs	r0, #16
 8001eda:	4770      	bx	lr

08001edc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001edc:	b513      	push	{r0, r1, r4, lr}
 8001ede:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001ee0:	b151      	cbz	r1, 8001ef8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001ee2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001ee4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001ee6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001eea:	aa01      	add	r2, sp, #4
 8001eec:	689c      	ldr	r4, [r3, #8]
 8001eee:	f10d 0303 	add.w	r3, sp, #3
 8001ef2:	47a0      	blx	r4
        return glyph;
    }
 8001ef4:	b002      	add	sp, #8
 8001ef6:	bd10      	pop	{r4, pc}
            return 0;
 8001ef8:	4608      	mov	r0, r1
 8001efa:	e7fb      	b.n	8001ef4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001efc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001efc:	89c0      	ldrh	r0, [r0, #14]
 8001efe:	4770      	bx	lr

08001f00 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001f00:	8a00      	ldrh	r0, [r0, #16]
 8001f02:	4770      	bx	lr

08001f04 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8001f04:	88c0      	ldrh	r0, [r0, #6]
 8001f06:	4770      	bx	lr

08001f08 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8001f08:	8880      	ldrh	r0, [r0, #4]
 8001f0a:	4770      	bx	lr

08001f0c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001f0c:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f0e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001f12:	4770      	bx	lr

08001f14 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001f14:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f16:	09c0      	lsrs	r0, r0, #7
 8001f18:	4770      	bx	lr

08001f1a <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8001f1a:	4770      	bx	lr

08001f1c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8001f1c:	b510      	push	{r4, lr}
    }
 8001f1e:	2108      	movs	r1, #8
    virtual ~TypedText()
 8001f20:	4604      	mov	r4, r0
    }
 8001f22:	f019 fd9f 	bl	801ba64 <_ZdlPvj>
 8001f26:	4620      	mov	r0, r4
 8001f28:	bd10      	pop	{r4, pc}

08001f2a <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8001f2a:	4770      	bx	lr

08001f2c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8001f2c:	4770      	bx	lr

08001f2e <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001f2e:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8001f32:	6808      	ldr	r0, [r1, #0]
 8001f34:	6849      	ldr	r1, [r1, #4]
 8001f36:	c303      	stmia	r3!, {r0, r1}
    }
 8001f38:	4770      	bx	lr

08001f3a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8001f3a:	4770      	bx	lr

08001f3c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8001f3c:	4770      	bx	lr

08001f3e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8001f3e:	6041      	str	r1, [r0, #4]
    }
 8001f40:	4770      	bx	lr

08001f42 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001f42:	4770      	bx	lr

08001f44 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001f44:	4b06      	ldr	r3, [pc, #24]	; (8001f60 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8001f46:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001f50:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8001f54:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8001f58:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 8001f5c:	4770      	bx	lr
 8001f5e:	bf00      	nop
 8001f60:	08002005 	.word	0x08002005

08001f64 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8001f64:	2301      	movs	r3, #1
 8001f66:	7203      	strb	r3, [r0, #8]
    }
 8001f68:	4770      	bx	lr

08001f6a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8001f6a:	4770      	bx	lr

08001f6c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8001f6c:	4770      	bx	lr

08001f6e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8001f6e:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8001f70:	68c2      	ldr	r2, [r0, #12]
 8001f72:	6841      	ldr	r1, [r0, #4]
 8001f74:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8001f76:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8001f78:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8001f7c:	07d2      	lsls	r2, r2, #31
 8001f7e:	bf48      	it	mi
 8001f80:	590a      	ldrmi	r2, [r1, r4]
 8001f82:	689b      	ldr	r3, [r3, #8]
    }
 8001f84:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8001f88:	bf48      	it	mi
 8001f8a:	58d3      	ldrmi	r3, [r2, r3]
 8001f8c:	4718      	bx	r3

08001f8e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8001f8e:	6843      	ldr	r3, [r0, #4]
 8001f90:	b12b      	cbz	r3, 8001f9e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8001f92:	6883      	ldr	r3, [r0, #8]
 8001f94:	b92b      	cbnz	r3, 8001fa2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8001f96:	68c0      	ldr	r0, [r0, #12]
 8001f98:	f000 0001 	and.w	r0, r0, #1
 8001f9c:	4770      	bx	lr
 8001f9e:	4618      	mov	r0, r3
 8001fa0:	4770      	bx	lr
 8001fa2:	2001      	movs	r0, #1
    }
 8001fa4:	4770      	bx	lr

08001fa6 <_ZN8touchgfx12NoTransitionD0Ev>:
 8001fa6:	b510      	push	{r4, lr}
 8001fa8:	210c      	movs	r1, #12
 8001faa:	4604      	mov	r4, r0
 8001fac:	f019 fd5a 	bl	801ba64 <_ZdlPvj>
 8001fb0:	4620      	mov	r0, r4
 8001fb2:	bd10      	pop	{r4, pc}

08001fb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001fb4:	b510      	push	{r4, lr}
 8001fb6:	2110      	movs	r1, #16
 8001fb8:	4604      	mov	r4, r0
 8001fba:	f019 fd53 	bl	801ba64 <_ZdlPvj>
 8001fbe:	4620      	mov	r0, r4
 8001fc0:	bd10      	pop	{r4, pc}

08001fc2 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8001fc2:	b510      	push	{r4, lr}
 8001fc4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8001fc8:	4604      	mov	r4, r0
 8001fca:	f019 fd4b 	bl	801ba64 <_ZdlPvj>
 8001fce:	4620      	mov	r0, r4
 8001fd0:	bd10      	pop	{r4, pc}

08001fd2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8001fd2:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8001fd4:	f00a fe36 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8001fd8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8001fdc:	f00b bac4 	b.w	800d568 <_ZN8touchgfx11Application10invalidateEv>

08001fe0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8001fe0:	b510      	push	{r4, lr}
 8001fe2:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8001fe4:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8001fe8:	b158      	cbz	r0, 8002002 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8001fea:	6803      	ldr	r3, [r0, #0]
 8001fec:	68db      	ldr	r3, [r3, #12]
 8001fee:	4798      	blx	r3
 8001ff0:	b138      	cbz	r0, 8002002 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8001ff2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8001ff6:	6803      	ldr	r3, [r0, #0]
 8001ff8:	689b      	ldr	r3, [r3, #8]
 8001ffa:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8001ffc:	2300      	movs	r3, #0
 8001ffe:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8002002:	bd10      	pop	{r4, pc}

08002004 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8002004:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002008:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 800200c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800200e:	68a8      	ldr	r0, [r5, #8]
 8002010:	6803      	ldr	r3, [r0, #0]
 8002012:	6a1b      	ldr	r3, [r3, #32]
 8002014:	4798      	blx	r3
 8002016:	f245 533f 	movw	r3, #21823	; 0x553f
 800201a:	4298      	cmp	r0, r3
 800201c:	d805      	bhi.n	800202a <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x26>
 800201e:	4b46      	ldr	r3, [pc, #280]	; (8002138 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 8002020:	4a46      	ldr	r2, [pc, #280]	; (800213c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 8002022:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002024:	4846      	ldr	r0, [pc, #280]	; (8002140 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 8002026:	f01a faed 	bl	801c604 <__assert_func>
 800202a:	6868      	ldr	r0, [r5, #4]
 800202c:	6803      	ldr	r3, [r0, #0]
 800202e:	6a1b      	ldr	r3, [r3, #32]
 8002030:	4798      	blx	r3
 8002032:	280f      	cmp	r0, #15
 8002034:	d803      	bhi.n	800203e <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x3a>
 8002036:	4b43      	ldr	r3, [pc, #268]	; (8002144 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>)
 8002038:	4a40      	ldr	r2, [pc, #256]	; (800213c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 800203a:	21a4      	movs	r1, #164	; 0xa4
 800203c:	e7f2      	b.n	8002024 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800203e:	68e8      	ldr	r0, [r5, #12]
 8002040:	6803      	ldr	r3, [r0, #0]
 8002042:	6a1b      	ldr	r3, [r3, #32]
 8002044:	4798      	blx	r3
 8002046:	280b      	cmp	r0, #11
 8002048:	d803      	bhi.n	8002052 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x4e>
 800204a:	4b3f      	ldr	r3, [pc, #252]	; (8002148 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>)
 800204c:	4a3b      	ldr	r2, [pc, #236]	; (800213c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 800204e:	21a5      	movs	r1, #165	; 0xa5
 8002050:	e7e8      	b.n	8002024 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002052:	f00a fdf7 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002056:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002150 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x14c>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800205a:	3004      	adds	r0, #4
 800205c:	f00a fe30 	bl	800ccc0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002060:	f8d9 0000 	ldr.w	r0, [r9]
 8002064:	b110      	cbz	r0, 800206c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002066:	6803      	ldr	r3, [r0, #0]
 8002068:	68db      	ldr	r3, [r3, #12]
 800206a:	4798      	blx	r3
    if (*currentTrans)
 800206c:	f8d9 0000 	ldr.w	r0, [r9]
 8002070:	b110      	cbz	r0, 8002078 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002072:	6803      	ldr	r3, [r0, #0]
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	4798      	blx	r3
    if (*currentScreen)
 8002078:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002154 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x150>
 800207c:	f8d8 0000 	ldr.w	r0, [r8]
 8002080:	b110      	cbz	r0, 8002088 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002082:	6803      	ldr	r3, [r0, #0]
 8002084:	695b      	ldr	r3, [r3, #20]
 8002086:	4798      	blx	r3
    if (*currentPresenter)
 8002088:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800208c:	b110      	cbz	r0, 8002094 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800208e:	6803      	ldr	r3, [r0, #0]
 8002090:	685b      	ldr	r3, [r3, #4]
 8002092:	4798      	blx	r3
    if (*currentScreen)
 8002094:	f8d8 0000 	ldr.w	r0, [r8]
 8002098:	b110      	cbz	r0, 80020a0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800209a:	6803      	ldr	r3, [r0, #0]
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	4798      	blx	r3
    if (*currentPresenter)
 80020a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80020a4:	b110      	cbz	r0, 80020ac <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80020a6:	6803      	ldr	r3, [r0, #0]
 80020a8:	689b      	ldr	r3, [r3, #8]
 80020aa:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80020ac:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80020ae:	6803      	ldr	r3, [r0, #0]
 80020b0:	2100      	movs	r1, #0
 80020b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020b4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80020b6:	f04f 0b00 	mov.w	fp, #0
 80020ba:	4b24      	ldr	r3, [pc, #144]	; (800214c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x148>)
 80020bc:	6003      	str	r3, [r0, #0]
 80020be:	4604      	mov	r4, r0
 80020c0:	f8c0 b004 	str.w	fp, [r0, #4]
 80020c4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80020c8:	68a8      	ldr	r0, [r5, #8]
 80020ca:	6803      	ldr	r3, [r0, #0]
 80020cc:	4659      	mov	r1, fp
 80020ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020d0:	4798      	blx	r3
 80020d2:	4606      	mov	r6, r0
 80020d4:	f000 ffb6 	bl	8003044 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80020d8:	6868      	ldr	r0, [r5, #4]
 80020da:	6803      	ldr	r3, [r0, #0]
 80020dc:	4659      	mov	r1, fp
 80020de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020e0:	4798      	blx	r3
 80020e2:	4631      	mov	r1, r6
 80020e4:	4605      	mov	r5, r0
 80020e6:	f000 fef7 	bl	8002ed8 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
 80020ea:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80020ee:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80020f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80020f6:	b1e5      	cbz	r5, 8002132 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12e>
 80020f8:	1d2b      	adds	r3, r5, #4
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80020fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80020fe:	6833      	ldr	r3, [r6, #0]
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
    {
        model = m;
 8002100:	f8c5 a008 	str.w	sl, [r5, #8]
 8002104:	4630      	mov	r0, r6
 8002106:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002108:	63f5      	str	r5, [r6, #60]	; 0x3c
 800210a:	4798      	blx	r3
    newPresenter->activate();
 800210c:	682b      	ldr	r3, [r5, #0]
 800210e:	4628      	mov	r0, r5
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002114:	4621      	mov	r1, r4
 8002116:	4630      	mov	r0, r6
 8002118:	f00c fa62 	bl	800e5e0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800211c:	6823      	ldr	r3, [r4, #0]
 800211e:	4620      	mov	r0, r4
 8002120:	691b      	ldr	r3, [r3, #16]
 8002122:	4798      	blx	r3
    newTransition->invalidate();
 8002124:	6823      	ldr	r3, [r4, #0]
 8002126:	695b      	ldr	r3, [r3, #20]
 8002128:	4620      	mov	r0, r4
}
 800212a:	b001      	add	sp, #4
 800212c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002130:	4718      	bx	r3
    model->bind(newPresenter);
 8002132:	462b      	mov	r3, r5
 8002134:	e7e1      	b.n	80020fa <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xf6>
 8002136:	bf00      	nop
 8002138:	0801dfdc 	.word	0x0801dfdc
 800213c:	0801e06a 	.word	0x0801e06a
 8002140:	0801e168 	.word	0x0801e168
 8002144:	0801e1af 	.word	0x0801e1af
 8002148:	0801e252 	.word	0x0801e252
 800214c:	0801e364 	.word	0x0801e364
 8002150:	20017790 	.word	0x20017790
 8002154:	2001778c 	.word	0x2001778c

08002158 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800215a:	4604      	mov	r4, r0
 800215c:	4617      	mov	r7, r2
 800215e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002160:	f00a fe7c 	bl	800ce5c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002164:	4b10      	ldr	r3, [pc, #64]	; (80021a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002166:	2500      	movs	r5, #0
      model(m)
 8002168:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
        return instance;
 800216c:	4e0f      	ldr	r6, [pc, #60]	; (80021ac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 800216e:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun(0)
 8002170:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002174:	4b0e      	ldr	r3, [pc, #56]	; (80021b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002176:	6830      	ldr	r0, [r6, #0]
 8002178:	6023      	str	r3, [r4, #0]
 800217a:	4b0e      	ldr	r3, [pc, #56]	; (80021b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800217c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002180:	6803      	ldr	r3, [r0, #0]
 8002182:	2101      	movs	r1, #1
 8002184:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002186:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 800218a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800218c:	4628      	mov	r0, r5
 800218e:	f000 fc25 	bl	80029dc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002192:	6833      	ldr	r3, [r6, #0]
 8002194:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002198:	b10a      	cbz	r2, 800219e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 800219a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800219c:	b900      	cbnz	r0, 80021a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 800219e:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80021a0:	f012 fd45 	bl	8014c2e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80021a4:	4620      	mov	r0, r4
 80021a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80021a8:	2001779c 	.word	0x2001779c
 80021ac:	20017750 	.word	0x20017750
 80021b0:	0801e318 	.word	0x0801e318
 80021b4:	0801e300 	.word	0x0801e300

080021b8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021b8:	4b06      	ldr	r3, [pc, #24]	; (80021d4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 80021ba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80021be:	2300      	movs	r3, #0
 80021c0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80021c4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80021c8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80021cc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80021d0:	4770      	bx	lr
 80021d2:	bf00      	nop
 80021d4:	08002005 	.word	0x08002005

080021d8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80021d8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80021da:	4770      	bx	lr

080021dc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80021dc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80021de:	4770      	bx	lr

080021e0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80021e0:	4770      	bx	lr

080021e2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80021e2:	888b      	ldrh	r3, [r1, #4]
 80021e4:	69c0      	ldr	r0, [r0, #28]
 80021e6:	680a      	ldr	r2, [r1, #0]
 80021e8:	0adb      	lsrs	r3, r3, #11
 80021ea:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80021ee:	4410      	add	r0, r2
 80021f0:	4770      	bx	lr

080021f2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80021f2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80021f4:	b1c2      	cbz	r2, 8002228 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80021f6:	7b13      	ldrb	r3, [r2, #12]
 80021f8:	b1b3      	cbz	r3, 8002228 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80021fa:	7b54      	ldrb	r4, [r2, #13]
 80021fc:	7ad2      	ldrb	r2, [r2, #11]
 80021fe:	0224      	lsls	r4, r4, #8
 8002200:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002204:	4314      	orrs	r4, r2
 8002206:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002208:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800220a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800220e:	8813      	ldrh	r3, [r2, #0]
 8002210:	428b      	cmp	r3, r1
 8002212:	d102      	bne.n	800221a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002214:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002218:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800221a:	d805      	bhi.n	8002228 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800221c:	3801      	subs	r0, #1
 800221e:	b280      	uxth	r0, r0
 8002220:	3204      	adds	r2, #4
 8002222:	2800      	cmp	r0, #0
 8002224:	d1f3      	bne.n	800220e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002226:	e7f7      	b.n	8002218 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002228:	2000      	movs	r0, #0
 800222a:	e7f5      	b.n	8002218 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800222c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800222c:	b510      	push	{r4, lr}
 800222e:	212c      	movs	r1, #44	; 0x2c
 8002230:	4604      	mov	r4, r0
 8002232:	f019 fc17 	bl	801ba64 <_ZdlPvj>
 8002236:	4620      	mov	r0, r4
 8002238:	bd10      	pop	{r4, pc}
	...

0800223c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800223c:	b530      	push	{r4, r5, lr}
 800223e:	b08b      	sub	sp, #44	; 0x2c
 8002240:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002242:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8002246:	9508      	str	r5, [sp, #32]
 8002248:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800224c:	9507      	str	r5, [sp, #28]
 800224e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8002252:	9506      	str	r5, [sp, #24]
 8002254:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8002258:	9505      	str	r5, [sp, #20]
 800225a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800225e:	9504      	str	r5, [sp, #16]
 8002260:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8002264:	9503      	str	r5, [sp, #12]
 8002266:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800226a:	9502      	str	r5, [sp, #8]
 800226c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002270:	9501      	str	r5, [sp, #4]
 8002272:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8002276:	9500      	str	r5, [sp, #0]
 8002278:	f00b fe20 	bl	800debc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800227c:	4b06      	ldr	r3, [pc, #24]	; (8002298 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800227e:	6023      	str	r3, [r4, #0]
 8002280:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002282:	61e3      	str	r3, [r4, #28]
 8002284:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002286:	6223      	str	r3, [r4, #32]
 8002288:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800228a:	6263      	str	r3, [r4, #36]	; 0x24
 800228c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800228e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8002290:	4620      	mov	r0, r4
 8002292:	b00b      	add	sp, #44	; 0x2c
 8002294:	bd30      	pop	{r4, r5, pc}
 8002296:	bf00      	nop
 8002298:	0801e388 	.word	0x0801e388

0800229c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800229c:	4770      	bx	lr

0800229e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800229e:	4770      	bx	lr

080022a0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022a0:	4770      	bx	lr

080022a2 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022a2:	4770      	bx	lr

080022a4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022a4:	4770      	bx	lr

080022a6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80022a6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80022a8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80022aa:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80022ac:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022ae:	466d      	mov	r5, sp
 80022b0:	4601      	mov	r1, r0
 80022b2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80022b6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022b8:	4628      	mov	r0, r5
 80022ba:	4798      	blx	r3
 80022bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022c0:	343c      	adds	r4, #60	; 0x3c
 80022c2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80022c6:	b005      	add	sp, #20
 80022c8:	bd30      	pop	{r4, r5, pc}

080022ca <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80022ca:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80022cc:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80022ce:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80022d0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022d2:	466d      	mov	r5, sp
 80022d4:	4601      	mov	r1, r0
 80022d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80022da:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022dc:	4628      	mov	r0, r5
 80022de:	4798      	blx	r3
 80022e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022e4:	343c      	adds	r4, #60	; 0x3c
 80022e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80022ea:	b005      	add	sp, #20
 80022ec:	bd30      	pop	{r4, r5, pc}

080022ee <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80022ee:	2200      	movs	r2, #0
 80022f0:	8002      	strh	r2, [r0, #0]
 80022f2:	8042      	strh	r2, [r0, #2]
 80022f4:	8082      	strh	r2, [r0, #4]
 80022f6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80022f8:	4770      	bx	lr

080022fa <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80022fa:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80022fe:	4770      	bx	lr

08002300 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002300:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002302:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002304:	4604      	mov	r4, r0
        setX(x);
 8002306:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002308:	4615      	mov	r5, r2
        setX(x);
 800230a:	4798      	blx	r3
        setBaselineY(baselineY);
 800230c:	6823      	ldr	r3, [r4, #0]
 800230e:	4629      	mov	r1, r5
 8002310:	4620      	mov	r0, r4
 8002312:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002314:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002318:	4718      	bx	r3

0800231a <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return 0;
    }
 800231a:	2000      	movs	r0, #0
 800231c:	4770      	bx	lr

0800231e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800231e:	2000      	movs	r0, #0
 8002320:	4770      	bx	lr

08002322 <_ZN12MainViewBase16gotoMenuSelectedEv>:
     * Virtual Action Handlers
     */
    virtual void gotoMenuSelected()
    {
        // Override and implement this function in Main
    }
 8002322:	4770      	bx	lr

08002324 <_ZN12MainViewBaseD1Ev>:
}

MainViewBase::~MainViewBase()
{

}
 8002324:	4770      	bx	lr

08002326 <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{

}
 8002326:	4770      	bx	lr

08002328 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002328:	4770      	bx	lr

0800232a <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEED1Ev>:
 * 'uint8_t getAlpha()' method.
 *
 * @tparam T specifies the type to extend with the FadeAnimator behavior.
 */
template <class T>
class FadeAnimator : public T
 800232a:	4770      	bx	lr

0800232c <_ZN8touchgfx12MoveAnimatorINS_5ImageEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 800232c:	4770      	bx	lr

0800232e <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800232e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002330:	68c2      	ldr	r2, [r0, #12]
 8002332:	6844      	ldr	r4, [r0, #4]
 8002334:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002336:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002338:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800233c:	07d2      	lsls	r2, r2, #31
 800233e:	bf48      	it	mi
 8002340:	5962      	ldrmi	r2, [r4, r5]
 8002342:	689b      	ldr	r3, [r3, #8]
    }
 8002344:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002346:	bf48      	it	mi
 8002348:	58d3      	ldrmi	r3, [r2, r3]
 800234a:	4718      	bx	r3

0800234c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800234c:	6843      	ldr	r3, [r0, #4]
 800234e:	b12b      	cbz	r3, 800235c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002350:	6883      	ldr	r3, [r0, #8]
 8002352:	b92b      	cbnz	r3, 8002360 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002354:	68c0      	ldr	r0, [r0, #12]
 8002356:	f000 0001 	and.w	r0, r0, #1
 800235a:	4770      	bx	lr
 800235c:	4618      	mov	r0, r3
 800235e:	4770      	bx	lr
 8002360:	2001      	movs	r0, #1
    }
 8002362:	4770      	bx	lr

08002364 <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE21setFadeAnimationDelayEt>:
     *
     * @see getFadeAnimationDelay
     */
    virtual void setFadeAnimationDelay(uint16_t delay)
    {
        fadeAnimationDelay = delay;
 8002364:	f8a0 104c 	strh.w	r1, [r0, #76]	; 0x4c
    }
 8002368:	4770      	bx	lr

0800236a <_ZNK8touchgfx12FadeAnimatorINS_8TextAreaEE21getFadeAnimationDelayEv>:
     * @see setFadeAnimationDelay
     */
    virtual uint16_t getFadeAnimationDelay() const
    {
        return fadeAnimationDelay;
    }
 800236a:	f8b0 004c 	ldrh.w	r0, [r0, #76]	; 0x4c
 800236e:	4770      	bx	lr

08002370 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 8002370:	8581      	strh	r1, [r0, #44]	; 0x2c
    }
 8002372:	4770      	bx	lr

08002374 <_ZNK8touchgfx12MoveAnimatorINS_5ImageEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 8002374:	8d80      	ldrh	r0, [r0, #44]	; 0x2c
 8002376:	4770      	bx	lr

08002378 <_ZN8touchgfx12MoveAnimatorINS_5ImageEED0Ev>:
class MoveAnimator : public T
 8002378:	b510      	push	{r4, lr}
 800237a:	2144      	movs	r1, #68	; 0x44
 800237c:	4604      	mov	r4, r0
 800237e:	f019 fb71 	bl	801ba64 <_ZdlPvj>
 8002382:	4620      	mov	r0, r4
 8002384:	bd10      	pop	{r4, pc}

08002386 <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEED0Ev>:
class FadeAnimator : public T
 8002386:	b510      	push	{r4, lr}
 8002388:	215c      	movs	r1, #92	; 0x5c
 800238a:	4604      	mov	r4, r0
 800238c:	f019 fb6a 	bl	801ba64 <_ZdlPvj>
 8002390:	4620      	mov	r0, r4
 8002392:	bd10      	pop	{r4, pc}

08002394 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002394:	b510      	push	{r4, lr}
 8002396:	2110      	movs	r1, #16
 8002398:	4604      	mov	r4, r0
 800239a:	f019 fb63 	bl	801ba64 <_ZdlPvj>
 800239e:	4620      	mov	r0, r4
 80023a0:	bd10      	pop	{r4, pc}

080023a2 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 80023a2:	b510      	push	{r4, lr}
}
 80023a4:	f44f 71be 	mov.w	r1, #380	; 0x17c
MainViewBase::~MainViewBase()
 80023a8:	4604      	mov	r4, r0
}
 80023aa:	f019 fb5b 	bl	801ba64 <_ZdlPvj>
 80023ae:	4620      	mov	r0, r4
 80023b0:	bd10      	pop	{r4, pc}

080023b2 <_ZNK8touchgfx5Image17invalidateContentEv>:
        return alpha;
    }

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
 80023b2:	b508      	push	{r3, lr}
    {
        if (alpha > 0)
 80023b4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80023b8:	b10b      	cbz	r3, 80023be <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
        {
            Widget::invalidateContent();
 80023ba:	f7fe ff35 	bl	8001228 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 80023be:	bd08      	pop	{r3, pc}

080023c0 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &gotoMenuButton)
 80023c0:	f100 02dc 	add.w	r2, r0, #220	; 0xdc
 80023c4:	428a      	cmp	r2, r1
 80023c6:	d102      	bne.n	80023ce <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //GotoMenuSelected
        //When gotoMenuButton clicked call virtual function
        //Call gotoMenuSelected
        gotoMenuSelected();
 80023c8:	6803      	ldr	r3, [r0, #0]
 80023ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80023cc:	4718      	bx	r3
    }
}
 80023ce:	4770      	bx	lr

080023d0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023d0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023d2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023d4:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80023d6:	4b12      	ldr	r3, [pc, #72]	; (8002420 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80023d8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023da:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023dc:	b28d      	uxth	r5, r1
 80023de:	b92b      	cbnz	r3, 80023ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80023e0:	4b10      	ldr	r3, [pc, #64]	; (8002424 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80023e2:	4a11      	ldr	r2, [pc, #68]	; (8002428 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80023e4:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80023e6:	4811      	ldr	r0, [pc, #68]	; (800242c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80023e8:	f01a f90c 	bl	801c604 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80023ec:	4910      	ldr	r1, [pc, #64]	; (8002430 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80023ee:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80023f0:	8809      	ldrh	r1, [r1, #0]
 80023f2:	4291      	cmp	r1, r2
 80023f4:	d803      	bhi.n	80023fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80023f6:	4b0f      	ldr	r3, [pc, #60]	; (8002434 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80023f8:	4a0b      	ldr	r2, [pc, #44]	; (8002428 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80023fa:	216d      	movs	r1, #109	; 0x6d
 80023fc:	e7f3      	b.n	80023e6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80023fe:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002402:	4b0d      	ldr	r3, [pc, #52]	; (8002438 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800240a:	6803      	ldr	r3, [r0, #0]
 800240c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800240e:	4798      	blx	r3
 8002410:	1a28      	subs	r0, r5, r0
 8002412:	b201      	sxth	r1, r0
 8002414:	4633      	mov	r3, r6
 8002416:	4620      	mov	r0, r4
    }
 8002418:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800241c:	4718      	bx	r3
 800241e:	bf00      	nop
 8002420:	200177a0 	.word	0x200177a0
 8002424:	0801e3e0 	.word	0x0801e3e0
 8002428:	0801e422 	.word	0x0801e422
 800242c:	0801e45d 	.word	0x0801e45d
 8002430:	200177a4 	.word	0x200177a4
 8002434:	0801e4a4 	.word	0x0801e4a4
 8002438:	200177a8 	.word	0x200177a8

0800243c <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv>:

protected:
    /** Execute next step in fade animation and stop the timer if necessary. */
    void nextFadeAnimationStep()
    {
        if (fadeAnimationRunning)
 800243c:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
    virtual void handleTickEvent()
 8002440:	b570      	push	{r4, r5, r6, lr}
 8002442:	4604      	mov	r4, r0
        if (fadeAnimationRunning)
 8002444:	2b00      	cmp	r3, #0
 8002446:	d04a      	beq.n	80024de <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv+0xa2>
        {
            fadeAnimationCounter++;
 8002448:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800244c:	f8b4 304c 	ldrh.w	r3, [r4, #76]	; 0x4c
            fadeAnimationCounter++;
 8002450:	3001      	adds	r0, #1
 8002452:	b280      	uxth	r0, r0
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8002454:	4298      	cmp	r0, r3
            fadeAnimationCounter++;
 8002456:	f8a4 004a 	strh.w	r0, [r4, #74]	; 0x4a
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800245a:	d340      	bcc.n	80024de <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv+0xa2>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = fadeAnimationCounter - fadeAnimationDelay;

                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 800245c:	f8b4 6050 	ldrh.w	r6, [r4, #80]	; 0x50
 8002460:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
 8002464:	6d65      	ldr	r5, [r4, #84]	; 0x54
 8002466:	1ac0      	subs	r0, r0, r3
 8002468:	1b92      	subs	r2, r2, r6
 800246a:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800246e:	b212      	sxth	r2, r2
 8002470:	2100      	movs	r1, #0
 8002472:	b280      	uxth	r0, r0
 8002474:	47a8      	blx	r5

                if (T::getAlpha() != newAlpha)
 8002476:	f894 2036 	ldrb.w	r2, [r4, #54]	; 0x36
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 800247a:	4430      	add	r0, r6
 800247c:	b205      	sxth	r5, r0
                if (T::getAlpha() != newAlpha)
 800247e:	42aa      	cmp	r2, r5
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8002480:	b283      	uxth	r3, r0
                if (T::getAlpha() != newAlpha)
 8002482:	d005      	beq.n	8002490 <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv+0x54>
                {
                    if (newAlpha == 0)
 8002484:	bb2d      	cbnz	r5, 80024d2 <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv+0x96>
                    {
                        // InvalidateContent before it becomes invisible
                        T::invalidateContent();
 8002486:	4620      	mov	r0, r4
 8002488:	f008 fc3c 	bl	800ad04 <_ZNK8touchgfx8TextArea17invalidateContentEv>
        alpha = newAlpha;
 800248c:	f884 5036 	strb.w	r5, [r4, #54]	; 0x36
                        T::setAlpha((uint8_t)newAlpha);
                        T::invalidateContent();
                    }
                }

                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8002490:	f8b4 304c 	ldrh.w	r3, [r4, #76]	; 0x4c
 8002494:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 8002498:	f8b4 204a 	ldrh.w	r2, [r4, #74]	; 0x4a
 800249c:	440b      	add	r3, r1
 800249e:	429a      	cmp	r2, r3
 80024a0:	d31d      	bcc.n	80024de <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv+0xa2>
                {
                    // End of animation
                    fadeAnimationRunning = false;
 80024a2:	2300      	movs	r3, #0
 80024a4:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
                    fadeAnimationDuration = 0;
 80024a8:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
                    Application::getInstance()->unregisterTimerWidget(this);
 80024ac:	f00a fbca 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
     * @note If widget has been registered multiple times, an equal number of calls to unregister
     *       are required to stop widget from receiving tick events.
     */
    void unregisterTimerWidget(const Drawable* w)
    {
        timerWidgets.remove(w);
 80024b0:	4621      	mov	r1, r4
 80024b2:	3004      	adds	r0, #4
 80024b4:	f00a fbeb 	bl	800cc8e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>

                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 80024b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80024ba:	b180      	cbz	r0, 80024de <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv+0xa2>
 80024bc:	6803      	ldr	r3, [r0, #0]
 80024be:	68db      	ldr	r3, [r3, #12]
 80024c0:	4798      	blx	r3
 80024c2:	b160      	cbz	r0, 80024de <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv+0xa2>
                    {
                        fadeAnimationEndedCallback->execute(*this);
 80024c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80024c6:	6803      	ldr	r3, [r0, #0]
 80024c8:	4621      	mov	r1, r4
 80024ca:	689b      	ldr	r3, [r3, #8]
    }
 80024cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        fadeAnimationEndedCallback->execute(*this);
 80024d0:	4718      	bx	r3
                        T::setAlpha((uint8_t)newAlpha);
 80024d2:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
                        T::invalidateContent();
 80024d6:	4620      	mov	r0, r4
 80024d8:	f008 fc14 	bl	800ad04 <_ZNK8touchgfx8TextArea17invalidateContentEv>
 80024dc:	e7d8      	b.n	8002490 <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv+0x54>
    }
 80024de:	bd70      	pop	{r4, r5, r6, pc}

080024e0 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 80024e0:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
    virtual void handleTickEvent()
 80024e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80024e8:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d041      	beq.n	8002572 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv+0x92>
        {
            moveAnimationCounter++;
 80024ee:	8d43      	ldrh	r3, [r0, #42]	; 0x2a
            if (moveAnimationCounter >= moveAnimationDelay)
 80024f0:	8d85      	ldrh	r5, [r0, #44]	; 0x2c
            moveAnimationCounter++;
 80024f2:	3301      	adds	r3, #1
 80024f4:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 80024f6:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 80024f8:	8543      	strh	r3, [r0, #42]	; 0x2a
            if (moveAnimationCounter >= moveAnimationDelay)
 80024fa:	d33a      	bcc.n	8002572 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv+0x92>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 80024fc:	1b5b      	subs	r3, r3, r5
 80024fe:	8e82      	ldrh	r2, [r0, #52]	; 0x34
 8002500:	6b86      	ldr	r6, [r0, #56]	; 0x38
 8002502:	b29d      	uxth	r5, r3
 8002504:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002506:	1ad2      	subs	r2, r2, r3
 8002508:	b212      	sxth	r2, r2
 800250a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800250c:	2100      	movs	r1, #0
 800250e:	4628      	mov	r0, r5
 8002510:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8002512:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8002514:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002516:	6be7      	ldr	r7, [r4, #60]	; 0x3c
 8002518:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800251a:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 800251c:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800251e:	b212      	sxth	r2, r2
 8002520:	2100      	movs	r1, #0
 8002522:	4628      	mov	r0, r5
 8002524:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8002526:	8e62      	ldrh	r2, [r4, #50]	; 0x32
 8002528:	8e21      	ldrh	r1, [r4, #48]	; 0x30
 800252a:	4402      	add	r2, r0
 800252c:	4431      	add	r1, r6
 800252e:	b212      	sxth	r2, r2
 8002530:	b209      	sxth	r1, r1
 8002532:	4620      	mov	r0, r4
 8002534:	f7fe fdfd 	bl	8001132 <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 8002538:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 800253a:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800253c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800253e:	440b      	add	r3, r1
 8002540:	429a      	cmp	r2, r3
 8002542:	d316      	bcc.n	8002572 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv+0x92>
                {
                    // End of animation
                    moveAnimationRunning = false;
 8002544:	2300      	movs	r3, #0
 8002546:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
                    moveAnimationCounter = 0;
 800254a:	8563      	strh	r3, [r4, #42]	; 0x2a
                    Application::getInstance()->unregisterTimerWidget(this);
 800254c:	f00a fb7a 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
 8002550:	4621      	mov	r1, r4
 8002552:	3004      	adds	r0, #4
 8002554:	f00a fb9b 	bl	800cc8e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 8002558:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800255a:	b150      	cbz	r0, 8002572 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv+0x92>
 800255c:	6803      	ldr	r3, [r0, #0]
 800255e:	68db      	ldr	r3, [r3, #12]
 8002560:	4798      	blx	r3
 8002562:	b130      	cbz	r0, 8002572 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE15handleTickEventEv+0x92>
                    {
                        moveAnimationEndedCallback->execute(*this);
 8002564:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8002566:	6803      	ldr	r3, [r0, #0]
 8002568:	4621      	mov	r1, r4
 800256a:	689b      	ldr	r3, [r3, #8]
    }
 800256c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 8002570:	4718      	bx	r3
    }
 8002572:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002576 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002576:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002578:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800257a:	4604      	mov	r4, r0
        setX(x);
 800257c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800257e:	4615      	mov	r5, r2
        setX(x);
 8002580:	4798      	blx	r3
        setY(y);
 8002582:	6823      	ldr	r3, [r4, #0]
 8002584:	4629      	mov	r1, r5
 8002586:	4620      	mov	r0, r4
 8002588:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800258a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800258e:	4718      	bx	r3

08002590 <_ZN8touchgfx6WidgetC1Ev>:
 8002590:	2200      	movs	r2, #0
 8002592:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002596:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 800259a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800259e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80025a2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80025a6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80025a8:	4a01      	ldr	r2, [pc, #4]	; (80025b0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80025aa:	6002      	str	r2, [r0, #0]
 80025ac:	4770      	bx	lr
 80025ae:	bf00      	nop
 80025b0:	0801e4ec 	.word	0x0801e4ec

080025b4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 80025b4:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 80025b6:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 80025b8:	4604      	mov	r4, r0
 80025ba:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 80025bc:	2100      	movs	r1, #0
 80025be:	f01a f8ad 	bl	801c71c <memset>
 80025c2:	4620      	mov	r0, r4
 80025c4:	f7ff ffe4 	bl	8002590 <_ZN8touchgfx6WidgetC1Ev>
 80025c8:	4b06      	ldr	r3, [pc, #24]	; (80025e4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 80025ca:	6023      	str	r3, [r4, #0]
 80025cc:	882b      	ldrh	r3, [r5, #0]
 80025ce:	84e3      	strh	r3, [r4, #38]	; 0x26
 80025d0:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 80025d2:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 80025d4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 80025d8:	4629      	mov	r1, r5
 80025da:	f008 fe10 	bl	800b1fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80025de:	4620      	mov	r0, r4
 80025e0:	bd38      	pop	{r3, r4, r5, pc}
 80025e2:	bf00      	nop
 80025e4:	0801f438 	.word	0x0801f438

080025e8 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 80025e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025ec:	4604      	mov	r4, r0
 80025ee:	b089      	sub	sp, #36	; 0x24
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 80025f0:	4626      	mov	r6, r4
        : presenter(0)
 80025f2:	2500      	movs	r5, #0
 80025f4:	f00b fe48 	bl	800e288 <_ZN8touchgfx6ScreenC1Ev>
 80025f8:	4b79      	ldr	r3, [pc, #484]	; (80027e0 <_ZN12MainViewBaseC1Ev+0x1f8>)
 80025fa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025fc:	f846 3b40 	str.w	r3, [r6], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002600:	2226      	movs	r2, #38	; 0x26
 8002602:	4629      	mov	r1, r5
 8002604:	4630      	mov	r0, r6
 8002606:	f01a f889 	bl	801c71c <memset>
 800260a:	4630      	mov	r0, r6
 800260c:	f7ff ffc0 	bl	8002590 <_ZN8touchgfx6WidgetC1Ev>
 8002610:	4b74      	ldr	r3, [pc, #464]	; (80027e4 <_ZN12MainViewBaseC1Ev+0x1fc>)
 8002612:	6423      	str	r3, [r4, #64]	; 0x40
 8002614:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8002618:	23ff      	movs	r3, #255	; 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800261a:	f64f 78ff 	movw	r8, #65535	; 0xffff
 800261e:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 8002622:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8002626:	a906      	add	r1, sp, #24
        : color(col)
 8002628:	66a5      	str	r5, [r4, #104]	; 0x68
 800262a:	4658      	mov	r0, fp
 800262c:	f8ad 8018 	strh.w	r8, [sp, #24]
 8002630:	f7ff ffc0 	bl	80025b4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          moveAnimationEndedCallback(0)
 8002634:	a906      	add	r1, sp, #24
 8002636:	4650      	mov	r0, sl
 8002638:	f104 09dc 	add.w	r9, r4, #220	; 0xdc
 800263c:	f8ad 8018 	strh.w	r8, [sp, #24]
 8002640:	f7ff ffb8 	bl	80025b4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002644:	4b68      	ldr	r3, [pc, #416]	; (80027e8 <_ZN12MainViewBaseC1Ev+0x200>)
 8002646:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 800264a:	4629      	mov	r1, r5
 800264c:	2226      	movs	r2, #38	; 0x26
 800264e:	e9c4 5531 	strd	r5, r5, [r4, #196]	; 0xc4
 8002652:	e9c4 5533 	strd	r5, r5, [r4, #204]	; 0xcc
 8002656:	e9c4 5535 	strd	r5, r5, [r4, #212]	; 0xd4
 800265a:	f884 50c1 	strb.w	r5, [r4, #193]	; 0xc1
 800265e:	f8a4 50c2 	strh.w	r5, [r4, #194]	; 0xc2
 8002662:	4648      	mov	r0, r9
 8002664:	f01a f85a 	bl	801c71c <memset>
 8002668:	4648      	mov	r0, r9
 800266a:	f7ff ff91 	bl	8002590 <_ZN8touchgfx6WidgetC1Ev>
 800266e:	f504 7788 	add.w	r7, r4, #272	; 0x110
        touchable = touch;
 8002672:	2301      	movs	r3, #1
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002674:	495d      	ldr	r1, [pc, #372]	; (80027ec <_ZN12MainViewBaseC1Ev+0x204>)
 8002676:	f884 3100 	strb.w	r3, [r4, #256]	; 0x100
 800267a:	f8c4 10dc 	str.w	r1, [r4, #220]	; 0xdc
 800267e:	f8a4 810a 	strh.w	r8, [r4, #266]	; 0x10a
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002682:	4629      	mov	r1, r5
 8002684:	f8a4 810c 	strh.w	r8, [r4, #268]	; 0x10c
 8002688:	f884 810e 	strb.w	r8, [r4, #270]	; 0x10e
 800268c:	2226      	movs	r2, #38	; 0x26
 800268e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8002692:	f884 5108 	strb.w	r5, [r4, #264]	; 0x108
 8002696:	4638      	mov	r0, r7
 8002698:	f01a f840 	bl	801c71c <memset>
 800269c:	4638      	mov	r0, r7
 800269e:	f7ff ff77 	bl	8002590 <_ZN8touchgfx6WidgetC1Ev>
 80026a2:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80026a6:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
          fadeAnimationEndedCallback(0)
 80026aa:	4a51      	ldr	r2, [pc, #324]	; (80027f0 <_ZN12MainViewBaseC1Ev+0x208>)
 80026ac:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80026b0:	f04f 32ff 	mov.w	r2, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80026b4:	e9c4 2554 	strd	r2, r5, [r4, #336]	; 0x150
        : pobject(pObject), pmemfun(pmemfun_1)
 80026b8:	4a4e      	ldr	r2, [pc, #312]	; (80027f4 <_ZN12MainViewBaseC1Ev+0x20c>)
        : typedTextId(id)
 80026ba:	4b4f      	ldr	r3, [pc, #316]	; (80027f8 <_ZN12MainViewBaseC1Ev+0x210>)
 80026bc:	f8c4 3138 	str.w	r3, [r4, #312]	; 0x138
 80026c0:	e9c4 245b 	strd	r2, r4, [r4, #364]	; 0x16c
 80026c4:	4a4d      	ldr	r2, [pc, #308]	; (80027fc <_ZN12MainViewBaseC1Ev+0x214>)
 80026c6:	f8a4 813c 	strh.w	r8, [r4, #316]	; 0x13c
 80026ca:	e9c4 255d 	strd	r2, r5, [r4, #372]	; 0x174
        setXY(x, y);
 80026ce:	4629      	mov	r1, r5
 80026d0:	462a      	mov	r2, r5
 80026d2:	4630      	mov	r0, r6
        : color(col)
 80026d4:	f8c4 5140 	str.w	r5, [r4, #320]	; 0x140
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026d8:	f8a4 5148 	strh.w	r5, [r4, #328]	; 0x148
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80026dc:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 80026e0:	f884 5158 	strb.w	r5, [r4, #344]	; 0x158
 80026e4:	f8a4 515a 	strh.w	r5, [r4, #346]	; 0x15a
 80026e8:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
 80026ec:	f8c4 5168 	str.w	r5, [r4, #360]	; 0x168
 80026f0:	f7ff ff41 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80026f4:	4630      	mov	r0, r6
 80026f6:	21f0      	movs	r1, #240	; 0xf0
 80026f8:	f7fe fd12 	bl	8001120 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80026fc:	4630      	mov	r0, r6
 80026fe:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002702:	f7fe fd0f 	bl	8001124 <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002706:	f104 0804 	add.w	r8, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800270a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800270e:	66a2      	str	r2, [r4, #104]	; 0x68
 8002710:	4631      	mov	r1, r6
 8002712:	4640      	mov	r0, r8
 8002714:	f006 fef4 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8002718:	462a      	mov	r2, r5
 800271a:	4629      	mov	r1, r5
 800271c:	4658      	mov	r0, fp
 800271e:	f7ff ff2a 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
 8002722:	a906      	add	r1, sp, #24
 8002724:	4658      	mov	r0, fp
 8002726:	f8ad 5018 	strh.w	r5, [sp, #24]
 800272a:	f008 fd68 	bl	800b1fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800272e:	4659      	mov	r1, fp
 8002730:	4640      	mov	r0, r8
 8002732:	f006 fee5 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    touchgfxLogo.setXY(20, 135);
 8002736:	4650      	mov	r0, sl
 8002738:	2287      	movs	r2, #135	; 0x87
 800273a:	2114      	movs	r1, #20
 800273c:	f7ff ff1b 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
 8002740:	220d      	movs	r2, #13
    touchgfxLogo.setBitmap(touchgfx::Bitmap(BITMAP_TGFX_SHADOW_LOGO_ID));
 8002742:	a906      	add	r1, sp, #24
 8002744:	4650      	mov	r0, sl
 8002746:	f8ad 2018 	strh.w	r2, [sp, #24]
 800274a:	f008 fd58 	bl	800b1fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800274e:	4651      	mov	r1, sl
 8002750:	4640      	mov	r0, r8
 8002752:	f006 fed5 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gotoMenuButton.setXY(173, 265);
 8002756:	4648      	mov	r0, r9
 8002758:	f240 1209 	movw	r2, #265	; 0x109
 800275c:	21ad      	movs	r1, #173	; 0xad
 800275e:	f7ff ff0a 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
 8002762:	2301      	movs	r3, #1
    gotoMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_GOTOMENU_ID), touchgfx::Bitmap(BITMAP_GOTOMENU_ID));
 8002764:	aa06      	add	r2, sp, #24
 8002766:	a905      	add	r1, sp, #20
 8002768:	4648      	mov	r0, r9
 800276a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800276e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8002772:	f008 fc1c 	bl	800afae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002776:	2360      	movs	r3, #96	; 0x60
 8002778:	f884 310e 	strb.w	r3, [r4, #270]	; 0x10e
    gotoMenuButton.setAction(buttonCallback);
 800277c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002780:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8002784:	4649      	mov	r1, r9
 8002786:	4640      	mov	r0, r8
 8002788:	f006 feba 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    headline1.setXY(18, 93);
 800278c:	4638      	mov	r0, r7
 800278e:	225d      	movs	r2, #93	; 0x5d
 8002790:	2112      	movs	r1, #18
 8002792:	f7ff fef0 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002796:	466e      	mov	r6, sp
        color = newColor;
 8002798:	f04f 32ff 	mov.w	r2, #4294967295
 800279c:	f8c4 2140 	str.w	r2, [r4, #320]	; 0x140
        boundingArea = calculateBoundingArea();
 80027a0:	4639      	mov	r1, r7
 80027a2:	4630      	mov	r0, r6
        linespace = space;
 80027a4:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
        boundingArea = calculateBoundingArea();
 80027a8:	f008 f906 	bl	800a9b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80027ac:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80027b0:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
 80027b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80027b8:	4b0f      	ldr	r3, [pc, #60]	; (80027f8 <_ZN12MainViewBaseC1Ev+0x210>)
 80027ba:	9306      	str	r3, [sp, #24]
    headline1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GKCD));
 80027bc:	a906      	add	r1, sp, #24
 80027be:	2302      	movs	r3, #2
 80027c0:	4638      	mov	r0, r7
 80027c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80027c6:	f008 fb97 	bl	800aef8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80027ca:	4640      	mov	r0, r8
        alpha = newAlpha;
 80027cc:	f884 5146 	strb.w	r5, [r4, #326]	; 0x146
 80027d0:	4639      	mov	r1, r7
 80027d2:	f006 fe95 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80027d6:	4620      	mov	r0, r4
 80027d8:	b009      	add	sp, #36	; 0x24
 80027da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027de:	bf00      	nop
 80027e0:	0801e678 	.word	0x0801e678
 80027e4:	0801f35c 	.word	0x0801f35c
 80027e8:	0801e554 	.word	0x0801e554
 80027ec:	0801f3c4 	.word	0x0801f3c4
 80027f0:	0801e5c8 	.word	0x0801e5c8
 80027f4:	0801e660 	.word	0x0801e660
 80027f8:	0801dfd4 	.word	0x0801dfd4
 80027fc:	080023c1 	.word	0x080023c1

08002800 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_24_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_24_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_24_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_24_4bpp(glyphs_Asap_Regular_24_4bpp, 23, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_24_4bpp, kerning_Asap_Regular_24_4bpp, 63, 0, 0, 0);
 8002800:	4770      	bx	lr
	...

08002804 <_Z28getFont_Asap_Regular_24_4bppv>:
{
 8002804:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Asap_Regular_24_4bpp(glyphs_Asap_Regular_24_4bpp, 23, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_24_4bpp, kerning_Asap_Regular_24_4bpp, 63, 0, 0, 0);
 8002806:	4d16      	ldr	r5, [pc, #88]	; (8002860 <_Z28getFont_Asap_Regular_24_4bppv+0x5c>)
 8002808:	782c      	ldrb	r4, [r5, #0]
 800280a:	f3bf 8f5b 	dmb	ish
 800280e:	f014 0401 	ands.w	r4, r4, #1
{
 8002812:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont Asap_Regular_24_4bpp(glyphs_Asap_Regular_24_4bpp, 23, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_24_4bpp, kerning_Asap_Regular_24_4bpp, 63, 0, 0, 0);
 8002814:	d121      	bne.n	800285a <_Z28getFont_Asap_Regular_24_4bppv+0x56>
 8002816:	4628      	mov	r0, r5
 8002818:	f019 f926 	bl	801ba68 <__cxa_guard_acquire>
 800281c:	b1e8      	cbz	r0, 800285a <_Z28getFont_Asap_Regular_24_4bppv+0x56>
 800281e:	233f      	movs	r3, #63	; 0x3f
 8002820:	9309      	str	r3, [sp, #36]	; 0x24
 8002822:	4b10      	ldr	r3, [pc, #64]	; (8002864 <_Z28getFont_Asap_Regular_24_4bppv+0x60>)
 8002824:	9308      	str	r3, [sp, #32]
 8002826:	4b10      	ldr	r3, [pc, #64]	; (8002868 <_Z28getFont_Asap_Regular_24_4bppv+0x64>)
 8002828:	4910      	ldr	r1, [pc, #64]	; (800286c <_Z28getFont_Asap_Regular_24_4bppv+0x68>)
 800282a:	4811      	ldr	r0, [pc, #68]	; (8002870 <_Z28getFont_Asap_Regular_24_4bppv+0x6c>)
 800282c:	940a      	str	r4, [sp, #40]	; 0x28
 800282e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002832:	2201      	movs	r2, #1
 8002834:	2304      	movs	r3, #4
 8002836:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800283a:	2318      	movs	r3, #24
 800283c:	9300      	str	r3, [sp, #0]
 800283e:	2217      	movs	r2, #23
 8002840:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8002844:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002848:	9405      	str	r4, [sp, #20]
 800284a:	f7ff fcf7 	bl	800223c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800284e:	4809      	ldr	r0, [pc, #36]	; (8002874 <_Z28getFont_Asap_Regular_24_4bppv+0x70>)
 8002850:	f019 fef6 	bl	801c640 <atexit>
 8002854:	4628      	mov	r0, r5
 8002856:	f019 f913 	bl	801ba80 <__cxa_guard_release>
    return Asap_Regular_24_4bpp;
}
 800285a:	4805      	ldr	r0, [pc, #20]	; (8002870 <_Z28getFont_Asap_Regular_24_4bppv+0x6c>)
 800285c:	b00f      	add	sp, #60	; 0x3c
 800285e:	bd30      	pop	{r4, r5, pc}
 8002860:	20006964 	.word	0x20006964
 8002864:	08020edc 	.word	0x08020edc
 8002868:	08020ee4 	.word	0x08020ee4
 800286c:	08020cfc 	.word	0x08020cfc
 8002870:	20006968 	.word	0x20006968
 8002874:	08002801 	.word	0x08002801

08002878 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_32_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_32_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_32_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_32_4bpp(glyphs_Asap_Regular_32_4bpp, 11, 32, 32, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_32_4bpp, kerning_Asap_Regular_32_4bpp, 63, 0, 0, 0);
 8002878:	4770      	bx	lr
	...

0800287c <_Z28getFont_Asap_Regular_32_4bppv>:
{
 800287c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Asap_Regular_32_4bpp(glyphs_Asap_Regular_32_4bpp, 11, 32, 32, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_32_4bpp, kerning_Asap_Regular_32_4bpp, 63, 0, 0, 0);
 800287e:	4d16      	ldr	r5, [pc, #88]	; (80028d8 <_Z28getFont_Asap_Regular_32_4bppv+0x5c>)
 8002880:	782c      	ldrb	r4, [r5, #0]
 8002882:	f3bf 8f5b 	dmb	ish
 8002886:	f014 0401 	ands.w	r4, r4, #1
{
 800288a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont Asap_Regular_32_4bpp(glyphs_Asap_Regular_32_4bpp, 11, 32, 32, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_32_4bpp, kerning_Asap_Regular_32_4bpp, 63, 0, 0, 0);
 800288c:	d121      	bne.n	80028d2 <_Z28getFont_Asap_Regular_32_4bppv+0x56>
 800288e:	4628      	mov	r0, r5
 8002890:	f019 f8ea 	bl	801ba68 <__cxa_guard_acquire>
 8002894:	b1e8      	cbz	r0, 80028d2 <_Z28getFont_Asap_Regular_32_4bppv+0x56>
 8002896:	233f      	movs	r3, #63	; 0x3f
 8002898:	9309      	str	r3, [sp, #36]	; 0x24
 800289a:	4b10      	ldr	r3, [pc, #64]	; (80028dc <_Z28getFont_Asap_Regular_32_4bppv+0x60>)
 800289c:	9308      	str	r3, [sp, #32]
 800289e:	4b10      	ldr	r3, [pc, #64]	; (80028e0 <_Z28getFont_Asap_Regular_32_4bppv+0x64>)
 80028a0:	4910      	ldr	r1, [pc, #64]	; (80028e4 <_Z28getFont_Asap_Regular_32_4bppv+0x68>)
 80028a2:	4811      	ldr	r0, [pc, #68]	; (80028e8 <_Z28getFont_Asap_Regular_32_4bppv+0x6c>)
 80028a4:	940a      	str	r4, [sp, #40]	; 0x28
 80028a6:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80028aa:	2201      	movs	r2, #1
 80028ac:	2304      	movs	r3, #4
 80028ae:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80028b2:	2320      	movs	r3, #32
 80028b4:	9300      	str	r3, [sp, #0]
 80028b6:	220b      	movs	r2, #11
 80028b8:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80028bc:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80028c0:	9405      	str	r4, [sp, #20]
 80028c2:	f7ff fcbb 	bl	800223c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80028c6:	4809      	ldr	r0, [pc, #36]	; (80028ec <_Z28getFont_Asap_Regular_32_4bppv+0x70>)
 80028c8:	f019 feba 	bl	801c640 <atexit>
 80028cc:	4628      	mov	r0, r5
 80028ce:	f019 f8d7 	bl	801ba80 <__cxa_guard_release>
    return Asap_Regular_32_4bpp;
}
 80028d2:	4805      	ldr	r0, [pc, #20]	; (80028e8 <_Z28getFont_Asap_Regular_32_4bppv+0x6c>)
 80028d4:	b00f      	add	sp, #60	; 0x3c
 80028d6:	bd30      	pop	{r4, r5, pc}
 80028d8:	20006994 	.word	0x20006994
 80028dc:	08020ee0 	.word	0x08020ee0
 80028e0:	08020ee8 	.word	0x08020ee8
 80028e4:	08020e40 	.word	0x08020e40
 80028e8:	20006998 	.word	0x20006998
 80028ec:	08002879 	.word	0x08002879

080028f0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80028f0:	2000      	movs	r0, #0
 80028f2:	4770      	bx	lr

080028f4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80028f4:	2000      	movs	r0, #0
 80028f6:	4770      	bx	lr

080028f8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80028f8:	b40e      	push	{r1, r2, r3}
 80028fa:	b503      	push	{r0, r1, lr}
 80028fc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80028fe:	2100      	movs	r1, #0
{
 8002900:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002904:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002906:	f00b f901 	bl	800db0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800290a:	b002      	add	sp, #8
 800290c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002910:	b003      	add	sp, #12
 8002912:	4770      	bx	lr

08002914 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002914:	b40c      	push	{r2, r3}
 8002916:	b507      	push	{r0, r1, r2, lr}
 8002918:	ab04      	add	r3, sp, #16
 800291a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800291e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002920:	f00b f8f4 	bl	800db0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002924:	b003      	add	sp, #12
 8002926:	f85d eb04 	ldr.w	lr, [sp], #4
 800292a:	b002      	add	sp, #8
 800292c:	4770      	bx	lr
	...

08002930 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002930:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002932:	b510      	push	{r4, lr}
 8002934:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002936:	b373      	cbz	r3, 8002996 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002938:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800293a:	b92b      	cbnz	r3, 8002948 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800293c:	4b18      	ldr	r3, [pc, #96]	; (80029a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800293e:	4a19      	ldr	r2, [pc, #100]	; (80029a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002940:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002942:	4819      	ldr	r0, [pc, #100]	; (80029a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002944:	f019 fe5e 	bl	801c604 <__assert_func>
            return buffer[pos];
 8002948:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800294a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800294e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002950:	b30b      	cbz	r3, 8002996 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002952:	f00c fc26 	bl	800f1a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002956:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002958:	2b01      	cmp	r3, #1
 800295a:	d803      	bhi.n	8002964 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800295c:	4b13      	ldr	r3, [pc, #76]	; (80029ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800295e:	4a14      	ldr	r2, [pc, #80]	; (80029b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002960:	21cb      	movs	r1, #203	; 0xcb
 8002962:	e7ee      	b.n	8002942 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002964:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002966:	1c53      	adds	r3, r2, #1
 8002968:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800296a:	2b09      	cmp	r3, #9
 800296c:	4619      	mov	r1, r3
 800296e:	bf88      	it	hi
 8002970:	f1a3 010a 	subhi.w	r1, r3, #10
 8002974:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002978:	f640 103f 	movw	r0, #2367	; 0x93f
 800297c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800297e:	4281      	cmp	r1, r0
 8002980:	d109      	bne.n	8002996 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002982:	2b0a      	cmp	r3, #10
 8002984:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002988:	bf28      	it	cs
 800298a:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800298c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002990:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8002992:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002994:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002996:	4620      	mov	r0, r4
}
 8002998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800299c:	f00c bb04 	b.w	800efa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80029a0:	0801e6a8 	.word	0x0801e6a8
 80029a4:	0801e6b1 	.word	0x0801e6b1
 80029a8:	0801e75c 	.word	0x0801e75c
 80029ac:	0801e7a6 	.word	0x0801e7a6
 80029b0:	0801e7b4 	.word	0x0801e7b4

080029b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80029b4:	f00c babf 	b.w	800ef36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080029b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80029b8:	b510      	push	{r4, lr}
 80029ba:	b086      	sub	sp, #24
 80029bc:	ac02      	add	r4, sp, #8
 80029be:	e884 0006 	stmia.w	r4, {r1, r2}
 80029c2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80029c4:	ab0a      	add	r3, sp, #40	; 0x28
 80029c6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80029c8:	9301      	str	r3, [sp, #4]
 80029ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80029cc:	9300      	str	r3, [sp, #0]
 80029ce:	4621      	mov	r1, r4
 80029d0:	9b08      	ldr	r3, [sp, #32]
 80029d2:	f009 fcf5 	bl	800c3c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80029d6:	b006      	add	sp, #24
 80029d8:	bd10      	pop	{r4, pc}
	...

080029dc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80029dc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80029de:	bb18      	cbnz	r0, 8002a28 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80029e0:	4b12      	ldr	r3, [pc, #72]	; (8002a2c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80029e2:	4813      	ldr	r0, [pc, #76]	; (8002a30 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	4913      	ldr	r1, [pc, #76]	; (8002a34 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80029e8:	b1b3      	cbz	r3, 8002a18 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80029ea:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80029ec:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80029ee:	441a      	add	r2, r3
 80029f0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80029f2:	685a      	ldr	r2, [r3, #4]
 80029f4:	441a      	add	r2, r3
 80029f6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80029f8:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80029fa:	4b0f      	ldr	r3, [pc, #60]	; (8002a38 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80029fc:	2200      	movs	r2, #0
 80029fe:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002a00:	f000 f838 	bl	8002a74 <_ZN17TypedTextDatabase8getFontsEv>
 8002a04:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002a06:	f000 f833 	bl	8002a70 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002a0a:	4b0c      	ldr	r3, [pc, #48]	; (8002a3c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002a0c:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002a0e:	4b0c      	ldr	r3, [pc, #48]	; (8002a40 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002a10:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002a12:	4b0c      	ldr	r3, [pc, #48]	; (8002a44 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002a14:	8018      	strh	r0, [r3, #0]
    }
}
 8002a16:	e007      	b.n	8002a28 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002a18:	4b0b      	ldr	r3, [pc, #44]	; (8002a48 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002a1a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002a1c:	4b0b      	ldr	r3, [pc, #44]	; (8002a4c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002a1e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002a20:	4b0b      	ldr	r3, [pc, #44]	; (8002a50 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002a22:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002a24:	2c00      	cmp	r4, #0
 8002a26:	d1e8      	bne.n	80029fa <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002a28:	bd38      	pop	{r3, r4, r5, pc}
 8002a2a:	bf00      	nop
 8002a2c:	200069c4 	.word	0x200069c4
 8002a30:	200069c8 	.word	0x200069c8
 8002a34:	200069cc 	.word	0x200069cc
 8002a38:	200069d0 	.word	0x200069d0
 8002a3c:	200177a0 	.word	0x200177a0
 8002a40:	200177a8 	.word	0x200177a8
 8002a44:	200177a4 	.word	0x200177a4
 8002a48:	08020ef8 	.word	0x08020ef8
 8002a4c:	08020eec 	.word	0x08020eec
 8002a50:	08020f28 	.word	0x08020f28

08002a54 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002a54:	4b04      	ldr	r3, [pc, #16]	; (8002a68 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002a5c:	4b03      	ldr	r3, [pc, #12]	; (8002a6c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002a5e:	681b      	ldr	r3, [r3, #0]
}
 8002a60:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002a64:	4770      	bx	lr
 8002a66:	bf00      	nop
 8002a68:	200069cc 	.word	0x200069cc
 8002a6c:	200069c8 	.word	0x200069c8

08002a70 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002a70:	2003      	movs	r0, #3
 8002a72:	4770      	bx	lr

08002a74 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002a74:	4800      	ldr	r0, [pc, #0]	; (8002a78 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002a76:	4770      	bx	lr
 8002a78:	200069d4 	.word	0x200069d4

08002a7c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 1:
        touchgfx_fonts[1] = &(getFont_Asap_Regular_32_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002a7c:	b510      	push	{r4, lr}
    &(getFont_Asap_Regular_24_4bpp()),
 8002a7e:	f7ff fec1 	bl	8002804 <_Z28getFont_Asap_Regular_24_4bppv>
};
 8002a82:	4c03      	ldr	r4, [pc, #12]	; (8002a90 <_GLOBAL__sub_I_touchgfx_fonts+0x14>)
 8002a84:	6020      	str	r0, [r4, #0]
    &(getFont_Asap_Regular_32_4bpp())
 8002a86:	f7ff fef9 	bl	800287c <_Z28getFont_Asap_Regular_32_4bppv>
};
 8002a8a:	6060      	str	r0, [r4, #4]
} // namespace TypedTextDatabase
 8002a8c:	bd10      	pop	{r4, pc}
 8002a8e:	bf00      	nop
 8002a90:	200069d4 	.word	0x200069d4

08002a94 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
     * @return The type of this event.
     */
    virtual Event::EventType getEventType() const
    {
        return Event::EVENT_CLICK;
    }
 8002a94:	2000      	movs	r0, #0
 8002a96:	4770      	bx	lr

08002a98 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
     * @return The type of this event.
     */
    virtual Event::EventType getEventType() const
    {
        return Event::EVENT_DRAG;
    }
 8002a98:	2001      	movs	r0, #1
 8002a9a:	4770      	bx	lr

08002a9c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002a9c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002a9e:	4770      	bx	lr

08002aa0 <_ZN8touchgfx18ClickableContainerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~ClickableContainer() { }
 8002aa0:	4770      	bx	lr

08002aa2 <_ZN8touchgfx9DragEventD1Ev>:
class DragEvent : public Event
 8002aa2:	4770      	bx	lr

08002aa4 <_ZN8touchgfx10ClickEventD1Ev>:
class ClickEvent : public Event
 8002aa4:	4770      	bx	lr

08002aa6 <_ZN8touchgfx10ClickEventD0Ev>:
 8002aa6:	b510      	push	{r4, lr}
 8002aa8:	210c      	movs	r1, #12
 8002aaa:	4604      	mov	r4, r0
 8002aac:	f018 ffda 	bl	801ba64 <_ZdlPvj>
 8002ab0:	4620      	mov	r0, r4
 8002ab2:	bd10      	pop	{r4, pc}

08002ab4 <_ZN8touchgfx9DragEventD0Ev>:
 8002ab4:	b510      	push	{r4, lr}
 8002ab6:	2110      	movs	r1, #16
 8002ab8:	4604      	mov	r4, r0
 8002aba:	f018 ffd3 	bl	801ba64 <_ZdlPvj>
 8002abe:	4620      	mov	r0, r4
 8002ac0:	bd10      	pop	{r4, pc}

08002ac2 <_ZN8touchgfx18ClickableContainerD0Ev>:
 8002ac2:	b510      	push	{r4, lr}
 8002ac4:	214c      	movs	r1, #76	; 0x4c
 8002ac6:	4604      	mov	r4, r0
 8002ac8:	f018 ffcc 	bl	801ba64 <_ZdlPvj>
 8002acc:	4620      	mov	r0, r4
 8002ace:	bd10      	pop	{r4, pc}

08002ad0 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE>:
{
    setTouchable(true);
}

void ClickableContainer::handleClickEvent(const ClickEvent& evt)
{
 8002ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        return clickEventType;
 8002ad4:	790b      	ldrb	r3, [r1, #4]
 8002ad6:	b0a3      	sub	sp, #140	; 0x8c
 8002ad8:	4604      	mov	r4, r0
 8002ada:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED)
 8002adc:	2b00      	cmp	r3, #0
 8002ade:	f040 80ed 	bne.w	8002cbc <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x1ec>
        return fingerSize;
 8002ae2:	4a8e      	ldr	r2, [pc, #568]	; (8002d1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x24c>)
 8002ae4:	6812      	ldr	r2, [r2, #0]
 8002ae6:	f892 9049 	ldrb.w	r9, [r2, #73]	; 0x49
    {
        const int fingerSize = HAL::getInstance()->getFingerSize();
        fingerAdjustmentX = 0;
 8002aea:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
        fingerAdjustmentY = 0;

        const int minimumDistance = 3;
        if ((fingerSize - 1) >= minimumDistance)
 8002aee:	f1b9 0f03 	cmp.w	r9, #3
        fingerAdjustmentY = 0;
 8002af2:	f8a0 3048 	strh.w	r3, [r0, #72]	; 0x48
        if ((fingerSize - 1) >= minimumDistance)
 8002af6:	f340 80d8 	ble.w	8002caa <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x1da>
        {
            pressedDrawable = 0;

            const int maximumSquares = 3;
            const int numberOfSquares = MIN(maximumSquares, (fingerSize - 1) / minimumDistance);
 8002afa:	f1b9 0f0c 	cmp.w	r9, #12
            pressedDrawable = 0;
 8002afe:	6303      	str	r3, [r0, #48]	; 0x30
            const int numberOfSquares = MIN(maximumSquares, (fingerSize - 1) / minimumDistance);
 8002b00:	f04f 0303 	mov.w	r3, #3
 8002b04:	bfdc      	itt	le
 8002b06:	f109 32ff 	addle.w	r2, r9, #4294967295
 8002b0a:	fbb2 f3f3 	udivle	r3, r2, r3
 8002b0e:	9301      	str	r3, [sp, #4]
        return rect.width;
 8002b10:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8002b14:	9305      	str	r3, [sp, #20]
        return rect.height;
 8002b16:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8002b1a:	9304      	str	r3, [sp, #16]
            uint32_t bestDistance = 0xFFFFFFFF;
            Drawable* last = 0;

            Rect me(0, 0, getWidth(), getHeight());
            Rect meAbs = me;
 8002b1c:	9b05      	ldr	r3, [sp, #20]
 8002b1e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b22:	9b04      	ldr	r3, [sp, #16]
 8002b24:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
            translateRectToAbsolute(meAbs);
 8002b28:	6803      	ldr	r3, [r0, #0]
            Rect meAbs = me;
 8002b2a:	2600      	movs	r6, #0
            translateRectToAbsolute(meAbs);
 8002b2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            Rect meAbs = me;
 8002b2e:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002b32:	f8ad 602a 	strh.w	r6, [sp, #42]	; 0x2a
            translateRectToAbsolute(meAbs);
 8002b36:	a90a      	add	r1, sp, #40	; 0x28
 8002b38:	4798      	blx	r3
            uint32_t bestDistance = 0xFFFFFFFF;
 8002b3a:	f04f 33ff 	mov.w	r3, #4294967295
            translateRectToAbsolute(meAbs);
 8002b3e:	46ca      	mov	sl, r9

            for (int squareNumber = 1; squareNumber <= numberOfSquares; squareNumber++)
 8002b40:	f04f 0801 	mov.w	r8, #1
            uint32_t bestDistance = 0xFFFFFFFF;
 8002b44:	9303      	str	r3, [sp, #12]
            {
                int distance = ((squareNumber * fingerSize) / numberOfSquares);
                const int samplePoints[10][2] = { { 0, 0 }, { -1, -1 }, { 0, -1 }, { 1, -1 }, { -1, 0 }, { 0, 0 }, { 1, 0 }, { -1, 1 }, { 0, 1 }, { 1, 1 } };
 8002b46:	4976      	ldr	r1, [pc, #472]	; (8002d20 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x250>)
                int distance = ((squareNumber * fingerSize) / numberOfSquares);
 8002b48:	9b01      	ldr	r3, [sp, #4]
 8002b4a:	fbba f3f3 	udiv	r3, sl, r3
                const int samplePoints[10][2] = { { 0, 0 }, { -1, -1 }, { 0, -1 }, { 1, -1 }, { -1, 0 }, { 0, 0 }, { 1, 0 }, { -1, 1 }, { 0, 1 }, { 1, 1 } };
 8002b4e:	2250      	movs	r2, #80	; 0x50
 8002b50:	a80e      	add	r0, sp, #56	; 0x38
                int distance = ((squareNumber * fingerSize) / numberOfSquares);
 8002b52:	9302      	str	r3, [sp, #8]
                const int samplePoints[10][2] = { { 0, 0 }, { -1, -1 }, { 0, -1 }, { 1, -1 }, { -1, 0 }, { 0, 0 }, { 1, 0 }, { -1, 1 }, { 0, 1 }, { 1, 1 } };
 8002b54:	f019 fdd4 	bl	801c700 <memcpy>

                for (int sampleIndex = squareNumber - 1; sampleIndex < 10; sampleIndex += 2)
 8002b58:	ab0e      	add	r3, sp, #56	; 0x38
 8002b5a:	eb03 07c8 	add.w	r7, r3, r8, lsl #3
                {
                    Drawable* d = 0;
                    int16_t deltaX = samplePoints[sampleIndex][0] * distance;
 8002b5e:	9b02      	ldr	r3, [sp, #8]
 8002b60:	b29b      	uxth	r3, r3
 8002b62:	f108 3bff 	add.w	fp, r8, #4294967295
 8002b66:	9302      	str	r3, [sp, #8]
                    Drawable* d = 0;
 8002b68:	2300      	movs	r3, #0
                    int16_t deltaX = samplePoints[sampleIndex][0] * distance;
 8002b6a:	f857 1c08 	ldr.w	r1, [r7, #-8]
                    Drawable* d = 0;
 8002b6e:	9309      	str	r3, [sp, #36]	; 0x24
                    int16_t deltaX = samplePoints[sampleIndex][0] * distance;
 8002b70:	9b02      	ldr	r3, [sp, #8]
 8002b72:	fb11 f103 	smulbb	r1, r1, r3
 8002b76:	b28b      	uxth	r3, r1
 8002b78:	9306      	str	r3, [sp, #24]
                    int16_t deltaY = samplePoints[sampleIndex][1] * distance;
                    if (me.intersect(evt.getX() + deltaX, evt.getY() + deltaY))
 8002b7a:	88eb      	ldrh	r3, [r5, #6]
 8002b7c:	fa13 f181 	uxtah	r1, r3, r1
 8002b80:	b209      	sxth	r1, r1
     *
     * @return true if point lies inside rectangle.
     */
    bool intersect(int16_t otherX, int16_t otherY) const
    {
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 8002b82:	2900      	cmp	r1, #0
 8002b84:	db4a      	blt.n	8002c1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x14c>
 8002b86:	9b05      	ldr	r3, [sp, #20]
 8002b88:	4299      	cmp	r1, r3
 8002b8a:	da47      	bge.n	8002c1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x14c>
                    int16_t deltaY = samplePoints[sampleIndex][1] * distance;
 8002b8c:	9b02      	ldr	r3, [sp, #8]
 8002b8e:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8002b92:	fb12 f203 	smulbb	r2, r2, r3
 8002b96:	b293      	uxth	r3, r2
 8002b98:	9307      	str	r3, [sp, #28]
                    if (me.intersect(evt.getX() + deltaX, evt.getY() + deltaY))
 8002b9a:	892b      	ldrh	r3, [r5, #8]
 8002b9c:	fa13 f282 	uxtah	r2, r3, r2
 8002ba0:	b212      	sxth	r2, r2
 8002ba2:	2a00      	cmp	r2, #0
 8002ba4:	db3a      	blt.n	8002c1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x14c>
 8002ba6:	9b04      	ldr	r3, [sp, #16]
 8002ba8:	429a      	cmp	r2, r3
 8002baa:	da37      	bge.n	8002c1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x14c>
                    {
                        Container::getLastChild(evt.getX() + deltaX, evt.getY() + deltaY, &d);
 8002bac:	ab09      	add	r3, sp, #36	; 0x24
 8002bae:	4620      	mov	r0, r4
 8002bb0:	f006 fd18 	bl	80095e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
                        if (d && d != last && d != this)
 8002bb4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002bb6:	b389      	cbz	r1, 8002c1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x14c>
 8002bb8:	42b1      	cmp	r1, r6
 8002bba:	d02f      	beq.n	8002c1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x14c>
 8002bbc:	42a1      	cmp	r1, r4
 8002bbe:	d02d      	beq.n	8002c1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x14c>
                        {
                            Rect absRect = d->getAbsoluteRect();
 8002bc0:	a80c      	add	r0, sp, #48	; 0x30
 8002bc2:	f00b f969 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                            int x = meAbs.x + evt.getX() - (absRect.x + (absRect.width / 2));
 8002bc6:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8002bca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8002bce:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
                            int y = meAbs.y + evt.getY() - (absRect.y + (absRect.height / 2));
 8002bd2:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
                            int x = meAbs.x + evt.getX() - (absRect.x + (absRect.width / 2));
 8002bd6:	4413      	add	r3, r2
 8002bd8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8002bdc:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002be0:	eb02 0161 	add.w	r1, r2, r1, asr #1
 8002be4:	1a5a      	subs	r2, r3, r1
                            int y = meAbs.y + evt.getY() - (absRect.y + (absRect.height / 2));
 8002be6:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8002bea:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8002bee:	440b      	add	r3, r1
 8002bf0:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	; 0x36
 8002bf4:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002bf8:	eb00 0161 	add.w	r1, r0, r1, asr #1
 8002bfc:	1a5b      	subs	r3, r3, r1
                            uint32_t dist = x * x + y * y;
 8002bfe:	435b      	muls	r3, r3
 8002c00:	fb02 3302 	mla	r3, r2, r2, r3
                            if (dist < bestDistance)
 8002c04:	9a03      	ldr	r2, [sp, #12]
 8002c06:	4293      	cmp	r3, r2
 8002c08:	d208      	bcs.n	8002c1c <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x14c>
                            {
                                last = d;
                                bestDistance = dist;
                                pressedDrawable = d;
                                fingerAdjustmentX = deltaX;
 8002c0a:	9a06      	ldr	r2, [sp, #24]
                                last = d;
 8002c0c:	9e09      	ldr	r6, [sp, #36]	; 0x24
                                fingerAdjustmentX = deltaX;
 8002c0e:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
                                fingerAdjustmentY = deltaY;
 8002c12:	9a07      	ldr	r2, [sp, #28]
                                pressedDrawable = d;
 8002c14:	6326      	str	r6, [r4, #48]	; 0x30
                                fingerAdjustmentY = deltaY;
 8002c16:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 8002c1a:	9303      	str	r3, [sp, #12]
                for (int sampleIndex = squareNumber - 1; sampleIndex < 10; sampleIndex += 2)
 8002c1c:	f10b 0b02 	add.w	fp, fp, #2
 8002c20:	f1bb 0f09 	cmp.w	fp, #9
 8002c24:	f107 0710 	add.w	r7, r7, #16
 8002c28:	dd9e      	ble.n	8002b68 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x98>
            for (int squareNumber = 1; squareNumber <= numberOfSquares; squareNumber++)
 8002c2a:	9b01      	ldr	r3, [sp, #4]
 8002c2c:	f108 0801 	add.w	r8, r8, #1
 8002c30:	4543      	cmp	r3, r8
 8002c32:	44ca      	add	sl, r9
 8002c34:	da87      	bge.n	8002b46 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x76>
        else
        {
            Container::getLastChild(evt.getX(), evt.getY(), &pressedDrawable);
        }

        if (pressedDrawable == this)
 8002c36:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002c38:	42a3      	cmp	r3, r4
        {
            pressedDrawable = 0;
 8002c3a:	bf04      	itt	eq
 8002c3c:	2300      	moveq	r3, #0
 8002c3e:	6323      	streq	r3, [r4, #48]	; 0x30
        }

        if (pressedDrawable)
 8002c40:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002c42:	2900      	cmp	r1, #0
 8002c44:	d02e      	beq.n	8002ca4 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x1d4>
        {
            hasIssuedCancelEvent = false;
            pressedX = evt.getX();
 8002c46:	88eb      	ldrh	r3, [r5, #6]
 8002c48:	87e3      	strh	r3, [r4, #62]	; 0x3e
            hasIssuedCancelEvent = false;
 8002c4a:	2600      	movs	r6, #0
            pressedY = evt.getY();
 8002c4c:	892b      	ldrh	r3, [r5, #8]
 8002c4e:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
            Rect r = pressedDrawable->getAbsoluteRect();
 8002c52:	a80c      	add	r0, sp, #48	; 0x30
            hasIssuedCancelEvent = false;
 8002c54:	f884 604a 	strb.w	r6, [r4, #74]	; 0x4a
            Rect r = pressedDrawable->getAbsoluteRect();
 8002c58:	f00b f91e 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            ClickEvent relative(evt.getType(), evt.getX() + rect.x + fingerAdjustmentX - r.x, evt.getY() + rect.y + fingerAdjustmentY - r.y);
 8002c5c:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8002c60:	88a2      	ldrh	r2, [r4, #4]
 8002c62:	f8b4 0048 	ldrh.w	r0, [r4, #72]	; 0x48
 8002c66:	7929      	ldrb	r1, [r5, #4]
        : clickEventType(type), clickX(x), clickY(y), clickForce(force)
 8002c68:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 8002c6c:	441a      	add	r2, r3
 8002c6e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8002c72:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 8002c76:	1ad2      	subs	r2, r2, r3
 8002c78:	88eb      	ldrh	r3, [r5, #6]
 8002c7a:	441a      	add	r2, r3
 8002c7c:	88e3      	ldrh	r3, [r4, #6]
 8002c7e:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 8002c82:	4403      	add	r3, r0
 8002c84:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 8002c88:	1a1b      	subs	r3, r3, r0
 8002c8a:	8928      	ldrh	r0, [r5, #8]
 8002c8c:	4403      	add	r3, r0
 8002c8e:	4825      	ldr	r0, [pc, #148]	; (8002d24 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x254>)
 8002c90:	900e      	str	r0, [sp, #56]	; 0x38
            pressedDrawable->handleClickEvent(relative);
 8002c92:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002c94:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 8002c98:	6803      	ldr	r3, [r0, #0]
 8002c9a:	a90e      	add	r1, sp, #56	; 0x38
 8002c9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c9e:	4798      	blx	r3
            lastDraggableChild = pressedDrawable;
 8002ca0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002ca2:	6363      	str	r3, [r4, #52]	; 0x34

        pressedDrawable = 0;
        lastDraggableChild = 0;
        isPressed = false;
    }
}
 8002ca4:	b023      	add	sp, #140	; 0x8c
 8002ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            Container::getLastChild(evt.getX(), evt.getY(), &pressedDrawable);
 8002caa:	f9b1 2008 	ldrsh.w	r2, [r1, #8]
 8002cae:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8002cb2:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8002cb6:	f006 fc95 	bl	80095e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8002cba:	e7bc      	b.n	8002c36 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x166>
    else if (evt.getType() == ClickEvent::CANCEL)
 8002cbc:	2b02      	cmp	r3, #2
 8002cbe:	d0f1      	beq.n	8002ca4 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x1d4>
        if (pressedDrawable)
 8002cc0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8002cc2:	b329      	cbz	r1, 8002d10 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x240>
            Rect r = pressedDrawable->getAbsoluteRect();
 8002cc4:	a80c      	add	r0, sp, #48	; 0x30
 8002cc6:	f00b f8e7 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            ClickEvent relative(evt.getType(), evt.getX() + rect.x + fingerAdjustmentX - r.x, evt.getY() + rect.y + fingerAdjustmentY - r.y);
 8002cca:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8002cce:	88a2      	ldrh	r2, [r4, #4]
 8002cd0:	f8b4 0048 	ldrh.w	r0, [r4, #72]	; 0x48
        return clickEventType;
 8002cd4:	7929      	ldrb	r1, [r5, #4]
        : clickEventType(type), clickX(x), clickY(y), clickForce(force)
 8002cd6:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 8002cda:	441a      	add	r2, r3
 8002cdc:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8002ce0:	1ad2      	subs	r2, r2, r3
 8002ce2:	88eb      	ldrh	r3, [r5, #6]
 8002ce4:	441a      	add	r2, r3
 8002ce6:	88e3      	ldrh	r3, [r4, #6]
 8002ce8:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 8002cec:	4403      	add	r3, r0
 8002cee:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 8002cf2:	1a1b      	subs	r3, r3, r0
 8002cf4:	8928      	ldrh	r0, [r5, #8]
 8002cf6:	4403      	add	r3, r0
 8002cf8:	480a      	ldr	r0, [pc, #40]	; (8002d24 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x254>)
 8002cfa:	900e      	str	r0, [sp, #56]	; 0x38
            pressedDrawable->handleClickEvent(relative);
 8002cfc:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002cfe:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 8002d02:	2300      	movs	r3, #0
 8002d04:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8002d08:	6803      	ldr	r3, [r0, #0]
 8002d0a:	a90e      	add	r1, sp, #56	; 0x38
 8002d0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002d0e:	4798      	blx	r3
        pressedDrawable = 0;
 8002d10:	2300      	movs	r3, #0
        lastDraggableChild = 0;
 8002d12:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
        isPressed = false;
 8002d16:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002d1a:	e7c3      	b.n	8002ca4 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE+0x1d4>
 8002d1c:	20017750 	.word	0x20017750
 8002d20:	0801d77c 	.word	0x0801d77c
 8002d24:	0801e890 	.word	0x0801e890

08002d28 <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE>:
        hasIssuedCancelEvent = true;
    }
}

void ClickableContainer::handleGestureEvent(const GestureEvent& evt)
{
 8002d28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    if ((!draggableX && (evt.getType() == GestureEvent::SWIPE_HORIZONTAL)) ||
 8002d2a:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
{
 8002d2e:	4604      	mov	r4, r0
    if ((!draggableX && (evt.getType() == GestureEvent::SWIPE_HORIZONTAL)) ||
 8002d30:	b90b      	cbnz	r3, 8002d36 <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE+0xe>
 8002d32:	790b      	ldrb	r3, [r1, #4]
 8002d34:	b12b      	cbz	r3, 8002d42 <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE+0x1a>
 8002d36:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8002d3a:	b9b3      	cbnz	r3, 8002d6a <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE+0x42>
            (!draggableY && (evt.getType() == GestureEvent::SWIPE_VERTICAL)))
 8002d3c:	790b      	ldrb	r3, [r1, #4]
 8002d3e:	2b01      	cmp	r3, #1
 8002d40:	d113      	bne.n	8002d6a <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE+0x42>
    {
        if (pressedDrawable && !hasIssuedCancelEvent)
 8002d42:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002d44:	b188      	cbz	r0, 8002d6a <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE+0x42>
 8002d46:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8002d4a:	b973      	cbnz	r3, 8002d6a <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE+0x42>
 8002d4c:	4a08      	ldr	r2, [pc, #32]	; (8002d70 <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE+0x48>)
 8002d4e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8002d52:	9303      	str	r3, [sp, #12]
        {
            ClickEvent ce(ClickEvent::CANCEL, 0, 0);
            pressedDrawable->handleClickEvent(ce);
 8002d54:	6803      	ldr	r3, [r0, #0]
 8002d56:	9201      	str	r2, [sp, #4]
 8002d58:	2202      	movs	r2, #2
 8002d5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002d5c:	f88d 2008 	strb.w	r2, [sp, #8]
 8002d60:	a901      	add	r1, sp, #4
 8002d62:	4798      	blx	r3
            hasIssuedCancelEvent = true;
 8002d64:	2301      	movs	r3, #1
 8002d66:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
        }
    }
}
 8002d6a:	b004      	add	sp, #16
 8002d6c:	bd10      	pop	{r4, pc}
 8002d6e:	bf00      	nop
 8002d70:	0801e890 	.word	0x0801e890

08002d74 <_ZN8touchgfx18ClickableContainer12getLastChildEssPPNS_8DrawableE>:
     * @param x          The x coordinate of the (click) event.
     * @param y          The y coordinate of the (click) event.
     * @param [out] last The last child intersecting x,y. ClickableContainer intercepts these, so
     *                   returns it self.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 8002d74:	b470      	push	{r4, r5, r6}
    {
        if (isVisible())
 8002d76:	f890 6025 	ldrb.w	r6, [r0, #37]	; 0x25
 8002d7a:	b11e      	cbz	r6, 8002d84 <_ZN8touchgfx18ClickableContainer12getLastChildEssPPNS_8DrawableE+0x10>
        {
            if (isTouchable())
 8002d7c:	f890 6024 	ldrb.w	r6, [r0, #36]	; 0x24
 8002d80:	b116      	cbz	r6, 8002d88 <_ZN8touchgfx18ClickableContainer12getLastChildEssPPNS_8DrawableE+0x14>
            {
                *last = this;
 8002d82:	6018      	str	r0, [r3, #0]
            else
            {
                Container::getLastChild(x, y, last);
            }
        }
    }
 8002d84:	bc70      	pop	{r4, r5, r6}
 8002d86:	4770      	bx	lr
 8002d88:	bc70      	pop	{r4, r5, r6}
                Container::getLastChild(x, y, last);
 8002d8a:	f006 bc2b 	b.w	80095e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
	...

08002d90 <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE>:
{
 8002d90:	b570      	push	{r4, r5, r6, lr}
 8002d92:	460d      	mov	r5, r1
    if ((pressedDrawable != 0) && (pressedDrawable != this))
 8002d94:	6b01      	ldr	r1, [r0, #48]	; 0x30
{
 8002d96:	b086      	sub	sp, #24
 8002d98:	4604      	mov	r4, r0
    if ((pressedDrawable != 0) && (pressedDrawable != this))
 8002d9a:	2900      	cmp	r1, #0
 8002d9c:	d036      	beq.n	8002e0c <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE+0x7c>
 8002d9e:	4281      	cmp	r1, r0
 8002da0:	d034      	beq.n	8002e0c <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE+0x7c>
        if (draggableX || draggableY)
 8002da2:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 8002da6:	b913      	cbnz	r3, 8002dae <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE+0x1e>
 8002da8:	f890 3045 	ldrb.w	r3, [r0, #69]	; 0x45
 8002dac:	b373      	cbz	r3, 8002e0c <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE+0x7c>
            Rect r = pressedDrawable->getAbsoluteRect();
 8002dae:	4668      	mov	r0, sp
 8002db0:	f00b f872 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
        return dragNewY;
 8002db4:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8002db8:	88a2      	ldrh	r2, [r4, #4]
 8002dba:	f8b4 1048 	ldrh.w	r1, [r4, #72]	; 0x48
                               evt.getOldX() + rect.x + fingerAdjustmentX - r.x,
 8002dbe:	88e8      	ldrh	r0, [r5, #6]
                               evt.getNewX() + rect.x + fingerAdjustmentX - r.x,
 8002dc0:	896e      	ldrh	r6, [r5, #10]
 8002dc2:	441a      	add	r2, r3
 8002dc4:	f8bd 3000 	ldrh.w	r3, [sp]
 8002dc8:	1ad2      	subs	r2, r2, r3
 8002dca:	88e3      	ldrh	r3, [r4, #6]
 8002dcc:	440b      	add	r3, r1
 8002dce:	f8bd 1002 	ldrh.w	r1, [sp, #2]
                               evt.getOldX() + rect.x + fingerAdjustmentX - r.x,
 8002dd2:	fa10 f082 	uxtah	r0, r0, r2
 8002dd6:	1a5b      	subs	r3, r3, r1
                               evt.getOldY() + rect.y + fingerAdjustmentY - r.y,
 8002dd8:	8929      	ldrh	r1, [r5, #8]
                               evt.getNewY() + rect.y + fingerAdjustmentY - r.y);
 8002dda:	89ad      	ldrh	r5, [r5, #12]
        : dragEventType(type), dragOldX(oldX), dragOldY(oldY), dragNewX(newX), dragNewY(newY)
 8002ddc:	f8ad 000e 	strh.w	r0, [sp, #14]
            pressedDrawable->handleDragEvent(relative);
 8002de0:	6b20      	ldr	r0, [r4, #48]	; 0x30
                               evt.getOldY() + rect.y + fingerAdjustmentY - r.y,
 8002de2:	fa11 f183 	uxtah	r1, r1, r3
                               evt.getNewY() + rect.y + fingerAdjustmentY - r.y);
 8002de6:	fa15 f383 	uxtah	r3, r5, r3
 8002dea:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002dee:	4d12      	ldr	r5, [pc, #72]	; (8002e38 <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE+0xa8>)
            pressedDrawable->handleDragEvent(relative);
 8002df0:	6803      	ldr	r3, [r0, #0]
 8002df2:	9502      	str	r5, [sp, #8]
                               evt.getNewX() + rect.x + fingerAdjustmentX - r.x,
 8002df4:	fa16 f282 	uxtah	r2, r6, r2
 8002df8:	2500      	movs	r5, #0
 8002dfa:	f8ad 1010 	strh.w	r1, [sp, #16]
            pressedDrawable->handleDragEvent(relative);
 8002dfe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002e00:	f88d 500c 	strb.w	r5, [sp, #12]
 8002e04:	f8ad 2012 	strh.w	r2, [sp, #18]
 8002e08:	a902      	add	r1, sp, #8
 8002e0a:	4798      	blx	r3
    if (pressedDrawable && !hasIssuedCancelEvent)
 8002e0c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002e0e:	b188      	cbz	r0, 8002e34 <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE+0xa4>
 8002e10:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8002e14:	b973      	cbnz	r3, 8002e34 <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE+0xa4>
 8002e16:	4a09      	ldr	r2, [pc, #36]	; (8002e3c <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE+0xac>)
 8002e18:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002e1c:	9304      	str	r3, [sp, #16]
        pressedDrawable->handleClickEvent(ce);
 8002e1e:	6803      	ldr	r3, [r0, #0]
 8002e20:	9202      	str	r2, [sp, #8]
 8002e22:	2202      	movs	r2, #2
 8002e24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002e26:	f88d 200c 	strb.w	r2, [sp, #12]
 8002e2a:	a902      	add	r1, sp, #8
 8002e2c:	4798      	blx	r3
        hasIssuedCancelEvent = true;
 8002e2e:	2301      	movs	r3, #1
 8002e30:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8002e34:	b006      	add	sp, #24
 8002e36:	bd70      	pop	{r4, r5, r6, pc}
 8002e38:	0801e8a4 	.word	0x0801e8a4
 8002e3c:	0801e890 	.word	0x0801e890

08002e40 <_ZN8touchgfx18ClickableContainerC1Ev>:
      hasIssuedCancelEvent(false)
 8002e40:	490e      	ldr	r1, [pc, #56]	; (8002e7c <_ZN8touchgfx18ClickableContainerC1Ev+0x3c>)
 8002e42:	6001      	str	r1, [r0, #0]
          firstChild(0)
 8002e44:	2200      	movs	r2, #0
 8002e46:	2105      	movs	r1, #5
 8002e48:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8002e4c:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
 8002e50:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002e54:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002e58:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002e5c:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002e60:	6282      	str	r2, [r0, #40]	; 0x28
 8002e62:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8002e66:	6382      	str	r2, [r0, #56]	; 0x38
 8002e68:	6442      	str	r2, [r0, #68]	; 0x44
 8002e6a:	f8a0 2048 	strh.w	r2, [r0, #72]	; 0x48
 8002e6e:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
        touchable = touch;
 8002e72:	f240 1201 	movw	r2, #257	; 0x101
 8002e76:	8482      	strh	r2, [r0, #36]	; 0x24
}
 8002e78:	4770      	bx	lr
 8002e7a:	bf00      	nop
 8002e7c:	0801e8b8 	.word	0x0801e8b8

08002e80 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002e80:	4770      	bx	lr

08002e82 <_ZN19FrontendApplicationD0Ev>:
 8002e82:	b510      	push	{r4, lr}
 8002e84:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002e88:	4604      	mov	r4, r0
 8002e8a:	f018 fdeb 	bl	801ba64 <_ZdlPvj>
 8002e8e:	4620      	mov	r0, r4
 8002e90:	bd10      	pop	{r4, pc}

08002e92 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002e92:	b510      	push	{r4, lr}
 8002e94:	4604      	mov	r4, r0
    {
        model.tick();
 8002e96:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8002e9a:	f000 facd 	bl	8003438 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002e9e:	4620      	mov	r0, r4
    }
 8002ea0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002ea4:	f009 bf6a 	b.w	800cd7c <_ZN8touchgfx11Application15handleTickEventEv>

08002ea8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002ea8:	b510      	push	{r4, lr}
 8002eaa:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002eac:	f7ff f954 	bl	8002158 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002eb0:	4b01      	ldr	r3, [pc, #4]	; (8002eb8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002eb2:	6023      	str	r3, [r4, #0]
{
}
 8002eb4:	4620      	mov	r0, r4
 8002eb6:	bd10      	pop	{r4, pc}
 8002eb8:	0801e948 	.word	0x0801e948

08002ebc <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 8002ebc:	4770      	bx	lr

08002ebe <_ZThn4_N13MainPresenterD1Ev>:
 8002ebe:	3804      	subs	r0, #4
 8002ec0:	4770      	bx	lr

08002ec2 <_ZN13MainPresenter10deactivateEv>:
{
}

void MainPresenter::activate()
{
}
 8002ec2:	4770      	bx	lr

08002ec4 <_ZN13MainPresenterD0Ev>:
 8002ec4:	b510      	push	{r4, lr}
 8002ec6:	2110      	movs	r1, #16
 8002ec8:	4604      	mov	r4, r0
 8002eca:	f018 fdcb 	bl	801ba64 <_ZdlPvj>
 8002ece:	4620      	mov	r0, r4
 8002ed0:	bd10      	pop	{r4, pc}

08002ed2 <_ZThn4_N13MainPresenterD0Ev>:
 8002ed2:	f1a0 0004 	sub.w	r0, r0, #4
 8002ed6:	e7f5      	b.n	8002ec4 <_ZN13MainPresenterD0Ev>

08002ed8 <_ZN13MainPresenterC1ER8MainView>:
MainPresenter::MainPresenter(MainView& v)
 8002ed8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002eda:	2200      	movs	r2, #0
 8002edc:	6082      	str	r2, [r0, #8]
    : view(v)
 8002ede:	4a04      	ldr	r2, [pc, #16]	; (8002ef0 <_ZN13MainPresenterC1ER8MainView+0x18>)
 8002ee0:	60c1      	str	r1, [r0, #12]
 8002ee2:	f102 0408 	add.w	r4, r2, #8
 8002ee6:	3220      	adds	r2, #32
 8002ee8:	6004      	str	r4, [r0, #0]
 8002eea:	6042      	str	r2, [r0, #4]
}
 8002eec:	bd10      	pop	{r4, pc}
 8002eee:	bf00      	nop
 8002ef0:	0801e98c 	.word	0x0801e98c

08002ef4 <_ZN8MainView14tearDownScreenEv>:
    particleEffect.setNumberOfParticles(numberOfParticles);
}

void MainView::tearDownScreen()
{
}
 8002ef4:	4770      	bx	lr
	...

08002ef8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~SparseContainerItems() {}
 8002ef8:	b538      	push	{r3, r4, r5, lr}
 8002efa:	4b07      	ldr	r3, [pc, #28]	; (8002f18 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED1Ev+0x20>)
 8002efc:	6003      	str	r3, [r0, #0]
 8002efe:	4604      	mov	r4, r0
 8002f00:	f44f 6595 	mov.w	r5, #1192	; 0x4a8
 8002f04:	5963      	ldr	r3, [r4, r5]
 8002f06:	1960      	adds	r0, r4, r5
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	3d84      	subs	r5, #132	; 0x84
 8002f0c:	4798      	blx	r3
 8002f0e:	f115 0f80 	cmn.w	r5, #128	; 0x80
 8002f12:	d1f7      	bne.n	8002f04 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED1Ev+0xc>
 8002f14:	4620      	mov	r0, r4
 8002f16:	bd38      	pop	{r3, r4, r5, pc}
 8002f18:	0801e9bc 	.word	0x0801e9bc

08002f1c <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21setFadeAnimationDelayEt>:
        fadeAnimationDelay = delay;
 8002f1c:	f8a0 1d18 	strh.w	r1, [r0, #3352]	; 0xd18
    }
 8002f20:	4770      	bx	lr

08002f22 <_ZNK8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21getFadeAnimationDelayEv>:
    }
 8002f22:	f8b0 0d18 	ldrh.w	r0, [r0, #3352]	; 0xd18
 8002f26:	4770      	bx	lr

08002f28 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED0Ev>:
 8002f28:	b510      	push	{r4, lr}
 8002f2a:	4604      	mov	r4, r0
 8002f2c:	f7ff ffe4 	bl	8002ef8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED1Ev>
 8002f30:	4620      	mov	r0, r4
 8002f32:	f240 513c 	movw	r1, #1340	; 0x53c
 8002f36:	f018 fd95 	bl	801ba64 <_ZdlPvj>
 8002f3a:	4620      	mov	r0, r4
 8002f3c:	bd10      	pop	{r4, pc}
	...

08002f40 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelED1Ev>:
class FadeAnimator : public T
 8002f40:	b510      	push	{r4, lr}
#include <gui/common/ScrollingWheels/ScrollingWheel.hpp>
#include <gui/common/ScrollingWheels/TextAreaWithOneWildcardContainer.hpp>

using namespace touchgfx;

class ParticlesScrollingWheel : public ScrollingWheel
 8002f42:	4b06      	ldr	r3, [pc, #24]	; (8002f5c <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelED1Ev+0x1c>)
 8002f44:	6003      	str	r3, [r0, #0]
 8002f46:	4604      	mov	r4, r0
 8002f48:	f500 60fb 	add.w	r0, r0, #2008	; 0x7d8
 8002f4c:	f7ff ffd4 	bl	8002ef8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED1Ev>
 8002f50:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 8002f54:	f7ff ffd0 	bl	8002ef8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED1Ev>
 8002f58:	4620      	mov	r0, r4
 8002f5a:	bd10      	pop	{r4, pc}
 8002f5c:	0801edbc 	.word	0x0801edbc

08002f60 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelED0Ev>:
 8002f60:	b510      	push	{r4, lr}
 8002f62:	4604      	mov	r4, r0
 8002f64:	f7ff ffec 	bl	8002f40 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelED1Ev>
 8002f68:	4620      	mov	r0, r4
 8002f6a:	f640 5128 	movw	r1, #3368	; 0xd28
 8002f6e:	f018 fd79 	bl	801ba64 <_ZdlPvj>
 8002f72:	4620      	mov	r0, r4
 8002f74:	bd10      	pop	{r4, pc}
	...

08002f78 <_ZN8MainView11setupScreenEv>:
{
 8002f78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    particleEffect.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002f7a:	4b30      	ldr	r3, [pc, #192]	; (800303c <_ZN8MainView11setupScreenEv+0xc4>)
 8002f7c:	f9b3 7000 	ldrsh.w	r7, [r3]
 8002f80:	4b2f      	ldr	r3, [pc, #188]	; (8003040 <_ZN8MainView11setupScreenEv+0xc8>)
 8002f82:	f500 75be 	add.w	r5, r0, #380	; 0x17c
        setXY(x, y);
 8002f86:	2200      	movs	r2, #0
 8002f88:	f9b3 6000 	ldrsh.w	r6, [r3]
{
 8002f8c:	4604      	mov	r4, r0
 8002f8e:	4611      	mov	r1, r2
 8002f90:	4628      	mov	r0, r5
 8002f92:	f7ff faf0 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002f96:	4639      	mov	r1, r7
 8002f98:	4628      	mov	r0, r5
 8002f9a:	f7fe f8c1 	bl	8001120 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002f9e:	4631      	mov	r1, r6
 8002fa0:	4628      	mov	r0, r5
 8002fa2:	f7fe f8bf 	bl	8001124 <_ZN8touchgfx8Drawable9setHeightEs>
    particleEffect.setSnapToOrigin(true);
 8002fa6:	4628      	mov	r0, r5
 8002fa8:	2101      	movs	r1, #1
 8002faa:	f000 fd82 	bl	8003ab2 <_ZN14ParticleEffect15setSnapToOriginEb>
    particleEffect.setNumberOfParticles(180);
 8002fae:	4628      	mov	r0, r5
 8002fb0:	21b4      	movs	r1, #180	; 0xb4
 8002fb2:	f000 fd6d 	bl	8003a90 <_ZN14ParticleEffect20setNumberOfParticlesEi>
    particleEffect.setOrigin(particleEffect.getWidth() / 2, particleEffect.getHeight() / 2);
 8002fb6:	f9b4 2186 	ldrsh.w	r2, [r4, #390]	; 0x186
 8002fba:	f9b4 1184 	ldrsh.w	r1, [r4, #388]	; 0x184
 8002fbe:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8002fc2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002fc6:	4628      	mov	r0, r5
 8002fc8:	1052      	asrs	r2, r2, #1
 8002fca:	1049      	asrs	r1, r1, #1
 8002fcc:	f000 fd76 	bl	8003abc <_ZN14ParticleEffect9setOriginEii>
    particleEffect.setCenter(particleEffect.getWidth() / 2, particleEffect.getHeight() / 2);
 8002fd0:	f9b4 2186 	ldrsh.w	r2, [r4, #390]	; 0x186
 8002fd4:	f9b4 1184 	ldrsh.w	r1, [r4, #388]	; 0x184
 8002fd8:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8002fdc:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
    container.insert(&background, particleEffect);
 8002fe0:	1d27      	adds	r7, r4, #4
    particleEffect.setCenter(particleEffect.getWidth() / 2, particleEffect.getHeight() / 2);
 8002fe2:	4628      	mov	r0, r5
 8002fe4:	1052      	asrs	r2, r2, #1
 8002fe6:	1049      	asrs	r1, r1, #1
    particlesScrollingWheel.setXY(20, 130);
 8002fe8:	f504 4690 	add.w	r6, r4, #18432	; 0x4800
 8002fec:	3618      	adds	r6, #24
    particleEffect.setCenter(particleEffect.getWidth() / 2, particleEffect.getHeight() / 2);
 8002fee:	f000 fd59 	bl	8003aa4 <_ZN14ParticleEffect9setCenterEii>
    container.insert(&background, particleEffect);
 8002ff2:	462a      	mov	r2, r5
 8002ff4:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 8002ff8:	4638      	mov	r0, r7
 8002ffa:	f006 fad9 	bl	80095b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
    particlesScrollingWheel.setXY(20, 130);
 8002ffe:	2282      	movs	r2, #130	; 0x82
 8003000:	4630      	mov	r0, r6
 8003002:	2114      	movs	r1, #20
 8003004:	f7ff fab7 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
    particlesScrollingWheel.setAlpha(0);
 8003008:	4630      	mov	r0, r6
 800300a:	2100      	movs	r1, #0
 800300c:	f000 fe3d 	bl	8003c8a <_ZN23ParticlesScrollingWheel8setAlphaEh>
    particlesScrollingWheel.setTouchable(false);
 8003010:	4630      	mov	r0, r6
 8003012:	2100      	movs	r1, #0
 8003014:	f001 f9b3 	bl	800437e <_ZN14ScrollingWheel12setTouchableEb>
 8003018:	4631      	mov	r1, r6
 800301a:	4638      	mov	r0, r7
 800301c:	f006 fa70 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    numberOfParticles = particlesScrollingWheel.setSelectedValue(150);
 8003020:	2196      	movs	r1, #150	; 0x96
 8003022:	4630      	mov	r0, r6
 8003024:	f000 fe17 	bl	8003c56 <_ZN23ParticlesScrollingWheel16setSelectedValueEi>
 8003028:	f504 4480 	add.w	r4, r4, #16384	; 0x4000
 800302c:	4601      	mov	r1, r0
 800302e:	f8c4 0814 	str.w	r0, [r4, #2068]	; 0x814
    particleEffect.setNumberOfParticles(numberOfParticles);
 8003032:	4628      	mov	r0, r5
}
 8003034:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    particleEffect.setNumberOfParticles(numberOfParticles);
 8003038:	f000 bd2a 	b.w	8003a90 <_ZN14ParticleEffect20setNumberOfParticlesEi>
 800303c:	20017744 	.word	0x20017744
 8003040:	20017746 	.word	0x20017746

08003044 <_ZN8MainViewC1Ev>:
MainView::MainView()
 8003044:	b510      	push	{r4, lr}
 8003046:	4604      	mov	r4, r0
 8003048:	f7ff face 	bl	80025e8 <_ZN12MainViewBaseC1Ev>
 800304c:	4b10      	ldr	r3, [pc, #64]	; (8003090 <_ZN8MainViewC1Ev+0x4c>)
 800304e:	6023      	str	r3, [r4, #0]
 8003050:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 8003054:	f000 fcb2 	bl	80039bc <_ZN14ParticleEffectC1Ev>
          fadeAnimationEndedCallback(0)
 8003058:	f504 4090 	add.w	r0, r4, #18432	; 0x4800
 800305c:	3018      	adds	r0, #24
 800305e:	f000 fea3 	bl	8003da8 <_ZN23ParticlesScrollingWheelC1Ev>
 8003062:	f504 4380 	add.w	r3, r4, #16384	; 0x4000
 8003066:	4a0b      	ldr	r2, [pc, #44]	; (8003094 <_ZN8MainViewC1Ev+0x50>)
 8003068:	f8c3 2818 	str.w	r2, [r3, #2072]	; 0x818
 800306c:	f504 43a0 	add.w	r3, r4, #20480	; 0x5000
 8003070:	2200      	movs	r2, #0
 8003072:	f883 252c 	strb.w	r2, [r3, #1324]	; 0x52c
 8003076:	f8a3 252e 	strh.w	r2, [r3, #1326]	; 0x52e
 800307a:	f8a3 2530 	strh.w	r2, [r3, #1328]	; 0x530
 800307e:	f8c3 253c 	str.w	r2, [r3, #1340]	; 0x53c
        vSyncCompensationEnabled = enabled;
 8003082:	4b05      	ldr	r3, [pc, #20]	; (8003098 <_ZN8MainViewC1Ev+0x54>)
 8003084:	681b      	ldr	r3, [r3, #0]
 8003086:	2201      	movs	r2, #1
 8003088:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
}
 800308c:	4620      	mov	r0, r4
 800308e:	bd10      	pop	{r4, pc}
 8003090:	0801ea7c 	.word	0x0801ea7c
 8003094:	0801e9cc 	.word	0x0801e9cc
 8003098:	20017750 	.word	0x20017750

0800309c <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 800309c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030a0:	461d      	mov	r5, r3
        if (!fadeAnimationRunning)
 80030a2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 80030a6:	4604      	mov	r4, r0
 80030a8:	460f      	mov	r7, r1
 80030aa:	4690      	mov	r8, r2
        if (!fadeAnimationRunning)
 80030ac:	b92b      	cbnz	r3, 80030ba <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0x1e>
            Application::getInstance()->registerTimerWidget(this);
 80030ae:	f009 fdc9 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 80030b2:	4621      	mov	r1, r4
 80030b4:	3004      	adds	r0, #4
 80030b6:	f009 fe93 	bl	800cde0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        fadeAnimationDuration = duration;
 80030ba:	f8a4 804e 	strh.w	r8, [r4, #78]	; 0x4e
        fadeAnimationCounter = 0;
 80030be:	2300      	movs	r3, #0
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 80030c0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
        return alpha;
 80030c2:	f894 2036 	ldrb.w	r2, [r4, #54]	; 0x36
        fadeAnimationCounter = 0;
 80030c6:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
        fadeAnimationRunning = true;
 80030ca:	2301      	movs	r3, #1
        fadeAnimationStartAlpha = T::getAlpha();
 80030cc:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
        fadeAnimationEndAlpha = endAlpha;
 80030d0:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 80030d4:	6565      	str	r5, [r4, #84]	; 0x54
        fadeAnimationRunning = true;
 80030d6:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 80030da:	2900      	cmp	r1, #0
 80030dc:	d13f      	bne.n	800315e <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0xc2>
            if (fadeAnimationCounter >= fadeAnimationDelay)
 80030de:	f8b4 004c 	ldrh.w	r0, [r4, #76]	; 0x4c
            fadeAnimationCounter++;
 80030e2:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
            if (fadeAnimationCounter >= fadeAnimationDelay)
 80030e6:	4298      	cmp	r0, r3
 80030e8:	d839      	bhi.n	800315e <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0xc2>
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 80030ea:	1a18      	subs	r0, r3, r0
 80030ec:	b296      	uxth	r6, r2
 80030ee:	4643      	mov	r3, r8
 80030f0:	1aba      	subs	r2, r7, r2
 80030f2:	b280      	uxth	r0, r0
 80030f4:	47a8      	blx	r5
                if (T::getAlpha() != newAlpha)
 80030f6:	f894 2036 	ldrb.w	r2, [r4, #54]	; 0x36
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 80030fa:	4430      	add	r0, r6
 80030fc:	b205      	sxth	r5, r0
                if (T::getAlpha() != newAlpha)
 80030fe:	42aa      	cmp	r2, r5
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8003100:	b283      	uxth	r3, r0
                if (T::getAlpha() != newAlpha)
 8003102:	d005      	beq.n	8003110 <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0x74>
                    if (newAlpha == 0)
 8003104:	bb2d      	cbnz	r5, 8003152 <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0xb6>
                        T::invalidateContent();
 8003106:	4620      	mov	r0, r4
 8003108:	f007 fdfc 	bl	800ad04 <_ZNK8touchgfx8TextArea17invalidateContentEv>
        alpha = newAlpha;
 800310c:	f884 5036 	strb.w	r5, [r4, #54]	; 0x36
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8003110:	f8b4 304c 	ldrh.w	r3, [r4, #76]	; 0x4c
 8003114:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 8003118:	f8b4 204a 	ldrh.w	r2, [r4, #74]	; 0x4a
 800311c:	440b      	add	r3, r1
 800311e:	429a      	cmp	r2, r3
 8003120:	d31d      	bcc.n	800315e <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0xc2>
                    fadeAnimationRunning = false;
 8003122:	2300      	movs	r3, #0
 8003124:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
                    fadeAnimationDuration = 0;
 8003128:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
                    Application::getInstance()->unregisterTimerWidget(this);
 800312c:	f009 fd8a 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 8003130:	4621      	mov	r1, r4
 8003132:	3004      	adds	r0, #4
 8003134:	f009 fdab 	bl	800cc8e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8003138:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800313a:	b180      	cbz	r0, 800315e <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0xc2>
 800313c:	6803      	ldr	r3, [r0, #0]
 800313e:	68db      	ldr	r3, [r3, #12]
 8003140:	4798      	blx	r3
 8003142:	b160      	cbz	r0, 800315e <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0xc2>
                        fadeAnimationEndedCallback->execute(*this);
 8003144:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003146:	6803      	ldr	r3, [r0, #0]
 8003148:	4621      	mov	r1, r4
 800314a:	689b      	ldr	r3, [r3, #8]
    }
 800314c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        fadeAnimationEndedCallback->execute(*this);
 8003150:	4718      	bx	r3
                        T::setAlpha((uint8_t)newAlpha);
 8003152:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
                        T::invalidateContent();
 8003156:	4620      	mov	r0, r4
 8003158:	f007 fdd4 	bl	800ad04 <_ZNK8touchgfx8TextArea17invalidateContentEv>
 800315c:	e7d8      	b.n	8003110 <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE+0x74>
    }
 800315e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003162 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>:
    void startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
 8003162:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003166:	4698      	mov	r8, r3
        if (!moveAnimationRunning)
 8003168:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
    void startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
 800316c:	e9dd 9708 	ldrd	r9, r7, [sp, #32]
 8003170:	4604      	mov	r4, r0
 8003172:	460e      	mov	r6, r1
 8003174:	4615      	mov	r5, r2
        if (!moveAnimationRunning)
 8003176:	b92b      	cbnz	r3, 8003184 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0x22>
            Application::getInstance()->registerTimerWidget(this);
 8003178:	f009 fd64 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 800317c:	4621      	mov	r1, r4
 800317e:	3004      	adds	r0, #4
 8003180:	f009 fe2e 	bl	800cde0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        moveAnimationCounter = 0;
 8003184:	2300      	movs	r3, #0
        moveAnimationDuration = duration;
 8003186:	f8a4 802e 	strh.w	r8, [r4, #46]	; 0x2e
        moveAnimationYEquation = yProgressionEquation;
 800318a:	e9c4 970e 	strd	r9, r7, [r4, #56]	; 0x38
        moveAnimationCounter = 0;
 800318e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 8003190:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
        moveAnimationStartX = T::getX();
 8003192:	6863      	ldr	r3, [r4, #4]
 8003194:	6323      	str	r3, [r4, #48]	; 0x30
        moveAnimationRunning = true;
 8003196:	2301      	movs	r3, #1
        return rect.x;
 8003198:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
        moveAnimationEndX = endX;
 800319c:	86a6      	strh	r6, [r4, #52]	; 0x34
        moveAnimationEndY = endY;
 800319e:	86e5      	strh	r5, [r4, #54]	; 0x36
        moveAnimationRunning = true;
 80031a0:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 80031a4:	2f00      	cmp	r7, #0
 80031a6:	d13a      	bne.n	800321e <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xbc>
            if (moveAnimationCounter >= moveAnimationDelay)
 80031a8:	8da5      	ldrh	r5, [r4, #44]	; 0x2c
            moveAnimationCounter++;
 80031aa:	8563      	strh	r3, [r4, #42]	; 0x2a
            if (moveAnimationCounter >= moveAnimationDelay)
 80031ac:	429d      	cmp	r5, r3
 80031ae:	d836      	bhi.n	800321e <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xbc>
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 80031b0:	1b5d      	subs	r5, r3, r5
 80031b2:	b2ad      	uxth	r5, r5
 80031b4:	1ab2      	subs	r2, r6, r2
 80031b6:	4643      	mov	r3, r8
 80031b8:	b212      	sxth	r2, r2
 80031ba:	4639      	mov	r1, r7
 80031bc:	4628      	mov	r0, r5
 80031be:	47c8      	blx	r9
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 80031c0:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80031c2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80031c4:	6be6      	ldr	r6, [r4, #60]	; 0x3c
 80031c6:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 80031c8:	4680      	mov	r8, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 80031ca:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80031cc:	b212      	sxth	r2, r2
 80031ce:	4639      	mov	r1, r7
 80031d0:	4628      	mov	r0, r5
 80031d2:	47b0      	blx	r6
                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 80031d4:	8e62      	ldrh	r2, [r4, #50]	; 0x32
 80031d6:	8e21      	ldrh	r1, [r4, #48]	; 0x30
 80031d8:	4402      	add	r2, r0
 80031da:	4441      	add	r1, r8
 80031dc:	b212      	sxth	r2, r2
 80031de:	b209      	sxth	r1, r1
 80031e0:	4620      	mov	r0, r4
 80031e2:	f7fd ffa6 	bl	8001132 <_ZN8touchgfx8Drawable6moveToEss>
                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 80031e6:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80031e8:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 80031ea:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80031ec:	440b      	add	r3, r1
 80031ee:	429a      	cmp	r2, r3
 80031f0:	d315      	bcc.n	800321e <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xbc>
                    moveAnimationRunning = false;
 80031f2:	f884 7029 	strb.w	r7, [r4, #41]	; 0x29
                    moveAnimationCounter = 0;
 80031f6:	8567      	strh	r7, [r4, #42]	; 0x2a
                    Application::getInstance()->unregisterTimerWidget(this);
 80031f8:	f009 fd24 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 80031fc:	4621      	mov	r1, r4
 80031fe:	3004      	adds	r0, #4
 8003200:	f009 fd45 	bl	800cc8e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 8003204:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8003206:	b150      	cbz	r0, 800321e <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xbc>
 8003208:	6803      	ldr	r3, [r0, #0]
 800320a:	68db      	ldr	r3, [r3, #12]
 800320c:	4798      	blx	r3
 800320e:	b130      	cbz	r0, 800321e <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xbc>
                        moveAnimationEndedCallback->execute(*this);
 8003210:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8003212:	6803      	ldr	r3, [r0, #0]
 8003214:	4621      	mov	r1, r4
 8003216:	689b      	ldr	r3, [r3, #8]
    }
 8003218:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
                        moveAnimationEndedCallback->execute(*this);
 800321c:	4718      	bx	r3
    }
 800321e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08003222 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv>:
        if (fadeAnimationRunning)
 8003222:	f890 3d14 	ldrb.w	r3, [r0, #3348]	; 0xd14
    void nextFadeAnimationStep()
 8003226:	b570      	push	{r4, r5, r6, lr}
 8003228:	4604      	mov	r4, r0
        if (fadeAnimationRunning)
 800322a:	2b00      	cmp	r3, #0
 800322c:	d052      	beq.n	80032d4 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv+0xb2>
            fadeAnimationCounter++;
 800322e:	f8b0 0d16 	ldrh.w	r0, [r0, #3350]	; 0xd16
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8003232:	f8b4 3d18 	ldrh.w	r3, [r4, #3352]	; 0xd18
            fadeAnimationCounter++;
 8003236:	3001      	adds	r0, #1
 8003238:	b280      	uxth	r0, r0
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800323a:	4298      	cmp	r0, r3
            fadeAnimationCounter++;
 800323c:	f8a4 0d16 	strh.w	r0, [r4, #3350]	; 0xd16
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8003240:	d348      	bcc.n	80032d4 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv+0xb2>
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8003242:	f8b4 6d1c 	ldrh.w	r6, [r4, #3356]	; 0xd1c
 8003246:	f8b4 2d1e 	ldrh.w	r2, [r4, #3358]	; 0xd1e
 800324a:	f8d4 5d20 	ldr.w	r5, [r4, #3360]	; 0xd20
 800324e:	1b92      	subs	r2, r2, r6
 8003250:	1ac0      	subs	r0, r0, r3
 8003252:	b212      	sxth	r2, r2
 8003254:	f8b4 3d1a 	ldrh.w	r3, [r4, #3354]	; 0xd1a
 8003258:	2100      	movs	r1, #0
 800325a:	b280      	uxth	r0, r0
 800325c:	47a8      	blx	r5
 800325e:	4430      	add	r0, r6
 8003260:	b205      	sxth	r5, r0
 8003262:	b286      	uxth	r6, r0
                if (T::getAlpha() != newAlpha)
 8003264:	4620      	mov	r0, r4
 8003266:	f000 fd0d 	bl	8003c84 <_ZN23ParticlesScrollingWheel8getAlphaEv>
 800326a:	42a8      	cmp	r0, r5
 800326c:	d007      	beq.n	800327e <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv+0x5c>
                    if (newAlpha == 0)
 800326e:	bb4d      	cbnz	r5, 80032c4 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv+0xa2>
                        T::invalidateContent();
 8003270:	4620      	mov	r0, r4
 8003272:	f7fd ffd9 	bl	8001228 <_ZNK8touchgfx8Drawable17invalidateContentEv>
                        T::setAlpha((uint8_t)newAlpha);
 8003276:	4629      	mov	r1, r5
 8003278:	4620      	mov	r0, r4
 800327a:	f000 fd06 	bl	8003c8a <_ZN23ParticlesScrollingWheel8setAlphaEh>
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 800327e:	f8b4 3d18 	ldrh.w	r3, [r4, #3352]	; 0xd18
 8003282:	f8b4 1d1a 	ldrh.w	r1, [r4, #3354]	; 0xd1a
 8003286:	f8b4 2d16 	ldrh.w	r2, [r4, #3350]	; 0xd16
 800328a:	440b      	add	r3, r1
 800328c:	429a      	cmp	r2, r3
 800328e:	d321      	bcc.n	80032d4 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv+0xb2>
                    fadeAnimationRunning = false;
 8003290:	2300      	movs	r3, #0
 8003292:	f884 3d14 	strb.w	r3, [r4, #3348]	; 0xd14
                    fadeAnimationDuration = 0;
 8003296:	f8a4 3d1a 	strh.w	r3, [r4, #3354]	; 0xd1a
                    Application::getInstance()->unregisterTimerWidget(this);
 800329a:	f009 fcd3 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
 800329e:	4621      	mov	r1, r4
 80032a0:	3004      	adds	r0, #4
 80032a2:	f009 fcf4 	bl	800cc8e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 80032a6:	f8d4 0d24 	ldr.w	r0, [r4, #3364]	; 0xd24
 80032aa:	b198      	cbz	r0, 80032d4 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv+0xb2>
 80032ac:	6803      	ldr	r3, [r0, #0]
 80032ae:	68db      	ldr	r3, [r3, #12]
 80032b0:	4798      	blx	r3
 80032b2:	b178      	cbz	r0, 80032d4 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv+0xb2>
                        fadeAnimationEndedCallback->execute(*this);
 80032b4:	f8d4 0d24 	ldr.w	r0, [r4, #3364]	; 0xd24
 80032b8:	6803      	ldr	r3, [r0, #0]
 80032ba:	4621      	mov	r1, r4
 80032bc:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 80032be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        fadeAnimationEndedCallback->execute(*this);
 80032c2:	4718      	bx	r3
                        T::setAlpha((uint8_t)newAlpha);
 80032c4:	4620      	mov	r0, r4
 80032c6:	b2f1      	uxtb	r1, r6
 80032c8:	f000 fcdf 	bl	8003c8a <_ZN23ParticlesScrollingWheel8setAlphaEh>
                        T::invalidateContent();
 80032cc:	4620      	mov	r0, r4
 80032ce:	f7fd ffab 	bl	8001228 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80032d2:	e7d4      	b.n	800327e <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv+0x5c>
    }
 80032d4:	bd70      	pop	{r4, r5, r6, pc}

080032d6 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE15handleTickEventEv>:
    virtual void handleTickEvent()
 80032d6:	b508      	push	{r3, lr}
        nextFadeAnimationStep();
 80032d8:	f7ff ffa3 	bl	8003222 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv>
    }
 80032dc:	bd08      	pop	{r3, pc}

080032de <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 80032de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032e0:	461d      	mov	r5, r3
        if (!fadeAnimationRunning)
 80032e2:	f890 3d14 	ldrb.w	r3, [r0, #3348]	; 0xd14
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 80032e6:	4604      	mov	r4, r0
 80032e8:	460f      	mov	r7, r1
 80032ea:	4616      	mov	r6, r2
        if (!fadeAnimationRunning)
 80032ec:	b92b      	cbnz	r3, 80032fa <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE18startFadeAnimationEhtPFstsstE+0x1c>
            Application::getInstance()->registerTimerWidget(this);
 80032ee:	f009 fca9 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 80032f2:	4621      	mov	r1, r4
 80032f4:	3004      	adds	r0, #4
 80032f6:	f009 fd73 	bl	800cde0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 80032fa:	2300      	movs	r3, #0
 80032fc:	f8a4 3d16 	strh.w	r3, [r4, #3350]	; 0xd16
        fadeAnimationStartAlpha = T::getAlpha();
 8003300:	4620      	mov	r0, r4
 8003302:	f000 fcbf 	bl	8003c84 <_ZN23ParticlesScrollingWheel8getAlphaEv>
        fadeAnimationRunning = true;
 8003306:	2301      	movs	r3, #1
        fadeAnimationDuration = duration;
 8003308:	f8a4 6d1a 	strh.w	r6, [r4, #3354]	; 0xd1a
        fadeAnimationRunning = true;
 800330c:	f884 3d14 	strb.w	r3, [r4, #3348]	; 0xd14
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8003310:	f8d4 3d18 	ldr.w	r3, [r4, #3352]	; 0xd18
        fadeAnimationStartAlpha = T::getAlpha();
 8003314:	f8a4 0d1c 	strh.w	r0, [r4, #3356]	; 0xd1c
        fadeAnimationEndAlpha = endAlpha;
 8003318:	f8a4 7d1e 	strh.w	r7, [r4, #3358]	; 0xd1e
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 800331c:	f8c4 5d20 	str.w	r5, [r4, #3360]	; 0xd20
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8003320:	b913      	cbnz	r3, 8003328 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE18startFadeAnimationEhtPFstsstE+0x4a>
            nextFadeAnimationStep(); // Set end alpha and shut down
 8003322:	4620      	mov	r0, r4
 8003324:	f7ff ff7d 	bl	8003222 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE21nextFadeAnimationStepEv>
    }
 8003328:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800332c <_ZN8MainView16gotoMenuSelectedEv>:

void MainView::gotoMenuSelected()
{
 800332c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    if (particlesScrollingWheel.getAlpha() > 0)
 8003330:	f500 4590 	add.w	r5, r0, #18432	; 0x4800
 8003334:	3518      	adds	r5, #24
{
 8003336:	4604      	mov	r4, r0
    if (particlesScrollingWheel.getAlpha() > 0)
 8003338:	4628      	mov	r0, r5
 800333a:	f000 fca3 	bl	8003c84 <_ZN23ParticlesScrollingWheel8getAlphaEv>
 800333e:	4e2a      	ldr	r6, [pc, #168]	; (80033e8 <_ZN8MainView16gotoMenuSelectedEv+0xbc>)
    {
        numberOfParticles = particlesScrollingWheel.getSelectedValue();
        particleEffect.setNumberOfParticles(numberOfParticles);
 8003340:	f504 79be 	add.w	r9, r4, #380	; 0x17c

        particleEffect.spawnNewParticles(true);
        particlesScrollingWheel.startFadeAnimation(0, 20);
        particlesScrollingWheel.setTouchable(false);

        headline1.startFadeAnimation(0, 20);
 8003344:	f504 7888 	add.w	r8, r4, #272	; 0x110
        touchgfxLogo.startMoveAnimation(touchgfxLogo.getX(), (HAL::DISPLAY_HEIGHT - touchgfxLogo.getHeight()) / 2, 20, EasingEquations::cubicEaseInOut, EasingEquations::cubicEaseInOut);
 8003348:	f104 0798 	add.w	r7, r4, #152	; 0x98
    if (particlesScrollingWheel.getAlpha() > 0)
 800334c:	4601      	mov	r1, r0
 800334e:	b390      	cbz	r0, 80033b6 <_ZN8MainView16gotoMenuSelectedEv+0x8a>
        numberOfParticles = particlesScrollingWheel.getSelectedValue();
 8003350:	4628      	mov	r0, r5
 8003352:	f000 fc77 	bl	8003c44 <_ZN23ParticlesScrollingWheel16getSelectedValueEv>
 8003356:	f504 4380 	add.w	r3, r4, #16384	; 0x4000
 800335a:	4601      	mov	r1, r0
 800335c:	f8c3 0814 	str.w	r0, [r3, #2068]	; 0x814
        particleEffect.setNumberOfParticles(numberOfParticles);
 8003360:	4648      	mov	r0, r9
 8003362:	f000 fb95 	bl	8003a90 <_ZN14ParticleEffect20setNumberOfParticlesEi>
        particleEffect.spawnNewParticles(true);
 8003366:	2101      	movs	r1, #1
 8003368:	4648      	mov	r0, r9
 800336a:	f000 fbae 	bl	8003aca <_ZN14ParticleEffect17spawnNewParticlesEb>
        particlesScrollingWheel.startFadeAnimation(0, 20);
 800336e:	4b1f      	ldr	r3, [pc, #124]	; (80033ec <_ZN8MainView16gotoMenuSelectedEv+0xc0>)
 8003370:	2214      	movs	r2, #20
 8003372:	2100      	movs	r1, #0
 8003374:	4628      	mov	r0, r5
 8003376:	f7ff ffb2 	bl	80032de <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE18startFadeAnimationEhtPFstsstE>
        particlesScrollingWheel.setTouchable(false);
 800337a:	2100      	movs	r1, #0
 800337c:	4628      	mov	r0, r5
 800337e:	f000 fffe 	bl	800437e <_ZN14ScrollingWheel12setTouchableEb>
        headline1.startFadeAnimation(0, 20);
 8003382:	4b1a      	ldr	r3, [pc, #104]	; (80033ec <_ZN8MainView16gotoMenuSelectedEv+0xc0>)
 8003384:	2214      	movs	r2, #20
 8003386:	2100      	movs	r1, #0
 8003388:	4640      	mov	r0, r8
 800338a:	f7ff fe87 	bl	800309c <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE>
        touchgfxLogo.startMoveAnimation(touchgfxLogo.getX(), (HAL::DISPLAY_HEIGHT - touchgfxLogo.getHeight()) / 2, 20, EasingEquations::cubicEaseInOut, EasingEquations::cubicEaseInOut);
 800338e:	4b18      	ldr	r3, [pc, #96]	; (80033f0 <_ZN8MainView16gotoMenuSelectedEv+0xc4>)
 8003390:	881a      	ldrh	r2, [r3, #0]
 8003392:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 8003396:	e9cd 6600 	strd	r6, r6, [sp]
 800339a:	1ad2      	subs	r2, r2, r3
 800339c:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80033a0:	2314      	movs	r3, #20
 80033a2:	f342 024f 	sbfx	r2, r2, #1, #16
        particleEffect.spawnNewParticles(false);
        particlesScrollingWheel.startFadeAnimation(255, 20);
        particlesScrollingWheel.setTouchable(true);

        headline1.startFadeAnimation(255, 20);
        touchgfxLogo.startMoveAnimation(touchgfxLogo.getX(), 8, 20, EasingEquations::cubicEaseInOut, EasingEquations::cubicEaseInOut);
 80033a6:	f9b4 109c 	ldrsh.w	r1, [r4, #156]	; 0x9c
 80033aa:	4638      	mov	r0, r7
 80033ac:	f7ff fed9 	bl	8003162 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
    }
}
 80033b0:	b003      	add	sp, #12
 80033b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        particleEffect.spawnNewParticles(false);
 80033b6:	4648      	mov	r0, r9
 80033b8:	f000 fb87 	bl	8003aca <_ZN14ParticleEffect17spawnNewParticlesEb>
        particlesScrollingWheel.startFadeAnimation(255, 20);
 80033bc:	4b0b      	ldr	r3, [pc, #44]	; (80033ec <_ZN8MainView16gotoMenuSelectedEv+0xc0>)
 80033be:	2214      	movs	r2, #20
 80033c0:	21ff      	movs	r1, #255	; 0xff
 80033c2:	4628      	mov	r0, r5
 80033c4:	f7ff ff8b 	bl	80032de <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelE18startFadeAnimationEhtPFstsstE>
        particlesScrollingWheel.setTouchable(true);
 80033c8:	2101      	movs	r1, #1
 80033ca:	4628      	mov	r0, r5
 80033cc:	f000 ffd7 	bl	800437e <_ZN14ScrollingWheel12setTouchableEb>
        headline1.startFadeAnimation(255, 20);
 80033d0:	4b06      	ldr	r3, [pc, #24]	; (80033ec <_ZN8MainView16gotoMenuSelectedEv+0xc0>)
 80033d2:	2214      	movs	r2, #20
 80033d4:	21ff      	movs	r1, #255	; 0xff
 80033d6:	4640      	mov	r0, r8
 80033d8:	f7ff fe60 	bl	800309c <_ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE>
        touchgfxLogo.startMoveAnimation(touchgfxLogo.getX(), 8, 20, EasingEquations::cubicEaseInOut, EasingEquations::cubicEaseInOut);
 80033dc:	e9cd 6600 	strd	r6, r6, [sp]
 80033e0:	2314      	movs	r3, #20
 80033e2:	2208      	movs	r2, #8
 80033e4:	e7df      	b.n	80033a6 <_ZN8MainView16gotoMenuSelectedEv+0x7a>
 80033e6:	bf00      	nop
 80033e8:	0800e669 	.word	0x0800e669
 80033ec:	0800e6f7 	.word	0x0800e6f7
 80033f0:	20017746 	.word	0x20017746

080033f4 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 80033f4:	b510      	push	{r4, lr}
 80033f6:	4b08      	ldr	r3, [pc, #32]	; (8003418 <_ZN8MainViewD1Ev+0x24>)
 80033f8:	6003      	str	r3, [r0, #0]
 80033fa:	4604      	mov	r4, r0
 80033fc:	f500 4090 	add.w	r0, r0, #18432	; 0x4800
 8003400:	3018      	adds	r0, #24
 8003402:	f7ff fd9d 	bl	8002f40 <_ZN8touchgfx12FadeAnimatorI23ParticlesScrollingWheelED1Ev>
 8003406:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 800340a:	f000 f847 	bl	800349c <_ZN14ParticleEffectD1Ev>
 800340e:	4620      	mov	r0, r4
 8003410:	f7fe ff88 	bl	8002324 <_ZN12MainViewBaseD1Ev>
 8003414:	4620      	mov	r0, r4
 8003416:	bd10      	pop	{r4, pc}
 8003418:	0801ea7c 	.word	0x0801ea7c

0800341c <_ZN8MainViewD0Ev>:
 800341c:	b510      	push	{r4, lr}
 800341e:	4604      	mov	r4, r0
 8003420:	f7ff ffe8 	bl	80033f4 <_ZN8MainViewD1Ev>
 8003424:	4620      	mov	r0, r4
 8003426:	f245 5140 	movw	r1, #21824	; 0x5540
 800342a:	f018 fb1b 	bl	801ba64 <_ZdlPvj>
 800342e:	4620      	mov	r0, r4
 8003430:	bd10      	pop	{r4, pc}

08003432 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003432:	2200      	movs	r2, #0
 8003434:	6002      	str	r2, [r0, #0]
{
}
 8003436:	4770      	bx	lr

08003438 <_ZN5Model4tickEv>:

void Model::tick()
{
}
 8003438:	4770      	bx	lr

0800343a <_ZNK8Particle12getSolidRectEv>:
 800343a:	2200      	movs	r2, #0
 800343c:	8002      	strh	r2, [r0, #0]
 800343e:	8042      	strh	r2, [r0, #2]
 8003440:	8082      	strh	r2, [r0, #4]
 8003442:	80c2      	strh	r2, [r0, #6]

    // Make sure that we do not JSMOC split
    virtual touchgfx::Rect getSolidRect() const
    {
        return touchgfx::Rect();
    }
 8003444:	4770      	bx	lr
	...

08003448 <_ZL9randomishl>:
using namespace touchgfx;

static uint32_t randomish(int32_t seed)
{
    static uint32_t last = 0;
    const uint32_t num = (seed * (1337 + last)) % RAND_MAX;
 8003448:	4a06      	ldr	r2, [pc, #24]	; (8003464 <_ZL9randomishl+0x1c>)
 800344a:	6813      	ldr	r3, [r2, #0]
 800344c:	f203 5339 	addw	r3, r3, #1337	; 0x539
 8003450:	4358      	muls	r0, r3
 8003452:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8003456:	fbb0 f3f3 	udiv	r3, r0, r3
 800345a:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 800345e:	1ac0      	subs	r0, r0, r3
    last = num;
 8003460:	6010      	str	r0, [r2, #0]
    return num;
}
 8003462:	4770      	bx	lr
 8003464:	200069dc 	.word	0x200069dc

08003468 <_ZNK14ParticleEffect12getSolidRectEv>:
 8003468:	2200      	movs	r2, #0
 800346a:	8002      	strh	r2, [r0, #0]
 800346c:	8042      	strh	r2, [r0, #2]
 800346e:	8082      	strh	r2, [r0, #4]
 8003470:	80c2      	strh	r2, [r0, #6]
}

touchgfx::Rect ParticleEffect::getSolidRect() const
{
    return touchgfx::Rect();
}
 8003472:	4770      	bx	lr

08003474 <_ZN14ParticleEffect15handleDragEventERKN8touchgfx9DragEventE>:
    }
}

void ParticleEffect::setCenter(int x, int y)
{
    cx = x;
 8003474:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
    setCenter(evt.getNewX(), evt.getNewY());
 8003478:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
 800347c:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 8003480:	f8c0 268c 	str.w	r2, [r0, #1676]	; 0x68c
    cy = y;
 8003484:	f8c0 3690 	str.w	r3, [r0, #1680]	; 0x690
}
 8003488:	4770      	bx	lr

0800348a <_ZN8ParticleD1Ev>:
class Particle : public touchgfx::Image
 800348a:	4770      	bx	lr

0800348c <_ZN8ParticleD0Ev>:
 800348c:	b510      	push	{r4, lr}
 800348e:	2148      	movs	r1, #72	; 0x48
 8003490:	4604      	mov	r4, r0
 8003492:	f018 fae7 	bl	801ba64 <_ZdlPvj>
 8003496:	4620      	mov	r0, r4
 8003498:	bd10      	pop	{r4, pc}
	...

0800349c <_ZN14ParticleEffectD1Ev>:
ParticleEffect::~ParticleEffect()
 800349c:	b538      	push	{r3, r4, r5, lr}
 800349e:	4b0a      	ldr	r3, [pc, #40]	; (80034c8 <_ZN14ParticleEffectD1Ev+0x2c>)
 80034a0:	6003      	str	r3, [r0, #0]
 80034a2:	4604      	mov	r4, r0
    Application::getInstance()->unregisterTimerWidget(this);
 80034a4:	f009 fbce 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 80034a8:	4621      	mov	r1, r4
 80034aa:	3004      	adds	r0, #4
 80034ac:	f009 fbef 	bl	800cc8e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80034b0:	f244 6530 	movw	r5, #17968	; 0x4630
ParticleEffect::~ParticleEffect()
 80034b4:	5963      	ldr	r3, [r4, r5]
 80034b6:	1960      	adds	r0, r4, r5
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	3d48      	subs	r5, #72	; 0x48
 80034bc:	4798      	blx	r3
 80034be:	f115 0f20 	cmn.w	r5, #32
 80034c2:	d1f7      	bne.n	80034b4 <_ZN14ParticleEffectD1Ev+0x18>
}
 80034c4:	4620      	mov	r0, r4
 80034c6:	bd38      	pop	{r3, r4, r5, pc}
 80034c8:	0801eb20 	.word	0x0801eb20

080034cc <_ZN14ParticleEffectD0Ev>:
ParticleEffect::~ParticleEffect()
 80034cc:	b510      	push	{r4, lr}
 80034ce:	4604      	mov	r4, r0
}
 80034d0:	f7ff ffe4 	bl	800349c <_ZN14ParticleEffectD1Ev>
 80034d4:	4620      	mov	r0, r4
 80034d6:	f244 6198 	movw	r1, #18072	; 0x4698
 80034da:	f018 fac3 	bl	801ba64 <_ZdlPvj>
 80034de:	4620      	mov	r0, r4
 80034e0:	bd10      	pop	{r4, pc}

080034e2 <_ZN14ParticleEffect16handleClickEventERKN8touchgfx10ClickEventE>:
    if (evt.getType() == ClickEvent::PRESSED)
 80034e2:	790b      	ldrb	r3, [r1, #4]
 80034e4:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
 80034e8:	b943      	cbnz	r3, 80034fc <_ZN14ParticleEffect16handleClickEventERKN8touchgfx10ClickEventE+0x1a>
        setCenter(evt.getX(), evt.getY());
 80034ea:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 80034ee:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
    cx = x;
 80034f2:	f8c0 268c 	str.w	r2, [r0, #1676]	; 0x68c
    cy = y;
 80034f6:	f8c0 3690 	str.w	r3, [r0, #1680]	; 0x690
}
 80034fa:	4770      	bx	lr
        if (snapToOrigin)
 80034fc:	f890 3684 	ldrb.w	r3, [r0, #1668]	; 0x684
 8003500:	2b00      	cmp	r3, #0
 8003502:	d0fa      	beq.n	80034fa <_ZN14ParticleEffect16handleClickEventERKN8touchgfx10ClickEventE+0x18>
            setCenter(originX, originY);
 8003504:	f8d0 3680 	ldr.w	r3, [r0, #1664]	; 0x680
    cx = x;
 8003508:	f8d0 267c 	ldr.w	r2, [r0, #1660]	; 0x67c
 800350c:	e7f1      	b.n	80034f2 <_ZN14ParticleEffect16handleClickEventERKN8touchgfx10ClickEventE+0x10>
	...

08003510 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE>:
{
 8003510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    translateRectToAbsolute(meAbs); // To find our x and y coords in absolute.
 8003514:	6803      	ldr	r3, [r0, #0]
{
 8003516:	b08f      	sub	sp, #60	; 0x3c
 8003518:	2500      	movs	r5, #0
    translateRectToAbsolute(meAbs); // To find our x and y coords in absolute.
 800351a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800351c:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
{
 8003520:	460f      	mov	r7, r1
 8003522:	f8ad 502a 	strh.w	r5, [sp, #42]	; 0x2a
 8003526:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800352a:	f8ad 502e 	strh.w	r5, [sp, #46]	; 0x2e
    translateRectToAbsolute(meAbs); // To find our x and y coords in absolute.
 800352e:	a90a      	add	r1, sp, #40	; 0x28
{
 8003530:	4604      	mov	r4, r0
    translateRectToAbsolute(meAbs); // To find our x and y coords in absolute.
 8003532:	4798      	blx	r3
    for (int i = 0; i < numberOfParticles; i++)
 8003534:	f504 4880 	add.w	r8, r4, #16384	; 0x4000
 8003538:	f8d8 3678 	ldr.w	r3, [r8, #1656]	; 0x678
 800353c:	42ab      	cmp	r3, r5
 800353e:	f340 8083 	ble.w	8003648 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x138>
     *
     * @return Intersecting rectangle or empty Rect in case of no intersection.
     */
    Rect operator&(const Rect& other) const
    {
        Rect r = *this;
 8003542:	e9d4 010b 	ldrd	r0, r1, [r4, #44]	; 0x2c
 8003546:	ab0c      	add	r3, sp, #48	; 0x30
 8003548:	e883 0003 	stmia.w	r3, {r0, r1}
        return x + width;
 800354c:	f9b7 b000 	ldrsh.w	fp, [r7]
 8003550:	f8b7 e004 	ldrh.w	lr, [r7, #4]
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 8003554:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
        return x + width;
 8003558:	44de      	add	lr, fp
 800355a:	fa1f f28e 	uxth.w	r2, lr
 800355e:	fa0f fe8e 	sxth.w	lr, lr
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 8003562:	4573      	cmp	r3, lr
        return x + width;
 8003564:	9206      	str	r2, [sp, #24]
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 8003566:	da6c      	bge.n	8003642 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x132>
        return x + width;
 8003568:	f8bd c034 	ldrh.w	ip, [sp, #52]	; 0x34
 800356c:	449c      	add	ip, r3
 800356e:	fa1f f08c 	uxth.w	r0, ip
 8003572:	fa0f fc8c 	sxth.w	ip, ip
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 8003576:	45e3      	cmp	fp, ip
 8003578:	da63      	bge.n	8003642 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x132>
 800357a:	f9b7 9002 	ldrsh.w	r9, [r7, #2]
        return y + height;
 800357e:	88f9      	ldrh	r1, [r7, #6]
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 8003580:	f9bd a032 	ldrsh.w	sl, [sp, #50]	; 0x32
        return y + height;
 8003584:	4449      	add	r1, r9
 8003586:	b28a      	uxth	r2, r1
 8003588:	b209      	sxth	r1, r1
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 800358a:	458a      	cmp	sl, r1
        return y + height;
 800358c:	9207      	str	r2, [sp, #28]
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 800358e:	da58      	bge.n	8003642 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x132>
        return y + height;
 8003590:	f8bd 6036 	ldrh.w	r6, [sp, #54]	; 0x36
 8003594:	4456      	add	r6, sl
 8003596:	b2b2      	uxth	r2, r6
 8003598:	b236      	sxth	r6, r6
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 800359a:	45b1      	cmp	r9, r6
        return y + height;
 800359c:	9205      	str	r2, [sp, #20]
        return !(x >= other.right() || right() <= other.x || y >= other.bottom() || bottom() <= other.y);
 800359e:	da50      	bge.n	8003642 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x132>
     */
    void operator&=(const Rect& other)
    {
        if (intersect(other))
        {
            int16_t newX = MAX(x, other.x);
 80035a0:	455b      	cmp	r3, fp
            int16_t newY = MAX(y, other.y);

            width = MIN(right(), other.right()) - newX;
 80035a2:	9a06      	ldr	r2, [sp, #24]
 80035a4:	bfb8      	it	lt
 80035a6:	465b      	movlt	r3, fp
            int16_t newY = MAX(y, other.y);
 80035a8:	45d1      	cmp	r9, sl
 80035aa:	bfb8      	it	lt
 80035ac:	46d1      	movlt	r9, sl
            width = MIN(right(), other.right()) - newX;
 80035ae:	45e6      	cmp	lr, ip
 80035b0:	bfd8      	it	le
 80035b2:	4610      	movle	r0, r2
            height = MIN(bottom(), other.bottom()) - newY;
 80035b4:	9a07      	ldr	r2, [sp, #28]
            x = newX;
            y = newY;
 80035b6:	f8ad 9032 	strh.w	r9, [sp, #50]	; 0x32
            width = MIN(right(), other.right()) - newX;
 80035ba:	fa1f fc83 	uxth.w	ip, r3
            height = MIN(bottom(), other.bottom()) - newY;
 80035be:	9b05      	ldr	r3, [sp, #20]
            width = MIN(right(), other.right()) - newX;
 80035c0:	eba0 000c 	sub.w	r0, r0, ip
            height = MIN(bottom(), other.bottom()) - newY;
 80035c4:	42b1      	cmp	r1, r6
 80035c6:	bfd8      	it	le
 80035c8:	4613      	movle	r3, r2
 80035ca:	fa1f f189 	uxth.w	r1, r9
            width = MIN(right(), other.right()) - newX;
 80035ce:	b200      	sxth	r0, r0
            height = MIN(bottom(), other.bottom()) - newY;
 80035d0:	1a5a      	subs	r2, r3, r1
 80035d2:	b212      	sxth	r2, r2
     *
     * @return true if any of the dimensions are 0.
     */
    bool isEmpty() const
    {
        return width <= 0 || height <= 0;
 80035d4:	2800      	cmp	r0, #0
            width = MIN(right(), other.right()) - newX;
 80035d6:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
            height = MIN(bottom(), other.bottom()) - newY;
 80035da:	9305      	str	r3, [sp, #20]
 80035dc:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
        return width <= 0 || height <= 0;
 80035e0:	dd2f      	ble.n	8003642 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x132>
 80035e2:	2a00      	cmp	r2, #0
 80035e4:	dd2d      	ble.n	8003642 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x132>
            invalid.x -= particles[i].getX();
 80035e6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80035e8:	ebac 0302 	sub.w	r3, ip, r2
 80035ec:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
            invalid.y -= particles[i].getY();
 80035f0:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80035f2:	1ac9      	subs	r1, r1, r3
 80035f4:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80035f8:	4915      	ldr	r1, [pc, #84]	; (8003650 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x140>)
 80035fa:	6809      	ldr	r1, [r1, #0]
 80035fc:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 8003600:	b108      	cbz	r0, 8003606 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0xf6>
 8003602:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8003604:	b900      	cbnz	r0, 8003608 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0xf8>
        return instance->lcdRef;
 8003606:	6888      	ldr	r0, [r1, #8]
            HAL::lcd().drawPartialBitmap(Bitmap(particles[i].getBitmap()), meAbs.x + particles[i].getX(), meAbs.y + particles[i].getY(), invalid, (uint8_t)particles[i].alpha);
 8003608:	6801      	ldr	r1, [r0, #0]
 800360a:	688e      	ldr	r6, [r1, #8]
 800360c:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 8003610:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8003614:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8003618:	440b      	add	r3, r1
 800361a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800361e:	440a      	add	r2, r1
 8003620:	2101      	movs	r1, #1
 8003622:	9102      	str	r1, [sp, #8]
 8003624:	edd4 7a1a 	vldr	s15, [r4, #104]	; 0x68
 8003628:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800362c:	b21b      	sxth	r3, r3
 800362e:	edcd 7a05 	vstr	s15, [sp, #20]
 8003632:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8003636:	9101      	str	r1, [sp, #4]
 8003638:	a90c      	add	r1, sp, #48	; 0x30
 800363a:	9100      	str	r1, [sp, #0]
 800363c:	b212      	sxth	r2, r2
 800363e:	a909      	add	r1, sp, #36	; 0x24
 8003640:	47b0      	blx	r6
    for (int i = 0; i < numberOfParticles; i++)
 8003642:	3501      	adds	r5, #1
 8003644:	3448      	adds	r4, #72	; 0x48
 8003646:	e777      	b.n	8003538 <_ZNK14ParticleEffect4drawERKN8touchgfx4RectE+0x28>
}
 8003648:	b00f      	add	sp, #60	; 0x3c
 800364a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800364e:	bf00      	nop
 8003650:	20017750 	.word	0x20017750

08003654 <_ZN8Particle4initEiiibt>:
{
 8003654:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003656:	ed2d 8b06 	vpush	{d8-d10}
 800365a:	b083      	sub	sp, #12
 800365c:	4604      	mov	r4, r0
    float r = (static_cast<float>(randomish(counter)) / RAND_MAX) * (static_cast<float>(randomish(counter)) / RAND_MAX) * 11;
 800365e:	4618      	mov	r0, r3
{
 8003660:	461d      	mov	r5, r3
 8003662:	ee08 2a90 	vmov	s17, r2
 8003666:	ee09 1a10 	vmov	s18, r1
 800366a:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800366e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
    float r = (static_cast<float>(randomish(counter)) / RAND_MAX) * (static_cast<float>(randomish(counter)) / RAND_MAX) * 11;
 8003672:	eddf 9a62 	vldr	s19, [pc, #392]	; 80037fc <_ZN8Particle4initEiiibt+0x1a8>
 8003676:	f7ff fee7 	bl	8003448 <_ZL9randomishl>
 800367a:	ee07 0a90 	vmov	s15, r0
 800367e:	4628      	mov	r0, r5
 8003680:	f7ff fee2 	bl	8003448 <_ZL9randomishl>
 8003684:	ee07 0a10 	vmov	s14, r0
 8003688:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800368c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8003690:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8003694:	ee27 7a29 	vmul.f32	s14, s14, s19
    setBitmap(touchgfx::Bitmap(bmp - 1 * (int)r));
 8003698:	6823      	ldr	r3, [r4, #0]
    float r = (static_cast<float>(randomish(counter)) / RAND_MAX) * (static_cast<float>(randomish(counter)) / RAND_MAX) * 11;
 800369a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800369e:	eeb2 7a06 	vmov.f32	s14, #38	; 0x41300000  11.0
 80036a2:	ee67 7a87 	vmul.f32	s15, s15, s14
    setBitmap(touchgfx::Bitmap(bmp - 1 * (int)r));
 80036a6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80036a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80036ac:	4620      	mov	r0, r4
 80036ae:	ee17 2a90 	vmov	r2, s15
 80036b2:	1a89      	subs	r1, r1, r2
 80036b4:	f8ad 1004 	strh.w	r1, [sp, #4]
 80036b8:	a901      	add	r1, sp, #4
 80036ba:	4798      	blx	r3
    dvdt = 0;
 80036bc:	2700      	movs	r7, #0
        visible = vis;
 80036be:	2301      	movs	r3, #1
    vx = (static_cast<float>(randomish(counter)) / RAND_MAX) * 10.0f * cosf(counter / 50.0f);
 80036c0:	ee07 5a90 	vmov	s15, r5
 80036c4:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
    dvdt = 0;
 80036c8:	62e7      	str	r7, [r4, #44]	; 0x2c
    vx = (static_cast<float>(randomish(counter)) / RAND_MAX) * 10.0f * cosf(counter / 50.0f);
 80036ca:	4628      	mov	r0, r5
 80036cc:	f7ff febc 	bl	8003448 <_ZL9randomishl>
 80036d0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80036d4:	eddf 7a4a 	vldr	s15, [pc, #296]	; 8003800 <_ZN8Particle4initEiiibt+0x1ac>
 80036d8:	eec7 aa27 	vdiv.f32	s21, s14, s15
 80036dc:	ee08 0a10 	vmov	s16, r0
 80036e0:	eeb0 0a6a 	vmov.f32	s0, s21
 80036e4:	f018 f9e6 	bl	801bab4 <cosf>
 80036e8:	eef8 7a48 	vcvt.f32.u32	s15, s16
 80036ec:	eeb2 aa04 	vmov.f32	s20, #36	; 0x41200000  10.0
 80036f0:	ee67 7aa9 	vmul.f32	s15, s15, s19
    vy = (static_cast<float>(randomish(counter)) / RAND_MAX) * 10.0f * sinf(counter / 50.0f);
 80036f4:	4628      	mov	r0, r5
    vx = (static_cast<float>(randomish(counter)) / RAND_MAX) * 10.0f * cosf(counter / 50.0f);
 80036f6:	ee67 7a8a 	vmul.f32	s15, s15, s20
 80036fa:	ee27 0a80 	vmul.f32	s0, s15, s0
 80036fe:	ed84 0a0c 	vstr	s0, [r4, #48]	; 0x30
    vy = (static_cast<float>(randomish(counter)) / RAND_MAX) * 10.0f * sinf(counter / 50.0f);
 8003702:	f7ff fea1 	bl	8003448 <_ZL9randomishl>
 8003706:	ee08 0a10 	vmov	s16, r0
 800370a:	eeb8 8a48 	vcvt.f32.u32	s16, s16
 800370e:	eeb0 0a6a 	vmov.f32	s0, s21
 8003712:	ee28 8a29 	vmul.f32	s16, s16, s19
 8003716:	f018 fa11 	bl	801bb3c <sinf>
 800371a:	ee28 8a0a 	vmul.f32	s16, s16, s20
    if (((float)randomish(counter) / RAND_MAX) < 0.5f)
 800371e:	4628      	mov	r0, r5
    vy = (static_cast<float>(randomish(counter)) / RAND_MAX) * 10.0f * sinf(counter / 50.0f);
 8003720:	ee28 0a00 	vmul.f32	s0, s16, s0
    if (((float)randomish(counter) / RAND_MAX) < 0.5f)
 8003724:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    vy = (static_cast<float>(randomish(counter)) / RAND_MAX) * 10.0f * sinf(counter / 50.0f);
 8003728:	ed84 0a0d 	vstr	s0, [r4, #52]	; 0x34
    if (((float)randomish(counter) / RAND_MAX) < 0.5f)
 800372c:	f7ff fe8c 	bl	8003448 <_ZL9randomishl>
 8003730:	ee07 0a90 	vmov	s15, r0
 8003734:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003738:	ee67 7aa9 	vmul.f32	s15, s15, s19
 800373c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003744:	d50b      	bpl.n	800375e <_ZN8Particle4initEiiibt+0x10a>
        vx = -vx;
 8003746:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 800374a:	eef1 7a67 	vneg.f32	s15, s15
 800374e:	edc4 7a0c 	vstr	s15, [r4, #48]	; 0x30
        vy = -vy;
 8003752:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8003756:	eef1 7a67 	vneg.f32	s15, s15
 800375a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
    x = static_cast<float>(cx) - getWidth() / 2;
 800375e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8003762:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8003766:	105b      	asrs	r3, r3, #1
 8003768:	ee07 3a90 	vmov	s15, r3
 800376c:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8003770:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    y = static_cast<float>(cy) - getHeight() / 2;
 8003774:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
    x = static_cast<float>(cx) - getWidth() / 2;
 8003778:	ee79 7a67 	vsub.f32	s15, s18, s15
    y = static_cast<float>(cy) - getHeight() / 2;
 800377c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8003780:	105b      	asrs	r3, r3, #1
    x = static_cast<float>(cx) - getWidth() / 2;
 8003782:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
    y = static_cast<float>(cy) - getHeight() / 2;
 8003786:	ee07 3a90 	vmov	s15, r3
 800378a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800378e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    alpha = 255;
 8003792:	4b1c      	ldr	r3, [pc, #112]	; (8003804 <_ZN8Particle4initEiiibt+0x1b0>)
 8003794:	6423      	str	r3, [r4, #64]	; 0x40
    y = static_cast<float>(cy) - getHeight() / 2;
 8003796:	ee78 7ae7 	vsub.f32	s15, s17, s15
 800379a:	edc4 7a0f 	vstr	s15, [r4, #60]	; 0x3c
    if (fadeEnabled)
 800379e:	b35e      	cbz	r6, 80037f8 <_ZN8Particle4initEiiibt+0x1a4>
        dalpha = (static_cast<float>(randomish(counter)) / RAND_MAX) * 0.5f + 0.5f;
 80037a0:	4628      	mov	r0, r5
 80037a2:	f7ff fe51 	bl	8003448 <_ZL9randomishl>
 80037a6:	ee07 0a90 	vmov	s15, r0
 80037aa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80037ae:	ee67 9aa9 	vmul.f32	s19, s15, s19
 80037b2:	eea9 7a87 	vfma.f32	s14, s19, s14
 80037b6:	ed84 7a11 	vstr	s14, [r4, #68]	; 0x44
    setAlpha(static_cast<uint8_t>(alpha));
 80037ba:	edd4 7a10 	vldr	s15, [r4, #64]	; 0x40
    moveTo(static_cast<int16_t>(x), static_cast<int16_t>(y));
 80037be:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
    setAlpha(static_cast<uint8_t>(alpha));
 80037c2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    moveTo(static_cast<int16_t>(x), static_cast<int16_t>(y));
 80037c6:	eebd 7ac7 	vcvt.s32.f32	s14, s14
    setAlpha(static_cast<uint8_t>(alpha));
 80037ca:	ee17 3a90 	vmov	r3, s15
    moveTo(static_cast<int16_t>(x), static_cast<int16_t>(y));
 80037ce:	edd4 7a0e 	vldr	s15, [r4, #56]	; 0x38
    setAlpha(static_cast<uint8_t>(alpha));
 80037d2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
    moveTo(static_cast<int16_t>(x), static_cast<int16_t>(y));
 80037d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80037da:	6823      	ldr	r3, [r4, #0]
 80037dc:	ee17 2a10 	vmov	r2, s14
 80037e0:	ee17 1a90 	vmov	r1, s15
 80037e4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80037e6:	b212      	sxth	r2, r2
 80037e8:	b209      	sxth	r1, r1
 80037ea:	4620      	mov	r0, r4
}
 80037ec:	b003      	add	sp, #12
 80037ee:	ecbd 8b06 	vpop	{d8-d10}
 80037f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    moveTo(static_cast<int16_t>(x), static_cast<int16_t>(y));
 80037f6:	4718      	bx	r3
        dalpha = 0;
 80037f8:	6467      	str	r7, [r4, #68]	; 0x44
 80037fa:	e7de      	b.n	80037ba <_ZN8Particle4initEiiibt+0x166>
 80037fc:	30000000 	.word	0x30000000
 8003800:	42480000 	.word	0x42480000
 8003804:	437f0000 	.word	0x437f0000

08003808 <_ZN8Particle6updateEv>:
    dvdt *= 0.9f;
 8003808:	edd0 7a0b 	vldr	s15, [r0, #44]	; 0x2c
 800380c:	ed9f 7a20 	vldr	s14, [pc, #128]	; 8003890 <_ZN8Particle6updateEv+0x88>
    vy += dvdt;
 8003810:	edd0 6a0d 	vldr	s13, [r0, #52]	; 0x34
    alpha -= dalpha;
 8003814:	ed90 6a11 	vldr	s12, [r0, #68]	; 0x44
    moveTo((int16_t)x, (int16_t)y);
 8003818:	6803      	ldr	r3, [r0, #0]
    dvdt *= 0.9f;
 800381a:	ee67 7a87 	vmul.f32	s15, s15, s14
    vx += dvdt;
 800381e:	ed90 7a0c 	vldr	s14, [r0, #48]	; 0x30
    dvdt *= 0.9f;
 8003822:	edc0 7a0b 	vstr	s15, [r0, #44]	; 0x2c
    vx += dvdt;
 8003826:	ee37 7a87 	vadd.f32	s14, s15, s14
    vy += dvdt;
 800382a:	ee77 7aa6 	vadd.f32	s15, s15, s13
    x += vx;
 800382e:	edd0 6a0e 	vldr	s13, [r0, #56]	; 0x38
    vx += dvdt;
 8003832:	ed80 7a0c 	vstr	s14, [r0, #48]	; 0x30
    x += vx;
 8003836:	ee37 7a26 	vadd.f32	s14, s14, s13
    y += vy;
 800383a:	edd0 6a0f 	vldr	s13, [r0, #60]	; 0x3c
    vy += dvdt;
 800383e:	edc0 7a0d 	vstr	s15, [r0, #52]	; 0x34
    y += vy;
 8003842:	ee77 7aa6 	vadd.f32	s15, s15, s13
    alpha -= dalpha;
 8003846:	edd0 6a10 	vldr	s13, [r0, #64]	; 0x40
    x += vx;
 800384a:	ed80 7a0e 	vstr	s14, [r0, #56]	; 0x38
    alpha -= dalpha;
 800384e:	ee36 6ac6 	vsub.f32	s12, s13, s12
    if (alpha <= 0.0f)
 8003852:	eddf 6a10 	vldr	s13, [pc, #64]	; 8003894 <_ZN8Particle6updateEv+0x8c>
    y += vy;
 8003856:	edc0 7a0f 	vstr	s15, [r0, #60]	; 0x3c
    alpha -= dalpha;
 800385a:	eeb4 6ae6 	vcmpe.f32	s12, s13
 800385e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003862:	bf88      	it	hi
 8003864:	eef0 6a46 	vmovhi.f32	s13, s12
 8003868:	edc0 6a10 	vstr	s13, [r0, #64]	; 0x40
    setAlpha((uint8_t)alpha);
 800386c:	eefc 6ae6 	vcvt.u32.f32	s13, s13
    moveTo((int16_t)x, (int16_t)y);
 8003870:	eefd 7ae7 	vcvt.s32.f32	s15, s15
    setAlpha((uint8_t)alpha);
 8003874:	ee16 2a90 	vmov	r2, s13
    moveTo((int16_t)x, (int16_t)y);
 8003878:	eebd 7ac7 	vcvt.s32.f32	s14, s14
    setAlpha((uint8_t)alpha);
 800387c:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
    moveTo((int16_t)x, (int16_t)y);
 8003880:	ee17 1a10 	vmov	r1, s14
 8003884:	ee17 2a90 	vmov	r2, s15
 8003888:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800388a:	b212      	sxth	r2, r2
 800388c:	b209      	sxth	r1, r1
 800388e:	4718      	bx	r3
 8003890:	3f666666 	.word	0x3f666666
 8003894:	00000000 	.word	0x00000000

08003898 <_ZN8Particle4doneEii>:
    return alpha <= 0.0f || x + getWidth() < 0 || x > maxX || y + getHeight() < 0 || y > maxY;
 8003898:	edd0 6a10 	vldr	s13, [r0, #64]	; 0x40
 800389c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80038a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
{
 80038a4:	ee07 1a10 	vmov	s14, r1
 80038a8:	ee07 2a90 	vmov	s15, r2
    return alpha <= 0.0f || x + getWidth() < 0 || x > maxX || y + getHeight() < 0 || y > maxY;
 80038ac:	d92e      	bls.n	800390c <_ZN8Particle4doneEii+0x74>
 80038ae:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80038b2:	ed90 6a0e 	vldr	s12, [r0, #56]	; 0x38
 80038b6:	ee06 3a90 	vmov	s13, r3
 80038ba:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80038be:	ee76 6a86 	vadd.f32	s13, s13, s12
 80038c2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80038c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038ca:	d41f      	bmi.n	800390c <_ZN8Particle4doneEii+0x74>
 80038cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80038d0:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80038d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038d8:	dc18      	bgt.n	800390c <_ZN8Particle4doneEii+0x74>
 80038da:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80038de:	edd0 6a0f 	vldr	s13, [r0, #60]	; 0x3c
 80038e2:	ee07 3a10 	vmov	s14, r3
 80038e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80038ea:	ee37 7a26 	vadd.f32	s14, s14, s13
 80038ee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80038f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038f6:	d409      	bmi.n	800390c <_ZN8Particle4doneEii+0x74>
 80038f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80038fc:	eef4 6ae7 	vcmpe.f32	s13, s15
 8003900:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003904:	bfcc      	ite	gt
 8003906:	2001      	movgt	r0, #1
 8003908:	2000      	movle	r0, #0
 800390a:	4770      	bx	lr
 800390c:	2001      	movs	r0, #1
}
 800390e:	4770      	bx	lr

08003910 <_ZN14ParticleEffect15handleTickEventEv>:
{
 8003910:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    counter++;
 8003914:	f500 4580 	add.w	r5, r0, #16384	; 0x4000
    invalidate();
 8003918:	4604      	mov	r4, r0
    counter++;
 800391a:	f8d5 3694 	ldr.w	r3, [r5, #1684]	; 0x694
    if (++count > numberOfParticles)
 800391e:	f8df 9094 	ldr.w	r9, [pc, #148]	; 80039b4 <_ZN14ParticleEffect15handleTickEventEv+0xa4>
        if (sum > maxsum)
 8003922:	f8df a094 	ldr.w	sl, [pc, #148]	; 80039b8 <_ZN14ParticleEffect15handleTickEventEv+0xa8>
    counter++;
 8003926:	3301      	adds	r3, #1
 8003928:	f8c5 3694 	str.w	r3, [r5, #1684]	; 0x694
    invalidate();
 800392c:	f854 3b28 	ldr.w	r3, [r4], #40
 8003930:	695b      	ldr	r3, [r3, #20]
{
 8003932:	4606      	mov	r6, r0
    invalidate();
 8003934:	4798      	blx	r3
    if (++count > numberOfParticles)
 8003936:	f8d9 3000 	ldr.w	r3, [r9]
 800393a:	f8d5 2678 	ldr.w	r2, [r5, #1656]	; 0x678
 800393e:	3301      	adds	r3, #1
{
 8003940:	2700      	movs	r7, #0
        count = numberOfParticles;
 8003942:	429a      	cmp	r2, r3
 8003944:	bfd4      	ite	le
 8003946:	f8c9 2000 	strle.w	r2, [r9]
 800394a:	f8c9 3000 	strgt.w	r3, [r9]
{
 800394e:	46b8      	mov	r8, r7
    for (int i = 0; i < count; i++)
 8003950:	f8d9 3000 	ldr.w	r3, [r9]
 8003954:	42bb      	cmp	r3, r7
 8003956:	dd2a      	ble.n	80039ae <_ZN14ParticleEffect15handleTickEventEv+0x9e>
        if (spawnActive && particles[i].done(getWidth(), getHeight()))
 8003958:	f895 3685 	ldrb.w	r3, [r5, #1669]	; 0x685
 800395c:	b31b      	cbz	r3, 80039a6 <_ZN14ParticleEffect15handleTickEventEv+0x96>
 800395e:	f9b6 200a 	ldrsh.w	r2, [r6, #10]
 8003962:	f9b6 1008 	ldrsh.w	r1, [r6, #8]
 8003966:	4620      	mov	r0, r4
 8003968:	f7ff ff96 	bl	8003898 <_ZN8Particle4doneEii>
 800396c:	b1d8      	cbz	r0, 80039a6 <_ZN14ParticleEffect15handleTickEventEv+0x96>
            particles[i].init(cx, cy, counter, fadeParticles, endParticleBitmap);
 800396e:	f8b5 3688 	ldrh.w	r3, [r5, #1672]	; 0x688
 8003972:	9301      	str	r3, [sp, #4]
 8003974:	f895 3686 	ldrb.w	r3, [r5, #1670]	; 0x686
 8003978:	9300      	str	r3, [sp, #0]
 800397a:	f8d5 3694 	ldr.w	r3, [r5, #1684]	; 0x694
 800397e:	f8d5 2690 	ldr.w	r2, [r5, #1680]	; 0x690
 8003982:	f8d5 168c 	ldr.w	r1, [r5, #1676]	; 0x68c
 8003986:	4620      	mov	r0, r4
 8003988:	f7ff fe64 	bl	8003654 <_ZN8Particle4initEiiibt>
        sum += particles[i].getWidth() * particles[i].getHeight();
 800398c:	8963      	ldrh	r3, [r4, #10]
 800398e:	8922      	ldrh	r2, [r4, #8]
 8003990:	fb12 8803 	smlabb	r8, r2, r3, r8
        if (sum > maxsum)
 8003994:	f8da 3000 	ldr.w	r3, [sl]
 8003998:	4543      	cmp	r3, r8
            maxsum = sum;
 800399a:	bfb8      	it	lt
 800399c:	f8ca 8000 	strlt.w	r8, [sl]
    for (int i = 0; i < count; i++)
 80039a0:	3701      	adds	r7, #1
 80039a2:	3448      	adds	r4, #72	; 0x48
 80039a4:	e7d4      	b.n	8003950 <_ZN14ParticleEffect15handleTickEventEv+0x40>
            particles[i].update();
 80039a6:	4620      	mov	r0, r4
 80039a8:	f7ff ff2e 	bl	8003808 <_ZN8Particle6updateEv>
 80039ac:	e7ee      	b.n	800398c <_ZN14ParticleEffect15handleTickEventEv+0x7c>
}
 80039ae:	b002      	add	sp, #8
 80039b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039b4:	200069e0 	.word	0x200069e0
 80039b8:	200069e4 	.word	0x200069e4

080039bc <_ZN14ParticleEffectC1Ev>:
        : x(0), y(0), width(0), height(0)
 80039bc:	2300      	movs	r3, #0
ParticleEffect::ParticleEffect() :
 80039be:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039c2:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80039c6:	e9c0 3303 	strd	r3, r3, [r0, #12]
          visible(true)
 80039ca:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80039ce:	e9c0 3307 	strd	r3, r3, [r0, #28]
    counter(0)
 80039d2:	4604      	mov	r4, r0
 80039d4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80039d8:	8483      	strh	r3, [r0, #36]	; 0x24
 80039da:	4b2a      	ldr	r3, [pc, #168]	; (8003a84 <_ZN14ParticleEffectC1Ev+0xc8>)
 80039dc:	f844 3b28 	str.w	r3, [r4], #40
 80039e0:	f500 488c 	add.w	r8, r0, #17920	; 0x4600
        : Widget(), bitmap(bmp), alpha(255)
 80039e4:	f8df b0a0 	ldr.w	fp, [pc, #160]	; 8003a88 <_ZN14ParticleEffectC1Ev+0xcc>
 80039e8:	f8df a0a0 	ldr.w	sl, [pc, #160]	; 8003a8c <_ZN14ParticleEffectC1Ev+0xd0>
ParticleEffect::ParticleEffect() :
 80039ec:	4606      	mov	r6, r0
 80039ee:	f108 0878 	add.w	r8, r8, #120	; 0x78
 80039f2:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80039f6:	2500      	movs	r5, #0
 80039f8:	2701      	movs	r7, #1
 80039fa:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80039fe:	80a5      	strh	r5, [r4, #4]
 8003a00:	80e5      	strh	r5, [r4, #6]
 8003a02:	8125      	strh	r5, [r4, #8]
 8003a04:	8165      	strh	r5, [r4, #10]
 8003a06:	81a5      	strh	r5, [r4, #12]
 8003a08:	81e5      	strh	r5, [r4, #14]
 8003a0a:	8225      	strh	r5, [r4, #16]
 8003a0c:	8265      	strh	r5, [r4, #18]
 8003a0e:	61e5      	str	r5, [r4, #28]
 8003a10:	8425      	strh	r5, [r4, #32]
 8003a12:	8465      	strh	r5, [r4, #34]	; 0x22
 8003a14:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003a18:	f884 7025 	strb.w	r7, [r4, #37]	; 0x25
 8003a1c:	f8c4 b000 	str.w	fp, [r4]
 8003a20:	f8a4 9026 	strh.w	r9, [r4, #38]	; 0x26
 8003a24:	f884 9028 	strb.w	r9, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8003a28:	4620      	mov	r0, r4
 8003a2a:	a901      	add	r1, sp, #4
 8003a2c:	f8ad 9004 	strh.w	r9, [sp, #4]
 8003a30:	f007 fbe5 	bl	800b1fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003a34:	f844 ab48 	str.w	sl, [r4], #72
    counter(0)
 8003a38:	4544      	cmp	r4, r8
 8003a3a:	d1dc      	bne.n	80039f6 <_ZN14ParticleEffectC1Ev+0x3a>
 8003a3c:	f506 4380 	add.w	r3, r6, #16384	; 0x4000
 8003a40:	22fa      	movs	r2, #250	; 0xfa
 8003a42:	f8c3 2678 	str.w	r2, [r3, #1656]	; 0x678
 8003a46:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003a4a:	f8a3 2684 	strh.w	r2, [r3, #1668]	; 0x684
 8003a4e:	220c      	movs	r2, #12
 8003a50:	f8c3 567c 	str.w	r5, [r3, #1660]	; 0x67c
 8003a54:	f8c3 5680 	str.w	r5, [r3, #1664]	; 0x680
 8003a58:	f883 7686 	strb.w	r7, [r3, #1670]	; 0x686
 8003a5c:	f8a3 2688 	strh.w	r2, [r3, #1672]	; 0x688
 8003a60:	f8c3 568c 	str.w	r5, [r3, #1676]	; 0x68c
 8003a64:	f8c3 5690 	str.w	r5, [r3, #1680]	; 0x690
 8003a68:	f8c3 5694 	str.w	r5, [r3, #1684]	; 0x694
    Application::getInstance()->registerTimerWidget(this);
 8003a6c:	f009 f8ea 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 8003a70:	4631      	mov	r1, r6
 8003a72:	3004      	adds	r0, #4
 8003a74:	f009 f9b4 	bl	800cde0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
}
 8003a78:	4630      	mov	r0, r6
        touchable = touch;
 8003a7a:	f886 7024 	strb.w	r7, [r6, #36]	; 0x24
 8003a7e:	b003      	add	sp, #12
 8003a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a84:	0801eb20 	.word	0x0801eb20
 8003a88:	0801f438 	.word	0x0801f438
 8003a8c:	0801eab4 	.word	0x0801eab4

08003a90 <_ZN14ParticleEffect20setNumberOfParticlesEi>:
    if (numberOfParticles > MAX_NUMBER_OF_PARTICLES)
 8003a90:	29fa      	cmp	r1, #250	; 0xfa
 8003a92:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
        numberOfParticles = MAX_NUMBER_OF_PARTICLES;
 8003a96:	bfca      	itet	gt
 8003a98:	23fa      	movgt	r3, #250	; 0xfa
    numberOfParticles = particles;
 8003a9a:	f8c0 1678 	strle.w	r1, [r0, #1656]	; 0x678
        numberOfParticles = MAX_NUMBER_OF_PARTICLES;
 8003a9e:	f8c0 3678 	strgt.w	r3, [r0, #1656]	; 0x678
}
 8003aa2:	4770      	bx	lr

08003aa4 <_ZN14ParticleEffect9setCenterEii>:
    cx = x;
 8003aa4:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
 8003aa8:	f8c0 168c 	str.w	r1, [r0, #1676]	; 0x68c
    cy = y;
 8003aac:	f8c0 2690 	str.w	r2, [r0, #1680]	; 0x690
}
 8003ab0:	4770      	bx	lr

08003ab2 <_ZN14ParticleEffect15setSnapToOriginEb>:

void ParticleEffect::setSnapToOrigin(bool snap)
{
    snapToOrigin = snap;
 8003ab2:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
 8003ab6:	f880 1684 	strb.w	r1, [r0, #1668]	; 0x684
}
 8003aba:	4770      	bx	lr

08003abc <_ZN14ParticleEffect9setOriginEii>:

void ParticleEffect::setOrigin(int oX, int oY)
{
    originX = oX;
 8003abc:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
 8003ac0:	f8c0 167c 	str.w	r1, [r0, #1660]	; 0x67c
    originY = oY;
 8003ac4:	f8c0 2680 	str.w	r2, [r0, #1664]	; 0x680
}
 8003ac8:	4770      	bx	lr

08003aca <_ZN14ParticleEffect17spawnNewParticlesEb>:

void ParticleEffect::spawnNewParticles(bool spawn)
{
    spawnActive = spawn;
 8003aca:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
 8003ace:	f880 1685 	strb.w	r1, [r0, #1669]	; 0x685
}
 8003ad2:	4770      	bx	lr

08003ad4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8003ad4:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8003ad6:	4770      	bx	lr

08003ad8 <_ZN32TextAreaWithOneWildcardContainer8setWidthEs>:
        add(text);
        setWidth(216);
        setHeight(50);
    }

    virtual void setWidth(int16_t width)
 8003ad8:	b510      	push	{r4, lr}
 8003ada:	4604      	mov	r4, r0
        rect.width = width;
 8003adc:	8101      	strh	r1, [r0, #8]
    {
        Container::setWidth(width);
        text.setWidth(width);
 8003ade:	302c      	adds	r0, #44	; 0x2c
 8003ae0:	f7fe fbe1 	bl	80022a6 <_ZN8touchgfx8TextArea8setWidthEs>
        invalidate();
 8003ae4:	6823      	ldr	r3, [r4, #0]
 8003ae6:	4620      	mov	r0, r4
 8003ae8:	695b      	ldr	r3, [r3, #20]
    }
 8003aea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        invalidate();
 8003aee:	4718      	bx	r3

08003af0 <_ZN32TextAreaWithOneWildcardContainer9setHeightEs>:
    virtual void setHeight(int16_t height)
 8003af0:	b510      	push	{r4, lr}
 8003af2:	4604      	mov	r4, r0
        rect.height = height;
 8003af4:	8141      	strh	r1, [r0, #10]
    {
        Container::setHeight(height);
        text.setHeight(height);
 8003af6:	302c      	adds	r0, #44	; 0x2c
 8003af8:	f7fe fbe7 	bl	80022ca <_ZN8touchgfx8TextArea9setHeightEs>
        invalidate();
 8003afc:	6823      	ldr	r3, [r4, #0]
 8003afe:	4620      	mov	r0, r4
 8003b00:	695b      	ldr	r3, [r3, #20]
    }
 8003b02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        invalidate();
 8003b06:	4718      	bx	r3

08003b08 <_ZN32TextAreaWithOneWildcardContainerD1Ev>:
class TextAreaWithOneWildcardContainer : public Container
 8003b08:	4770      	bx	lr

08003b0a <_ZN8touchgfx8CallbackI20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEiPPNS_9ContainerEvED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8003b0a:	4770      	bx	lr

08003b0c <_ZN23ParticlesScrollingWheelD1Ev>:
 8003b0c:	b510      	push	{r4, lr}
 8003b0e:	4b06      	ldr	r3, [pc, #24]	; (8003b28 <_ZN23ParticlesScrollingWheelD1Ev+0x1c>)
 8003b10:	6003      	str	r3, [r0, #0]
 8003b12:	4604      	mov	r4, r0
 8003b14:	f500 60fb 	add.w	r0, r0, #2008	; 0x7d8
 8003b18:	f7ff f9ee 	bl	8002ef8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED1Ev>
 8003b1c:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 8003b20:	f7ff f9ea 	bl	8002ef8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EED1Ev>
 8003b24:	4620      	mov	r0, r4
 8003b26:	bd10      	pop	{r4, pc}
 8003b28:	0801edbc 	.word	0x0801edbc

08003b2c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003b2c:	4770      	bx	lr

08003b2e <_ZN8touchgfx8CallbackI20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEiPPNS_9ContainerEvE7executeEiS6_>:
    virtual void execute(T1 t1, T2 t2)
 8003b2e:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8003b30:	68c4      	ldr	r4, [r0, #12]
 8003b32:	6845      	ldr	r5, [r0, #4]
 8003b34:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 8003b36:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1, t2);
 8003b38:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8003b3c:	07e4      	lsls	r4, r4, #31
 8003b3e:	bf48      	it	mi
 8003b40:	59ac      	ldrmi	r4, [r5, r6]
 8003b42:	689b      	ldr	r3, [r3, #8]
 8003b44:	bf48      	it	mi
 8003b46:	58e3      	ldrmi	r3, [r4, r3]
    }
 8003b48:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8003b4a:	4718      	bx	r3

08003b4c <_ZNK8touchgfx8CallbackI20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEiPPNS_9ContainerEvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003b4c:	6843      	ldr	r3, [r0, #4]
 8003b4e:	b12b      	cbz	r3, 8003b5c <_ZNK8touchgfx8CallbackI20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEiPPNS_9ContainerEvE7isValidEv+0x10>
 8003b50:	6883      	ldr	r3, [r0, #8]
 8003b52:	b92b      	cbnz	r3, 8003b60 <_ZNK8touchgfx8CallbackI20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEiPPNS_9ContainerEvE7isValidEv+0x14>
 8003b54:	68c0      	ldr	r0, [r0, #12]
 8003b56:	f000 0001 	and.w	r0, r0, #1
 8003b5a:	4770      	bx	lr
 8003b5c:	4618      	mov	r0, r3
 8003b5e:	4770      	bx	lr
 8003b60:	2001      	movs	r0, #1
    }
 8003b62:	4770      	bx	lr

08003b64 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003b64:	b510      	push	{r4, lr}
 8003b66:	214c      	movs	r1, #76	; 0x4c
 8003b68:	4604      	mov	r4, r0
 8003b6a:	f017 ff7b 	bl	801ba64 <_ZdlPvj>
 8003b6e:	4620      	mov	r0, r4
 8003b70:	bd10      	pop	{r4, pc}

08003b72 <_ZN32TextAreaWithOneWildcardContainerD0Ev>:
 8003b72:	b510      	push	{r4, lr}
 8003b74:	2184      	movs	r1, #132	; 0x84
 8003b76:	4604      	mov	r4, r0
 8003b78:	f017 ff74 	bl	801ba64 <_ZdlPvj>
 8003b7c:	4620      	mov	r0, r4
 8003b7e:	bd10      	pop	{r4, pc}

08003b80 <_ZN8touchgfx8CallbackI20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEiPPNS_9ContainerEvED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8003b80:	b510      	push	{r4, lr}
 8003b82:	2110      	movs	r1, #16
 8003b84:	4604      	mov	r4, r0
 8003b86:	f017 ff6d 	bl	801ba64 <_ZdlPvj>
 8003b8a:	4620      	mov	r0, r4
 8003b8c:	bd10      	pop	{r4, pc}

08003b8e <_ZN23ParticlesScrollingWheelD0Ev>:
 8003b8e:	b510      	push	{r4, lr}
 8003b90:	4604      	mov	r4, r0
 8003b92:	f7ff ffbb 	bl	8003b0c <_ZN23ParticlesScrollingWheelD1Ev>
 8003b96:	4620      	mov	r0, r4
 8003b98:	f640 5114 	movw	r1, #3348	; 0xd14
 8003b9c:	f017 ff62 	bl	801ba64 <_ZdlPvj>
 8003ba0:	4620      	mov	r0, r4
 8003ba2:	bd10      	pop	{r4, pc}

08003ba4 <_ZN23ParticlesScrollingWheel37initializeBackgroundScrollingMenuItemEii>:
    }
}

void ParticlesScrollingWheel::initializeBackgroundScrollingMenuItem(int containerIndex, int itemIndex)
{
    Unicode::snprintf(backgroundScrollingMenuItems.element[containerIndex].textBuffer,
 8003ba4:	2384      	movs	r3, #132	; 0x84
 8003ba6:	fb03 0001 	mla	r0, r3, r1, r0
{
 8003baa:	b410      	push	{r4}
                      centerScrollingMenuItems.element[containerIndex].TEXT_SIZE, "%i", indexToValue(itemIndex));
}

int ParticlesScrollingWheel::indexToValue(int index)
{
    return (index + 1) * VALUE_INTERVAL;
 8003bac:	2419      	movs	r4, #25
    Unicode::snprintf(backgroundScrollingMenuItems.element[containerIndex].textBuffer,
 8003bae:	fb02 4304 	mla	r3, r2, r4, r4
 8003bb2:	2106      	movs	r1, #6
 8003bb4:	4a03      	ldr	r2, [pc, #12]	; (8003bc4 <_ZN23ParticlesScrollingWheel37initializeBackgroundScrollingMenuItemEii+0x20>)
}
 8003bb6:	f85d 4b04 	ldr.w	r4, [sp], #4
    Unicode::snprintf(backgroundScrollingMenuItems.element[containerIndex].textBuffer,
 8003bba:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8003bbe:	f00c b89f 	b.w	800fd00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003bc2:	bf00      	nop
 8003bc4:	0801eb80 	.word	0x0801eb80

08003bc8 <_ZN23ParticlesScrollingWheel33initializeCenterScrollingMenuItemEii>:
    Unicode::snprintf(centerScrollingMenuItems.element[containerIndex].textBuffer,
 8003bc8:	2384      	movs	r3, #132	; 0x84
 8003bca:	fb03 0001 	mla	r0, r3, r1, r0
{
 8003bce:	b410      	push	{r4}
    return (index + 1) * VALUE_INTERVAL;
 8003bd0:	2419      	movs	r4, #25
    Unicode::snprintf(centerScrollingMenuItems.element[containerIndex].textBuffer,
 8003bd2:	fb02 4304 	mla	r3, r2, r4, r4
 8003bd6:	2106      	movs	r1, #6
 8003bd8:	4a03      	ldr	r2, [pc, #12]	; (8003be8 <_ZN23ParticlesScrollingWheel33initializeCenterScrollingMenuItemEii+0x20>)
}
 8003bda:	f85d 4b04 	ldr.w	r4, [sp], #4
    Unicode::snprintf(centerScrollingMenuItems.element[containerIndex].textBuffer,
 8003bde:	f600 0054 	addw	r0, r0, #2132	; 0x854
 8003be2:	f00c b88d 	b.w	800fd00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003be6:	bf00      	nop
 8003be8:	0801eb80 	.word	0x0801eb80

08003bec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003bec:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003bee:	f7fd fb1b 	bl	8001228 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003bf2:	bd08      	pop	{r3, pc}

08003bf4 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EE10getElementEiPPN8touchgfx9ContainerE>:
     * @param containerIndex     Zero-based index of the container.
     * @param [in,out] container If non-null, the container.
     */
    void getElement(int containerIndex, Container** container)
    {
        assert(containerIndex >= 0 && containerIndex < S);
 8003bf4:	2909      	cmp	r1, #9
    void getElement(int containerIndex, Container** container)
 8003bf6:	b508      	push	{r3, lr}
        assert(containerIndex >= 0 && containerIndex < S);
 8003bf8:	d905      	bls.n	8003c06 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EE10getElementEiPPN8touchgfx9ContainerE+0x12>
 8003bfa:	4b06      	ldr	r3, [pc, #24]	; (8003c14 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EE10getElementEiPPN8touchgfx9ContainerE+0x20>)
 8003bfc:	4a06      	ldr	r2, [pc, #24]	; (8003c18 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EE10getElementEiPPN8touchgfx9ContainerE+0x24>)
 8003bfe:	4807      	ldr	r0, [pc, #28]	; (8003c1c <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EE10getElementEiPPN8touchgfx9ContainerE+0x28>)
 8003c00:	2135      	movs	r1, #53	; 0x35
 8003c02:	f018 fcff 	bl	801c604 <__assert_func>
        *container = &element[containerIndex];
 8003c06:	2384      	movs	r3, #132	; 0x84
 8003c08:	fb03 0001 	mla	r0, r3, r1, r0
 8003c0c:	3004      	adds	r0, #4
 8003c0e:	6010      	str	r0, [r2, #0]
    }
 8003c10:	bd08      	pop	{r3, pc}
 8003c12:	bf00      	nop
 8003c14:	0801eb83 	.word	0x0801eb83
 8003c18:	0801ebad 	.word	0x0801ebad
 8003c1c:	0801ec2d 	.word	0x0801ec2d

08003c20 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003c20:	2200      	movs	r2, #0
 8003c22:	f04f 31ff 	mov.w	r1, #4294967295
 8003c26:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8003c2a:	6082      	str	r2, [r0, #8]
    }
 8003c2c:	4770      	bx	lr

08003c2e <_ZN32TextAreaWithOneWildcardContainer12setTypedTextEN8touchgfx9TypedTextE>:

    void setTypedText(TypedText t)
 8003c2e:	b510      	push	{r4, lr}
 8003c30:	4604      	mov	r4, r0
    {
        text.setTypedText(t);
 8003c32:	302c      	adds	r0, #44	; 0x2c
 8003c34:	f007 f960 	bl	800aef8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        invalidate();
 8003c38:	6823      	ldr	r3, [r4, #0]
 8003c3a:	4620      	mov	r0, r4
 8003c3c:	695b      	ldr	r3, [r3, #20]
    }
 8003c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        invalidate();
 8003c42:	4718      	bx	r3

08003c44 <_ZN23ParticlesScrollingWheel16getSelectedValueEv>:
{
    return MAX(0, (value / VALUE_INTERVAL) - 1);
}

int ParticlesScrollingWheel::getSelectedValue()
{
 8003c44:	b508      	push	{r3, lr}
    return indexToValue(centerScrollingMenu.getSelectedItem());
 8003c46:	f500 70b8 	add.w	r0, r0, #368	; 0x170
 8003c4a:	f000 fa10 	bl	800406e <_ZNK13ScrollingMenu15getSelectedItemEv>
    return (index + 1) * VALUE_INTERVAL;
 8003c4e:	2319      	movs	r3, #25
}
 8003c50:	fb00 3003 	mla	r0, r0, r3, r3
 8003c54:	bd08      	pop	{r3, pc}

08003c56 <_ZN23ParticlesScrollingWheel16setSelectedValueEi>:
    return MAX(0, (value / VALUE_INTERVAL) - 1);
 8003c56:	2918      	cmp	r1, #24

int ParticlesScrollingWheel::setSelectedValue(int value)
{
 8003c58:	b538      	push	{r3, r4, r5, lr}
    return MAX(0, (value / VALUE_INTERVAL) - 1);
 8003c5a:	bfc9      	itett	gt
 8003c5c:	2419      	movgt	r4, #25
 8003c5e:	2400      	movle	r4, #0
 8003c60:	fb91 f1f4 	sdivgt	r1, r1, r4
 8003c64:	f101 34ff 	addgt.w	r4, r1, #4294967295
{
 8003c68:	4605      	mov	r5, r0
    backgroundScrollingMenu.setSelectedItem(valueToIndex(value));
 8003c6a:	4621      	mov	r1, r4
 8003c6c:	3084      	adds	r0, #132	; 0x84
 8003c6e:	f000 fb57 	bl	8004320 <_ZN13ScrollingMenu15setSelectedItemEi>
    centerScrollingMenu.setSelectedItem(valueToIndex(value));
 8003c72:	f505 70b8 	add.w	r0, r5, #368	; 0x170
 8003c76:	4621      	mov	r1, r4
 8003c78:	f000 fb52 	bl	8004320 <_ZN13ScrollingMenu15setSelectedItemEi>
    return (index + 1) * VALUE_INTERVAL;
 8003c7c:	2019      	movs	r0, #25

    // Return the actual value that has been set. Only
    // values as multiple of VALUE_INTERVAL is allowed
    return indexToValue(valueToIndex(value));
}
 8003c7e:	fb04 0000 	mla	r0, r4, r0, r0
 8003c82:	bd38      	pop	{r3, r4, r5, pc}

08003c84 <_ZN23ParticlesScrollingWheel8getAlphaEv>:

uint8_t ParticlesScrollingWheel::getAlpha()
{
    return background.getAlpha();
}
 8003c84:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8003c88:	4770      	bx	lr

08003c8a <_ZN23ParticlesScrollingWheel8setAlphaEh>:
        alpha = newAlpha;
 8003c8a:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8003c8e:	f880 1080 	strb.w	r1, [r0, #128]	; 0x80
void ParticlesScrollingWheel::setAlpha(uint8_t alpha)
{
    background.setAlpha(alpha);
    shadowOverlay.setAlpha(alpha);

    for (int i = 0; i < NUMBER_OF_ITEMS; i++)
 8003c92:	f500 63a5 	add.w	r3, r0, #1320	; 0x528
        alpha = newAlpha;
 8003c96:	f880 1302 	strb.w	r1, [r0, #770]	; 0x302
 8003c9a:	f880 183e 	strb.w	r1, [r0, #2110]	; 0x83e
 8003c9e:	3084      	adds	r0, #132	; 0x84
 8003ca0:	4298      	cmp	r0, r3
 8003ca2:	d1f8      	bne.n	8003c96 <_ZN23ParticlesScrollingWheel8setAlphaEh+0xc>
    {
        backgroundScrollingMenuItems.element[i].text.setAlpha(alpha);
        centerScrollingMenuItems.element[i].text.setAlpha(alpha);
    }
}
 8003ca4:	4770      	bx	lr
	...

08003ca8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev>:
    SparseContainerItems() : getElementCallback(this, &SparseContainerItems::getElement) {}
 8003ca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cac:	4604      	mov	r4, r0
 8003cae:	4b38      	ldr	r3, [pc, #224]	; (8003d90 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev+0xe8>)
 8003cb0:	f844 3b04 	str.w	r3, [r4], #4
    {
 8003cb4:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8003d9c <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev+0xf4>
        : typedTextId(id)
 8003cb8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003da0 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev+0xf8>
        : TextAreaWithWildcardBase(), wc1(0)
 8003cbc:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8003da4 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev+0xfc>
 8003cc0:	4606      	mov	r6, r0
 8003cc2:	f200 572c 	addw	r7, r0, #1324	; 0x52c
          visible(true)
 8003cc6:	2301      	movs	r3, #1
 8003cc8:	2500      	movs	r5, #0
 8003cca:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 8003cce:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 8003cd2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003cd6:	80a5      	strh	r5, [r4, #4]
 8003cd8:	80e5      	strh	r5, [r4, #6]
 8003cda:	8125      	strh	r5, [r4, #8]
 8003cdc:	8165      	strh	r5, [r4, #10]
 8003cde:	81a5      	strh	r5, [r4, #12]
 8003ce0:	81e5      	strh	r5, [r4, #14]
 8003ce2:	8225      	strh	r5, [r4, #16]
 8003ce4:	8265      	strh	r5, [r4, #18]
 8003ce6:	61e5      	str	r5, [r4, #28]
 8003ce8:	8425      	strh	r5, [r4, #32]
 8003cea:	8465      	strh	r5, [r4, #34]	; 0x22
 8003cec:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003cf0:	62a5      	str	r5, [r4, #40]	; 0x28
 8003cf2:	f8c4 a000 	str.w	sl, [r4]
 8003cf6:	8625      	strh	r5, [r4, #48]	; 0x30
 8003cf8:	8665      	strh	r5, [r4, #50]	; 0x32
 8003cfa:	86a5      	strh	r5, [r4, #52]	; 0x34
 8003cfc:	86e5      	strh	r5, [r4, #54]	; 0x36
 8003cfe:	8725      	strh	r5, [r4, #56]	; 0x38
 8003d00:	8765      	strh	r5, [r4, #58]	; 0x3a
 8003d02:	87a5      	strh	r5, [r4, #60]	; 0x3c
 8003d04:	87e5      	strh	r5, [r4, #62]	; 0x3e
 8003d06:	64a5      	str	r5, [r4, #72]	; 0x48
 8003d08:	f8a4 504c 	strh.w	r5, [r4, #76]	; 0x4c
 8003d0c:	f8a4 504e 	strh.w	r5, [r4, #78]	; 0x4e
 8003d10:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8003d14:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8003d18:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
 8003d1c:	f8c4 9054 	str.w	r9, [r4, #84]	; 0x54
 8003d20:	f8a4 3058 	strh.w	r3, [r4, #88]	; 0x58
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003d24:	f884 3062 	strb.w	r3, [r4, #98]	; 0x62
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003d28:	f8a4 306c 	strh.w	r3, [r4, #108]	; 0x6c
 8003d2c:	f8a4 306e 	strh.w	r3, [r4, #110]	; 0x6e
        wc1 = value;
 8003d30:	f104 0378 	add.w	r3, r4, #120	; 0x78
 8003d34:	6763      	str	r3, [r4, #116]	; 0x74
        : color(col)
 8003d36:	65e5      	str	r5, [r4, #92]	; 0x5c
 8003d38:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
 8003d3c:	f884 5063 	strb.w	r5, [r4, #99]	; 0x63
 8003d40:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8003d44:	f884 5065 	strb.w	r5, [r4, #101]	; 0x65
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003d48:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
 8003d4c:	f8a4 506a 	strh.w	r5, [r4, #106]	; 0x6a
              text(0)
 8003d50:	6725      	str	r5, [r4, #112]	; 0x70
        : TextAreaWithWildcardBase(), wc1(0)
 8003d52:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
        add(text);
 8003d56:	f104 012c 	add.w	r1, r4, #44	; 0x2c
 8003d5a:	4620      	mov	r0, r4
 8003d5c:	f005 fbd0 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidth(216);
 8003d60:	4620      	mov	r0, r4
 8003d62:	21d8      	movs	r1, #216	; 0xd8
 8003d64:	f7ff feb8 	bl	8003ad8 <_ZN32TextAreaWithOneWildcardContainer8setWidthEs>
        setHeight(50);
 8003d68:	4620      	mov	r0, r4
 8003d6a:	2132      	movs	r1, #50	; 0x32
 8003d6c:	3484      	adds	r4, #132	; 0x84
 8003d6e:	f7ff febf 	bl	8003af0 <_ZN32TextAreaWithOneWildcardContainer9setHeightEs>
 8003d72:	42bc      	cmp	r4, r7
 8003d74:	d1a7      	bne.n	8003cc6 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev+0x1e>
        : pobject(pObject), pmemfun(pmemfun_2)
 8003d76:	4b07      	ldr	r3, [pc, #28]	; (8003d94 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev+0xec>)
 8003d78:	f8c6 352c 	str.w	r3, [r6, #1324]	; 0x52c
 8003d7c:	4b06      	ldr	r3, [pc, #24]	; (8003d98 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev+0xf0>)
 8003d7e:	f8c6 6530 	str.w	r6, [r6, #1328]	; 0x530
 8003d82:	f8c6 3534 	str.w	r3, [r6, #1332]	; 0x534
 8003d86:	f8c6 5538 	str.w	r5, [r6, #1336]	; 0x538
 8003d8a:	4630      	mov	r0, r6
 8003d8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d90:	0801e9bc 	.word	0x0801e9bc
 8003d94:	0801eda4 	.word	0x0801eda4
 8003d98:	08003bf5 	.word	0x08003bf5
 8003d9c:	0801ed14 	.word	0x0801ed14
 8003da0:	0801dfd4 	.word	0x0801dfd4
 8003da4:	0801ec84 	.word	0x0801ec84

08003da8 <_ZN23ParticlesScrollingWheelC1Ev>:
ParticlesScrollingWheel::ParticlesScrollingWheel() : ScrollingWheel()
 8003da8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003dac:	4604      	mov	r4, r0
 8003dae:	b08c      	sub	sp, #48	; 0x30
 8003db0:	f000 fb7c 	bl	80044ac <_ZN14ScrollingWheelC1Ev>
 8003db4:	4b5e      	ldr	r3, [pc, #376]	; (8003f30 <_ZN23ParticlesScrollingWheelC1Ev+0x188>)
 8003db6:	6023      	str	r3, [r4, #0]
 8003db8:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 8003dbc:	f7ff ff74 	bl	8003ca8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev>
 8003dc0:	f504 60fb 	add.w	r0, r4, #2008	; 0x7d8
 8003dc4:	f7ff ff70 	bl	8003ca8 <_ZN20SparseContainerItemsI32TextAreaWithOneWildcardContainerLi10EEC1Ev>
 8003dc8:	230e      	movs	r3, #14
    background.setBitmap(Bitmap(BITMAP_WHEEL_SELECTOR_BACKGROUND_ID));
 8003dca:	a90a      	add	r1, sp, #40	; 0x28
 8003dcc:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8003dd0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003dd4:	f007 fa13 	bl	800b1fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    backgroundScrollingMenu.setXY(background.getX() + textElementAreaXOffset, background.getY() + 8);
 8003dd8:	8e62      	ldrh	r2, [r4, #50]	; 0x32
 8003dda:	8e21      	ldrh	r1, [r4, #48]	; 0x30
        return rect.width;
 8003ddc:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
        return rect.height;
 8003de0:	f9b4 7036 	ldrsh.w	r7, [r4, #54]	; 0x36
 8003de4:	3208      	adds	r2, #8
 8003de6:	3114      	adds	r1, #20
 8003de8:	f104 0084 	add.w	r0, r4, #132	; 0x84
 8003dec:	b212      	sxth	r2, r2
 8003dee:	b209      	sxth	r1, r1
 8003df0:	9009      	str	r0, [sp, #36]	; 0x24
    backgroundScrollingMenu.setup(
 8003df2:	3e28      	subs	r6, #40	; 0x28
    backgroundScrollingMenu.setXY(background.getX() + textElementAreaXOffset, background.getY() + 8);
 8003df4:	f7fe fbbf 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundScrollingMenu.setup(
 8003df8:	3f10      	subs	r7, #16
 8003dfa:	f504 73b0 	add.w	r3, r4, #352	; 0x160
 8003dfe:	2500      	movs	r5, #0
 8003e00:	f04f 0828 	mov.w	r8, #40	; 0x28
 8003e04:	f04f 090a 	mov.w	r9, #10
 8003e08:	b236      	sxth	r6, r6
 8003e0a:	9307      	str	r3, [sp, #28]
 8003e0c:	f04f 0a05 	mov.w	sl, #5
 8003e10:	f504 63f9 	add.w	r3, r4, #1992	; 0x7c8
 8003e14:	b23f      	sxth	r7, r7
 8003e16:	e9cd 8502 	strd	r8, r5, [sp, #8]
 8003e1a:	462a      	mov	r2, r5
 8003e1c:	4629      	mov	r1, r5
 8003e1e:	e9cd 9a04 	strd	r9, sl, [sp, #16]
 8003e22:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e24:	9306      	str	r3, [sp, #24]
 8003e26:	f8cd 8004 	str.w	r8, [sp, #4]
 8003e2a:	4633      	mov	r3, r6
 8003e2c:	9700      	str	r7, [sp, #0]
     *
     * @param acceleration The acceleration times 10, so "60" means "6" and "75" means "7.5".
     */
    void setSwipeAcceleration(uint16_t acceleration)
    {
        swipeAcceleration = acceleration;
 8003e2e:	273c      	movs	r7, #60	; 0x3c
 8003e30:	f000 f8c3 	bl	8003fba <_ZN13ScrollingMenu5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE>
    shadowOverlay.setXY(0, 0);
 8003e34:	462a      	mov	r2, r5
 8003e36:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003e3a:	4629      	mov	r1, r5
 8003e3c:	f8a4 70e0 	strh.w	r7, [r4, #224]	; 0xe0
 8003e40:	9009      	str	r0, [sp, #36]	; 0x24
 8003e42:	f7fe fb98 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
 8003e46:	230f      	movs	r3, #15
    shadowOverlay.setBitmap(Bitmap(BITMAP_WHEEL_SELECTOR_OVERLAY_ID));
 8003e48:	eb0d 0108 	add.w	r1, sp, r8
 8003e4c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e4e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003e52:	f007 f9d4 	bl	800b1fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    centerScrollingMenu.setXY(backgroundScrollingMenu.getX(), shadowOverlay.getY() + 41);
 8003e56:	f8b4 205e 	ldrh.w	r2, [r4, #94]	; 0x5e
 8003e5a:	f9b4 1088 	ldrsh.w	r1, [r4, #136]	; 0x88
 8003e5e:	3229      	adds	r2, #41	; 0x29
 8003e60:	f504 70b8 	add.w	r0, r4, #368	; 0x170
 8003e64:	b212      	sxth	r2, r2
 8003e66:	9009      	str	r0, [sp, #36]	; 0x24
 8003e68:	f7fe fb85 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
    centerScrollingMenu.setup(
 8003e6c:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8003e70:	9307      	str	r3, [sp, #28]
 8003e72:	f604 5304 	addw	r3, r4, #3332	; 0xd04
 8003e76:	e9cd a305 	strd	sl, r3, [sp, #20]
 8003e7a:	2202      	movs	r2, #2
 8003e7c:	232c      	movs	r3, #44	; 0x2c
 8003e7e:	e9cd 5903 	strd	r5, r9, [sp, #12]
 8003e82:	e9cd 3200 	strd	r3, r2, [sp]
 8003e86:	4629      	mov	r1, r5
 8003e88:	462a      	mov	r2, r5
 8003e8a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e8c:	f8cd 8008 	str.w	r8, [sp, #8]
 8003e90:	4633      	mov	r3, r6
 8003e92:	f000 f892 	bl	8003fba <_ZN13ScrollingMenu5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE>
 8003e96:	f8a4 71cc 	strh.w	r7, [r4, #460]	; 0x1cc
    setup();
 8003e9a:	4620      	mov	r0, r4
 8003e9c:	f000 fabc 	bl	8004418 <_ZN14ScrollingWheel5setupEv>
 8003ea0:	4f24      	ldr	r7, [pc, #144]	; (8003f34 <_ZN23ParticlesScrollingWheelC1Ev+0x18c>)
 8003ea2:	4625      	mov	r5, r4
 8003ea4:	f504 69a5 	add.w	r9, r4, #1320	; 0x528
        color = newColor;
 8003ea8:	f04f 38ff 	mov.w	r8, #4294967295
        backgroundScrollingMenuItems.element[i].setWidth(textElementWidth);
 8003eac:	f8d5 32a0 	ldr.w	r3, [r5, #672]	; 0x2a0
 8003eb0:	f505 7028 	add.w	r0, r5, #672	; 0x2a0
 8003eb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003eb6:	9009      	str	r0, [sp, #36]	; 0x24
 8003eb8:	4631      	mov	r1, r6
 8003eba:	4798      	blx	r3
        backgroundScrollingMenuItems.element[i].setHeight(textElementHeight);
 8003ebc:	f8d5 32a0 	ldr.w	r3, [r5, #672]	; 0x2a0
 8003ec0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003ec2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003ec4:	2128      	movs	r1, #40	; 0x28
 8003ec6:	4798      	blx	r3
    void setColor(colortype c)
    {
        text.setColor(c);
        invalidate();
 8003ec8:	f8d5 32a0 	ldr.w	r3, [r5, #672]	; 0x2a0
 8003ecc:	f8c5 82fc 	str.w	r8, [r5, #764]	; 0x2fc
 8003ed0:	695b      	ldr	r3, [r3, #20]
 8003ed2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003ed4:	4798      	blx	r3
 8003ed6:	2300      	movs	r3, #0
        backgroundScrollingMenuItems.element[i].setTypedText(TypedText(T_PARTICLES_WHEEL_SELECTOR_BACKGROUND));
 8003ed8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003eda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003ede:	a90a      	add	r1, sp, #40	; 0x28
 8003ee0:	970a      	str	r7, [sp, #40]	; 0x28
 8003ee2:	f7ff fea4 	bl	8003c2e <_ZN32TextAreaWithOneWildcardContainer12setTypedTextEN8touchgfx9TypedTextE>
        centerScrollingMenuItems.element[i].setWidth(textElementWidth);
 8003ee6:	f8d5 37dc 	ldr.w	r3, [r5, #2012]	; 0x7dc
 8003eea:	f205 70dc 	addw	r0, r5, #2012	; 0x7dc
 8003eee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003ef0:	9009      	str	r0, [sp, #36]	; 0x24
 8003ef2:	4631      	mov	r1, r6
 8003ef4:	4798      	blx	r3
        centerScrollingMenuItems.element[i].setHeight(textElementHeight);
 8003ef6:	f8d5 37dc 	ldr.w	r3, [r5, #2012]	; 0x7dc
 8003efa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003efc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003efe:	2128      	movs	r1, #40	; 0x28
 8003f00:	4798      	blx	r3
 8003f02:	f8d5 37dc 	ldr.w	r3, [r5, #2012]	; 0x7dc
 8003f06:	f8c5 8838 	str.w	r8, [r5, #2104]	; 0x838
 8003f0a:	695b      	ldr	r3, [r3, #20]
 8003f0c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f0e:	4798      	blx	r3
    for (int i = 0; i < NUMBER_OF_ITEMS; i++)
 8003f10:	3584      	adds	r5, #132	; 0x84
 8003f12:	2301      	movs	r3, #1
        centerScrollingMenuItems.element[i].setTypedText(TypedText(T_PARTICLES_WHEEL_SELECTOR_CENTER));
 8003f14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f16:	970a      	str	r7, [sp, #40]	; 0x28
 8003f18:	a90a      	add	r1, sp, #40	; 0x28
 8003f1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003f1e:	f7ff fe86 	bl	8003c2e <_ZN32TextAreaWithOneWildcardContainer12setTypedTextEN8touchgfx9TypedTextE>
    for (int i = 0; i < NUMBER_OF_ITEMS; i++)
 8003f22:	454d      	cmp	r5, r9
 8003f24:	d1c2      	bne.n	8003eac <_ZN23ParticlesScrollingWheelC1Ev+0x104>
}
 8003f26:	4620      	mov	r0, r4
 8003f28:	b00c      	add	sp, #48	; 0x30
 8003f2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f2e:	bf00      	nop
 8003f30:	0801edbc 	.word	0x0801edbc
 8003f34:	0801dfd4 	.word	0x0801dfd4

08003f38 <_ZN13ScrollingMenuD1Ev>:
class ScrollingMenu : public ClickableContainer
 8003f38:	4770      	bx	lr

08003f3a <_ZN13ScrollingMenuD0Ev>:
 8003f3a:	b510      	push	{r4, lr}
 8003f3c:	21dc      	movs	r1, #220	; 0xdc
 8003f3e:	4604      	mov	r4, r0
 8003f40:	f017 fd90 	bl	801ba64 <_ZdlPvj>
 8003f44:	4620      	mov	r0, r4
 8003f46:	bd10      	pop	{r4, pc}

08003f48 <_ZN13ScrollingMenuC1Ev>:
#include <touchgfx/Color.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/Utils.hpp>
#include <math.h>

ScrollingMenu::ScrollingMenu() :
 8003f48:	b538      	push	{r3, r4, r5, lr}
 8003f4a:	4604      	mov	r4, r0
    dragAcceleration(10),
    maxSwipeItems(0),
    easingEquation(&EasingEquations::backEaseOut),
    easingSteps(50),
    itemUpdatedCallback(0),
    animationEndedCallback(0)
 8003f4c:	f7fe ff78 	bl	8002e40 <_ZN8touchgfx18ClickableContainerC1Ev>
 8003f50:	4b0a      	ldr	r3, [pc, #40]	; (8003f7c <_ZN13ScrollingMenuC1Ev+0x34>)
 8003f52:	6023      	str	r3, [r4, #0]
 8003f54:	2301      	movs	r3, #1
 8003f56:	6563      	str	r3, [r4, #84]	; 0x54
 8003f58:	4b09      	ldr	r3, [pc, #36]	; (8003f80 <_ZN13ScrollingMenuC1Ev+0x38>)
 8003f5a:	65e3      	str	r3, [r4, #92]	; 0x5c
 8003f5c:	4b09      	ldr	r3, [pc, #36]	; (8003f84 <_ZN13ScrollingMenuC1Ev+0x3c>)
 8003f5e:	6663      	str	r3, [r4, #100]	; 0x64
 8003f60:	2500      	movs	r5, #0
 8003f62:	2332      	movs	r3, #50	; 0x32
 8003f64:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
 8003f68:	f8a4 3068 	strh.w	r3, [r4, #104]	; 0x68
 8003f6c:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 8003f70:	f000 fb14 	bl	800459c <_ZN19SparseContainerListC1Ev>
 8003f74:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
{
}
 8003f78:	4620      	mov	r0, r4
 8003f7a:	bd38      	pop	{r3, r4, r5, pc}
 8003f7c:	0801ee64 	.word	0x0801ee64
 8003f80:	000a003c 	.word	0x000a003c
 8003f84:	0800e5ed 	.word	0x0800e5ed

08003f88 <_ZNK13ScrollingMenu19getNormalizedOffsetEl>:
    animateTo(newOffset);
}

int32_t ScrollingMenu::getNormalizedOffset(int32_t offset) const
{
    offset %= (scList.getNumItems() * itemSize);
 8003f88:	f9b0 309e 	ldrsh.w	r3, [r0, #158]	; 0x9e
 8003f8c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8003f8e:	4353      	muls	r3, r2
 8003f90:	fb91 f0f3 	sdiv	r0, r1, r3
 8003f94:	fb00 1013 	mls	r0, r0, r3, r1
    if (offset > 0)
 8003f98:	2800      	cmp	r0, #0
    {
        offset -= scList.getNumItems() * itemSize;
 8003f9a:	bfc8      	it	gt
 8003f9c:	1ac0      	subgt	r0, r0, r3
    }
    return offset;
}
 8003f9e:	4770      	bx	lr

08003fa0 <_ZN13ScrollingMenu16setVirtualOffsetEl>:

void ScrollingMenu::setVirtualOffset(int32_t newOffset)
{
 8003fa0:	b507      	push	{r0, r1, r2, lr}
    virtualOffset = newOffset;
 8003fa2:	f8c0 10d8 	str.w	r1, [r0, #216]	; 0xd8
    scList.setVirtualOffset(virtualOffset);
 8003fa6:	306c      	adds	r0, #108	; 0x6c
 8003fa8:	9001      	str	r0, [sp, #4]
 8003faa:	f000 fb09 	bl	80045c0 <_ZN19SparseContainerList16setVirtualOffsetEl>
    scList.invalidate();
 8003fae:	9801      	ldr	r0, [sp, #4]
}
 8003fb0:	b003      	add	sp, #12
 8003fb2:	f85d eb04 	ldr.w	lr, [sp], #4
    scList.invalidate();
 8003fb6:	f009 bed3 	b.w	800dd60 <_ZNK8touchgfx8Drawable10invalidateEv>

08003fba <_ZN13ScrollingMenu5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE>:
{
 8003fba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003fbe:	b08d      	sub	sp, #52	; 0x34
    isCircular = isCircular_;
 8003fc0:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
{
 8003fc4:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8003fc8:	f9bd 9064 	ldrsh.w	r9, [sp, #100]	; 0x64
 8003fcc:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8003fce:	f9bd 505c 	ldrsh.w	r5, [sp, #92]	; 0x5c
 8003fd2:	9609      	str	r6, [sp, #36]	; 0x24
    itemSize = containerSize + containerSpacing;
 8003fd4:	eb08 0209 	add.w	r2, r8, r9
{
 8003fd8:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    itemSize = containerSize + containerSpacing;
 8003fda:	6502      	str	r2, [r0, #80]	; 0x50
    setWidth(widgetWidth);
 8003fdc:	6802      	ldr	r2, [r0, #0]
{
 8003fde:	960a      	str	r6, [sp, #40]	; 0x28
 8003fe0:	4604      	mov	r4, r0
    snapping = true;
 8003fe2:	2601      	movs	r6, #1
    selectedItemOffset = selectedItemOffset_;
 8003fe4:	6585      	str	r5, [r0, #88]	; 0x58
    currentAnimationState = NO_ANIMATION;
 8003fe6:	2500      	movs	r5, #0
    setWidth(widgetWidth);
 8003fe8:	930b      	str	r3, [sp, #44]	; 0x2c
    snapping = true;
 8003fea:	f880 604d 	strb.w	r6, [r0, #77]	; 0x4d
    isHorizontal = isHorizontal_;
 8003fee:	f880 104b 	strb.w	r1, [r0, #75]	; 0x4b
    currentAnimationState = NO_ANIMATION;
 8003ff2:	f880 50bc 	strb.w	r5, [r0, #188]	; 0xbc
    setWidth(widgetWidth);
 8003ff6:	4619      	mov	r1, r3
 8003ff8:	6b92      	ldr	r2, [r2, #56]	; 0x38
{
 8003ffa:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 8003ffe:	f9bd a068 	ldrsh.w	sl, [sp, #104]	; 0x68
 8004002:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
    setWidth(widgetWidth);
 8004006:	4790      	blx	r2
    setHeight(widgetHeight);
 8004008:	6822      	ldr	r2, [r4, #0]
 800400a:	4639      	mov	r1, r7
 800400c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800400e:	4620      	mov	r0, r4
 8004010:	4790      	blx	r2
        touchable = touch;
 8004012:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
    ClickableContainer::removeAll();
 8004016:	4620      	mov	r0, r4
    scList.setXY(0, 0);
 8004018:	f104 066c 	add.w	r6, r4, #108	; 0x6c
        rect.x = x;
 800401c:	6725      	str	r5, [r4, #112]	; 0x70
    ClickableContainer::removeAll();
 800401e:	f005 fa7c 	bl	800951a <_ZN8touchgfx9Container9removeAllEv>
    ClickableContainer::add(scList);
 8004022:	4631      	mov	r1, r6
 8004024:	4620      	mov	r0, r4
 8004026:	f005 fa6b 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    allowVerticalDrag(isHorizontal);
 800402a:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
    scList.setup(isHorizontal, isCircular, widgetWidth, widgetHeight, selectedItemOffset, containerSize, containerSpacing, numItems_, numContainers, getElementCallback, updateContainerCallback);
 800402e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004030:	9307      	str	r3, [sp, #28]
    allowHorizontalDrag(!isHorizontal);
 8004032:	f081 0201 	eor.w	r2, r1, #1
    scList.setup(isHorizontal, isCircular, widgetWidth, widgetHeight, selectedItemOffset, containerSize, containerSpacing, numItems_, numContainers, getElementCallback, updateContainerCallback);
 8004036:	9b09      	ldr	r3, [sp, #36]	; 0x24
        draggableX = enable;
 8004038:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 800403c:	f9b4 2058 	ldrsh.w	r2, [r4, #88]	; 0x58
        draggableY = enable;
 8004040:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8004044:	e9cd b305 	strd	fp, r3, [sp, #20]
 8004048:	e9cd 7200 	strd	r7, r2, [sp]
 800404c:	4630      	mov	r0, r6
 800404e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8004052:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004054:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 8004058:	f8cd 8008 	str.w	r8, [sp, #8]
 800405c:	f000 fb88 	bl	8004770 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE>
    setVirtualOffset(0);
 8004060:	4629      	mov	r1, r5
 8004062:	4620      	mov	r0, r4
}
 8004064:	b00d      	add	sp, #52	; 0x34
 8004066:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    setVirtualOffset(0);
 800406a:	f7ff bf99 	b.w	8003fa0 <_ZN13ScrollingMenu16setVirtualOffsetEl>

0800406e <_ZNK13ScrollingMenu15getSelectedItemEv>:

int ScrollingMenu::getSelectedItem() const
{
 800406e:	b538      	push	{r3, r4, r5, lr}
     *
     * @return The number of items.
     */
    int16_t getNumItems() const
    {
        return numItems;
 8004070:	f9b0 409e 	ldrsh.w	r4, [r0, #158]	; 0x9e
    if (scList.getNumItems() == 0)
 8004074:	b1ec      	cbz	r4, 80040b2 <_ZNK13ScrollingMenu15getSelectedItemEv+0x44>
    {
        return 0;
    }
    if (currentAnimationState == ANIMATING_GESTURE)
 8004076:	f890 20bc 	ldrb.w	r2, [r0, #188]	; 0xbc
 800407a:	6d05      	ldr	r5, [r0, #80]	; 0x50
 800407c:	2a01      	cmp	r2, #1
 800407e:	d108      	bne.n	8004092 <_ZNK13ScrollingMenu15getSelectedItemEv+0x24>
    {
        // Scroll in progress, get the destination value
        return (-getNormalizedOffset(gestureStart + gestureDelta)) / itemSize;
 8004080:	e9d0 1332 	ldrd	r1, r3, [r0, #200]	; 0xc8
 8004084:	4419      	add	r1, r3
 8004086:	f7ff ff7f 	bl	8003f88 <_ZNK13ScrollingMenu19getNormalizedOffsetEl>
 800408a:	4240      	negs	r0, r0
 800408c:	fb90 f0f5 	sdiv	r0, r0, r5
    }
    int index = ((-getNormalizedOffset(virtualOffset)) + itemSize / 2 - 1) / itemSize;
    return index % scList.getNumItems();
}
 8004090:	bd38      	pop	{r3, r4, r5, pc}
    int index = ((-getNormalizedOffset(virtualOffset)) + itemSize / 2 - 1) / itemSize;
 8004092:	f8d0 10d8 	ldr.w	r1, [r0, #216]	; 0xd8
 8004096:	f7ff ff77 	bl	8003f88 <_ZNK13ScrollingMenu19getNormalizedOffsetEl>
 800409a:	eb05 73d5 	add.w	r3, r5, r5, lsr #31
 800409e:	ebc0 0063 	rsb	r0, r0, r3, asr #1
 80040a2:	3801      	subs	r0, #1
 80040a4:	fb90 f0f5 	sdiv	r0, r0, r5
    return index % scList.getNumItems();
 80040a8:	fb90 f3f4 	sdiv	r3, r0, r4
 80040ac:	fb04 0013 	mls	r0, r4, r3, r0
 80040b0:	e7ee      	b.n	8004090 <_ZNK13ScrollingMenu15getSelectedItemEv+0x22>
        return 0;
 80040b2:	4620      	mov	r0, r4
 80040b4:	e7ec      	b.n	8004090 <_ZNK13ScrollingMenu15getSelectedItemEv+0x22>

080040b6 <_ZN13ScrollingMenu15handleTickEventEv>:
    }
}

void ScrollingMenu::handleTickEvent()
{
    if (currentAnimationState == ANIMATING_GESTURE)
 80040b6:	f890 30bc 	ldrb.w	r3, [r0, #188]	; 0xbc
 80040ba:	2b01      	cmp	r3, #1
{
 80040bc:	b570      	push	{r4, r5, r6, lr}
 80040be:	4604      	mov	r4, r0
    if (currentAnimationState == ANIMATING_GESTURE)
 80040c0:	d13a      	bne.n	8004138 <_ZN13ScrollingMenu15handleTickEventEv+0x82>
    {
        int delta = easingEquation(gestureStep, 0, gestureDelta, gestureStepsTotal);
 80040c2:	f8b0 30c4 	ldrh.w	r3, [r0, #196]	; 0xc4
 80040c6:	f9b0 20cc 	ldrsh.w	r2, [r0, #204]	; 0xcc
 80040ca:	6e45      	ldr	r5, [r0, #100]	; 0x64
 80040cc:	f8b0 00c0 	ldrh.w	r0, [r0, #192]	; 0xc0
 80040d0:	2100      	movs	r1, #0
 80040d2:	47a8      	blx	r5
        setVirtualOffset(gestureStart + delta);
 80040d4:	f8d4 10c8 	ldr.w	r1, [r4, #200]	; 0xc8
 80040d8:	4401      	add	r1, r0
 80040da:	4620      	mov	r0, r4
 80040dc:	f7ff ff60 	bl	8003fa0 <_ZN13ScrollingMenu16setVirtualOffsetEl>
        gestureStep++;
 80040e0:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
        if (gestureStep > gestureStepsTotal)
 80040e4:	f8d4 20c4 	ldr.w	r2, [r4, #196]	; 0xc4
        gestureStep++;
 80040e8:	3301      	adds	r3, #1
        if (gestureStep > gestureStepsTotal)
 80040ea:	4293      	cmp	r3, r2
        gestureStep++;
 80040ec:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
        if (gestureStep > gestureStepsTotal)
 80040f0:	dd22      	ble.n	8004138 <_ZN13ScrollingMenu15handleTickEventEv+0x82>
        {
            currentAnimationState = NO_ANIMATION;
 80040f2:	2300      	movs	r3, #0
 80040f4:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
            Application::getInstance()->unregisterTimerWidget(this);
 80040f8:	f008 fda4 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 80040fc:	4621      	mov	r1, r4
 80040fe:	3004      	adds	r0, #4
 8004100:	f008 fdc5 	bl	800cc8e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
            virtualOffset = getNormalizedOffset(virtualOffset);
 8004104:	f8d4 10d8 	ldr.w	r1, [r4, #216]	; 0xd8
 8004108:	4620      	mov	r0, r4
 800410a:	f7ff ff3d 	bl	8003f88 <_ZNK13ScrollingMenu19getNormalizedOffsetEl>
 800410e:	f8c4 00d8 	str.w	r0, [r4, #216]	; 0xd8

            if (animationEndedCallback && animationEndedCallback->isValid())
 8004112:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8004116:	b178      	cbz	r0, 8004138 <_ZN13ScrollingMenu15handleTickEventEv+0x82>
 8004118:	6803      	ldr	r3, [r0, #0]
 800411a:	68db      	ldr	r3, [r3, #12]
 800411c:	4798      	blx	r3
 800411e:	b158      	cbz	r0, 8004138 <_ZN13ScrollingMenu15handleTickEventEv+0x82>
            {
                animationEndedCallback->execute(getSelectedItem());
 8004120:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 8004124:	4620      	mov	r0, r4
 8004126:	f7ff ffa2 	bl	800406e <_ZNK13ScrollingMenu15getSelectedItemEv>
 800412a:	682b      	ldr	r3, [r5, #0]
 800412c:	4601      	mov	r1, r0
 800412e:	689b      	ldr	r3, [r3, #8]
 8004130:	4628      	mov	r0, r5
            }
        }
    }
}
 8004132:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                animationEndedCallback->execute(getSelectedItem());
 8004136:	4718      	bx	r3
}
 8004138:	bd70      	pop	{r4, r5, r6, pc}

0800413a <_ZNK13ScrollingMenu22keepOffsetInsideLimitsEls>:
    if (!isCircular)
 800413a:	f890 304c 	ldrb.w	r3, [r0, #76]	; 0x4c
{
 800413e:	b530      	push	{r4, r5, lr}
 8004140:	4604      	mov	r4, r0
    if (!isCircular)
 8004142:	b97b      	cbnz	r3, 8004164 <_ZNK13ScrollingMenu22keepOffsetInsideLimitsEls+0x2a>
        int maxOffToTheLeft = windowSize < scList.getNumItems() ? scList.getNumItems() - windowSize : 0;
 8004144:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8004146:	f9b4 509e 	ldrsh.w	r5, [r4, #158]	; 0x9e
        newOffset = MIN(newOffset, overShoot);
 800414a:	4291      	cmp	r1, r2
 800414c:	bfa8      	it	ge
 800414e:	4611      	movge	r1, r2
        int maxOffToTheLeft = windowSize < scList.getNumItems() ? scList.getNumItems() - windowSize : 0;
 8004150:	42a8      	cmp	r0, r5
 8004152:	bfb8      	it	lt
 8004154:	1a2b      	sublt	r3, r5, r0
        newOffset = MAX(newOffset, -(itemSize * maxOffToTheLeft) - overShoot);
 8004156:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8004158:	4343      	muls	r3, r0
 800415a:	425b      	negs	r3, r3
 800415c:	1a98      	subs	r0, r3, r2
 800415e:	4281      	cmp	r1, r0
 8004160:	bfb8      	it	lt
 8004162:	4601      	movlt	r1, r0
}
 8004164:	4608      	mov	r0, r1
 8004166:	bd30      	pop	{r4, r5, pc}

08004168 <_ZNK13ScrollingMenu23getNearestAlignedOffsetEl>:
    if (isCircular)
 8004168:	f890 204c 	ldrb.w	r2, [r0, #76]	; 0x4c
{
 800416c:	b538      	push	{r3, r4, r5, lr}
 800416e:	f890 504d 	ldrb.w	r5, [r0, #77]	; 0x4d
    if (isCircular)
 8004172:	b172      	cbz	r2, 8004192 <_ZNK13ScrollingMenu23getNearestAlignedOffsetEl+0x2a>
        return snapping ? (offset < 0) ? (((offset - (itemSize / 2)) / itemSize) * itemSize) : ((offset + (itemSize / 2)) / itemSize) * itemSize : offset;
 8004174:	b15d      	cbz	r5, 800418e <_ZNK13ScrollingMenu23getNearestAlignedOffsetEl+0x26>
 8004176:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8004178:	0fda      	lsrs	r2, r3, #31
 800417a:	2900      	cmp	r1, #0
 800417c:	441a      	add	r2, r3
 800417e:	bfb4      	ite	lt
 8004180:	eba1 0162 	sublt.w	r1, r1, r2, asr #1
 8004184:	eb01 0162 	addge.w	r1, r1, r2, asr #1
 8004188:	fb91 f1f3 	sdiv	r1, r1, r3
 800418c:	4359      	muls	r1, r3
}
 800418e:	4608      	mov	r0, r1
 8004190:	bd38      	pop	{r3, r4, r5, pc}
        offset = MAX(offset, -itemSize * (scList.getNumItems() - 1));
 8004192:	f9b0 309e 	ldrsh.w	r3, [r0, #158]	; 0x9e
 8004196:	6d04      	ldr	r4, [r0, #80]	; 0x50
 8004198:	f1c3 0301 	rsb	r3, r3, #1
        offset = MIN(offset, 0);
 800419c:	ea01 71e1 	and.w	r1, r1, r1, asr #31
        offset = MAX(offset, -itemSize * (scList.getNumItems() - 1));
 80041a0:	4363      	muls	r3, r4
        offset = keepOffsetInsideLimits(offset, 0);
 80041a2:	4299      	cmp	r1, r3
 80041a4:	bfb8      	it	lt
 80041a6:	4619      	movlt	r1, r3
 80041a8:	f7ff ffc7 	bl	800413a <_ZNK13ScrollingMenu22keepOffsetInsideLimitsEls>
 80041ac:	4601      	mov	r1, r0
        return snapping ? ((offset - (itemSize / 2)) / itemSize) * itemSize : offset;
 80041ae:	2d00      	cmp	r5, #0
 80041b0:	d0ed      	beq.n	800418e <_ZNK13ScrollingMenu23getNearestAlignedOffsetEl+0x26>
 80041b2:	eb04 70d4 	add.w	r0, r4, r4, lsr #31
 80041b6:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 80041ba:	fb91 f1f4 	sdiv	r1, r1, r4
 80041be:	4361      	muls	r1, r4
 80041c0:	e7e5      	b.n	800418e <_ZNK13ScrollingMenu23getNearestAlignedOffsetEl+0x26>

080041c2 <_ZN13ScrollingMenu15handleDragEventERKN8touchgfx9DragEventE>:
{
 80041c2:	b538      	push	{r3, r4, r5, lr}
 80041c4:	4604      	mov	r4, r0
 80041c6:	460d      	mov	r5, r1
    ClickableContainer::handleDragEvent(evt);
 80041c8:	f7fe fde2 	bl	8002d90 <_ZN8touchgfx18ClickableContainer15handleDragEventERKNS_9DragEventE>
    currentAnimationState = ANIMATING_DRAG;
 80041cc:	2302      	movs	r3, #2
 80041ce:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
    int32_t newOffset = virtualOffset + (isHorizontal ? evt.getDeltaX() : evt.getDeltaY()) * dragAcceleration / 10;
 80041d2:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80041d6:	f8d4 10d8 	ldr.w	r1, [r4, #216]	; 0xd8
 80041da:	b1c3      	cbz	r3, 800420e <_ZN13ScrollingMenu15handleDragEventERKN8touchgfx9DragEventE+0x4c>
        return dragNewX - dragOldX;
 80041dc:	896b      	ldrh	r3, [r5, #10]
 80041de:	88ea      	ldrh	r2, [r5, #6]
        return dragNewY - dragOldY;
 80041e0:	1a9b      	subs	r3, r3, r2
 80041e2:	f8b4 205e 	ldrh.w	r2, [r4, #94]	; 0x5e
 80041e6:	b21b      	sxth	r3, r3
 80041e8:	4353      	muls	r3, r2
    newOffset = keepOffsetInsideLimits(newOffset, itemSize / 3);
 80041ea:	2003      	movs	r0, #3
    int32_t newOffset = virtualOffset + (isHorizontal ? evt.getDeltaX() : evt.getDeltaY()) * dragAcceleration / 10;
 80041ec:	220a      	movs	r2, #10
 80041ee:	fb93 f3f2 	sdiv	r3, r3, r2
    newOffset = keepOffsetInsideLimits(newOffset, itemSize / 3);
 80041f2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80041f4:	fb92 f2f0 	sdiv	r2, r2, r0
 80041f8:	4419      	add	r1, r3
 80041fa:	4620      	mov	r0, r4
 80041fc:	b212      	sxth	r2, r2
 80041fe:	f7ff ff9c 	bl	800413a <_ZNK13ScrollingMenu22keepOffsetInsideLimitsEls>
 8004202:	4601      	mov	r1, r0
    setVirtualOffset(newOffset);
 8004204:	4620      	mov	r0, r4
}
 8004206:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    setVirtualOffset(newOffset);
 800420a:	f7ff bec9 	b.w	8003fa0 <_ZN13ScrollingMenu16setVirtualOffsetEl>
 800420e:	89ab      	ldrh	r3, [r5, #12]
 8004210:	892a      	ldrh	r2, [r5, #8]
 8004212:	e7e5      	b.n	80041e0 <_ZN13ScrollingMenu15handleDragEventERKN8touchgfx9DragEventE+0x1e>

08004214 <_ZN13ScrollingMenu9animateToEl>:

void ScrollingMenu::animateTo(int32_t newPosition)
{
 8004214:	b538      	push	{r3, r4, r5, lr}
    if (easingSteps < 1)
 8004216:	f8b0 3068 	ldrh.w	r3, [r0, #104]	; 0x68
{
 800421a:	4604      	mov	r4, r0
 800421c:	460d      	mov	r5, r1
    if (easingSteps < 1)
 800421e:	b91b      	cbnz	r3, 8004228 <_ZN13ScrollingMenu9animateToEl+0x14>
        currentAnimationState = ANIMATING_GESTURE;
        gestureStep = 0;
        gestureStepsTotal = MIN(easingSteps, touchgfx::abs<int32_t>(gestureDelta / 2));
        gestureStart = virtualOffset;
    }
}
 8004220:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        setVirtualOffset(newPosition);
 8004224:	f7ff bebc 	b.w	8003fa0 <_ZN13ScrollingMenu16setVirtualOffsetEl>
        if (currentAnimationState != ANIMATING_GESTURE)
 8004228:	f890 30bc 	ldrb.w	r3, [r0, #188]	; 0xbc
 800422c:	2b01      	cmp	r3, #1
 800422e:	d005      	beq.n	800423c <_ZN13ScrollingMenu9animateToEl+0x28>
            Application::getInstance()->registerTimerWidget(this);
 8004230:	f008 fd08 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 8004234:	4621      	mov	r1, r4
 8004236:	3004      	adds	r0, #4
 8004238:	f008 fdd2 	bl	800cde0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        gestureDelta = getNearestAlignedOffset(newPosition) - virtualOffset;
 800423c:	4629      	mov	r1, r5
 800423e:	4620      	mov	r0, r4
 8004240:	f7ff ff92 	bl	8004168 <_ZNK13ScrollingMenu23getNearestAlignedOffsetEl>
 8004244:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
        gestureStart = virtualOffset;
 8004248:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        gestureDelta = getNearestAlignedOffset(newPosition) - virtualOffset;
 800424c:	1ac0      	subs	r0, r0, r3
 800424e:	f8c4 00cc 	str.w	r0, [r4, #204]	; 0xcc
        gestureStepsTotal = MIN(easingSteps, touchgfx::abs<int32_t>(gestureDelta / 2));
 8004252:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8004256:	1040      	asrs	r0, r0, #1
        currentAnimationState = ANIMATING_GESTURE;
 8004258:	2201      	movs	r2, #1
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 800425a:	2800      	cmp	r0, #0
 800425c:	f884 20bc 	strb.w	r2, [r4, #188]	; 0xbc
        gestureStep = 0;
 8004260:	f04f 0200 	mov.w	r2, #0
 8004264:	f8c4 20c0 	str.w	r2, [r4, #192]	; 0xc0
 8004268:	bfb8      	it	lt
 800426a:	4240      	neglt	r0, r0
        gestureStepsTotal = MIN(easingSteps, touchgfx::abs<int32_t>(gestureDelta / 2));
 800426c:	f8b4 2068 	ldrh.w	r2, [r4, #104]	; 0x68
 8004270:	4290      	cmp	r0, r2
 8004272:	bfd4      	ite	le
 8004274:	f8c4 00c4 	strle.w	r0, [r4, #196]	; 0xc4
 8004278:	f8c4 20c4 	strgt.w	r2, [r4, #196]	; 0xc4
}
 800427c:	bd38      	pop	{r3, r4, r5, pc}

0800427e <_ZN13ScrollingMenu16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800427e:	b538      	push	{r3, r4, r5, lr}
 8004280:	460d      	mov	r5, r1
 8004282:	4604      	mov	r4, r0
    ClickableContainer::handleClickEvent(evt);
 8004284:	f7fe fc24 	bl	8002ad0 <_ZN8touchgfx18ClickableContainer16handleClickEventERKNS_10ClickEventE>
        return clickEventType;
 8004288:	792b      	ldrb	r3, [r5, #4]
    if (evt.getType() == ClickEvent::PRESSED)
 800428a:	b953      	cbnz	r3, 80042a2 <_ZN13ScrollingMenu16handleClickEventERKN8touchgfx10ClickEventE+0x24>
        xClick = evt.getX();
 800428c:	88eb      	ldrh	r3, [r5, #6]
 800428e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        yClick = evt.getY();
 8004292:	892b      	ldrh	r3, [r5, #8]
 8004294:	f8a4 30d2 	strh.w	r3, [r4, #210]	; 0xd2
        initialSwipeOffset = virtualOffset;
 8004298:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 800429c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
}
 80042a0:	bd38      	pop	{r3, r4, r5, pc}
    else if (evt.getType() == ClickEvent::RELEASED)
 80042a2:	2b01      	cmp	r3, #1
 80042a4:	d1fc      	bne.n	80042a0 <_ZN13ScrollingMenu16handleClickEventERKN8touchgfx10ClickEventE+0x22>
        if (currentAnimationState == ANIMATING_DRAG)
 80042a6:	f894 30bc 	ldrb.w	r3, [r4, #188]	; 0xbc
 80042aa:	2b02      	cmp	r3, #2
 80042ac:	d1f8      	bne.n	80042a0 <_ZN13ScrollingMenu16handleClickEventERKN8touchgfx10ClickEventE+0x22>
            animateTo(virtualOffset);
 80042ae:	f8d4 10d8 	ldr.w	r1, [r4, #216]	; 0xd8
 80042b2:	4620      	mov	r0, r4
}
 80042b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            animateTo(virtualOffset);
 80042b8:	f7ff bfac 	b.w	8004214 <_ZN13ScrollingMenu9animateToEl>

080042bc <_ZN13ScrollingMenu18handleGestureEventERKN8touchgfx12GestureEventE>:
{
 80042bc:	b538      	push	{r3, r4, r5, lr}
 80042be:	4604      	mov	r4, r0
 80042c0:	460d      	mov	r5, r1
    ClickableContainer::handleGestureEvent(evt);
 80042c2:	f7fe fd31 	bl	8002d28 <_ZN8touchgfx18ClickableContainer18handleGestureEventERKNS_12GestureEventE>
    if (evt.getType() == (isHorizontal ? GestureEvent::SWIPE_HORIZONTAL : GestureEvent::SWIPE_VERTICAL))
 80042c6:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80042ca:	792a      	ldrb	r2, [r5, #4]
 80042cc:	f083 0301 	eor.w	r3, r3, #1
 80042d0:	429a      	cmp	r2, r3
 80042d2:	d124      	bne.n	800431e <_ZN13ScrollingMenu18handleGestureEventERKN8touchgfx12GestureEventE+0x62>
        int32_t newOffset = virtualOffset + evt.getVelocity() * swipeAcceleration / 10;
 80042d4:	f8b4 305c 	ldrh.w	r3, [r4, #92]	; 0x5c
 80042d8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80042dc:	4359      	muls	r1, r3
 80042de:	230a      	movs	r3, #10
 80042e0:	fb91 f1f3 	sdiv	r1, r1, r3
 80042e4:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 80042e8:	4419      	add	r1, r3
        if (maxSwipeItems > 0)
 80042ea:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 80042ee:	b163      	cbz	r3, 800430a <_ZN13ScrollingMenu18handleGestureEventERKN8touchgfx12GestureEventE+0x4e>
            newOffset = MIN(newOffset, initialSwipeOffset + maxSwipeItems * itemSize);
 80042f0:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80042f2:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
 80042f6:	4343      	muls	r3, r0
 80042f8:	18d0      	adds	r0, r2, r3
 80042fa:	4281      	cmp	r1, r0
            newOffset = MAX(newOffset, initialSwipeOffset - maxSwipeItems * itemSize);
 80042fc:	eba2 0303 	sub.w	r3, r2, r3
            newOffset = MIN(newOffset, initialSwipeOffset + maxSwipeItems * itemSize);
 8004300:	bfa8      	it	ge
 8004302:	4601      	movge	r1, r0
            newOffset = MAX(newOffset, initialSwipeOffset - maxSwipeItems * itemSize);
 8004304:	4299      	cmp	r1, r3
 8004306:	bfb8      	it	lt
 8004308:	4619      	movlt	r1, r3
        newOffset = keepOffsetInsideLimits(newOffset, 0);
 800430a:	4620      	mov	r0, r4
 800430c:	2200      	movs	r2, #0
 800430e:	f7ff ff14 	bl	800413a <_ZNK13ScrollingMenu22keepOffsetInsideLimitsEls>
 8004312:	4601      	mov	r1, r0
        animateTo(newOffset);
 8004314:	4620      	mov	r0, r4
}
 8004316:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        animateTo(newOffset);
 800431a:	f7ff bf7b 	b.w	8004214 <_ZN13ScrollingMenu9animateToEl>
}
 800431e:	bd38      	pop	{r3, r4, r5, pc}

08004320 <_ZN13ScrollingMenu15setSelectedItemEi>:
{
 8004320:	b570      	push	{r4, r5, r6, lr}
 8004322:	4605      	mov	r5, r0
 8004324:	460c      	mov	r4, r1
    virtualOffset = getNormalizedOffset(virtualOffset);
 8004326:	f8d0 10d8 	ldr.w	r1, [r0, #216]	; 0xd8
 800432a:	f7ff fe2d 	bl	8003f88 <_ZNK13ScrollingMenu19getNormalizedOffsetEl>
    int32_t newOffset = -index * itemSize;
 800432e:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    if (isCircular)
 8004330:	f895 204c 	ldrb.w	r2, [r5, #76]	; 0x4c
    virtualOffset = getNormalizedOffset(virtualOffset);
 8004334:	f8c5 00d8 	str.w	r0, [r5, #216]	; 0xd8
    int32_t newOffset = -index * itemSize;
 8004338:	4261      	negs	r1, r4
 800433a:	4359      	muls	r1, r3
    if (isCircular)
 800433c:	b1d2      	cbz	r2, 8004374 <_ZN13ScrollingMenu15setSelectedItemEi+0x54>
        int32_t allItemsSize = scList.getNumItems() * itemSize;
 800433e:	f9b5 209e 	ldrsh.w	r2, [r5, #158]	; 0x9e
 8004342:	435a      	muls	r2, r3
        int32_t otherOffset = newOffset + allItemsSize;
 8004344:	188e      	adds	r6, r1, r2
        if (touchgfx::abs<int32_t>(otherOffset - virtualOffset) < touchgfx::abs<int32_t>(newOffset - virtualOffset))
 8004346:	1a34      	subs	r4, r6, r0
 8004348:	1a0b      	subs	r3, r1, r0
 800434a:	2c00      	cmp	r4, #0
 800434c:	bfb8      	it	lt
 800434e:	4264      	neglt	r4, r4
 8004350:	2b00      	cmp	r3, #0
 8004352:	bfb8      	it	lt
 8004354:	425b      	neglt	r3, r3
            newOffset = otherOffset;
 8004356:	429c      	cmp	r4, r3
 8004358:	bfb8      	it	lt
 800435a:	4631      	movlt	r1, r6
        otherOffset = newOffset - allItemsSize;
 800435c:	1a8a      	subs	r2, r1, r2
        if (touchgfx::abs<int32_t>(otherOffset - virtualOffset) < touchgfx::abs<int32_t>(newOffset - virtualOffset))
 800435e:	1a14      	subs	r4, r2, r0
 8004360:	1a0b      	subs	r3, r1, r0
 8004362:	2c00      	cmp	r4, #0
 8004364:	bfb8      	it	lt
 8004366:	4264      	neglt	r4, r4
 8004368:	2b00      	cmp	r3, #0
 800436a:	bfb8      	it	lt
 800436c:	425b      	neglt	r3, r3
            newOffset = otherOffset;
 800436e:	429c      	cmp	r4, r3
 8004370:	bfb8      	it	lt
 8004372:	4611      	movlt	r1, r2
    animateTo(newOffset);
 8004374:	4628      	mov	r0, r5
}
 8004376:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    animateTo(newOffset);
 800437a:	f7ff bf4b 	b.w	8004214 <_ZN13ScrollingMenu9animateToEl>

0800437e <_ZN14ScrollingWheel12setTouchableEb>:
        touchable = touch;
 800437e:	f880 10a8 	strb.w	r1, [r0, #168]	; 0xa8
 8004382:	f880 1194 	strb.w	r1, [r0, #404]	; 0x194
 8004386:	f880 1280 	strb.w	r1, [r0, #640]	; 0x280
void ScrollingWheel::setTouchable(bool touchable)
{
    backgroundScrollingMenu.setTouchable(touchable);
    centerScrollingMenu.setTouchable(touchable);
    touchOverlay.setTouchable(touchable);
}
 800438a:	4770      	bx	lr

0800438c <_ZN8touchgfx8CallbackI14ScrollingWheeliivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 800438c:	4770      	bx	lr

0800438e <_ZN8touchgfx8CallbackI14ScrollingWheeliivE7executeEii>:
    virtual void execute(T1 t1, T2 t2)
 800438e:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8004390:	68c4      	ldr	r4, [r0, #12]
 8004392:	6845      	ldr	r5, [r0, #4]
 8004394:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 8004396:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1, t2);
 8004398:	eb05 0064 	add.w	r0, r5, r4, asr #1
 800439c:	07e4      	lsls	r4, r4, #31
 800439e:	bf48      	it	mi
 80043a0:	59ac      	ldrmi	r4, [r5, r6]
 80043a2:	689b      	ldr	r3, [r3, #8]
 80043a4:	bf48      	it	mi
 80043a6:	58e3      	ldrmi	r3, [r4, r3]
    }
 80043a8:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 80043aa:	4718      	bx	r3

080043ac <_ZNK8touchgfx8CallbackI14ScrollingWheeliivE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80043ac:	6843      	ldr	r3, [r0, #4]
 80043ae:	b12b      	cbz	r3, 80043bc <_ZNK8touchgfx8CallbackI14ScrollingWheeliivE7isValidEv+0x10>
 80043b0:	6883      	ldr	r3, [r0, #8]
 80043b2:	b92b      	cbnz	r3, 80043c0 <_ZNK8touchgfx8CallbackI14ScrollingWheeliivE7isValidEv+0x14>
 80043b4:	68c0      	ldr	r0, [r0, #12]
 80043b6:	f000 0001 	and.w	r0, r0, #1
 80043ba:	4770      	bx	lr
 80043bc:	4618      	mov	r0, r3
 80043be:	4770      	bx	lr
 80043c0:	2001      	movs	r0, #1
    }
 80043c2:	4770      	bx	lr

080043c4 <_ZN8touchgfx8CallbackI14ScrollingWheeliivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80043c4:	b510      	push	{r4, lr}
 80043c6:	2110      	movs	r1, #16
 80043c8:	4604      	mov	r4, r0
 80043ca:	f017 fb4b 	bl	801ba64 <_ZdlPvj>
 80043ce:	4620      	mov	r0, r4
 80043d0:	bd10      	pop	{r4, pc}

080043d2 <_ZN14ScrollingWheel15setSelectedItemEi>:
{
 80043d2:	b538      	push	{r3, r4, r5, lr}
 80043d4:	4604      	mov	r4, r0
 80043d6:	460d      	mov	r5, r1
    backgroundScrollingMenu.setSelectedItem(index);
 80043d8:	3084      	adds	r0, #132	; 0x84
 80043da:	f7ff ffa1 	bl	8004320 <_ZN13ScrollingMenu15setSelectedItemEi>
    centerScrollingMenu.setSelectedItem(index);
 80043de:	4629      	mov	r1, r5
 80043e0:	f504 70b8 	add.w	r0, r4, #368	; 0x170
}
 80043e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    centerScrollingMenu.setSelectedItem(index);
 80043e8:	f7ff bf9a 	b.w	8004320 <_ZN13ScrollingMenu15setSelectedItemEi>

080043ec <_ZN14ScrollingWheel15getSelectedItemEv>:
    return backgroundScrollingMenu.getSelectedItem();
 80043ec:	3084      	adds	r0, #132	; 0x84
 80043ee:	f7ff be3e 	b.w	800406e <_ZNK13ScrollingMenu15getSelectedItemEv>
	...

080043f4 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 80043f4:	4a07      	ldr	r2, [pc, #28]	; (8004414 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 80043f6:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 80043f8:	2200      	movs	r2, #0
 80043fa:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80043fe:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8004402:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004406:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800440a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800440e:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8004410:	4770      	bx	lr
 8004412:	bf00      	nop
 8004414:	0801f4f0 	.word	0x0801f4f0

08004418 <_ZN14ScrollingWheel5setupEv>:
{
 8004418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    background.setXY(0, 0);
 800441c:	2200      	movs	r2, #0
{
 800441e:	4604      	mov	r4, r0
    background.setXY(0, 0);
 8004420:	f100 052c 	add.w	r5, r0, #44	; 0x2c
 8004424:	4611      	mov	r1, r2
 8004426:	4628      	mov	r0, r5
 8004428:	f7fe f8a5 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
    add(background);
 800442c:	6823      	ldr	r3, [r4, #0]
 800442e:	4629      	mov	r1, r5
 8004430:	4620      	mov	r0, r4
 8004432:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004434:	4798      	blx	r3
    add(backgroundScrollingMenu);
 8004436:	4621      	mov	r1, r4
 8004438:	4620      	mov	r0, r4
 800443a:	f851 3b84 	ldr.w	r3, [r1], #132
 800443e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004440:	4798      	blx	r3
    add(shadowOverlay);
 8004442:	4621      	mov	r1, r4
 8004444:	4620      	mov	r0, r4
 8004446:	f851 3b58 	ldr.w	r3, [r1], #88
 800444a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800444c:	4798      	blx	r3
    add(centerScrollingMenu);
 800444e:	6823      	ldr	r3, [r4, #0]
 8004450:	f504 71b8 	add.w	r1, r4, #368	; 0x170
 8004454:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004456:	4620      	mov	r0, r4
 8004458:	4798      	blx	r3
    touchOverlay.setPosition(background.getX(), background.getY(), background.getWidth(), background.getHeight());
 800445a:	f504 7517 	add.w	r5, r4, #604	; 0x25c
        return rect.width;
 800445e:	f9b4 7034 	ldrsh.w	r7, [r4, #52]	; 0x34
        setXY(x, y);
 8004462:	f9b4 2032 	ldrsh.w	r2, [r4, #50]	; 0x32
        return rect.height;
 8004466:	f9b4 6036 	ldrsh.w	r6, [r4, #54]	; 0x36
        setXY(x, y);
 800446a:	f9b4 1030 	ldrsh.w	r1, [r4, #48]	; 0x30
 800446e:	4628      	mov	r0, r5
 8004470:	f7fe f881 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8004474:	4639      	mov	r1, r7
 8004476:	4628      	mov	r0, r5
 8004478:	f7fc fe52 	bl	8001120 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800447c:	4631      	mov	r1, r6
 800447e:	4628      	mov	r0, r5
 8004480:	f7fc fe50 	bl	8001124 <_ZN8touchgfx8Drawable9setHeightEs>
    add(touchOverlay);
 8004484:	6823      	ldr	r3, [r4, #0]
 8004486:	4629      	mov	r1, r5
 8004488:	4620      	mov	r0, r4
 800448a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800448c:	4798      	blx	r3
    setWidth(background.getWidth());
 800448e:	6823      	ldr	r3, [r4, #0]
 8004490:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8004494:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004496:	4620      	mov	r0, r4
 8004498:	4798      	blx	r3
    setHeight(background.getHeight());
 800449a:	6823      	ldr	r3, [r4, #0]
 800449c:	f9b4 1036 	ldrsh.w	r1, [r4, #54]	; 0x36
 80044a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80044a2:	4620      	mov	r0, r4
}
 80044a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    setHeight(background.getHeight());
 80044a8:	4718      	bx	r3
	...

080044ac <_ZN14ScrollingWheelC1Ev>:
ScrollingWheel::ScrollingWheel() :
 80044ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80044b0:	4604      	mov	r4, r0
 80044b2:	f7ff ff9f 	bl	80043f4 <_ZN8touchgfx8DrawableC1Ev>
    touchOverlay(backgroundScrollingMenu, centerScrollingMenu)
 80044b6:	4620      	mov	r0, r4
 80044b8:	2500      	movs	r5, #0
 80044ba:	4b23      	ldr	r3, [pc, #140]	; (8004548 <_ZN14ScrollingWheelC1Ev+0x9c>)
 80044bc:	62a5      	str	r5, [r4, #40]	; 0x28
 80044be:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80044c2:	f840 3b2c 	str.w	r3, [r0], #44
 80044c6:	a901      	add	r1, sp, #4
 80044c8:	f8ad 6004 	strh.w	r6, [sp, #4]
 80044cc:	f104 0884 	add.w	r8, r4, #132	; 0x84
 80044d0:	f7fe f870 	bl	80025b4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80044d4:	a901      	add	r1, sp, #4
 80044d6:	f104 0058 	add.w	r0, r4, #88	; 0x58
        : pobject(pObject), pmemfun(pmemfun_2)
 80044da:	f8df 9074 	ldr.w	r9, [pc, #116]	; 8004550 <_ZN14ScrollingWheelC1Ev+0xa4>
 80044de:	f8ad 6004 	strh.w	r6, [sp, #4]
 80044e2:	f7fe f867 	bl	80025b4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80044e6:	4640      	mov	r0, r8
 80044e8:	f7ff fd2e 	bl	8003f48 <_ZN13ScrollingMenuC1Ev>
 80044ec:	2601      	movs	r6, #1
 80044ee:	2398      	movs	r3, #152	; 0x98
 80044f0:	f504 77b8 	add.w	r7, r4, #368	; 0x170
 80044f4:	e9c4 365a 	strd	r3, r6, [r4, #360]	; 0x168
 80044f8:	e9c4 9458 	strd	r9, r4, [r4, #352]	; 0x160
 80044fc:	4638      	mov	r0, r7
 80044fe:	f7ff fd23 	bl	8003f48 <_ZN13ScrollingMenuC1Ev>
 8004502:	239c      	movs	r3, #156	; 0x9c
 8004504:	e9c4 3695 	strd	r3, r6, [r4, #596]	; 0x254
        : Widget(), action(), pressed(false)
 8004508:	f504 7317 	add.w	r3, r4, #604	; 0x25c
 800450c:	2226      	movs	r2, #38	; 0x26
 800450e:	4629      	mov	r1, r5
 8004510:	4618      	mov	r0, r3
 8004512:	e9c4 9493 	strd	r9, r4, [r4, #588]	; 0x24c
 8004516:	f018 f901 	bl	801c71c <memset>
 800451a:	f7ff ff6b 	bl	80043f4 <_ZN8touchgfx8DrawableC1Ev>

class TouchForwarder : public TouchArea
{
public:
    TouchForwarder(Drawable& d1, Drawable& d2)
        : first(d1), second(d2), isDown(false), draggable(true)
 800451e:	4b0b      	ldr	r3, [pc, #44]	; (800454c <_ZN14ScrollingWheelC1Ev+0xa0>)
 8004520:	f8c4 325c 	str.w	r3, [r4, #604]	; 0x25c
}
 8004524:	4620      	mov	r0, r4
 8004526:	f44f 7380 	mov.w	r3, #256	; 0x100
 800452a:	e9c4 87a4 	strd	r8, r7, [r4, #656]	; 0x290
 800452e:	f8c4 5284 	str.w	r5, [r4, #644]	; 0x284
 8004532:	f884 5288 	strb.w	r5, [r4, #648]	; 0x288
        touchable = touch;
 8004536:	f884 6280 	strb.w	r6, [r4, #640]	; 0x280
 */
class TouchArea : public AbstractButton
{
public:
    TouchArea()
        : AbstractButton(), pressedAction(0)
 800453a:	f8c4 528c 	str.w	r5, [r4, #652]	; 0x28c
 800453e:	f8a4 3298 	strh.w	r3, [r4, #664]	; 0x298
 8004542:	b003      	add	sp, #12
 8004544:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004548:	0801ef0c 	.word	0x0801ef0c
 800454c:	0801f1cc 	.word	0x0801f1cc
 8004550:	0801eef4 	.word	0x0801eef4

08004554 <_ZN19SparseContainerListD1Ev>:
class SparseContainerList : public Container
 8004554:	4770      	bx	lr

08004556 <_ZN19SparseContainerListD0Ev>:
 8004556:	b510      	push	{r4, lr}
 8004558:	2148      	movs	r1, #72	; 0x48
 800455a:	4604      	mov	r4, r0
 800455c:	f017 fa82 	bl	801ba64 <_ZdlPvj>
 8004560:	4620      	mov	r0, r4
 8004562:	bd10      	pop	{r4, pc}

08004564 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8004564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004568:	461d      	mov	r5, r3
        setX(x);
 800456a:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800456c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8004570:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8004572:	4604      	mov	r4, r0
 8004574:	4616      	mov	r6, r2
        setX(x);
 8004576:	4798      	blx	r3
        setY(y);
 8004578:	6823      	ldr	r3, [r4, #0]
 800457a:	4631      	mov	r1, r6
 800457c:	4620      	mov	r0, r4
 800457e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004580:	4798      	blx	r3
        setWidth(width);
 8004582:	6823      	ldr	r3, [r4, #0]
 8004584:	4629      	mov	r1, r5
 8004586:	4620      	mov	r0, r4
 8004588:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800458a:	4798      	blx	r3
        setHeight(height);
 800458c:	6823      	ldr	r3, [r4, #0]
 800458e:	4639      	mov	r1, r7
 8004590:	4620      	mov	r0, r4
 8004592:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8004594:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8004598:	4718      	bx	r3
	...

0800459c <_ZN19SparseContainerListC1Ev>:
 800459c:	2200      	movs	r2, #0
 800459e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80045a2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 80045a6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80045aa:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80045ae:	f44f 7180 	mov.w	r1, #256	; 0x100
 80045b2:	6282      	str	r2, [r0, #40]	; 0x28
#include <gui/common/ScrollingWheels/SparseContainerList.hpp>

SparseContainerList::SparseContainerList()
 80045b4:	4a01      	ldr	r2, [pc, #4]	; (80045bc <_ZN19SparseContainerListC1Ev+0x20>)
 80045b6:	8481      	strh	r1, [r0, #36]	; 0x24
 80045b8:	6002      	str	r2, [r0, #0]
{
}
 80045ba:	4770      	bx	lr
 80045bc:	0801f13c 	.word	0x0801f13c

080045c0 <_ZN19SparseContainerList16setVirtualOffsetEl>:
void SparseContainerList::setVirtualOffset(int32_t virtualOffset)
{
    // virtualY is the Y location of item[0] relative to the center element
    // 0 => item[0] is perfectly selected, -itemHeight => item[1] is perfectly selected, itemHeight => item[N-1] is perfectly selected etc.
    // One item will start at VirualY, find position of first widget in container
    int32_t firstContainerOffset = virtualOffset + selectedItemOffset; // Relative to top of widget
 80045c0:	f9b0 302c 	ldrsh.w	r3, [r0, #44]	; 0x2c
{
 80045c4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    int32_t firstContainerOffset = virtualOffset + selectedItemOffset; // Relative to top of widget
 80045c8:	4419      	add	r1, r3
{
 80045ca:	4604      	mov	r4, r0
    int16_t newFirstItem = 0;
    if (firstContainerOffset > 0)
    {
        int numItems = firstContainerOffset / itemSize + 1;
 80045cc:	f9b0 002e 	ldrsh.w	r0, [r0, #46]	; 0x2e
        if (newFirstItem < 0)
        {
            firstContainerOffset -= newFirstItem * itemSize;
            newFirstItem = 0;
        }
        else if (newFirstItem + numContainers > numItems)
 80045d0:	f9b4 7034 	ldrsh.w	r7, [r4, #52]	; 0x34
    if (firstContainerOffset > 0)
 80045d4:	2900      	cmp	r1, #0
        int numItems = firstContainerOffset / itemSize + 1;
 80045d6:	bfc1      	itttt	gt
 80045d8:	fb91 f2f0 	sdivgt	r2, r1, r0
        newFirstItem -= numItems;
 80045dc:	43d3      	mvngt	r3, r2
        firstContainerOffset -= numItems * itemSize;
 80045de:	fb02 0200 	mlagt	r2, r2, r0, r0
 80045e2:	1a89      	subgt	r1, r1, r2
    if (firstContainerOffset <= -itemSize)
 80045e4:	f1c0 0200 	rsb	r2, r0, #0
        newFirstItem -= numItems;
 80045e8:	bfcc      	ite	gt
 80045ea:	b21b      	sxthgt	r3, r3
    int16_t newFirstItem = 0;
 80045ec:	2300      	movle	r3, #0
    if (firstContainerOffset <= -itemSize)
 80045ee:	428a      	cmp	r2, r1
        int numItems = firstContainerOffset / itemSize;
 80045f0:	bfa2      	ittt	ge
 80045f2:	fb91 f2f0 	sdivge	r2, r1, r0
        newFirstItem -= numItems;
 80045f6:	1a9b      	subge	r3, r3, r2
 80045f8:	fb00 1112 	mlsge	r1, r0, r2, r1
    if (isCircular)
 80045fc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
        newFirstItem -= numItems;
 8004600:	bfa8      	it	ge
 8004602:	b21b      	sxthge	r3, r3
    if (isCircular)
 8004604:	b162      	cbz	r2, 8004620 <_ZN19SparseContainerList16setVirtualOffsetEl+0x60>
        newFirstItem %= numItems;
 8004606:	f9b4 5032 	ldrsh.w	r5, [r4, #50]	; 0x32
 800460a:	fb93 f0f5 	sdiv	r0, r3, r5
 800460e:	fb05 3310 	mls	r3, r5, r0, r3
        newFirstItem = (newFirstItem + numItems) % numItems;
 8004612:	442b      	add	r3, r5
 8004614:	fb93 f0f5 	sdiv	r0, r3, r5
 8004618:	fb05 3310 	mls	r3, r5, r0, r3
        {
            int x = numItems - (newFirstItem + numContainers);
            firstContainerOffset += x * itemSize;
            newFirstItem += x;
 800461c:	b21b      	sxth	r3, r3
 800461e:	e004      	b.n	800462a <_ZN19SparseContainerList16setVirtualOffsetEl+0x6a>
        if (newFirstItem < 0)
 8004620:	2b00      	cmp	r3, #0
 8004622:	da79      	bge.n	8004718 <_ZN19SparseContainerList16setVirtualOffsetEl+0x158>
            firstContainerOffset -= newFirstItem * itemSize;
 8004624:	fb00 1113 	mls	r1, r0, r3, r1
            newFirstItem = 0;
 8004628:	4613      	mov	r3, r2
        }
    }

    int containerDelta = 0;
    if (allContainersInitialized && firstItem != newFirstItem)
 800462a:	f894 6046 	ldrb.w	r6, [r4, #70]	; 0x46
 800462e:	b1be      	cbz	r6, 8004660 <_ZN19SparseContainerList16setVirtualOffsetEl+0xa0>
 8004630:	f9b4 e03c 	ldrsh.w	lr, [r4, #60]	; 0x3c
 8004634:	459e      	cmp	lr, r3
 8004636:	d07d      	beq.n	8004734 <_ZN19SparseContainerList16setVirtualOffsetEl+0x174>
    {
        containerDelta = numContainers;
        for (int i = 1; i < numContainers; i++)
 8004638:	2601      	movs	r6, #1
 800463a:	42be      	cmp	r6, r7
 800463c:	da7c      	bge.n	8004738 <_ZN19SparseContainerList16setVirtualOffsetEl+0x178>
        {
            int fi = (firstItem + i);
 800463e:	eb0e 0506 	add.w	r5, lr, r6
            int nfi = (newFirstItem + i);
 8004642:	1998      	adds	r0, r3, r6
            if (isCircular)
 8004644:	b14a      	cbz	r2, 800465a <_ZN19SparseContainerList16setVirtualOffsetEl+0x9a>
            {
                fi %= numItems;
 8004646:	f9b4 c032 	ldrsh.w	ip, [r4, #50]	; 0x32
 800464a:	fb95 f8fc 	sdiv	r8, r5, ip
 800464e:	fb0c 5518 	mls	r5, ip, r8, r5
                nfi %= numItems;
 8004652:	fb90 f8fc 	sdiv	r8, r0, ip
 8004656:	fb0c 0018 	mls	r0, ip, r8, r0
            }
            if (fi == newFirstItem)
 800465a:	42ab      	cmp	r3, r5
 800465c:	d166      	bne.n	800472c <_ZN19SparseContainerList16setVirtualOffsetEl+0x16c>
            {
                containerDelta = -i;
 800465e:	4276      	negs	r6, r6
                containerDelta = i;
                break;
            }
        }
    }
    firstContainer = ((firstContainer - containerDelta) + numContainers) % numContainers;
 8004660:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
    firstItem = newFirstItem;
 8004664:	87a3      	strh	r3, [r4, #60]	; 0x3c
    firstContainer = ((firstContainer - containerDelta) + numContainers) % numContainers;
 8004666:	1b92      	subs	r2, r2, r6
 8004668:	443a      	add	r2, r7
 800466a:	fb92 f0f7 	sdiv	r0, r2, r7
 800466e:	fb07 2210 	mls	r2, r7, r0, r2
 8004672:	87e2      	strh	r2, [r4, #62]	; 0x3e

    Container* container;
    for (int i = 0; i < numContainers; i++)
 8004674:	2700      	movs	r7, #0
    {
        int containerIndex = (firstContainer + i) % numContainers;
        getElement->execute(containerIndex, &container);
        if (isHorizontal)
        {
            container->setX(firstContainerOffset + i * itemSize + spacing / 2);
 8004676:	b28d      	uxth	r5, r1
        visible = vis;
 8004678:	f04f 0901 	mov.w	r9, #1
    for (int i = 0; i < numContainers; i++)
 800467c:	f9b4 3034 	ldrsh.w	r3, [r4, #52]	; 0x34
 8004680:	42bb      	cmp	r3, r7
 8004682:	dd6e      	ble.n	8004762 <_ZN19SparseContainerList16setVirtualOffsetEl+0x1a2>
        int containerIndex = (firstContainer + i) % numContainers;
 8004684:	f9b4 803e 	ldrsh.w	r8, [r4, #62]	; 0x3e
        getElement->execute(containerIndex, &container);
 8004688:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        int containerIndex = (firstContainer + i) % numContainers;
 800468a:	44b8      	add	r8, r7
 800468c:	fb98 f2f3 	sdiv	r2, r8, r3
 8004690:	fb03 8812 	mls	r8, r3, r2, r8
        getElement->execute(containerIndex, &container);
 8004694:	6803      	ldr	r3, [r0, #0]
 8004696:	aa01      	add	r2, sp, #4
 8004698:	689b      	ldr	r3, [r3, #8]
 800469a:	4641      	mov	r1, r8
 800469c:	4798      	blx	r3
        if (isHorizontal)
 800469e:	f9b4 3030 	ldrsh.w	r3, [r4, #48]	; 0x30
 80046a2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80046a6:	9801      	ldr	r0, [sp, #4]
 80046a8:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80046aa:	fa1f fc87 	uxth.w	ip, r7
            container->setX(firstContainerOffset + i * itemSize + spacing / 2);
 80046ae:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
        if (isHorizontal)
 80046b2:	2900      	cmp	r1, #0
 80046b4:	d042      	beq.n	800473c <_ZN19SparseContainerList16setVirtualOffsetEl+0x17c>
            container->setX(firstContainerOffset + i * itemSize + spacing / 2);
 80046b6:	eb05 0163 	add.w	r1, r5, r3, asr #1
 80046ba:	6803      	ldr	r3, [r0, #0]
 80046bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046be:	fb12 110c 	smlabb	r1, r2, ip, r1
        }
        else
        {
            container->setY(firstContainerOffset + i * itemSize + spacing / 2);
 80046c2:	b209      	sxth	r1, r1
 80046c4:	4798      	blx	r3
        }

        int index = i + firstItem;
 80046c6:	f9b4 a03c 	ldrsh.w	sl, [r4, #60]	; 0x3c
        if (isCircular)
 80046ca:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80046ce:	9b01      	ldr	r3, [sp, #4]
        int index = i + firstItem;
 80046d0:	44ba      	add	sl, r7
        if (isCircular)
 80046d2:	2a00      	cmp	r2, #0
 80046d4:	d039      	beq.n	800474a <_ZN19SparseContainerList16setVirtualOffsetEl+0x18a>
        {
            index %= numItems;
 80046d6:	f9b4 2032 	ldrsh.w	r2, [r4, #50]	; 0x32
 80046da:	fb9a f1f2 	sdiv	r1, sl, r2
 80046de:	fb02 aa11 	mls	sl, r2, r1, sl
            if (index < 0 || index >= numItems)
            {
                index = -1;
            }
        }
        if (index < 0)
 80046e2:	f1ba 0f00 	cmp.w	sl, #0
 80046e6:	db37      	blt.n	8004758 <_ZN19SparseContainerList16setVirtualOffsetEl+0x198>
 80046e8:	f883 9025 	strb.w	r9, [r3, #37]	; 0x25
        }
        else
        {
            container->setVisible(true);
            // Only fill if first time or outside old range
            if (!allContainersInitialized || (i < containerDelta || i >= numContainers + containerDelta))
 80046ec:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80046f0:	b133      	cbz	r3, 8004700 <_ZN19SparseContainerList16setVirtualOffsetEl+0x140>
 80046f2:	42be      	cmp	r6, r7
 80046f4:	dc04      	bgt.n	8004700 <_ZN19SparseContainerList16setVirtualOffsetEl+0x140>
 80046f6:	f9b4 3034 	ldrsh.w	r3, [r4, #52]	; 0x34
 80046fa:	4433      	add	r3, r6
 80046fc:	42bb      	cmp	r3, r7
 80046fe:	dc2e      	bgt.n	800475e <_ZN19SparseContainerList16setVirtualOffsetEl+0x19e>
            {
                if (callback->isValid())
 8004700:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8004702:	6803      	ldr	r3, [r0, #0]
 8004704:	68db      	ldr	r3, [r3, #12]
 8004706:	4798      	blx	r3
 8004708:	b348      	cbz	r0, 800475e <_ZN19SparseContainerList16setVirtualOffsetEl+0x19e>
                {
                    callback->execute(containerIndex, index);
 800470a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800470c:	6803      	ldr	r3, [r0, #0]
 800470e:	4652      	mov	r2, sl
 8004710:	689b      	ldr	r3, [r3, #8]
 8004712:	4641      	mov	r1, r8
 8004714:	4798      	blx	r3
 8004716:	e022      	b.n	800475e <_ZN19SparseContainerList16setVirtualOffsetEl+0x19e>
        else if (newFirstItem + numContainers > numItems)
 8004718:	f9b4 5032 	ldrsh.w	r5, [r4, #50]	; 0x32
 800471c:	18fe      	adds	r6, r7, r3
 800471e:	42ae      	cmp	r6, r5
 8004720:	dd83      	ble.n	800462a <_ZN19SparseContainerList16setVirtualOffsetEl+0x6a>
            int x = numItems - (newFirstItem + numContainers);
 8004722:	1bad      	subs	r5, r5, r6
            firstContainerOffset += x * itemSize;
 8004724:	fb00 1105 	mla	r1, r0, r5, r1
            newFirstItem += x;
 8004728:	442b      	add	r3, r5
 800472a:	e777      	b.n	800461c <_ZN19SparseContainerList16setVirtualOffsetEl+0x5c>
            if (nfi == firstItem)
 800472c:	4586      	cmp	lr, r0
 800472e:	d097      	beq.n	8004660 <_ZN19SparseContainerList16setVirtualOffsetEl+0xa0>
        for (int i = 1; i < numContainers; i++)
 8004730:	3601      	adds	r6, #1
 8004732:	e782      	b.n	800463a <_ZN19SparseContainerList16setVirtualOffsetEl+0x7a>
    int containerDelta = 0;
 8004734:	2600      	movs	r6, #0
 8004736:	e793      	b.n	8004660 <_ZN19SparseContainerList16setVirtualOffsetEl+0xa0>
 8004738:	463e      	mov	r6, r7
 800473a:	e791      	b.n	8004660 <_ZN19SparseContainerList16setVirtualOffsetEl+0xa0>
            container->setY(firstContainerOffset + i * itemSize + spacing / 2);
 800473c:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8004740:	fb12 310c 	smlabb	r1, r2, ip, r3
 8004744:	6803      	ldr	r3, [r0, #0]
 8004746:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004748:	e7bb      	b.n	80046c2 <_ZN19SparseContainerList16setVirtualOffsetEl+0x102>
            if (index < 0 || index >= numItems)
 800474a:	f1ba 0f00 	cmp.w	sl, #0
 800474e:	db03      	blt.n	8004758 <_ZN19SparseContainerList16setVirtualOffsetEl+0x198>
 8004750:	f9b4 2032 	ldrsh.w	r2, [r4, #50]	; 0x32
 8004754:	4552      	cmp	r2, sl
 8004756:	dcc7      	bgt.n	80046e8 <_ZN19SparseContainerList16setVirtualOffsetEl+0x128>
 8004758:	2200      	movs	r2, #0
 800475a:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    for (int i = 0; i < numContainers; i++)
 800475e:	3701      	adds	r7, #1
 8004760:	e78c      	b.n	800467c <_ZN19SparseContainerList16setVirtualOffsetEl+0xbc>
                }
            }
        }
    }
    allContainersInitialized = true;
 8004762:	2301      	movs	r3, #1
 8004764:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
}
 8004768:	b002      	add	sp, #8
 800476a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08004770 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE>:
{
 8004770:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004774:	4699      	mov	r9, r3
    callback = &callback_;
 8004776:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004778:	6403      	str	r3, [r0, #64]	; 0x40
    setWidth(widgetWidth);
 800477a:	6803      	ldr	r3, [r0, #0]
    isHorizontal = isHorizontal_;
 800477c:	f880 1045 	strb.w	r1, [r0, #69]	; 0x45
{
 8004780:	4604      	mov	r4, r0
    isCircular = isCircular_;
 8004782:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
    setWidth(widgetWidth);
 8004786:	6b9b      	ldr	r3, [r3, #56]	; 0x38
{
 8004788:	f9bd 8030 	ldrsh.w	r8, [sp, #48]	; 0x30
 800478c:	f9bd 5038 	ldrsh.w	r5, [sp, #56]	; 0x38
 8004790:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8004794:	f9bd 7040 	ldrsh.w	r7, [sp, #64]	; 0x40
 8004798:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
    setWidth(widgetWidth);
 800479c:	4649      	mov	r1, r9
 800479e:	4798      	blx	r3
    setHeight(widgetHeight);
 80047a0:	6823      	ldr	r3, [r4, #0]
 80047a2:	4620      	mov	r0, r4
 80047a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80047a6:	4641      	mov	r1, r8
 80047a8:	4798      	blx	r3
    itemSize = containerSize + containerSpacing;
 80047aa:	eb05 000a 	add.w	r0, r5, sl
 80047ae:	b200      	sxth	r0, r0
    selectedItemOffset = selectedItemOffset_;
 80047b0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80047b4:	85a3      	strh	r3, [r4, #44]	; 0x2c
    assert(itemSize > 0);
 80047b6:	2800      	cmp	r0, #0
    itemSize = containerSize + containerSpacing;
 80047b8:	85e0      	strh	r0, [r4, #46]	; 0x2e
    assert(itemSize > 0);
 80047ba:	dc05      	bgt.n	80047c8 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0x58>
 80047bc:	4b29      	ldr	r3, [pc, #164]	; (8004864 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0xf4>)
 80047be:	4a2a      	ldr	r2, [pc, #168]	; (8004868 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0xf8>)
 80047c0:	2114      	movs	r1, #20
    assert(numContainers_ >= requiredContainers);
 80047c2:	482a      	ldr	r0, [pc, #168]	; (800486c <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0xfc>)
 80047c4:	f017 ff1e 	bl	801c604 <__assert_func>
    int16_t requiredContainers = 1 + (((isHorizontal ? widgetWidth : widgetHeight) - 1) + (itemSize - 1)) / itemSize;
 80047c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    spacing = containerSpacing;
 80047cc:	f8a4 a030 	strh.w	sl, [r4, #48]	; 0x30
    numItems = numItems_;
 80047d0:	8667      	strh	r7, [r4, #50]	; 0x32
    int16_t requiredContainers = 1 + (((isHorizontal ? widgetWidth : widgetHeight) - 1) + (itemSize - 1)) / itemSize;
 80047d2:	b19b      	cbz	r3, 80047fc <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0x8c>
 80047d4:	f109 33ff 	add.w	r3, r9, #4294967295
 80047d8:	1e42      	subs	r2, r0, #1
 80047da:	4413      	add	r3, r2
    if (!isCircular)
 80047dc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
    int16_t requiredContainers = 1 + (((isHorizontal ? widgetWidth : widgetHeight) - 1) + (itemSize - 1)) / itemSize;
 80047e0:	fb93 f3f0 	sdiv	r3, r3, r0
 80047e4:	3301      	adds	r3, #1
 80047e6:	b21b      	sxth	r3, r3
    if (!isCircular)
 80047e8:	b912      	cbnz	r2, 80047f0 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0x80>
        if (requiredContainers > numItems)
 80047ea:	42bb      	cmp	r3, r7
 80047ec:	bfa8      	it	ge
 80047ee:	463b      	movge	r3, r7
    assert(numContainers_ >= requiredContainers);
 80047f0:	42b3      	cmp	r3, r6
 80047f2:	dd06      	ble.n	8004802 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0x92>
 80047f4:	4b1e      	ldr	r3, [pc, #120]	; (8004870 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0x100>)
 80047f6:	4a1c      	ldr	r2, [pc, #112]	; (8004868 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0xf8>)
 80047f8:	2123      	movs	r1, #35	; 0x23
 80047fa:	e7e2      	b.n	80047c2 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0x52>
    int16_t requiredContainers = 1 + (((isHorizontal ? widgetWidth : widgetHeight) - 1) + (itemSize - 1)) / itemSize;
 80047fc:	f108 33ff 	add.w	r3, r8, #4294967295
 8004800:	e7ea      	b.n	80047d8 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0x68>
    getElement = &getElementCallback;
 8004802:	9b12      	ldr	r3, [sp, #72]	; 0x48
    numContainers = numContainers_;
 8004804:	86a6      	strh	r6, [r4, #52]	; 0x34
    getElement = &getElementCallback;
 8004806:	63a3      	str	r3, [r4, #56]	; 0x38
    Container::removeAll();
 8004808:	4620      	mov	r0, r4
 800480a:	f004 fe86 	bl	800951a <_ZN8touchgfx9Container9removeAllEv>
    for (int i = 0; i < numContainers; i++)
 800480e:	2600      	movs	r6, #0
 8004810:	f9b4 3034 	ldrsh.w	r3, [r4, #52]	; 0x34
 8004814:	42b3      	cmp	r3, r6
 8004816:	dd1b      	ble.n	8004850 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0xe0>
        getElement->execute(i, &container);
 8004818:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800481a:	6803      	ldr	r3, [r0, #0]
 800481c:	aa03      	add	r2, sp, #12
 800481e:	689b      	ldr	r3, [r3, #8]
 8004820:	4631      	mov	r1, r6
 8004822:	4798      	blx	r3
        if (isHorizontal)
 8004824:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 8004828:	b172      	cbz	r2, 8004848 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0xd8>
            container->setPosition(0, 0, containerSize, getHeight());
 800482a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800482e:	9300      	str	r3, [sp, #0]
 8004830:	2200      	movs	r2, #0
 8004832:	462b      	mov	r3, r5
            container->setPosition(0, 0, getWidth(), containerSize);
 8004834:	4611      	mov	r1, r2
 8004836:	9803      	ldr	r0, [sp, #12]
 8004838:	f7ff fe94 	bl	8004564 <_ZN8touchgfx8Drawable11setPositionEssss>
        Container::add(*container);
 800483c:	9903      	ldr	r1, [sp, #12]
 800483e:	4620      	mov	r0, r4
 8004840:	f004 fe5e 	bl	8009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    for (int i = 0; i < numContainers; i++)
 8004844:	3601      	adds	r6, #1
 8004846:	e7e3      	b.n	8004810 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0xa0>
            container->setPosition(0, 0, getWidth(), containerSize);
 8004848:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800484c:	9500      	str	r5, [sp, #0]
 800484e:	e7f1      	b.n	8004834 <_ZN19SparseContainerList5setupEbbsssssssRN8touchgfx15GenericCallbackIiPPNS0_9ContainerEvEERNS1_IiivEE+0xc4>
    allContainersInitialized = false;
 8004850:	2100      	movs	r1, #0
 8004852:	f884 1046 	strb.w	r1, [r4, #70]	; 0x46
    firstItem = 0;
 8004856:	63e1      	str	r1, [r4, #60]	; 0x3c
    setVirtualOffset(0);
 8004858:	4620      	mov	r0, r4
 800485a:	f7ff feb1 	bl	80045c0 <_ZN19SparseContainerList16setVirtualOffsetEl>
}
 800485e:	b004      	add	sp, #16
 8004860:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004864:	0801efac 	.word	0x0801efac
 8004868:	0801efb9 	.word	0x0801efb9
 800486c:	0801f082 	.word	0x0801f082
 8004870:	0801f10d 	.word	0x0801f10d

08004874 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
     * @return true if button is pressed, false otherwise.
     */
    virtual bool getPressedState() const
    {
        return pressed;
    }
 8004874:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8004878:	4770      	bx	lr

0800487a <_ZNK8touchgfx9TouchArea4drawERKNS_4RectE>:
    {
    }

    virtual void draw(const Rect& /*invalidatedArea*/) const
    {
    }
 800487a:	4770      	bx	lr

0800487c <_ZNK8touchgfx9TouchArea12getSolidRectEv>:
 800487c:	2200      	movs	r2, #0
 800487e:	8002      	strh	r2, [r0, #0]
 8004880:	8042      	strh	r2, [r0, #2]
 8004882:	8082      	strh	r2, [r0, #4]
 8004884:	80c2      	strh	r2, [r0, #6]
    virtual void handleClickEvent(const ClickEvent& event);

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8004886:	4770      	bx	lr

08004888 <_ZNK8touchgfx9TouchArea17invalidateContentEv>:
    }

    virtual void invalidateContent() const
    {
        // A TouchArea is invisible, do nothing
    }
 8004888:	4770      	bx	lr

0800488a <_ZN14TouchForwarder16handleClickEventERKN8touchgfx10ClickEventE>:
#include <gui/common/ScrollingWheels/TouchForwarder.hpp>

void TouchForwarder::handleClickEvent(const ClickEvent& evt)
{
    isDown = (evt.getType() == ClickEvent::PRESSED);
 800488a:	790b      	ldrb	r3, [r1, #4]
 800488c:	fab3 f383 	clz	r3, r3
 8004890:	095b      	lsrs	r3, r3, #5
{
 8004892:	b570      	push	{r4, r5, r6, lr}
 8004894:	4604      	mov	r4, r0
    isDown = (evt.getType() == ClickEvent::PRESSED);
 8004896:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    first.handleClickEvent(evt);
 800489a:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800489c:	6803      	ldr	r3, [r0, #0]
 800489e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
{
 80048a0:	460d      	mov	r5, r1
    first.handleClickEvent(evt);
 80048a2:	4798      	blx	r3
    second.handleClickEvent(evt);
 80048a4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80048a6:	6803      	ldr	r3, [r0, #0]
 80048a8:	4629      	mov	r1, r5
 80048aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
}
 80048ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    second.handleClickEvent(evt);
 80048b0:	4718      	bx	r3

080048b2 <_ZN14TouchForwarderD1Ev>:
class TouchForwarder : public TouchArea
 80048b2:	4770      	bx	lr

080048b4 <_ZN14TouchForwarderD0Ev>:
 80048b4:	b510      	push	{r4, lr}
 80048b6:	2140      	movs	r1, #64	; 0x40
 80048b8:	4604      	mov	r4, r0
 80048ba:	f017 f8d3 	bl	801ba64 <_ZdlPvj>
 80048be:	4620      	mov	r0, r4
 80048c0:	bd10      	pop	{r4, pc}

080048c2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
    virtual void executeAction()
 80048c2:	b510      	push	{r4, lr}
 80048c4:	4604      	mov	r4, r0
        if (action && action->isValid())
 80048c6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80048c8:	b150      	cbz	r0, 80048e0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80048ca:	6803      	ldr	r3, [r0, #0]
 80048cc:	68db      	ldr	r3, [r3, #12]
 80048ce:	4798      	blx	r3
 80048d0:	b130      	cbz	r0, 80048e0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
            action->execute(*this);
 80048d2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80048d4:	6803      	ldr	r3, [r0, #0]
 80048d6:	4621      	mov	r1, r4
 80048d8:	689b      	ldr	r3, [r3, #8]
    }
 80048da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80048de:	4718      	bx	r3
    }
 80048e0:	bd10      	pop	{r4, pc}

080048e2 <_ZN14TouchForwarder15handleDragEventERKN8touchgfx9DragEventE>:

void TouchForwarder::handleDragEvent(const DragEvent& evt)
{
    if (draggable)
 80048e2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
{
 80048e6:	b570      	push	{r4, r5, r6, lr}
 80048e8:	4604      	mov	r4, r0
 80048ea:	460d      	mov	r5, r1
    if (draggable)
 80048ec:	b153      	cbz	r3, 8004904 <_ZN14TouchForwarder15handleDragEventERKN8touchgfx9DragEventE+0x22>
    {
        first.handleDragEvent(evt);
 80048ee:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80048f0:	6803      	ldr	r3, [r0, #0]
 80048f2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80048f4:	4798      	blx	r3
        second.handleDragEvent(evt);
 80048f6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80048f8:	6803      	ldr	r3, [r0, #0]
 80048fa:	4629      	mov	r1, r5
 80048fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    }
}
 80048fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        second.handleDragEvent(evt);
 8004902:	4718      	bx	r3
}
 8004904:	bd70      	pop	{r4, r5, r6, pc}

08004906 <_ZN14TouchForwarder18handleGestureEventERKN8touchgfx12GestureEventE>:

void TouchForwarder::handleGestureEvent(const GestureEvent& evt)
{
    if (draggable)
 8004906:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
{
 800490a:	b570      	push	{r4, r5, r6, lr}
 800490c:	4604      	mov	r4, r0
 800490e:	460d      	mov	r5, r1
    if (draggable)
 8004910:	b153      	cbz	r3, 8004928 <_ZN14TouchForwarder18handleGestureEventERKN8touchgfx12GestureEventE+0x22>
    {
        first.handleGestureEvent(evt);
 8004912:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8004914:	6803      	ldr	r3, [r0, #0]
 8004916:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004918:	4798      	blx	r3
        second.handleGestureEvent(evt);
 800491a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800491c:	6803      	ldr	r3, [r0, #0]
 800491e:	4629      	mov	r1, r5
 8004920:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
}
 8004922:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        second.handleGestureEvent(evt);
 8004926:	4718      	bx	r3
}
 8004928:	bd70      	pop	{r4, r5, r6, pc}

0800492a <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800492a:	20f0      	movs	r0, #240	; 0xf0
 800492c:	4770      	bx	lr

0800492e <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800492e:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8004932:	4770      	bx	lr

08004934 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8004934:	2029      	movs	r0, #41	; 0x29
 8004936:	f7fc bf6b 	b.w	8001810 <LCD_IO_WriteReg>

0800493a <ili9341_DisplayOff>:
 800493a:	2028      	movs	r0, #40	; 0x28
 800493c:	f7fc bf68 	b.w	8001810 <LCD_IO_WriteReg>

08004940 <ili9341_Init>:
{
 8004940:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004942:	f7fc ff39 	bl	80017b8 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004946:	20ca      	movs	r0, #202	; 0xca
 8004948:	f7fc ff62 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800494c:	20c3      	movs	r0, #195	; 0xc3
 800494e:	f7fc ff43 	bl	80017d8 <LCD_IO_WriteData>
 8004952:	2008      	movs	r0, #8
 8004954:	f7fc ff40 	bl	80017d8 <LCD_IO_WriteData>
 8004958:	2050      	movs	r0, #80	; 0x50
 800495a:	f7fc ff3d 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800495e:	20cf      	movs	r0, #207	; 0xcf
 8004960:	f7fc ff56 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004964:	2000      	movs	r0, #0
 8004966:	f7fc ff37 	bl	80017d8 <LCD_IO_WriteData>
 800496a:	20c1      	movs	r0, #193	; 0xc1
 800496c:	f7fc ff34 	bl	80017d8 <LCD_IO_WriteData>
 8004970:	2030      	movs	r0, #48	; 0x30
 8004972:	f7fc ff31 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004976:	20ed      	movs	r0, #237	; 0xed
 8004978:	f7fc ff4a 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800497c:	2064      	movs	r0, #100	; 0x64
 800497e:	f7fc ff2b 	bl	80017d8 <LCD_IO_WriteData>
 8004982:	2003      	movs	r0, #3
 8004984:	f7fc ff28 	bl	80017d8 <LCD_IO_WriteData>
 8004988:	2012      	movs	r0, #18
 800498a:	f7fc ff25 	bl	80017d8 <LCD_IO_WriteData>
 800498e:	2081      	movs	r0, #129	; 0x81
 8004990:	f7fc ff22 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004994:	20e8      	movs	r0, #232	; 0xe8
 8004996:	f7fc ff3b 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800499a:	2085      	movs	r0, #133	; 0x85
 800499c:	f7fc ff1c 	bl	80017d8 <LCD_IO_WriteData>
 80049a0:	2000      	movs	r0, #0
 80049a2:	f7fc ff19 	bl	80017d8 <LCD_IO_WriteData>
 80049a6:	2078      	movs	r0, #120	; 0x78
 80049a8:	f7fc ff16 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80049ac:	20cb      	movs	r0, #203	; 0xcb
 80049ae:	f7fc ff2f 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80049b2:	2039      	movs	r0, #57	; 0x39
 80049b4:	f7fc ff10 	bl	80017d8 <LCD_IO_WriteData>
 80049b8:	202c      	movs	r0, #44	; 0x2c
 80049ba:	f7fc ff0d 	bl	80017d8 <LCD_IO_WriteData>
 80049be:	2000      	movs	r0, #0
 80049c0:	f7fc ff0a 	bl	80017d8 <LCD_IO_WriteData>
 80049c4:	2034      	movs	r0, #52	; 0x34
 80049c6:	f7fc ff07 	bl	80017d8 <LCD_IO_WriteData>
 80049ca:	2002      	movs	r0, #2
 80049cc:	f7fc ff04 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80049d0:	20f7      	movs	r0, #247	; 0xf7
 80049d2:	f7fc ff1d 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80049d6:	2020      	movs	r0, #32
 80049d8:	f7fc fefe 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80049dc:	20ea      	movs	r0, #234	; 0xea
 80049de:	f7fc ff17 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80049e2:	2000      	movs	r0, #0
 80049e4:	f7fc fef8 	bl	80017d8 <LCD_IO_WriteData>
 80049e8:	2000      	movs	r0, #0
 80049ea:	f7fc fef5 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80049ee:	20b1      	movs	r0, #177	; 0xb1
 80049f0:	f7fc ff0e 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80049f4:	2000      	movs	r0, #0
 80049f6:	f7fc feef 	bl	80017d8 <LCD_IO_WriteData>
 80049fa:	201b      	movs	r0, #27
 80049fc:	f7fc feec 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a00:	20b6      	movs	r0, #182	; 0xb6
 8004a02:	f7fc ff05 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a06:	200a      	movs	r0, #10
 8004a08:	f7fc fee6 	bl	80017d8 <LCD_IO_WriteData>
 8004a0c:	20a2      	movs	r0, #162	; 0xa2
 8004a0e:	f7fc fee3 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a12:	20c0      	movs	r0, #192	; 0xc0
 8004a14:	f7fc fefc 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a18:	2010      	movs	r0, #16
 8004a1a:	f7fc fedd 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a1e:	20c1      	movs	r0, #193	; 0xc1
 8004a20:	f7fc fef6 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a24:	2010      	movs	r0, #16
 8004a26:	f7fc fed7 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a2a:	20c5      	movs	r0, #197	; 0xc5
 8004a2c:	f7fc fef0 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a30:	2045      	movs	r0, #69	; 0x45
 8004a32:	f7fc fed1 	bl	80017d8 <LCD_IO_WriteData>
 8004a36:	2015      	movs	r0, #21
 8004a38:	f7fc fece 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a3c:	20c7      	movs	r0, #199	; 0xc7
 8004a3e:	f7fc fee7 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a42:	2090      	movs	r0, #144	; 0x90
 8004a44:	f7fc fec8 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a48:	2036      	movs	r0, #54	; 0x36
 8004a4a:	f7fc fee1 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a4e:	20c8      	movs	r0, #200	; 0xc8
 8004a50:	f7fc fec2 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a54:	20f2      	movs	r0, #242	; 0xf2
 8004a56:	f7fc fedb 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a5a:	2000      	movs	r0, #0
 8004a5c:	f7fc febc 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a60:	20b0      	movs	r0, #176	; 0xb0
 8004a62:	f7fc fed5 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a66:	20c2      	movs	r0, #194	; 0xc2
 8004a68:	f7fc feb6 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a6c:	20b6      	movs	r0, #182	; 0xb6
 8004a6e:	f7fc fecf 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a72:	200a      	movs	r0, #10
 8004a74:	f7fc feb0 	bl	80017d8 <LCD_IO_WriteData>
 8004a78:	20a7      	movs	r0, #167	; 0xa7
 8004a7a:	f7fc fead 	bl	80017d8 <LCD_IO_WriteData>
 8004a7e:	2027      	movs	r0, #39	; 0x27
 8004a80:	f7fc feaa 	bl	80017d8 <LCD_IO_WriteData>
 8004a84:	2004      	movs	r0, #4
 8004a86:	f7fc fea7 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004a8a:	202a      	movs	r0, #42	; 0x2a
 8004a8c:	f7fc fec0 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004a90:	2000      	movs	r0, #0
 8004a92:	f7fc fea1 	bl	80017d8 <LCD_IO_WriteData>
 8004a96:	2000      	movs	r0, #0
 8004a98:	f7fc fe9e 	bl	80017d8 <LCD_IO_WriteData>
 8004a9c:	2000      	movs	r0, #0
 8004a9e:	f7fc fe9b 	bl	80017d8 <LCD_IO_WriteData>
 8004aa2:	20ef      	movs	r0, #239	; 0xef
 8004aa4:	f7fc fe98 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004aa8:	202b      	movs	r0, #43	; 0x2b
 8004aaa:	f7fc feb1 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004aae:	2000      	movs	r0, #0
 8004ab0:	f7fc fe92 	bl	80017d8 <LCD_IO_WriteData>
 8004ab4:	2000      	movs	r0, #0
 8004ab6:	f7fc fe8f 	bl	80017d8 <LCD_IO_WriteData>
 8004aba:	2001      	movs	r0, #1
 8004abc:	f7fc fe8c 	bl	80017d8 <LCD_IO_WriteData>
 8004ac0:	203f      	movs	r0, #63	; 0x3f
 8004ac2:	f7fc fe89 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004ac6:	20f6      	movs	r0, #246	; 0xf6
 8004ac8:	f7fc fea2 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004acc:	2001      	movs	r0, #1
 8004ace:	f7fc fe83 	bl	80017d8 <LCD_IO_WriteData>
 8004ad2:	2000      	movs	r0, #0
 8004ad4:	f7fc fe80 	bl	80017d8 <LCD_IO_WriteData>
 8004ad8:	2006      	movs	r0, #6
 8004ada:	f7fc fe7d 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004ade:	202c      	movs	r0, #44	; 0x2c
 8004ae0:	f7fc fe96 	bl	8001810 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004ae4:	20c8      	movs	r0, #200	; 0xc8
 8004ae6:	f7fc fee1 	bl	80018ac <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004aea:	2026      	movs	r0, #38	; 0x26
 8004aec:	f7fc fe90 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004af0:	2001      	movs	r0, #1
 8004af2:	f7fc fe71 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004af6:	20e0      	movs	r0, #224	; 0xe0
 8004af8:	f7fc fe8a 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004afc:	200f      	movs	r0, #15
 8004afe:	f7fc fe6b 	bl	80017d8 <LCD_IO_WriteData>
 8004b02:	2029      	movs	r0, #41	; 0x29
 8004b04:	f7fc fe68 	bl	80017d8 <LCD_IO_WriteData>
 8004b08:	2024      	movs	r0, #36	; 0x24
 8004b0a:	f7fc fe65 	bl	80017d8 <LCD_IO_WriteData>
 8004b0e:	200c      	movs	r0, #12
 8004b10:	f7fc fe62 	bl	80017d8 <LCD_IO_WriteData>
 8004b14:	200e      	movs	r0, #14
 8004b16:	f7fc fe5f 	bl	80017d8 <LCD_IO_WriteData>
 8004b1a:	2009      	movs	r0, #9
 8004b1c:	f7fc fe5c 	bl	80017d8 <LCD_IO_WriteData>
 8004b20:	204e      	movs	r0, #78	; 0x4e
 8004b22:	f7fc fe59 	bl	80017d8 <LCD_IO_WriteData>
 8004b26:	2078      	movs	r0, #120	; 0x78
 8004b28:	f7fc fe56 	bl	80017d8 <LCD_IO_WriteData>
 8004b2c:	203c      	movs	r0, #60	; 0x3c
 8004b2e:	f7fc fe53 	bl	80017d8 <LCD_IO_WriteData>
 8004b32:	2009      	movs	r0, #9
 8004b34:	f7fc fe50 	bl	80017d8 <LCD_IO_WriteData>
 8004b38:	2013      	movs	r0, #19
 8004b3a:	f7fc fe4d 	bl	80017d8 <LCD_IO_WriteData>
 8004b3e:	2005      	movs	r0, #5
 8004b40:	f7fc fe4a 	bl	80017d8 <LCD_IO_WriteData>
 8004b44:	2017      	movs	r0, #23
 8004b46:	f7fc fe47 	bl	80017d8 <LCD_IO_WriteData>
 8004b4a:	2011      	movs	r0, #17
 8004b4c:	f7fc fe44 	bl	80017d8 <LCD_IO_WriteData>
 8004b50:	2000      	movs	r0, #0
 8004b52:	f7fc fe41 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004b56:	20e1      	movs	r0, #225	; 0xe1
 8004b58:	f7fc fe5a 	bl	8001810 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004b5c:	2000      	movs	r0, #0
 8004b5e:	f7fc fe3b 	bl	80017d8 <LCD_IO_WriteData>
 8004b62:	2016      	movs	r0, #22
 8004b64:	f7fc fe38 	bl	80017d8 <LCD_IO_WriteData>
 8004b68:	201b      	movs	r0, #27
 8004b6a:	f7fc fe35 	bl	80017d8 <LCD_IO_WriteData>
 8004b6e:	2004      	movs	r0, #4
 8004b70:	f7fc fe32 	bl	80017d8 <LCD_IO_WriteData>
 8004b74:	2011      	movs	r0, #17
 8004b76:	f7fc fe2f 	bl	80017d8 <LCD_IO_WriteData>
 8004b7a:	2007      	movs	r0, #7
 8004b7c:	f7fc fe2c 	bl	80017d8 <LCD_IO_WriteData>
 8004b80:	2031      	movs	r0, #49	; 0x31
 8004b82:	f7fc fe29 	bl	80017d8 <LCD_IO_WriteData>
 8004b86:	2033      	movs	r0, #51	; 0x33
 8004b88:	f7fc fe26 	bl	80017d8 <LCD_IO_WriteData>
 8004b8c:	2042      	movs	r0, #66	; 0x42
 8004b8e:	f7fc fe23 	bl	80017d8 <LCD_IO_WriteData>
 8004b92:	2005      	movs	r0, #5
 8004b94:	f7fc fe20 	bl	80017d8 <LCD_IO_WriteData>
 8004b98:	200c      	movs	r0, #12
 8004b9a:	f7fc fe1d 	bl	80017d8 <LCD_IO_WriteData>
 8004b9e:	200a      	movs	r0, #10
 8004ba0:	f7fc fe1a 	bl	80017d8 <LCD_IO_WriteData>
 8004ba4:	2028      	movs	r0, #40	; 0x28
 8004ba6:	f7fc fe17 	bl	80017d8 <LCD_IO_WriteData>
 8004baa:	202f      	movs	r0, #47	; 0x2f
 8004bac:	f7fc fe14 	bl	80017d8 <LCD_IO_WriteData>
 8004bb0:	200f      	movs	r0, #15
 8004bb2:	f7fc fe11 	bl	80017d8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004bb6:	2011      	movs	r0, #17
 8004bb8:	f7fc fe2a 	bl	8001810 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004bbc:	20c8      	movs	r0, #200	; 0xc8
 8004bbe:	f7fc fe75 	bl	80018ac <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004bc2:	2029      	movs	r0, #41	; 0x29
 8004bc4:	f7fc fe24 	bl	8001810 <LCD_IO_WriteReg>
}
 8004bc8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8004bcc:	202c      	movs	r0, #44	; 0x2c
 8004bce:	f7fc be1f 	b.w	8001810 <LCD_IO_WriteReg>

08004bd2 <ili9341_ReadID>:
{
 8004bd2:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004bd4:	f7fc fdf0 	bl	80017b8 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8004bd8:	2103      	movs	r1, #3
 8004bda:	20d3      	movs	r0, #211	; 0xd3
 8004bdc:	f7fc fe34 	bl	8001848 <LCD_IO_ReadData>
}
 8004be0:	b280      	uxth	r0, r0
 8004be2:	bd08      	pop	{r3, pc}

08004be4 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8004be4:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004be6:	b2c4      	uxtb	r4, r0
 8004be8:	2202      	movs	r2, #2
 8004bea:	2103      	movs	r1, #3
 8004bec:	4620      	mov	r0, r4
 8004bee:	f7fc fd99 	bl	8001724 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8004bf2:	200a      	movs	r0, #10
 8004bf4:	f7fc fdde 	bl	80017b4 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8004bf8:	4620      	mov	r0, r4
 8004bfa:	2200      	movs	r2, #0
 8004bfc:	2103      	movs	r1, #3
 8004bfe:	f7fc fd91 	bl	8001724 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8004c02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8004c06:	2002      	movs	r0, #2
 8004c08:	f7fc bdd4 	b.w	80017b4 <IOE_Delay>

08004c0c <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8004c0c:	b538      	push	{r3, r4, r5, lr}
 8004c0e:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004c10:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8004c12:	f7fc fd85 	bl	8001720 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004c16:	2100      	movs	r1, #0
 8004c18:	4620      	mov	r0, r4
 8004c1a:	f7fc fd9b 	bl	8001754 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004c1e:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004c20:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004c22:	4620      	mov	r0, r4
 8004c24:	f7fc fd96 	bl	8001754 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004c28:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8004c2c:	b280      	uxth	r0, r0
 8004c2e:	bd38      	pop	{r3, r4, r5, pc}

08004c30 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8004c30:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8004c32:	b2c4      	uxtb	r4, r0
 8004c34:	2140      	movs	r1, #64	; 0x40
 8004c36:	4620      	mov	r0, r4
 8004c38:	f7fc fd8c 	bl	8001754 <IOE_Read>
  
  if(state > 0)
 8004c3c:	0603      	lsls	r3, r0, #24
 8004c3e:	d507      	bpl.n	8004c50 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8004c40:	214c      	movs	r1, #76	; 0x4c
 8004c42:	4620      	mov	r0, r4
 8004c44:	f7fc fd86 	bl	8001754 <IOE_Read>
    {
      ret = 1;
 8004c48:	3800      	subs	r0, #0
 8004c4a:	bf18      	it	ne
 8004c4c:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8004c4e:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004c50:	2201      	movs	r2, #1
 8004c52:	214b      	movs	r1, #75	; 0x4b
 8004c54:	4620      	mov	r0, r4
 8004c56:	f7fc fd65 	bl	8001724 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004c5a:	4620      	mov	r0, r4
 8004c5c:	2200      	movs	r2, #0
 8004c5e:	214b      	movs	r1, #75	; 0x4b
 8004c60:	f7fc fd60 	bl	8001724 <IOE_Write>
  uint8_t ret = 0;
 8004c64:	2000      	movs	r0, #0
 8004c66:	e7f2      	b.n	8004c4e <stmpe811_TS_DetectTouch+0x1e>

08004c68 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8004c68:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004c6a:	2304      	movs	r3, #4
 8004c6c:	b2c4      	uxtb	r4, r0
{
 8004c6e:	460e      	mov	r6, r1
 8004c70:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004c72:	21d7      	movs	r1, #215	; 0xd7
 8004c74:	eb0d 0203 	add.w	r2, sp, r3
 8004c78:	4620      	mov	r0, r4
 8004c7a:	f7fc fd85 	bl	8001788 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8004c7e:	9b01      	ldr	r3, [sp, #4]
 8004c80:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004c82:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004c84:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004c88:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004c8a:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004c8c:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004c8e:	2201      	movs	r2, #1
 8004c90:	214b      	movs	r1, #75	; 0x4b
 8004c92:	f7fc fd47 	bl	8001724 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004c96:	2200      	movs	r2, #0
 8004c98:	214b      	movs	r1, #75	; 0x4b
 8004c9a:	4620      	mov	r0, r4
 8004c9c:	f7fc fd42 	bl	8001724 <IOE_Write>
}
 8004ca0:	b002      	add	sp, #8
 8004ca2:	bd70      	pop	{r4, r5, r6, pc}

08004ca4 <stmpe811_Init>:
{
 8004ca4:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004ca6:	4b0a      	ldr	r3, [pc, #40]	; (8004cd0 <stmpe811_Init+0x2c>)
 8004ca8:	781a      	ldrb	r2, [r3, #0]
 8004caa:	4290      	cmp	r0, r2
{
 8004cac:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8004cae:	d00d      	beq.n	8004ccc <stmpe811_Init+0x28>
 8004cb0:	7859      	ldrb	r1, [r3, #1]
 8004cb2:	4288      	cmp	r0, r1
 8004cb4:	d00a      	beq.n	8004ccc <stmpe811_Init+0x28>
 8004cb6:	b10a      	cbz	r2, 8004cbc <stmpe811_Init+0x18>
 8004cb8:	b941      	cbnz	r1, 8004ccc <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8004cba:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8004cbc:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8004cbe:	f7fc fd2f 	bl	8001720 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8004cc2:	4620      	mov	r0, r4
}
 8004cc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8004cc8:	f7ff bf8c 	b.w	8004be4 <stmpe811_Reset>
}
 8004ccc:	bd10      	pop	{r4, pc}
 8004cce:	bf00      	nop
 8004cd0:	200069e8 	.word	0x200069e8

08004cd4 <stmpe811_EnableGlobalIT>:
{
 8004cd4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004cd6:	b2c4      	uxtb	r4, r0
 8004cd8:	2109      	movs	r1, #9
 8004cda:	4620      	mov	r0, r4
 8004cdc:	f7fc fd3a 	bl	8001754 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8004ce0:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004ce4:	b2c2      	uxtb	r2, r0
 8004ce6:	2109      	movs	r1, #9
 8004ce8:	4620      	mov	r0, r4
}
 8004cea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004cee:	f7fc bd19 	b.w	8001724 <IOE_Write>

08004cf2 <stmpe811_DisableGlobalIT>:
{
 8004cf2:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004cf4:	b2c4      	uxtb	r4, r0
 8004cf6:	2109      	movs	r1, #9
 8004cf8:	4620      	mov	r0, r4
 8004cfa:	f7fc fd2b 	bl	8001754 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004cfe:	2109      	movs	r1, #9
 8004d00:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8004d04:	4620      	mov	r0, r4
}
 8004d06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004d0a:	f7fc bd0b 	b.w	8001724 <IOE_Write>

08004d0e <stmpe811_EnableITSource>:
{
 8004d0e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004d10:	b2c4      	uxtb	r4, r0
{
 8004d12:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004d14:	4620      	mov	r0, r4
 8004d16:	210a      	movs	r1, #10
 8004d18:	f7fc fd1c 	bl	8001754 <IOE_Read>
  tmp |= Source; 
 8004d1c:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004d1e:	b2c2      	uxtb	r2, r0
 8004d20:	210a      	movs	r1, #10
 8004d22:	4620      	mov	r0, r4
}
 8004d24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004d28:	f7fc bcfc 	b.w	8001724 <IOE_Write>

08004d2c <stmpe811_TS_EnableIT>:
{
 8004d2c:	b507      	push	{r0, r1, r2, lr}
 8004d2e:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8004d30:	f7fc fcf7 	bl	8001722 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004d34:	9801      	ldr	r0, [sp, #4]
 8004d36:	211f      	movs	r1, #31
 8004d38:	f7ff ffe9 	bl	8004d0e <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004d3c:	9801      	ldr	r0, [sp, #4]
}
 8004d3e:	b003      	add	sp, #12
 8004d40:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004d44:	f7ff bfc6 	b.w	8004cd4 <stmpe811_EnableGlobalIT>

08004d48 <stmpe811_DisableITSource>:
{
 8004d48:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004d4a:	b2c4      	uxtb	r4, r0
{
 8004d4c:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004d4e:	4620      	mov	r0, r4
 8004d50:	210a      	movs	r1, #10
 8004d52:	f7fc fcff 	bl	8001754 <IOE_Read>
  tmp &= ~Source; 
 8004d56:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004d5a:	b2c2      	uxtb	r2, r0
 8004d5c:	210a      	movs	r1, #10
 8004d5e:	4620      	mov	r0, r4
}
 8004d60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004d64:	f7fc bcde 	b.w	8001724 <IOE_Write>

08004d68 <stmpe811_TS_DisableIT>:
{
 8004d68:	b510      	push	{r4, lr}
 8004d6a:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8004d6c:	f7ff ffc1 	bl	8004cf2 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004d70:	4620      	mov	r0, r4
 8004d72:	211f      	movs	r1, #31
}
 8004d74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004d78:	f7ff bfe6 	b.w	8004d48 <stmpe811_DisableITSource>

08004d7c <stmpe811_ReadGITStatus>:
{
 8004d7c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004d7e:	b2c0      	uxtb	r0, r0
{
 8004d80:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004d82:	210b      	movs	r1, #11
 8004d84:	f7fc fce6 	bl	8001754 <IOE_Read>
}
 8004d88:	4020      	ands	r0, r4
 8004d8a:	bd10      	pop	{r4, pc}

08004d8c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8004d8c:	211f      	movs	r1, #31
 8004d8e:	f7ff bff5 	b.w	8004d7c <stmpe811_ReadGITStatus>

08004d92 <stmpe811_ClearGlobalIT>:
{
 8004d92:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8004d94:	b2c0      	uxtb	r0, r0
 8004d96:	210b      	movs	r1, #11
 8004d98:	f7fc bcc4 	b.w	8001724 <IOE_Write>

08004d9c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8004d9c:	211f      	movs	r1, #31
 8004d9e:	f7ff bff8 	b.w	8004d92 <stmpe811_ClearGlobalIT>

08004da2 <stmpe811_IO_EnableAF>:
{
 8004da2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004da4:	b2c4      	uxtb	r4, r0
{
 8004da6:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004da8:	4620      	mov	r0, r4
 8004daa:	2117      	movs	r1, #23
 8004dac:	f7fc fcd2 	bl	8001754 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8004db0:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004db4:	b2c2      	uxtb	r2, r0
 8004db6:	2117      	movs	r1, #23
 8004db8:	4620      	mov	r0, r4
}
 8004dba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004dbe:	f7fc bcb1 	b.w	8001724 <IOE_Write>

08004dc2 <stmpe811_TS_Start>:
{
 8004dc2:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004dc4:	b2c4      	uxtb	r4, r0
{
 8004dc6:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004dc8:	2104      	movs	r1, #4
 8004dca:	4620      	mov	r0, r4
 8004dcc:	f7fc fcc2 	bl	8001754 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004dd0:	2104      	movs	r1, #4
 8004dd2:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004dd6:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004dd8:	4620      	mov	r0, r4
 8004dda:	f7fc fca3 	bl	8001724 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8004dde:	4630      	mov	r0, r6
 8004de0:	21f0      	movs	r1, #240	; 0xf0
 8004de2:	f7ff ffde 	bl	8004da2 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004de6:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8004dea:	4620      	mov	r0, r4
 8004dec:	2104      	movs	r1, #4
 8004dee:	f7fc fc99 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8004df2:	2249      	movs	r2, #73	; 0x49
 8004df4:	2120      	movs	r1, #32
 8004df6:	4620      	mov	r0, r4
 8004df8:	f7fc fc94 	bl	8001724 <IOE_Write>
  IOE_Delay(2); 
 8004dfc:	2002      	movs	r0, #2
 8004dfe:	f7fc fcd9 	bl	80017b4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8004e02:	4620      	mov	r0, r4
 8004e04:	2201      	movs	r2, #1
 8004e06:	2121      	movs	r1, #33	; 0x21
 8004e08:	f7fc fc8c 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8004e0c:	4620      	mov	r0, r4
 8004e0e:	229a      	movs	r2, #154	; 0x9a
 8004e10:	2141      	movs	r1, #65	; 0x41
 8004e12:	f7fc fc87 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8004e16:	4620      	mov	r0, r4
 8004e18:	2201      	movs	r2, #1
 8004e1a:	214a      	movs	r1, #74	; 0x4a
 8004e1c:	f7fc fc82 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004e20:	4620      	mov	r0, r4
 8004e22:	2201      	movs	r2, #1
 8004e24:	214b      	movs	r1, #75	; 0x4b
 8004e26:	f7fc fc7d 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004e2a:	4620      	mov	r0, r4
 8004e2c:	2200      	movs	r2, #0
 8004e2e:	214b      	movs	r1, #75	; 0x4b
 8004e30:	f7fc fc78 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004e34:	4620      	mov	r0, r4
 8004e36:	2201      	movs	r2, #1
 8004e38:	2156      	movs	r1, #86	; 0x56
 8004e3a:	f7fc fc73 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004e3e:	4620      	mov	r0, r4
 8004e40:	2201      	movs	r2, #1
 8004e42:	2158      	movs	r1, #88	; 0x58
 8004e44:	f7fc fc6e 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8004e48:	4620      	mov	r0, r4
 8004e4a:	2201      	movs	r2, #1
 8004e4c:	2140      	movs	r1, #64	; 0x40
 8004e4e:	f7fc fc69 	bl	8001724 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004e52:	4620      	mov	r0, r4
 8004e54:	22ff      	movs	r2, #255	; 0xff
 8004e56:	210b      	movs	r1, #11
 8004e58:	f7fc fc64 	bl	8001724 <IOE_Write>
}
 8004e5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004e60:	2002      	movs	r0, #2
 8004e62:	f7fc bca7 	b.w	80017b4 <IOE_Delay>
	...

08004e68 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004e68:	4b05      	ldr	r3, [pc, #20]	; (8004e80 <SystemInit+0x18>)
 8004e6a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8004e6e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8004e72:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004e76:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004e7a:	609a      	str	r2, [r3, #8]
#endif
}
 8004e7c:	4770      	bx	lr
 8004e7e:	bf00      	nop
 8004e80:	e000ed00 	.word	0xe000ed00

08004e84 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004e84:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004e86:	4b0b      	ldr	r3, [pc, #44]	; (8004eb4 <HAL_Init+0x30>)
 8004e88:	681a      	ldr	r2, [r3, #0]
 8004e8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004e8e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004e90:	681a      	ldr	r2, [r3, #0]
 8004e92:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004e96:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004e98:	681a      	ldr	r2, [r3, #0]
 8004e9a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004e9e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004ea0:	2003      	movs	r0, #3
 8004ea2:	f000 f82f 	bl	8004f04 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004ea6:	2000      	movs	r0, #0
 8004ea8:	f7fc ff42 	bl	8001d30 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004eac:	f7fc fd0c 	bl	80018c8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004eb0:	2000      	movs	r0, #0
 8004eb2:	bd08      	pop	{r3, pc}
 8004eb4:	40023c00 	.word	0x40023c00

08004eb8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004eb8:	4a03      	ldr	r2, [pc, #12]	; (8004ec8 <HAL_IncTick+0x10>)
 8004eba:	4b04      	ldr	r3, [pc, #16]	; (8004ecc <HAL_IncTick+0x14>)
 8004ebc:	6811      	ldr	r1, [r2, #0]
 8004ebe:	781b      	ldrb	r3, [r3, #0]
 8004ec0:	440b      	add	r3, r1
 8004ec2:	6013      	str	r3, [r2, #0]
}
 8004ec4:	4770      	bx	lr
 8004ec6:	bf00      	nop
 8004ec8:	200069ec 	.word	0x200069ec
 8004ecc:	20000078 	.word	0x20000078

08004ed0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004ed0:	4b01      	ldr	r3, [pc, #4]	; (8004ed8 <HAL_GetTick+0x8>)
 8004ed2:	6818      	ldr	r0, [r3, #0]
}
 8004ed4:	4770      	bx	lr
 8004ed6:	bf00      	nop
 8004ed8:	200069ec 	.word	0x200069ec

08004edc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004edc:	b538      	push	{r3, r4, r5, lr}
 8004ede:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004ee0:	f7ff fff6 	bl	8004ed0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004ee4:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004ee6:	bf1c      	itt	ne
 8004ee8:	4b05      	ldrne	r3, [pc, #20]	; (8004f00 <HAL_Delay+0x24>)
 8004eea:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004eec:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8004eee:	bf18      	it	ne
 8004ef0:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004ef2:	f7ff ffed 	bl	8004ed0 <HAL_GetTick>
 8004ef6:	1b43      	subs	r3, r0, r5
 8004ef8:	42a3      	cmp	r3, r4
 8004efa:	d3fa      	bcc.n	8004ef2 <HAL_Delay+0x16>
  {
  }
}
 8004efc:	bd38      	pop	{r3, r4, r5, pc}
 8004efe:	bf00      	nop
 8004f00:	20000078 	.word	0x20000078

08004f04 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004f04:	4907      	ldr	r1, [pc, #28]	; (8004f24 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004f06:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004f08:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004f0c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004f0e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004f10:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004f14:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004f16:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004f18:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004f1c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8004f20:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004f22:	4770      	bx	lr
 8004f24:	e000ed00 	.word	0xe000ed00

08004f28 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004f28:	4b16      	ldr	r3, [pc, #88]	; (8004f84 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004f2a:	b530      	push	{r4, r5, lr}
 8004f2c:	68dc      	ldr	r4, [r3, #12]
 8004f2e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004f32:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004f36:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004f38:	2d04      	cmp	r5, #4
 8004f3a:	bf28      	it	cs
 8004f3c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004f3e:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004f40:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004f44:	bf8c      	ite	hi
 8004f46:	3c03      	subhi	r4, #3
 8004f48:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004f4a:	fa03 f505 	lsl.w	r5, r3, r5
 8004f4e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004f52:	40a3      	lsls	r3, r4
 8004f54:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004f58:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8004f5a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004f5c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004f60:	bfac      	ite	ge
 8004f62:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004f66:	4a08      	ldrlt	r2, [pc, #32]	; (8004f88 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004f68:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004f6c:	bfb8      	it	lt
 8004f6e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004f72:	b2db      	uxtb	r3, r3
 8004f74:	bfaa      	itet	ge
 8004f76:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004f7a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004f7c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004f80:	bd30      	pop	{r4, r5, pc}
 8004f82:	bf00      	nop
 8004f84:	e000ed00 	.word	0xe000ed00
 8004f88:	e000ed14 	.word	0xe000ed14

08004f8c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004f8c:	2800      	cmp	r0, #0
 8004f8e:	db08      	blt.n	8004fa2 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004f90:	0942      	lsrs	r2, r0, #5
 8004f92:	2301      	movs	r3, #1
 8004f94:	f000 001f 	and.w	r0, r0, #31
 8004f98:	fa03 f000 	lsl.w	r0, r3, r0
 8004f9c:	4b01      	ldr	r3, [pc, #4]	; (8004fa4 <HAL_NVIC_EnableIRQ+0x18>)
 8004f9e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004fa2:	4770      	bx	lr
 8004fa4:	e000e100 	.word	0xe000e100

08004fa8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004fa8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004faa:	4604      	mov	r4, r0
 8004fac:	b150      	cbz	r0, 8004fc4 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004fae:	7943      	ldrb	r3, [r0, #5]
 8004fb0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004fb4:	b913      	cbnz	r3, 8004fbc <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004fb6:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004fb8:	f7fc fca6 	bl	8001908 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004fbc:	2301      	movs	r3, #1
 8004fbe:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004fc0:	2000      	movs	r0, #0
}
 8004fc2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004fc4:	2001      	movs	r0, #1
 8004fc6:	e7fc      	b.n	8004fc2 <HAL_CRC_Init+0x1a>

08004fc8 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004fc8:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004fca:	4604      	mov	r4, r0
 8004fcc:	b330      	cbz	r0, 800501c <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004fce:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004fd2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004fd6:	b91b      	cbnz	r3, 8004fe0 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004fd8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004fdc:	f7fc fcac 	bl	8001938 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004fe0:	6822      	ldr	r2, [r4, #0]
 8004fe2:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004fe4:	2302      	movs	r3, #2
 8004fe6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004fea:	6813      	ldr	r3, [r2, #0]
 8004fec:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004ff0:	430b      	orrs	r3, r1
 8004ff2:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004ff4:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004ff6:	68a1      	ldr	r1, [r4, #8]
 8004ff8:	f023 0307 	bic.w	r3, r3, #7
 8004ffc:	430b      	orrs	r3, r1
 8004ffe:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005000:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005002:	68e1      	ldr	r1, [r4, #12]
 8005004:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8005008:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800500c:	430b      	orrs	r3, r1
 800500e:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005010:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005012:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005014:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005016:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800501a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800501c:	2001      	movs	r0, #1
 800501e:	e7fc      	b.n	800501a <HAL_DMA2D_Init+0x52>

08005020 <HAL_DMA2D_LineEventCallback>:
 8005020:	4770      	bx	lr

08005022 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8005022:	4770      	bx	lr

08005024 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005024:	6803      	ldr	r3, [r0, #0]
{
 8005026:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005028:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800502a:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800502c:	07f2      	lsls	r2, r6, #31
{
 800502e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005030:	d514      	bpl.n	800505c <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8005032:	05e9      	lsls	r1, r5, #23
 8005034:	d512      	bpl.n	800505c <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005036:	681a      	ldr	r2, [r3, #0]
 8005038:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800503c:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800503e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8005040:	f042 0201 	orr.w	r2, r2, #1
 8005044:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005046:	2201      	movs	r2, #1
 8005048:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800504a:	2304      	movs	r3, #4
 800504c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005050:	2300      	movs	r3, #0
 8005052:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8005056:	6943      	ldr	r3, [r0, #20]
 8005058:	b103      	cbz	r3, 800505c <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800505a:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800505c:	06b2      	lsls	r2, r6, #26
 800505e:	d516      	bpl.n	800508e <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005060:	04ab      	lsls	r3, r5, #18
 8005062:	d514      	bpl.n	800508e <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8005064:	6823      	ldr	r3, [r4, #0]
 8005066:	681a      	ldr	r2, [r3, #0]
 8005068:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800506c:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800506e:	2220      	movs	r2, #32
 8005070:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005072:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005074:	f043 0302 	orr.w	r3, r3, #2
 8005078:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800507a:	2304      	movs	r3, #4
 800507c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005080:	2300      	movs	r3, #0
 8005082:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8005086:	6963      	ldr	r3, [r4, #20]
 8005088:	b10b      	cbz	r3, 800508e <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800508a:	4620      	mov	r0, r4
 800508c:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800508e:	0730      	lsls	r0, r6, #28
 8005090:	d516      	bpl.n	80050c0 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005092:	0529      	lsls	r1, r5, #20
 8005094:	d514      	bpl.n	80050c0 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005096:	6823      	ldr	r3, [r4, #0]
 8005098:	681a      	ldr	r2, [r3, #0]
 800509a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800509e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80050a0:	2208      	movs	r2, #8
 80050a2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80050a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80050a6:	f043 0304 	orr.w	r3, r3, #4
 80050aa:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80050ac:	2304      	movs	r3, #4
 80050ae:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80050b2:	2300      	movs	r3, #0
 80050b4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80050b8:	6963      	ldr	r3, [r4, #20]
 80050ba:	b10b      	cbz	r3, 80050c0 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80050bc:	4620      	mov	r0, r4
 80050be:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80050c0:	0772      	lsls	r2, r6, #29
 80050c2:	d50b      	bpl.n	80050dc <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 80050c4:	056b      	lsls	r3, r5, #21
 80050c6:	d509      	bpl.n	80050dc <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80050c8:	6823      	ldr	r3, [r4, #0]
 80050ca:	681a      	ldr	r2, [r3, #0]
 80050cc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80050d0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80050d2:	2204      	movs	r2, #4
 80050d4:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 80050d6:	4620      	mov	r0, r4
 80050d8:	f7ff ffa2 	bl	8005020 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80050dc:	07b0      	lsls	r0, r6, #30
 80050de:	d514      	bpl.n	800510a <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80050e0:	05a9      	lsls	r1, r5, #22
 80050e2:	d512      	bpl.n	800510a <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80050e4:	6823      	ldr	r3, [r4, #0]
 80050e6:	681a      	ldr	r2, [r3, #0]
 80050e8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80050ec:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80050ee:	2202      	movs	r2, #2
 80050f0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80050f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80050f4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80050f6:	2301      	movs	r3, #1
 80050f8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80050fc:	2300      	movs	r3, #0
 80050fe:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8005102:	6923      	ldr	r3, [r4, #16]
 8005104:	b10b      	cbz	r3, 800510a <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8005106:	4620      	mov	r0, r4
 8005108:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800510a:	06f2      	lsls	r2, r6, #27
 800510c:	d513      	bpl.n	8005136 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800510e:	04eb      	lsls	r3, r5, #19
 8005110:	d511      	bpl.n	8005136 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005112:	6823      	ldr	r3, [r4, #0]
 8005114:	681a      	ldr	r2, [r3, #0]
 8005116:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800511a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800511c:	2210      	movs	r2, #16
 800511e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005120:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005122:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005124:	2301      	movs	r3, #1
 8005126:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800512a:	2300      	movs	r3, #0
 800512c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005130:	4620      	mov	r0, r4
 8005132:	f7ff ff76 	bl	8005022 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8005136:	bd70      	pop	{r4, r5, r6, pc}

08005138 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8005138:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800513a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800513e:	2b01      	cmp	r3, #1
 8005140:	f04f 0302 	mov.w	r3, #2
 8005144:	d02b      	beq.n	800519e <HAL_DMA2D_ConfigLayer+0x66>
 8005146:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005148:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800514c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005150:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8005154:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8005158:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800515a:	4f18      	ldr	r7, [pc, #96]	; (80051bc <HAL_DMA2D_ConfigLayer+0x84>)
 800515c:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005160:	3c09      	subs	r4, #9
 8005162:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8005164:	bf9c      	itt	ls
 8005166:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800516a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800516c:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005170:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005172:	bf88      	it	hi
 8005174:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005178:	b999      	cbnz	r1, 80051a2 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800517a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800517c:	4039      	ands	r1, r7
 800517e:	430a      	orrs	r2, r1
 8005180:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005182:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8005184:	6982      	ldr	r2, [r0, #24]
 8005186:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005188:	d803      	bhi.n	8005192 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800518a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800518c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8005190:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005192:	2301      	movs	r3, #1
 8005194:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8005198:	2300      	movs	r3, #0
 800519a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800519e:	4618      	mov	r0, r3

  return HAL_OK;
}
 80051a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80051a2:	69d9      	ldr	r1, [r3, #28]
 80051a4:	4039      	ands	r1, r7
 80051a6:	430a      	orrs	r2, r1
 80051a8:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80051aa:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80051ac:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80051ae:	6992      	ldr	r2, [r2, #24]
 80051b0:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80051b2:	bf9c      	itt	ls
 80051b4:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 80051b8:	621d      	strls	r5, [r3, #32]
 80051ba:	e7ea      	b.n	8005192 <HAL_DMA2D_ConfigLayer+0x5a>
 80051bc:	00fcfff0 	.word	0x00fcfff0

080051c0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80051c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80051c4:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005388 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80051c8:	4a6d      	ldr	r2, [pc, #436]	; (8005380 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 80051ca:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80051cc:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80051ce:	2401      	movs	r4, #1
 80051d0:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80051d2:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 80051d6:	43ac      	bics	r4, r5
 80051d8:	f040 80b9 	bne.w	800534e <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80051dc:	684d      	ldr	r5, [r1, #4]
 80051de:	f005 0403 	and.w	r4, r5, #3
 80051e2:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80051e6:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80051e8:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80051ea:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80051ee:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80051f0:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80051f4:	d834      	bhi.n	8005260 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80051f6:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80051f8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 80051fc:	68cf      	ldr	r7, [r1, #12]
 80051fe:	fa07 f708 	lsl.w	r7, r7, r8
 8005202:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8005206:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005208:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800520a:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800520e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8005212:	409f      	lsls	r7, r3
 8005214:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8005218:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800521a:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800521c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005220:	688f      	ldr	r7, [r1, #8]
 8005222:	fa07 f708 	lsl.w	r7, r7, r8
 8005226:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800522a:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800522c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800522e:	d119      	bne.n	8005264 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8005230:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8005234:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005238:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800523c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005240:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8005244:	f04f 0e0f 	mov.w	lr, #15
 8005248:	fa0e fe0b 	lsl.w	lr, lr, fp
 800524c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005250:	690f      	ldr	r7, [r1, #16]
 8005252:	fa07 f70b 	lsl.w	r7, r7, fp
 8005256:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800525a:	f8ca 7020 	str.w	r7, [sl, #32]
 800525e:	e001      	b.n	8005264 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005260:	2c03      	cmp	r4, #3
 8005262:	d1da      	bne.n	800521a <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8005264:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005266:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800526a:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800526c:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800526e:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8005272:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005274:	d06b      	beq.n	800534e <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005276:	f04f 0a00 	mov.w	sl, #0
 800527a:	f8cd a004 	str.w	sl, [sp, #4]
 800527e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005282:	4c40      	ldr	r4, [pc, #256]	; (8005384 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005284:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8005288:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800528c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8005290:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8005294:	9601      	str	r6, [sp, #4]
 8005296:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005298:	f023 0603 	bic.w	r6, r3, #3
 800529c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 80052a0:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80052a4:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80052a8:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80052ac:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80052b0:	270f      	movs	r7, #15
 80052b2:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80052b6:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80052b8:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80052bc:	d04e      	beq.n	800535c <HAL_GPIO_Init+0x19c>
 80052be:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80052c2:	42a0      	cmp	r0, r4
 80052c4:	d04c      	beq.n	8005360 <HAL_GPIO_Init+0x1a0>
 80052c6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80052ca:	42a0      	cmp	r0, r4
 80052cc:	d04a      	beq.n	8005364 <HAL_GPIO_Init+0x1a4>
 80052ce:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80052d2:	42a0      	cmp	r0, r4
 80052d4:	d048      	beq.n	8005368 <HAL_GPIO_Init+0x1a8>
 80052d6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80052da:	42a0      	cmp	r0, r4
 80052dc:	d046      	beq.n	800536c <HAL_GPIO_Init+0x1ac>
 80052de:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80052e2:	42a0      	cmp	r0, r4
 80052e4:	d044      	beq.n	8005370 <HAL_GPIO_Init+0x1b0>
 80052e6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80052ea:	42a0      	cmp	r0, r4
 80052ec:	d042      	beq.n	8005374 <HAL_GPIO_Init+0x1b4>
 80052ee:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80052f2:	42a0      	cmp	r0, r4
 80052f4:	d040      	beq.n	8005378 <HAL_GPIO_Init+0x1b8>
 80052f6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80052fa:	42a0      	cmp	r0, r4
 80052fc:	d03e      	beq.n	800537c <HAL_GPIO_Init+0x1bc>
 80052fe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005302:	42a0      	cmp	r0, r4
 8005304:	bf0c      	ite	eq
 8005306:	2409      	moveq	r4, #9
 8005308:	240a      	movne	r4, #10
 800530a:	fa04 f40e 	lsl.w	r4, r4, lr
 800530e:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005310:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 8005312:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8005314:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8005318:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800531a:	bf54      	ite	pl
 800531c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800531e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8005322:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8005324:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005326:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8005328:	bf54      	ite	pl
 800532a:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800532c:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8005330:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8005332:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005334:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8005336:	bf54      	ite	pl
 8005338:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800533a:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800533e:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005340:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005342:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8005344:	bf54      	ite	pl
 8005346:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005348:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800534c:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800534e:	3301      	adds	r3, #1
 8005350:	2b10      	cmp	r3, #16
 8005352:	f47f af3b 	bne.w	80051cc <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8005356:	b003      	add	sp, #12
 8005358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800535c:	4654      	mov	r4, sl
 800535e:	e7d4      	b.n	800530a <HAL_GPIO_Init+0x14a>
 8005360:	2401      	movs	r4, #1
 8005362:	e7d2      	b.n	800530a <HAL_GPIO_Init+0x14a>
 8005364:	2402      	movs	r4, #2
 8005366:	e7d0      	b.n	800530a <HAL_GPIO_Init+0x14a>
 8005368:	2403      	movs	r4, #3
 800536a:	e7ce      	b.n	800530a <HAL_GPIO_Init+0x14a>
 800536c:	2404      	movs	r4, #4
 800536e:	e7cc      	b.n	800530a <HAL_GPIO_Init+0x14a>
 8005370:	2405      	movs	r4, #5
 8005372:	e7ca      	b.n	800530a <HAL_GPIO_Init+0x14a>
 8005374:	2406      	movs	r4, #6
 8005376:	e7c8      	b.n	800530a <HAL_GPIO_Init+0x14a>
 8005378:	2407      	movs	r4, #7
 800537a:	e7c6      	b.n	800530a <HAL_GPIO_Init+0x14a>
 800537c:	2408      	movs	r4, #8
 800537e:	e7c4      	b.n	800530a <HAL_GPIO_Init+0x14a>
 8005380:	40013c00 	.word	0x40013c00
 8005384:	40020000 	.word	0x40020000
 8005388:	40023800 	.word	0x40023800

0800538c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800538c:	6903      	ldr	r3, [r0, #16]
 800538e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8005390:	bf14      	ite	ne
 8005392:	2001      	movne	r0, #1
 8005394:	2000      	moveq	r0, #0
 8005396:	4770      	bx	lr

08005398 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005398:	b10a      	cbz	r2, 800539e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800539a:	6181      	str	r1, [r0, #24]
  }
}
 800539c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800539e:	0409      	lsls	r1, r1, #16
 80053a0:	e7fb      	b.n	800539a <HAL_GPIO_WritePin+0x2>

080053a2 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80053a2:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80053a4:	ea01 0203 	and.w	r2, r1, r3
 80053a8:	ea21 0103 	bic.w	r1, r1, r3
 80053ac:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80053b0:	6181      	str	r1, [r0, #24]
}
 80053b2:	4770      	bx	lr

080053b4 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80053b4:	6801      	ldr	r1, [r0, #0]
 80053b6:	694b      	ldr	r3, [r1, #20]
 80053b8:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80053bc:	f04f 0200 	mov.w	r2, #0
 80053c0:	d010      	beq.n	80053e4 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80053c2:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80053c6:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80053c8:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80053ca:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80053cc:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80053d0:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80053d4:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80053d6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80053da:	f043 0304 	orr.w	r3, r3, #4
 80053de:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80053e0:	2001      	movs	r0, #1
 80053e2:	4770      	bx	lr
  }
  return HAL_OK;
 80053e4:	4618      	mov	r0, r3
}
 80053e6:	4770      	bx	lr

080053e8 <I2C_WaitOnFlagUntilTimeout>:
{
 80053e8:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80053ec:	4606      	mov	r6, r0
 80053ee:	460f      	mov	r7, r1
 80053f0:	4691      	mov	r9, r2
 80053f2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80053f4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80053f8:	6833      	ldr	r3, [r6, #0]
 80053fa:	f1ba 0f01 	cmp.w	sl, #1
 80053fe:	bf0c      	ite	eq
 8005400:	695c      	ldreq	r4, [r3, #20]
 8005402:	699c      	ldrne	r4, [r3, #24]
 8005404:	ea27 0404 	bic.w	r4, r7, r4
 8005408:	b2a4      	uxth	r4, r4
 800540a:	fab4 f484 	clz	r4, r4
 800540e:	0964      	lsrs	r4, r4, #5
 8005410:	45a1      	cmp	r9, r4
 8005412:	d001      	beq.n	8005418 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005414:	2000      	movs	r0, #0
 8005416:	e017      	b.n	8005448 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8005418:	1c6a      	adds	r2, r5, #1
 800541a:	d0ee      	beq.n	80053fa <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800541c:	f7ff fd58 	bl	8004ed0 <HAL_GetTick>
 8005420:	9b08      	ldr	r3, [sp, #32]
 8005422:	1ac0      	subs	r0, r0, r3
 8005424:	42a8      	cmp	r0, r5
 8005426:	d801      	bhi.n	800542c <I2C_WaitOnFlagUntilTimeout+0x44>
 8005428:	2d00      	cmp	r5, #0
 800542a:	d1e5      	bne.n	80053f8 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800542c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800542e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005430:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005432:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005436:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800543a:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800543c:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005440:	f042 0220 	orr.w	r2, r2, #32
 8005444:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8005446:	2001      	movs	r0, #1
}
 8005448:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800544c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800544c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005450:	4604      	mov	r4, r0
 8005452:	460f      	mov	r7, r1
 8005454:	4616      	mov	r6, r2
 8005456:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005458:	6825      	ldr	r5, [r4, #0]
 800545a:	6968      	ldr	r0, [r5, #20]
 800545c:	ea27 0000 	bic.w	r0, r7, r0
 8005460:	b280      	uxth	r0, r0
 8005462:	b1b8      	cbz	r0, 8005494 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005464:	696b      	ldr	r3, [r5, #20]
 8005466:	055a      	lsls	r2, r3, #21
 8005468:	d516      	bpl.n	8005498 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800546a:	682b      	ldr	r3, [r5, #0]
 800546c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005470:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005472:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005476:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005478:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800547a:	2300      	movs	r3, #0
 800547c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800547e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005482:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005486:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005488:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800548c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800548e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8005492:	2001      	movs	r0, #1
}
 8005494:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8005498:	1c73      	adds	r3, r6, #1
 800549a:	d0de      	beq.n	800545a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800549c:	f7ff fd18 	bl	8004ed0 <HAL_GetTick>
 80054a0:	eba0 0008 	sub.w	r0, r0, r8
 80054a4:	42b0      	cmp	r0, r6
 80054a6:	d801      	bhi.n	80054ac <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80054a8:	2e00      	cmp	r6, #0
 80054aa:	d1d5      	bne.n	8005458 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80054ac:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80054ae:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80054b0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80054b2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054b6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80054bc:	f042 0220 	orr.w	r2, r2, #32
 80054c0:	e7e4      	b.n	800548c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080054c2 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80054c2:	b570      	push	{r4, r5, r6, lr}
 80054c4:	4604      	mov	r4, r0
 80054c6:	460d      	mov	r5, r1
 80054c8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80054ca:	6821      	ldr	r1, [r4, #0]
 80054cc:	694b      	ldr	r3, [r1, #20]
 80054ce:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80054d2:	d001      	beq.n	80054d8 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80054d4:	2000      	movs	r0, #0
 80054d6:	e010      	b.n	80054fa <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80054d8:	694a      	ldr	r2, [r1, #20]
 80054da:	06d2      	lsls	r2, r2, #27
 80054dc:	d50e      	bpl.n	80054fc <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80054de:	f06f 0210 	mvn.w	r2, #16
 80054e2:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80054e4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80054e6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80054e8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054ec:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80054f0:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054f2:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80054f4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80054f8:	2001      	movs	r0, #1
}
 80054fa:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80054fc:	f7ff fce8 	bl	8004ed0 <HAL_GetTick>
 8005500:	1b80      	subs	r0, r0, r6
 8005502:	42a8      	cmp	r0, r5
 8005504:	d801      	bhi.n	800550a <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8005506:	2d00      	cmp	r5, #0
 8005508:	d1df      	bne.n	80054ca <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800550a:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800550c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800550e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005510:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005514:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005518:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800551a:	f042 0220 	orr.w	r2, r2, #32
 800551e:	e7e8      	b.n	80054f2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08005520 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005520:	b570      	push	{r4, r5, r6, lr}
 8005522:	4604      	mov	r4, r0
 8005524:	460d      	mov	r5, r1
 8005526:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005528:	6823      	ldr	r3, [r4, #0]
 800552a:	695b      	ldr	r3, [r3, #20]
 800552c:	075b      	lsls	r3, r3, #29
 800552e:	d501      	bpl.n	8005534 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005530:	2000      	movs	r0, #0
}
 8005532:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005534:	4620      	mov	r0, r4
 8005536:	f7ff ff3d 	bl	80053b4 <I2C_IsAcknowledgeFailed>
 800553a:	b9a8      	cbnz	r0, 8005568 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800553c:	1c6a      	adds	r2, r5, #1
 800553e:	d0f3      	beq.n	8005528 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005540:	f7ff fcc6 	bl	8004ed0 <HAL_GetTick>
 8005544:	1b80      	subs	r0, r0, r6
 8005546:	42a8      	cmp	r0, r5
 8005548:	d801      	bhi.n	800554e <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800554a:	2d00      	cmp	r5, #0
 800554c:	d1ec      	bne.n	8005528 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800554e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005550:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005552:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005554:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005558:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800555c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800555e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005562:	f042 0220 	orr.w	r2, r2, #32
 8005566:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005568:	2001      	movs	r0, #1
 800556a:	e7e2      	b.n	8005532 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800556c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800556c:	b570      	push	{r4, r5, r6, lr}
 800556e:	4604      	mov	r4, r0
 8005570:	460d      	mov	r5, r1
 8005572:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005574:	6823      	ldr	r3, [r4, #0]
 8005576:	695b      	ldr	r3, [r3, #20]
 8005578:	061b      	lsls	r3, r3, #24
 800557a:	d501      	bpl.n	8005580 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800557c:	2000      	movs	r0, #0
}
 800557e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005580:	4620      	mov	r0, r4
 8005582:	f7ff ff17 	bl	80053b4 <I2C_IsAcknowledgeFailed>
 8005586:	b9a8      	cbnz	r0, 80055b4 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005588:	1c6a      	adds	r2, r5, #1
 800558a:	d0f3      	beq.n	8005574 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800558c:	f7ff fca0 	bl	8004ed0 <HAL_GetTick>
 8005590:	1b80      	subs	r0, r0, r6
 8005592:	42a8      	cmp	r0, r5
 8005594:	d801      	bhi.n	800559a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005596:	2d00      	cmp	r5, #0
 8005598:	d1ec      	bne.n	8005574 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800559a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800559c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800559e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80055a0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80055a4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80055a8:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80055aa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80055ae:	f042 0220 	orr.w	r2, r2, #32
 80055b2:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80055b4:	2001      	movs	r0, #1
 80055b6:	e7e2      	b.n	800557e <I2C_WaitOnTXEFlagUntilTimeout+0x12>

080055b8 <I2C_RequestMemoryWrite>:
{
 80055b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80055bc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80055be:	6802      	ldr	r2, [r0, #0]
{
 80055c0:	b085      	sub	sp, #20
 80055c2:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 80055c6:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80055c8:	6813      	ldr	r3, [r2, #0]
 80055ca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80055ce:	6013      	str	r3, [r2, #0]
{
 80055d0:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80055d2:	463b      	mov	r3, r7
 80055d4:	f8cd 8000 	str.w	r8, [sp]
 80055d8:	2200      	movs	r2, #0
 80055da:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80055de:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80055e0:	f7ff ff02 	bl	80053e8 <I2C_WaitOnFlagUntilTimeout>
 80055e4:	6823      	ldr	r3, [r4, #0]
 80055e6:	b138      	cbz	r0, 80055f8 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	05db      	lsls	r3, r3, #23
 80055ec:	d502      	bpl.n	80055f4 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80055ee:	f44f 7300 	mov.w	r3, #512	; 0x200
 80055f2:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80055f4:	2003      	movs	r0, #3
 80055f6:	e00a      	b.n	800560e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80055f8:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80055fc:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80055fe:	4919      	ldr	r1, [pc, #100]	; (8005664 <I2C_RequestMemoryWrite+0xac>)
 8005600:	4643      	mov	r3, r8
 8005602:	463a      	mov	r2, r7
 8005604:	4620      	mov	r0, r4
 8005606:	f7ff ff21 	bl	800544c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800560a:	b118      	cbz	r0, 8005614 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800560c:	2001      	movs	r0, #1
}
 800560e:	b005      	add	sp, #20
 8005610:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005614:	6823      	ldr	r3, [r4, #0]
 8005616:	9003      	str	r0, [sp, #12]
 8005618:	695a      	ldr	r2, [r3, #20]
 800561a:	9203      	str	r2, [sp, #12]
 800561c:	699b      	ldr	r3, [r3, #24]
 800561e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005620:	4642      	mov	r2, r8
 8005622:	4639      	mov	r1, r7
 8005624:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005626:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005628:	f7ff ffa0 	bl	800556c <I2C_WaitOnTXEFlagUntilTimeout>
 800562c:	b140      	cbz	r0, 8005640 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800562e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005630:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005632:	bf01      	itttt	eq
 8005634:	6822      	ldreq	r2, [r4, #0]
 8005636:	6813      	ldreq	r3, [r2, #0]
 8005638:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800563c:	6013      	streq	r3, [r2, #0]
 800563e:	e7e5      	b.n	800560c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005640:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005644:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005646:	d102      	bne.n	800564e <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005648:	b2ed      	uxtb	r5, r5
 800564a:	611d      	str	r5, [r3, #16]
 800564c:	e7df      	b.n	800560e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800564e:	0a2a      	lsrs	r2, r5, #8
 8005650:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005652:	4639      	mov	r1, r7
 8005654:	4642      	mov	r2, r8
 8005656:	4620      	mov	r0, r4
 8005658:	f7ff ff88 	bl	800556c <I2C_WaitOnTXEFlagUntilTimeout>
 800565c:	2800      	cmp	r0, #0
 800565e:	d1e6      	bne.n	800562e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005660:	6823      	ldr	r3, [r4, #0]
 8005662:	e7f1      	b.n	8005648 <I2C_RequestMemoryWrite+0x90>
 8005664:	00010002 	.word	0x00010002

08005668 <I2C_RequestMemoryRead>:
{
 8005668:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800566c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800566e:	6803      	ldr	r3, [r0, #0]
{
 8005670:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005672:	681a      	ldr	r2, [r3, #0]
 8005674:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005678:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800567a:	681a      	ldr	r2, [r3, #0]
{
 800567c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005680:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005684:	601a      	str	r2, [r3, #0]
{
 8005686:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005688:	463b      	mov	r3, r7
 800568a:	f8cd 8000 	str.w	r8, [sp]
 800568e:	2200      	movs	r2, #0
 8005690:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005694:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005696:	f7ff fea7 	bl	80053e8 <I2C_WaitOnFlagUntilTimeout>
 800569a:	6823      	ldr	r3, [r4, #0]
 800569c:	b148      	cbz	r0, 80056b2 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800569e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80056a0:	05db      	lsls	r3, r3, #23
 80056a2:	d502      	bpl.n	80056aa <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80056a4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80056a8:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80056aa:	2003      	movs	r0, #3
}
 80056ac:	b004      	add	sp, #16
 80056ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80056b2:	fa5f f986 	uxtb.w	r9, r6
 80056b6:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80056ba:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80056bc:	492a      	ldr	r1, [pc, #168]	; (8005768 <I2C_RequestMemoryRead+0x100>)
 80056be:	4643      	mov	r3, r8
 80056c0:	463a      	mov	r2, r7
 80056c2:	4620      	mov	r0, r4
 80056c4:	f7ff fec2 	bl	800544c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80056c8:	b108      	cbz	r0, 80056ce <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 80056ca:	2001      	movs	r0, #1
 80056cc:	e7ee      	b.n	80056ac <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80056ce:	6823      	ldr	r3, [r4, #0]
 80056d0:	9003      	str	r0, [sp, #12]
 80056d2:	695a      	ldr	r2, [r3, #20]
 80056d4:	9203      	str	r2, [sp, #12]
 80056d6:	699b      	ldr	r3, [r3, #24]
 80056d8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056da:	4642      	mov	r2, r8
 80056dc:	4639      	mov	r1, r7
 80056de:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80056e0:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056e2:	f7ff ff43 	bl	800556c <I2C_WaitOnTXEFlagUntilTimeout>
 80056e6:	b140      	cbz	r0, 80056fa <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80056e8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80056ea:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056ec:	bf01      	itttt	eq
 80056ee:	6822      	ldreq	r2, [r4, #0]
 80056f0:	6813      	ldreq	r3, [r2, #0]
 80056f2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80056f6:	6013      	streq	r3, [r2, #0]
 80056f8:	e7e7      	b.n	80056ca <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80056fa:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056fe:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005700:	d11a      	bne.n	8005738 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005702:	b2ed      	uxtb	r5, r5
 8005704:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005706:	4642      	mov	r2, r8
 8005708:	4639      	mov	r1, r7
 800570a:	4620      	mov	r0, r4
 800570c:	f7ff ff2e 	bl	800556c <I2C_WaitOnTXEFlagUntilTimeout>
 8005710:	2800      	cmp	r0, #0
 8005712:	d1e9      	bne.n	80056e8 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005714:	6822      	ldr	r2, [r4, #0]
 8005716:	6813      	ldr	r3, [r2, #0]
 8005718:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800571c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800571e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005722:	4602      	mov	r2, r0
 8005724:	f8cd 8000 	str.w	r8, [sp]
 8005728:	463b      	mov	r3, r7
 800572a:	4620      	mov	r0, r4
 800572c:	f7ff fe5c 	bl	80053e8 <I2C_WaitOnFlagUntilTimeout>
 8005730:	6822      	ldr	r2, [r4, #0]
 8005732:	b160      	cbz	r0, 800574e <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005734:	6813      	ldr	r3, [r2, #0]
 8005736:	e7b3      	b.n	80056a0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005738:	0a2a      	lsrs	r2, r5, #8
 800573a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800573c:	4639      	mov	r1, r7
 800573e:	4642      	mov	r2, r8
 8005740:	4620      	mov	r0, r4
 8005742:	f7ff ff13 	bl	800556c <I2C_WaitOnTXEFlagUntilTimeout>
 8005746:	2800      	cmp	r0, #0
 8005748:	d1ce      	bne.n	80056e8 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800574a:	6823      	ldr	r3, [r4, #0]
 800574c:	e7d9      	b.n	8005702 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800574e:	f049 0301 	orr.w	r3, r9, #1
 8005752:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005754:	4904      	ldr	r1, [pc, #16]	; (8005768 <I2C_RequestMemoryRead+0x100>)
 8005756:	4643      	mov	r3, r8
 8005758:	463a      	mov	r2, r7
 800575a:	4620      	mov	r0, r4
 800575c:	f7ff fe76 	bl	800544c <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005760:	3800      	subs	r0, #0
 8005762:	bf18      	it	ne
 8005764:	2001      	movne	r0, #1
 8005766:	e7a1      	b.n	80056ac <I2C_RequestMemoryRead+0x44>
 8005768:	00010002 	.word	0x00010002

0800576c <HAL_I2C_Init>:
{
 800576c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800576e:	4604      	mov	r4, r0
 8005770:	b908      	cbnz	r0, 8005776 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005772:	2001      	movs	r0, #1
}
 8005774:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005776:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800577a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800577e:	b91b      	cbnz	r3, 8005788 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005780:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005784:	f7fc f8fa 	bl	800197c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005788:	2324      	movs	r3, #36	; 0x24
 800578a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800578e:	6823      	ldr	r3, [r4, #0]
 8005790:	681a      	ldr	r2, [r3, #0]
 8005792:	f022 0201 	bic.w	r2, r2, #1
 8005796:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005798:	681a      	ldr	r2, [r3, #0]
 800579a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800579e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80057a0:	681a      	ldr	r2, [r3, #0]
 80057a2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80057a6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80057a8:	f000 fe74 	bl	8006494 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80057ac:	4b3f      	ldr	r3, [pc, #252]	; (80058ac <HAL_I2C_Init+0x140>)
 80057ae:	6865      	ldr	r5, [r4, #4]
 80057b0:	429d      	cmp	r5, r3
 80057b2:	bf94      	ite	ls
 80057b4:	4b3e      	ldrls	r3, [pc, #248]	; (80058b0 <HAL_I2C_Init+0x144>)
 80057b6:	4b3f      	ldrhi	r3, [pc, #252]	; (80058b4 <HAL_I2C_Init+0x148>)
 80057b8:	4298      	cmp	r0, r3
 80057ba:	bf8c      	ite	hi
 80057bc:	2300      	movhi	r3, #0
 80057be:	2301      	movls	r3, #1
 80057c0:	2b00      	cmp	r3, #0
 80057c2:	d1d6      	bne.n	8005772 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80057c4:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80057c6:	4e39      	ldr	r6, [pc, #228]	; (80058ac <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80057c8:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80057ca:	493b      	ldr	r1, [pc, #236]	; (80058b8 <HAL_I2C_Init+0x14c>)
 80057cc:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80057d0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80057d4:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80057d6:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80057d8:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80057da:	bf88      	it	hi
 80057dc:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 80057e0:	6a13      	ldr	r3, [r2, #32]
 80057e2:	bf88      	it	hi
 80057e4:	4371      	mulhi	r1, r6
 80057e6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80057ea:	bf84      	itt	hi
 80057ec:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80057f0:	fbb1 f1f6 	udivhi	r1, r1, r6
 80057f4:	3101      	adds	r1, #1
 80057f6:	4319      	orrs	r1, r3
 80057f8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80057fa:	69d1      	ldr	r1, [r2, #28]
 80057fc:	1e43      	subs	r3, r0, #1
 80057fe:	482b      	ldr	r0, [pc, #172]	; (80058ac <HAL_I2C_Init+0x140>)
 8005800:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005804:	4285      	cmp	r5, r0
 8005806:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800580a:	d832      	bhi.n	8005872 <HAL_I2C_Init+0x106>
 800580c:	006d      	lsls	r5, r5, #1
 800580e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8005812:	fbb3 f3f5 	udiv	r3, r3, r5
 8005816:	3301      	adds	r3, #1
 8005818:	4203      	tst	r3, r0
 800581a:	d042      	beq.n	80058a2 <HAL_I2C_Init+0x136>
 800581c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005820:	430b      	orrs	r3, r1
 8005822:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005824:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005828:	6811      	ldr	r1, [r2, #0]
 800582a:	4303      	orrs	r3, r0
 800582c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005830:	430b      	orrs	r3, r1
 8005832:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005834:	6891      	ldr	r1, [r2, #8]
 8005836:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800583a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800583e:	4303      	orrs	r3, r0
 8005840:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005844:	430b      	orrs	r3, r1
 8005846:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005848:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800584c:	68d1      	ldr	r1, [r2, #12]
 800584e:	4303      	orrs	r3, r0
 8005850:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005854:	430b      	orrs	r3, r1
 8005856:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005858:	6813      	ldr	r3, [r2, #0]
 800585a:	f043 0301 	orr.w	r3, r3, #1
 800585e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005860:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8005862:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005864:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005866:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800586a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800586c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005870:	e780      	b.n	8005774 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005872:	68a0      	ldr	r0, [r4, #8]
 8005874:	b950      	cbnz	r0, 800588c <HAL_I2C_Init+0x120>
 8005876:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800587a:	fbb3 f3f5 	udiv	r3, r3, r5
 800587e:	3301      	adds	r3, #1
 8005880:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005884:	b17b      	cbz	r3, 80058a6 <HAL_I2C_Init+0x13a>
 8005886:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800588a:	e7c9      	b.n	8005820 <HAL_I2C_Init+0xb4>
 800588c:	2019      	movs	r0, #25
 800588e:	4345      	muls	r5, r0
 8005890:	fbb3 f3f5 	udiv	r3, r3, r5
 8005894:	3301      	adds	r3, #1
 8005896:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800589a:	b123      	cbz	r3, 80058a6 <HAL_I2C_Init+0x13a>
 800589c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80058a0:	e7be      	b.n	8005820 <HAL_I2C_Init+0xb4>
 80058a2:	2304      	movs	r3, #4
 80058a4:	e7bc      	b.n	8005820 <HAL_I2C_Init+0xb4>
 80058a6:	2301      	movs	r3, #1
 80058a8:	e7ba      	b.n	8005820 <HAL_I2C_Init+0xb4>
 80058aa:	bf00      	nop
 80058ac:	000186a0 	.word	0x000186a0
 80058b0:	001e847f 	.word	0x001e847f
 80058b4:	003d08ff 	.word	0x003d08ff
 80058b8:	000f4240 	.word	0x000f4240

080058bc <HAL_I2C_Mem_Write>:
{
 80058bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80058c0:	4604      	mov	r4, r0
 80058c2:	4699      	mov	r9, r3
 80058c4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80058c6:	460f      	mov	r7, r1
 80058c8:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80058ca:	f7ff fb01 	bl	8004ed0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80058ce:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80058d2:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80058d4:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80058d6:	d003      	beq.n	80058e0 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80058d8:	2002      	movs	r0, #2
}
 80058da:	b003      	add	sp, #12
 80058dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80058e0:	9000      	str	r0, [sp, #0]
 80058e2:	493c      	ldr	r1, [pc, #240]	; (80059d4 <HAL_I2C_Mem_Write+0x118>)
 80058e4:	2319      	movs	r3, #25
 80058e6:	2201      	movs	r2, #1
 80058e8:	4620      	mov	r0, r4
 80058ea:	f7ff fd7d 	bl	80053e8 <I2C_WaitOnFlagUntilTimeout>
 80058ee:	2800      	cmp	r0, #0
 80058f0:	d1f2      	bne.n	80058d8 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80058f2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80058f6:	2b01      	cmp	r3, #1
 80058f8:	d0ee      	beq.n	80058d8 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80058fa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80058fc:	2301      	movs	r3, #1
 80058fe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005902:	6803      	ldr	r3, [r0, #0]
 8005904:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005906:	bf5e      	ittt	pl
 8005908:	6803      	ldrpl	r3, [r0, #0]
 800590a:	f043 0301 	orrpl.w	r3, r3, #1
 800590e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005910:	6803      	ldr	r3, [r0, #0]
 8005912:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005916:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005918:	2321      	movs	r3, #33	; 0x21
 800591a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800591e:	2340      	movs	r3, #64	; 0x40
 8005920:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005924:	2300      	movs	r3, #0
 8005926:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005928:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800592a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800592c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8005930:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005932:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005934:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005936:	4b28      	ldr	r3, [pc, #160]	; (80059d8 <HAL_I2C_Mem_Write+0x11c>)
 8005938:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800593a:	e9cd 6500 	strd	r6, r5, [sp]
 800593e:	464b      	mov	r3, r9
 8005940:	4642      	mov	r2, r8
 8005942:	4639      	mov	r1, r7
 8005944:	4620      	mov	r0, r4
 8005946:	f7ff fe37 	bl	80055b8 <I2C_RequestMemoryWrite>
 800594a:	2800      	cmp	r0, #0
 800594c:	d02a      	beq.n	80059a4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800594e:	2001      	movs	r0, #1
 8005950:	e7c3      	b.n	80058da <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005952:	f7ff fe0b 	bl	800556c <I2C_WaitOnTXEFlagUntilTimeout>
 8005956:	b140      	cbz	r0, 800596a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005958:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800595a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800595c:	bf01      	itttt	eq
 800595e:	6822      	ldreq	r2, [r4, #0]
 8005960:	6813      	ldreq	r3, [r2, #0]
 8005962:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005966:	6013      	streq	r3, [r2, #0]
 8005968:	e7f1      	b.n	800594e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800596a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800596c:	6827      	ldr	r7, [r4, #0]
 800596e:	461a      	mov	r2, r3
 8005970:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005974:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005976:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005978:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800597a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800597c:	3a01      	subs	r2, #1
 800597e:	b292      	uxth	r2, r2
 8005980:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005982:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005984:	1e48      	subs	r0, r1, #1
 8005986:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005988:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800598a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800598c:	d50a      	bpl.n	80059a4 <HAL_I2C_Mem_Write+0xe8>
 800598e:	b148      	cbz	r0, 80059a4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005990:	785a      	ldrb	r2, [r3, #1]
 8005992:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005994:	3302      	adds	r3, #2
 8005996:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005998:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800599a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800599c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800599e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80059a0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80059a2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80059a4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80059a6:	462a      	mov	r2, r5
 80059a8:	4631      	mov	r1, r6
 80059aa:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	d1d0      	bne.n	8005952 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80059b0:	f7ff fdb6 	bl	8005520 <I2C_WaitOnBTFFlagUntilTimeout>
 80059b4:	2800      	cmp	r0, #0
 80059b6:	d1cf      	bne.n	8005958 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059b8:	6822      	ldr	r2, [r4, #0]
 80059ba:	6813      	ldr	r3, [r2, #0]
 80059bc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80059c0:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80059c2:	2320      	movs	r3, #32
 80059c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80059c8:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80059cc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80059d0:	e783      	b.n	80058da <HAL_I2C_Mem_Write+0x1e>
 80059d2:	bf00      	nop
 80059d4:	00100002 	.word	0x00100002
 80059d8:	ffff0000 	.word	0xffff0000

080059dc <HAL_I2C_Mem_Read>:
{
 80059dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80059e0:	4604      	mov	r4, r0
 80059e2:	b087      	sub	sp, #28
 80059e4:	4699      	mov	r9, r3
 80059e6:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80059e8:	460d      	mov	r5, r1
 80059ea:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80059ec:	f7ff fa70 	bl	8004ed0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80059f0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80059f4:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80059f6:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80059f8:	d004      	beq.n	8005a04 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80059fa:	2502      	movs	r5, #2
}
 80059fc:	4628      	mov	r0, r5
 80059fe:	b007      	add	sp, #28
 8005a00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005a04:	9000      	str	r0, [sp, #0]
 8005a06:	4976      	ldr	r1, [pc, #472]	; (8005be0 <HAL_I2C_Mem_Read+0x204>)
 8005a08:	2319      	movs	r3, #25
 8005a0a:	2201      	movs	r2, #1
 8005a0c:	4620      	mov	r0, r4
 8005a0e:	f7ff fceb 	bl	80053e8 <I2C_WaitOnFlagUntilTimeout>
 8005a12:	2800      	cmp	r0, #0
 8005a14:	d1f1      	bne.n	80059fa <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005a16:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005a1a:	2b01      	cmp	r3, #1
 8005a1c:	d0ed      	beq.n	80059fa <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005a1e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005a20:	2301      	movs	r3, #1
 8005a22:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005a26:	6803      	ldr	r3, [r0, #0]
 8005a28:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005a2a:	bf5e      	ittt	pl
 8005a2c:	6803      	ldrpl	r3, [r0, #0]
 8005a2e:	f043 0301 	orrpl.w	r3, r3, #1
 8005a32:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005a34:	6803      	ldr	r3, [r0, #0]
 8005a36:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005a3a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005a3c:	2322      	movs	r3, #34	; 0x22
 8005a3e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005a42:	2340      	movs	r3, #64	; 0x40
 8005a44:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005a48:	2300      	movs	r3, #0
 8005a4a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005a4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005a4e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005a50:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005a54:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005a56:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005a58:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005a5a:	4b62      	ldr	r3, [pc, #392]	; (8005be4 <HAL_I2C_Mem_Read+0x208>)
 8005a5c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005a5e:	4629      	mov	r1, r5
 8005a60:	e9cd 7600 	strd	r7, r6, [sp]
 8005a64:	464b      	mov	r3, r9
 8005a66:	4642      	mov	r2, r8
 8005a68:	4620      	mov	r0, r4
 8005a6a:	f7ff fdfd 	bl	8005668 <I2C_RequestMemoryRead>
 8005a6e:	4605      	mov	r5, r0
 8005a70:	b108      	cbz	r0, 8005a76 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005a72:	2501      	movs	r5, #1
 8005a74:	e7c2      	b.n	80059fc <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005a76:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a78:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005a7a:	b9b2      	cbnz	r2, 8005aaa <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a7c:	9002      	str	r0, [sp, #8]
 8005a7e:	695a      	ldr	r2, [r3, #20]
 8005a80:	9202      	str	r2, [sp, #8]
 8005a82:	699a      	ldr	r2, [r3, #24]
 8005a84:	9202      	str	r2, [sp, #8]
 8005a86:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a88:	681a      	ldr	r2, [r3, #0]
 8005a8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005a8e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005a90:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8005be8 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005a94:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005a96:	2b00      	cmp	r3, #0
 8005a98:	d12c      	bne.n	8005af4 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005a9a:	2220      	movs	r2, #32
 8005a9c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005aa0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005aa4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005aa8:	e7a8      	b.n	80059fc <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005aaa:	2a01      	cmp	r2, #1
 8005aac:	d10a      	bne.n	8005ac4 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005aae:	681a      	ldr	r2, [r3, #0]
 8005ab0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005ab4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ab6:	9003      	str	r0, [sp, #12]
 8005ab8:	695a      	ldr	r2, [r3, #20]
 8005aba:	9203      	str	r2, [sp, #12]
 8005abc:	699a      	ldr	r2, [r3, #24]
 8005abe:	9203      	str	r2, [sp, #12]
 8005ac0:	9a03      	ldr	r2, [sp, #12]
 8005ac2:	e7e1      	b.n	8005a88 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005ac4:	2a02      	cmp	r2, #2
 8005ac6:	d10e      	bne.n	8005ae6 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005ac8:	681a      	ldr	r2, [r3, #0]
 8005aca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005ace:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005ad0:	681a      	ldr	r2, [r3, #0]
 8005ad2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005ad6:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ad8:	9004      	str	r0, [sp, #16]
 8005ada:	695a      	ldr	r2, [r3, #20]
 8005adc:	9204      	str	r2, [sp, #16]
 8005ade:	699b      	ldr	r3, [r3, #24]
 8005ae0:	9304      	str	r3, [sp, #16]
 8005ae2:	9b04      	ldr	r3, [sp, #16]
 8005ae4:	e7d4      	b.n	8005a90 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ae6:	9005      	str	r0, [sp, #20]
 8005ae8:	695a      	ldr	r2, [r3, #20]
 8005aea:	9205      	str	r2, [sp, #20]
 8005aec:	699b      	ldr	r3, [r3, #24]
 8005aee:	9305      	str	r3, [sp, #20]
 8005af0:	9b05      	ldr	r3, [sp, #20]
 8005af2:	e7cd      	b.n	8005a90 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005af4:	2b03      	cmp	r3, #3
 8005af6:	d856      	bhi.n	8005ba6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005af8:	2b01      	cmp	r3, #1
 8005afa:	d115      	bne.n	8005b28 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005afc:	4632      	mov	r2, r6
 8005afe:	4639      	mov	r1, r7
 8005b00:	4620      	mov	r0, r4
 8005b02:	f7ff fcde 	bl	80054c2 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005b06:	2800      	cmp	r0, #0
 8005b08:	d1b3      	bne.n	8005a72 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b0a:	6823      	ldr	r3, [r4, #0]
 8005b0c:	691a      	ldr	r2, [r3, #16]
 8005b0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b10:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005b12:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b14:	3301      	adds	r3, #1
 8005b16:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005b18:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b1a:	3b01      	subs	r3, #1
 8005b1c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005b1e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005b20:	3b01      	subs	r3, #1
 8005b22:	b29b      	uxth	r3, r3
 8005b24:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005b26:	e7b5      	b.n	8005a94 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005b28:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b2a:	9600      	str	r6, [sp, #0]
 8005b2c:	463b      	mov	r3, r7
 8005b2e:	f04f 0200 	mov.w	r2, #0
 8005b32:	4641      	mov	r1, r8
 8005b34:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005b36:	d119      	bne.n	8005b6c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b38:	f7ff fc56 	bl	80053e8 <I2C_WaitOnFlagUntilTimeout>
 8005b3c:	2800      	cmp	r0, #0
 8005b3e:	d198      	bne.n	8005a72 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b40:	6823      	ldr	r3, [r4, #0]
 8005b42:	681a      	ldr	r2, [r3, #0]
 8005b44:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005b48:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b4a:	691a      	ldr	r2, [r3, #16]
 8005b4c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b4e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005b50:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005b52:	1c53      	adds	r3, r2, #1
 8005b54:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005b56:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b58:	3b01      	subs	r3, #1
 8005b5a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005b5c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005b5e:	3b01      	subs	r3, #1
 8005b60:	b29b      	uxth	r3, r3
 8005b62:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b64:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b66:	691b      	ldr	r3, [r3, #16]
 8005b68:	7053      	strb	r3, [r2, #1]
 8005b6a:	e7d2      	b.n	8005b12 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b6c:	f7ff fc3c 	bl	80053e8 <I2C_WaitOnFlagUntilTimeout>
 8005b70:	2800      	cmp	r0, #0
 8005b72:	f47f af7e 	bne.w	8005a72 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b76:	6823      	ldr	r3, [r4, #0]
 8005b78:	681a      	ldr	r2, [r3, #0]
 8005b7a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b7e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b80:	691a      	ldr	r2, [r3, #16]
 8005b82:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b84:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005b86:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b88:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005b8a:	3301      	adds	r3, #1
 8005b8c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005b8e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b90:	3b01      	subs	r3, #1
 8005b92:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005b94:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005b96:	3b01      	subs	r3, #1
 8005b98:	b29b      	uxth	r3, r3
 8005b9a:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b9c:	4602      	mov	r2, r0
 8005b9e:	463b      	mov	r3, r7
 8005ba0:	4641      	mov	r1, r8
 8005ba2:	4620      	mov	r0, r4
 8005ba4:	e7c8      	b.n	8005b38 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005ba6:	4632      	mov	r2, r6
 8005ba8:	4639      	mov	r1, r7
 8005baa:	4620      	mov	r0, r4
 8005bac:	f7ff fc89 	bl	80054c2 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005bb0:	2800      	cmp	r0, #0
 8005bb2:	f47f af5e 	bne.w	8005a72 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005bb6:	6823      	ldr	r3, [r4, #0]
 8005bb8:	691a      	ldr	r2, [r3, #16]
 8005bba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005bbc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005bbe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005bc0:	1c53      	adds	r3, r2, #1
 8005bc2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005bc4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005bc6:	3b01      	subs	r3, #1
 8005bc8:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005bca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005bcc:	3b01      	subs	r3, #1
 8005bce:	b29b      	uxth	r3, r3
 8005bd0:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005bd2:	6823      	ldr	r3, [r4, #0]
 8005bd4:	6959      	ldr	r1, [r3, #20]
 8005bd6:	0749      	lsls	r1, r1, #29
 8005bd8:	f57f af5c 	bpl.w	8005a94 <HAL_I2C_Mem_Read+0xb8>
 8005bdc:	e7c3      	b.n	8005b66 <HAL_I2C_Mem_Read+0x18a>
 8005bde:	bf00      	nop
 8005be0:	00100002 	.word	0x00100002
 8005be4:	ffff0000 	.word	0xffff0000
 8005be8:	00010004 	.word	0x00010004

08005bec <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005bec:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005bee:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005bf2:	2b20      	cmp	r3, #32
 8005bf4:	b2dc      	uxtb	r4, r3
 8005bf6:	d116      	bne.n	8005c26 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005bf8:	2324      	movs	r3, #36	; 0x24
 8005bfa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005bfe:	6803      	ldr	r3, [r0, #0]
 8005c00:	681a      	ldr	r2, [r3, #0]
 8005c02:	f022 0201 	bic.w	r2, r2, #1
 8005c06:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8005c08:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005c0a:	f022 0210 	bic.w	r2, r2, #16
 8005c0e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8005c10:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005c12:	4311      	orrs	r1, r2
 8005c14:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005c16:	681a      	ldr	r2, [r3, #0]
 8005c18:	f042 0201 	orr.w	r2, r2, #1
 8005c1c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005c1e:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8005c22:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005c24:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005c26:	2002      	movs	r0, #2
 8005c28:	e7fc      	b.n	8005c24 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08005c2a <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005c2a:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005c2c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005c30:	2b20      	cmp	r3, #32
 8005c32:	b2dc      	uxtb	r4, r3
 8005c34:	d116      	bne.n	8005c64 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005c36:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005c38:	2324      	movs	r3, #36	; 0x24
 8005c3a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8005c3e:	6813      	ldr	r3, [r2, #0]
 8005c40:	f023 0301 	bic.w	r3, r3, #1
 8005c44:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8005c46:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8005c48:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8005c4c:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8005c4e:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8005c50:	b29b      	uxth	r3, r3
 8005c52:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005c54:	6813      	ldr	r3, [r2, #0]
 8005c56:	f043 0301 	orr.w	r3, r3, #1
 8005c5a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005c5c:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8005c60:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005c62:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005c64:	2002      	movs	r0, #2
 8005c66:	e7fc      	b.n	8005c62 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005c68 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005c68:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005c6a:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005c6e:	01d2      	lsls	r2, r2, #7
 8005c70:	3284      	adds	r2, #132	; 0x84
 8005c72:	1883      	adds	r3, r0, r2
{
 8005c74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005c78:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005c7a:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005c7c:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005c7e:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005c82:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005c86:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005c88:	68c5      	ldr	r5, [r0, #12]
 8005c8a:	f10c 0701 	add.w	r7, ip, #1
 8005c8e:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005c92:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005c96:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005c98:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005c9a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005c9e:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005ca0:	68c5      	ldr	r5, [r0, #12]
 8005ca2:	68ce      	ldr	r6, [r1, #12]
 8005ca4:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8005ca8:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005caa:	689d      	ldr	r5, [r3, #8]
 8005cac:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005cb0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005cb2:	68c7      	ldr	r7, [r0, #12]
 8005cb4:	688d      	ldr	r5, [r1, #8]
 8005cb6:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005cba:	3501      	adds	r5, #1
 8005cbc:	443d      	add	r5, r7
 8005cbe:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005cc2:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005cc4:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005cc6:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005cc8:	f025 0507 	bic.w	r5, r5, #7
 8005ccc:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005cce:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005cd2:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005cd4:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005cd6:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005cda:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005cde:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005ce2:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005ce6:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005cea:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005cee:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005cf2:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005cf4:	695d      	ldr	r5, [r3, #20]
 8005cf6:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8005cfa:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005cfc:	694d      	ldr	r5, [r1, #20]
 8005cfe:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005d00:	69dd      	ldr	r5, [r3, #28]
 8005d02:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005d06:	f025 0507 	bic.w	r5, r5, #7
 8005d0a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005d0c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005d10:	433d      	orrs	r5, r7
 8005d12:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005d14:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005d16:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005d18:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005d1c:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005d1e:	b31e      	cbz	r6, 8005d68 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005d20:	2e01      	cmp	r6, #1
 8005d22:	d023      	beq.n	8005d6c <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005d24:	1eb5      	subs	r5, r6, #2
 8005d26:	2d02      	cmp	r5, #2
 8005d28:	d922      	bls.n	8005d70 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005d2a:	2e07      	cmp	r6, #7
 8005d2c:	bf0c      	ite	eq
 8005d2e:	2502      	moveq	r5, #2
 8005d30:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005d32:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005d34:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8005d38:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005d3a:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005d3e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005d40:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005d42:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005d44:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005d46:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005d48:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005d4c:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005d4e:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005d50:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8005d54:	f024 0407 	bic.w	r4, r4, #7
 8005d58:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005d5a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005d5c:	5883      	ldr	r3, [r0, r2]
 8005d5e:	f043 0301 	orr.w	r3, r3, #1
 8005d62:	5083      	str	r3, [r0, r2]
}
 8005d64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005d68:	2504      	movs	r5, #4
 8005d6a:	e7e2      	b.n	8005d32 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005d6c:	2503      	movs	r5, #3
 8005d6e:	e7e0      	b.n	8005d32 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005d70:	2502      	movs	r5, #2
 8005d72:	e7de      	b.n	8005d32 <LTDC_SetConfig+0xca>

08005d74 <HAL_LTDC_Init>:
{
 8005d74:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005d76:	4604      	mov	r4, r0
 8005d78:	2800      	cmp	r0, #0
 8005d7a:	d063      	beq.n	8005e44 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005d7c:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005d80:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005d84:	b91b      	cbnz	r3, 8005d8e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005d86:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005d8a:	f7fb fe53 	bl	8001a34 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005d8e:	2302      	movs	r3, #2
 8005d90:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005d94:	6823      	ldr	r3, [r4, #0]
 8005d96:	699a      	ldr	r2, [r3, #24]
 8005d98:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005d9c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005d9e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005da2:	4302      	orrs	r2, r0
 8005da4:	68e0      	ldr	r0, [r4, #12]
 8005da6:	6999      	ldr	r1, [r3, #24]
 8005da8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005daa:	6920      	ldr	r0, [r4, #16]
 8005dac:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005dae:	430a      	orrs	r2, r1
 8005db0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005db2:	689a      	ldr	r2, [r3, #8]
 8005db4:	4924      	ldr	r1, [pc, #144]	; (8005e48 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005db6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005db8:	400a      	ands	r2, r1
 8005dba:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005dbc:	689a      	ldr	r2, [r3, #8]
 8005dbe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005dc2:	69a0      	ldr	r0, [r4, #24]
 8005dc4:	4302      	orrs	r2, r0
 8005dc6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005dc8:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005dca:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005dcc:	400a      	ands	r2, r1
 8005dce:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005dd0:	68da      	ldr	r2, [r3, #12]
 8005dd2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005dd6:	6a20      	ldr	r0, [r4, #32]
 8005dd8:	4302      	orrs	r2, r0
 8005dda:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005ddc:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005dde:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005de0:	400a      	ands	r2, r1
 8005de2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005de4:	691a      	ldr	r2, [r3, #16]
 8005de6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005dea:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005dec:	4302      	orrs	r2, r0
 8005dee:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005df0:	695a      	ldr	r2, [r3, #20]
 8005df2:	4011      	ands	r1, r2
 8005df4:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005df6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005df8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005dfa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005dfe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005e00:	430a      	orrs	r2, r1
 8005e02:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005e04:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005e06:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005e0a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005e0e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005e12:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005e14:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005e16:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005e1a:	430a      	orrs	r2, r1
 8005e1c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005e20:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005e24:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005e26:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005e28:	f042 0206 	orr.w	r2, r2, #6
 8005e2c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005e2e:	699a      	ldr	r2, [r3, #24]
 8005e30:	f042 0201 	orr.w	r2, r2, #1
 8005e34:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005e36:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005e38:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005e3a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005e3e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005e42:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005e44:	2001      	movs	r0, #1
 8005e46:	e7fc      	b.n	8005e42 <HAL_LTDC_Init+0xce>
 8005e48:	f000f800 	.word	0xf000f800

08005e4c <HAL_LTDC_ErrorCallback>:
 8005e4c:	4770      	bx	lr

08005e4e <HAL_LTDC_ReloadEventCallback>:
 8005e4e:	4770      	bx	lr

08005e50 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005e50:	6803      	ldr	r3, [r0, #0]
{
 8005e52:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005e54:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005e56:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005e58:	0772      	lsls	r2, r6, #29
{
 8005e5a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005e5c:	d514      	bpl.n	8005e88 <HAL_LTDC_IRQHandler+0x38>
 8005e5e:	0769      	lsls	r1, r5, #29
 8005e60:	d512      	bpl.n	8005e88 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005e62:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005e64:	f022 0204 	bic.w	r2, r2, #4
 8005e68:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005e6a:	2204      	movs	r2, #4
 8005e6c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005e6e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005e72:	f043 0301 	orr.w	r3, r3, #1
 8005e76:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005e7a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005e7c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005e80:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005e84:	f7ff ffe2 	bl	8005e4c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005e88:	07b2      	lsls	r2, r6, #30
 8005e8a:	d516      	bpl.n	8005eba <HAL_LTDC_IRQHandler+0x6a>
 8005e8c:	07ab      	lsls	r3, r5, #30
 8005e8e:	d514      	bpl.n	8005eba <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005e90:	6823      	ldr	r3, [r4, #0]
 8005e92:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005e94:	f022 0202 	bic.w	r2, r2, #2
 8005e98:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005e9a:	2202      	movs	r2, #2
 8005e9c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005e9e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005ea2:	4313      	orrs	r3, r2
 8005ea4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005ea8:	2304      	movs	r3, #4
 8005eaa:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005eae:	2300      	movs	r3, #0
 8005eb0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005eb4:	4620      	mov	r0, r4
 8005eb6:	f7ff ffc9 	bl	8005e4c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005eba:	07f0      	lsls	r0, r6, #31
 8005ebc:	d510      	bpl.n	8005ee0 <HAL_LTDC_IRQHandler+0x90>
 8005ebe:	07e9      	lsls	r1, r5, #31
 8005ec0:	d50e      	bpl.n	8005ee0 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005ec2:	6823      	ldr	r3, [r4, #0]
 8005ec4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005ec6:	f022 0201 	bic.w	r2, r2, #1
 8005eca:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005ecc:	2201      	movs	r2, #1
 8005ece:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005ed0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005ed2:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005ed6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005eda:	4620      	mov	r0, r4
 8005edc:	f7fb f9ca 	bl	8001274 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005ee0:	0732      	lsls	r2, r6, #28
 8005ee2:	d511      	bpl.n	8005f08 <HAL_LTDC_IRQHandler+0xb8>
 8005ee4:	072b      	lsls	r3, r5, #28
 8005ee6:	d50f      	bpl.n	8005f08 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005ee8:	6823      	ldr	r3, [r4, #0]
 8005eea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005eec:	f022 0208 	bic.w	r2, r2, #8
 8005ef0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005ef2:	2208      	movs	r2, #8
 8005ef4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005ef6:	2301      	movs	r3, #1
 8005ef8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005efc:	2300      	movs	r3, #0
 8005efe:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005f02:	4620      	mov	r0, r4
 8005f04:	f7ff ffa3 	bl	8005e4e <HAL_LTDC_ReloadEventCallback>
}
 8005f08:	bd70      	pop	{r4, r5, r6, pc}

08005f0a <HAL_LTDC_ConfigLayer>:
{
 8005f0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005f0e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005f12:	2b01      	cmp	r3, #1
{
 8005f14:	4606      	mov	r6, r0
 8005f16:	460f      	mov	r7, r1
 8005f18:	4694      	mov	ip, r2
 8005f1a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005f1e:	d01f      	beq.n	8005f60 <HAL_LTDC_ConfigLayer+0x56>
 8005f20:	f04f 0801 	mov.w	r8, #1
 8005f24:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005f28:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005f2c:	2434      	movs	r4, #52	; 0x34
 8005f2e:	460d      	mov	r5, r1
 8005f30:	fb04 6402 	mla	r4, r4, r2, r6
 8005f34:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005f36:	3438      	adds	r4, #56	; 0x38
 8005f38:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005f3a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005f3c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005f3e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005f40:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005f42:	682b      	ldr	r3, [r5, #0]
 8005f44:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005f46:	4630      	mov	r0, r6
 8005f48:	4662      	mov	r2, ip
 8005f4a:	4639      	mov	r1, r7
 8005f4c:	f7ff fe8c 	bl	8005c68 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005f50:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005f52:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005f54:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005f58:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005f5c:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005f60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005f64 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005f64:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005f68:	2b01      	cmp	r3, #1
 8005f6a:	f04f 0302 	mov.w	r3, #2
 8005f6e:	d012      	beq.n	8005f96 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005f70:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005f74:	6803      	ldr	r3, [r0, #0]
 8005f76:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f78:	f022 0201 	bic.w	r2, r2, #1
 8005f7c:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005f7e:	4a07      	ldr	r2, [pc, #28]	; (8005f9c <HAL_LTDC_ProgramLineEvent+0x38>)
 8005f80:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005f82:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f84:	f042 0201 	orr.w	r2, r2, #1
 8005f88:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8005f8a:	2301      	movs	r3, #1
 8005f8c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005f90:	2300      	movs	r3, #0
 8005f92:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8005f96:	4618      	mov	r0, r3
}
 8005f98:	4770      	bx	lr
 8005f9a:	bf00      	nop
 8005f9c:	40016800 	.word	0x40016800

08005fa0 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005fa0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005fa4:	4604      	mov	r4, r0
 8005fa6:	b340      	cbz	r0, 8005ffa <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005fa8:	6803      	ldr	r3, [r0, #0]
 8005faa:	07dd      	lsls	r5, r3, #31
 8005fac:	d410      	bmi.n	8005fd0 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005fae:	6823      	ldr	r3, [r4, #0]
 8005fb0:	0798      	lsls	r0, r3, #30
 8005fb2:	d45e      	bmi.n	8006072 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005fb4:	6823      	ldr	r3, [r4, #0]
 8005fb6:	071a      	lsls	r2, r3, #28
 8005fb8:	f100 80a0 	bmi.w	80060fc <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005fbc:	6823      	ldr	r3, [r4, #0]
 8005fbe:	075b      	lsls	r3, r3, #29
 8005fc0:	f100 80c0 	bmi.w	8006144 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005fc4:	69a0      	ldr	r0, [r4, #24]
 8005fc6:	2800      	cmp	r0, #0
 8005fc8:	f040 8128 	bne.w	800621c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005fcc:	2000      	movs	r0, #0
 8005fce:	e02b      	b.n	8006028 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005fd0:	4b8f      	ldr	r3, [pc, #572]	; (8006210 <HAL_RCC_OscConfig+0x270>)
 8005fd2:	689a      	ldr	r2, [r3, #8]
 8005fd4:	f002 020c 	and.w	r2, r2, #12
 8005fd8:	2a04      	cmp	r2, #4
 8005fda:	d007      	beq.n	8005fec <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005fdc:	689a      	ldr	r2, [r3, #8]
 8005fde:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005fe2:	2a08      	cmp	r2, #8
 8005fe4:	d10b      	bne.n	8005ffe <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005fe6:	685a      	ldr	r2, [r3, #4]
 8005fe8:	0251      	lsls	r1, r2, #9
 8005fea:	d508      	bpl.n	8005ffe <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005fec:	4b88      	ldr	r3, [pc, #544]	; (8006210 <HAL_RCC_OscConfig+0x270>)
 8005fee:	681b      	ldr	r3, [r3, #0]
 8005ff0:	039a      	lsls	r2, r3, #14
 8005ff2:	d5dc      	bpl.n	8005fae <HAL_RCC_OscConfig+0xe>
 8005ff4:	6863      	ldr	r3, [r4, #4]
 8005ff6:	2b00      	cmp	r3, #0
 8005ff8:	d1d9      	bne.n	8005fae <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8005ffa:	2001      	movs	r0, #1
 8005ffc:	e014      	b.n	8006028 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005ffe:	6862      	ldr	r2, [r4, #4]
 8006000:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006004:	d113      	bne.n	800602e <HAL_RCC_OscConfig+0x8e>
 8006006:	681a      	ldr	r2, [r3, #0]
 8006008:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800600c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800600e:	f7fe ff5f 	bl	8004ed0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006012:	4e7f      	ldr	r6, [pc, #508]	; (8006210 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006014:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006016:	6833      	ldr	r3, [r6, #0]
 8006018:	039b      	lsls	r3, r3, #14
 800601a:	d4c8      	bmi.n	8005fae <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800601c:	f7fe ff58 	bl	8004ed0 <HAL_GetTick>
 8006020:	1b40      	subs	r0, r0, r5
 8006022:	2864      	cmp	r0, #100	; 0x64
 8006024:	d9f7      	bls.n	8006016 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8006026:	2003      	movs	r0, #3
}
 8006028:	b002      	add	sp, #8
 800602a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800602e:	4d78      	ldr	r5, [pc, #480]	; (8006210 <HAL_RCC_OscConfig+0x270>)
 8006030:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006034:	682b      	ldr	r3, [r5, #0]
 8006036:	d107      	bne.n	8006048 <HAL_RCC_OscConfig+0xa8>
 8006038:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800603c:	602b      	str	r3, [r5, #0]
 800603e:	682b      	ldr	r3, [r5, #0]
 8006040:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006044:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006046:	e7e2      	b.n	800600e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006048:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800604c:	602b      	str	r3, [r5, #0]
 800604e:	682b      	ldr	r3, [r5, #0]
 8006050:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006054:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006056:	2a00      	cmp	r2, #0
 8006058:	d1d9      	bne.n	800600e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800605a:	f7fe ff39 	bl	8004ed0 <HAL_GetTick>
 800605e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006060:	682b      	ldr	r3, [r5, #0]
 8006062:	039f      	lsls	r7, r3, #14
 8006064:	d5a3      	bpl.n	8005fae <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006066:	f7fe ff33 	bl	8004ed0 <HAL_GetTick>
 800606a:	1b80      	subs	r0, r0, r6
 800606c:	2864      	cmp	r0, #100	; 0x64
 800606e:	d9f7      	bls.n	8006060 <HAL_RCC_OscConfig+0xc0>
 8006070:	e7d9      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006072:	4b67      	ldr	r3, [pc, #412]	; (8006210 <HAL_RCC_OscConfig+0x270>)
 8006074:	689a      	ldr	r2, [r3, #8]
 8006076:	f012 0f0c 	tst.w	r2, #12
 800607a:	d007      	beq.n	800608c <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800607c:	689a      	ldr	r2, [r3, #8]
 800607e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006082:	2a08      	cmp	r2, #8
 8006084:	d111      	bne.n	80060aa <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006086:	685b      	ldr	r3, [r3, #4]
 8006088:	025e      	lsls	r6, r3, #9
 800608a:	d40e      	bmi.n	80060aa <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800608c:	4a60      	ldr	r2, [pc, #384]	; (8006210 <HAL_RCC_OscConfig+0x270>)
 800608e:	6813      	ldr	r3, [r2, #0]
 8006090:	079d      	lsls	r5, r3, #30
 8006092:	d502      	bpl.n	800609a <HAL_RCC_OscConfig+0xfa>
 8006094:	68e3      	ldr	r3, [r4, #12]
 8006096:	2b01      	cmp	r3, #1
 8006098:	d1af      	bne.n	8005ffa <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800609a:	6813      	ldr	r3, [r2, #0]
 800609c:	6921      	ldr	r1, [r4, #16]
 800609e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80060a2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80060a6:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80060a8:	e784      	b.n	8005fb4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80060aa:	68e2      	ldr	r2, [r4, #12]
 80060ac:	4b59      	ldr	r3, [pc, #356]	; (8006214 <HAL_RCC_OscConfig+0x274>)
 80060ae:	b1b2      	cbz	r2, 80060de <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80060b0:	2201      	movs	r2, #1
 80060b2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80060b4:	f7fe ff0c 	bl	8004ed0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80060b8:	4d55      	ldr	r5, [pc, #340]	; (8006210 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80060ba:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80060bc:	682b      	ldr	r3, [r5, #0]
 80060be:	0798      	lsls	r0, r3, #30
 80060c0:	d507      	bpl.n	80060d2 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80060c2:	682b      	ldr	r3, [r5, #0]
 80060c4:	6922      	ldr	r2, [r4, #16]
 80060c6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80060ca:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80060ce:	602b      	str	r3, [r5, #0]
 80060d0:	e770      	b.n	8005fb4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80060d2:	f7fe fefd 	bl	8004ed0 <HAL_GetTick>
 80060d6:	1b80      	subs	r0, r0, r6
 80060d8:	2802      	cmp	r0, #2
 80060da:	d9ef      	bls.n	80060bc <HAL_RCC_OscConfig+0x11c>
 80060dc:	e7a3      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 80060de:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80060e0:	f7fe fef6 	bl	8004ed0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80060e4:	4e4a      	ldr	r6, [pc, #296]	; (8006210 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80060e6:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80060e8:	6833      	ldr	r3, [r6, #0]
 80060ea:	0799      	lsls	r1, r3, #30
 80060ec:	f57f af62 	bpl.w	8005fb4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80060f0:	f7fe feee 	bl	8004ed0 <HAL_GetTick>
 80060f4:	1b40      	subs	r0, r0, r5
 80060f6:	2802      	cmp	r0, #2
 80060f8:	d9f6      	bls.n	80060e8 <HAL_RCC_OscConfig+0x148>
 80060fa:	e794      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80060fc:	6962      	ldr	r2, [r4, #20]
 80060fe:	4b45      	ldr	r3, [pc, #276]	; (8006214 <HAL_RCC_OscConfig+0x274>)
 8006100:	b182      	cbz	r2, 8006124 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8006102:	2201      	movs	r2, #1
 8006104:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006108:	f7fe fee2 	bl	8004ed0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800610c:	4e40      	ldr	r6, [pc, #256]	; (8006210 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800610e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006110:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006112:	079f      	lsls	r7, r3, #30
 8006114:	f53f af52 	bmi.w	8005fbc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006118:	f7fe feda 	bl	8004ed0 <HAL_GetTick>
 800611c:	1b40      	subs	r0, r0, r5
 800611e:	2802      	cmp	r0, #2
 8006120:	d9f6      	bls.n	8006110 <HAL_RCC_OscConfig+0x170>
 8006122:	e780      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006124:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006128:	f7fe fed2 	bl	8004ed0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800612c:	4e38      	ldr	r6, [pc, #224]	; (8006210 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800612e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006130:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006132:	0798      	lsls	r0, r3, #30
 8006134:	f57f af42 	bpl.w	8005fbc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006138:	f7fe feca 	bl	8004ed0 <HAL_GetTick>
 800613c:	1b40      	subs	r0, r0, r5
 800613e:	2802      	cmp	r0, #2
 8006140:	d9f6      	bls.n	8006130 <HAL_RCC_OscConfig+0x190>
 8006142:	e770      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006144:	4b32      	ldr	r3, [pc, #200]	; (8006210 <HAL_RCC_OscConfig+0x270>)
 8006146:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006148:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800614c:	d128      	bne.n	80061a0 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800614e:	9201      	str	r2, [sp, #4]
 8006150:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006152:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006156:	641a      	str	r2, [r3, #64]	; 0x40
 8006158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800615a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800615e:	9301      	str	r3, [sp, #4]
 8006160:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006162:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006164:	4d2c      	ldr	r5, [pc, #176]	; (8006218 <HAL_RCC_OscConfig+0x278>)
 8006166:	682b      	ldr	r3, [r5, #0]
 8006168:	05d9      	lsls	r1, r3, #23
 800616a:	d51b      	bpl.n	80061a4 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800616c:	68a3      	ldr	r3, [r4, #8]
 800616e:	4d28      	ldr	r5, [pc, #160]	; (8006210 <HAL_RCC_OscConfig+0x270>)
 8006170:	2b01      	cmp	r3, #1
 8006172:	d127      	bne.n	80061c4 <HAL_RCC_OscConfig+0x224>
 8006174:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006176:	f043 0301 	orr.w	r3, r3, #1
 800617a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800617c:	f7fe fea8 	bl	8004ed0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006180:	4e23      	ldr	r6, [pc, #140]	; (8006210 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006182:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006184:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006188:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800618a:	079b      	lsls	r3, r3, #30
 800618c:	d539      	bpl.n	8006202 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800618e:	2f00      	cmp	r7, #0
 8006190:	f43f af18 	beq.w	8005fc4 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006194:	4a1e      	ldr	r2, [pc, #120]	; (8006210 <HAL_RCC_OscConfig+0x270>)
 8006196:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006198:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800619c:	6413      	str	r3, [r2, #64]	; 0x40
 800619e:	e711      	b.n	8005fc4 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80061a0:	2700      	movs	r7, #0
 80061a2:	e7df      	b.n	8006164 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80061a4:	682b      	ldr	r3, [r5, #0]
 80061a6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80061aa:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80061ac:	f7fe fe90 	bl	8004ed0 <HAL_GetTick>
 80061b0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80061b2:	682b      	ldr	r3, [r5, #0]
 80061b4:	05da      	lsls	r2, r3, #23
 80061b6:	d4d9      	bmi.n	800616c <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80061b8:	f7fe fe8a 	bl	8004ed0 <HAL_GetTick>
 80061bc:	1b80      	subs	r0, r0, r6
 80061be:	2802      	cmp	r0, #2
 80061c0:	d9f7      	bls.n	80061b2 <HAL_RCC_OscConfig+0x212>
 80061c2:	e730      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80061c4:	2b05      	cmp	r3, #5
 80061c6:	d104      	bne.n	80061d2 <HAL_RCC_OscConfig+0x232>
 80061c8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80061ca:	f043 0304 	orr.w	r3, r3, #4
 80061ce:	672b      	str	r3, [r5, #112]	; 0x70
 80061d0:	e7d0      	b.n	8006174 <HAL_RCC_OscConfig+0x1d4>
 80061d2:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80061d4:	f022 0201 	bic.w	r2, r2, #1
 80061d8:	672a      	str	r2, [r5, #112]	; 0x70
 80061da:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80061dc:	f022 0204 	bic.w	r2, r2, #4
 80061e0:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80061e2:	2b00      	cmp	r3, #0
 80061e4:	d1ca      	bne.n	800617c <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 80061e6:	f7fe fe73 	bl	8004ed0 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80061ea:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80061ee:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80061f0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80061f2:	0798      	lsls	r0, r3, #30
 80061f4:	d5cb      	bpl.n	800618e <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80061f6:	f7fe fe6b 	bl	8004ed0 <HAL_GetTick>
 80061fa:	1b80      	subs	r0, r0, r6
 80061fc:	4540      	cmp	r0, r8
 80061fe:	d9f7      	bls.n	80061f0 <HAL_RCC_OscConfig+0x250>
 8006200:	e711      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006202:	f7fe fe65 	bl	8004ed0 <HAL_GetTick>
 8006206:	1b40      	subs	r0, r0, r5
 8006208:	4540      	cmp	r0, r8
 800620a:	d9bd      	bls.n	8006188 <HAL_RCC_OscConfig+0x1e8>
 800620c:	e70b      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
 800620e:	bf00      	nop
 8006210:	40023800 	.word	0x40023800
 8006214:	42470000 	.word	0x42470000
 8006218:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800621c:	4d36      	ldr	r5, [pc, #216]	; (80062f8 <HAL_RCC_OscConfig+0x358>)
 800621e:	68ab      	ldr	r3, [r5, #8]
 8006220:	f003 030c 	and.w	r3, r3, #12
 8006224:	2b08      	cmp	r3, #8
 8006226:	d03d      	beq.n	80062a4 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006228:	4b34      	ldr	r3, [pc, #208]	; (80062fc <HAL_RCC_OscConfig+0x35c>)
 800622a:	2200      	movs	r2, #0
 800622c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800622e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006230:	d12b      	bne.n	800628a <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8006232:	f7fe fe4d 	bl	8004ed0 <HAL_GetTick>
 8006236:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006238:	682b      	ldr	r3, [r5, #0]
 800623a:	0199      	lsls	r1, r3, #6
 800623c:	d41f      	bmi.n	800627e <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800623e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006242:	4313      	orrs	r3, r2
 8006244:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006246:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800624a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800624c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006250:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006252:	0852      	lsrs	r2, r2, #1
 8006254:	3a01      	subs	r2, #1
 8006256:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800625a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800625c:	4b27      	ldr	r3, [pc, #156]	; (80062fc <HAL_RCC_OscConfig+0x35c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800625e:	4d26      	ldr	r5, [pc, #152]	; (80062f8 <HAL_RCC_OscConfig+0x358>)
        __HAL_RCC_PLL_ENABLE();
 8006260:	2201      	movs	r2, #1
 8006262:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8006264:	f7fe fe34 	bl	8004ed0 <HAL_GetTick>
 8006268:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800626a:	682b      	ldr	r3, [r5, #0]
 800626c:	019a      	lsls	r2, r3, #6
 800626e:	f53f aead 	bmi.w	8005fcc <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006272:	f7fe fe2d 	bl	8004ed0 <HAL_GetTick>
 8006276:	1b00      	subs	r0, r0, r4
 8006278:	2802      	cmp	r0, #2
 800627a:	d9f6      	bls.n	800626a <HAL_RCC_OscConfig+0x2ca>
 800627c:	e6d3      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800627e:	f7fe fe27 	bl	8004ed0 <HAL_GetTick>
 8006282:	1b80      	subs	r0, r0, r6
 8006284:	2802      	cmp	r0, #2
 8006286:	d9d7      	bls.n	8006238 <HAL_RCC_OscConfig+0x298>
 8006288:	e6cd      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800628a:	f7fe fe21 	bl	8004ed0 <HAL_GetTick>
 800628e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006290:	682b      	ldr	r3, [r5, #0]
 8006292:	019b      	lsls	r3, r3, #6
 8006294:	f57f ae9a 	bpl.w	8005fcc <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006298:	f7fe fe1a 	bl	8004ed0 <HAL_GetTick>
 800629c:	1b00      	subs	r0, r0, r4
 800629e:	2802      	cmp	r0, #2
 80062a0:	d9f6      	bls.n	8006290 <HAL_RCC_OscConfig+0x2f0>
 80062a2:	e6c0      	b.n	8006026 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80062a4:	2801      	cmp	r0, #1
 80062a6:	f43f aebf 	beq.w	8006028 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80062aa:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80062ac:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80062ae:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80062b2:	4291      	cmp	r1, r2
 80062b4:	f47f aea1 	bne.w	8005ffa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80062b8:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80062ba:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80062be:	428a      	cmp	r2, r1
 80062c0:	f47f ae9b 	bne.w	8005ffa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80062c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80062c6:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 80062ca:	401a      	ands	r2, r3
 80062cc:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80062d0:	f47f ae93 	bne.w	8005ffa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80062d4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80062d6:	0852      	lsrs	r2, r2, #1
 80062d8:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80062dc:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80062de:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80062e2:	f47f ae8a 	bne.w	8005ffa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80062e6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80062e8:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80062ec:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80062f0:	f43f ae6c 	beq.w	8005fcc <HAL_RCC_OscConfig+0x2c>
 80062f4:	e681      	b.n	8005ffa <HAL_RCC_OscConfig+0x5a>
 80062f6:	bf00      	nop
 80062f8:	40023800 	.word	0x40023800
 80062fc:	42470000 	.word	0x42470000

08006300 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006300:	4913      	ldr	r1, [pc, #76]	; (8006350 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006302:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006304:	688b      	ldr	r3, [r1, #8]
 8006306:	f003 030c 	and.w	r3, r3, #12
 800630a:	2b04      	cmp	r3, #4
 800630c:	d01c      	beq.n	8006348 <HAL_RCC_GetSysClockFreq+0x48>
 800630e:	2b08      	cmp	r3, #8
 8006310:	d11c      	bne.n	800634c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006312:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006314:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006316:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006318:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800631c:	bf14      	ite	ne
 800631e:	480d      	ldrne	r0, [pc, #52]	; (8006354 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006320:	480d      	ldreq	r0, [pc, #52]	; (8006358 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006322:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006326:	bf18      	it	ne
 8006328:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800632a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800632e:	fba1 0100 	umull	r0, r1, r1, r0
 8006332:	f7f9 ffad 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006336:	4b06      	ldr	r3, [pc, #24]	; (8006350 <HAL_RCC_GetSysClockFreq+0x50>)
 8006338:	685b      	ldr	r3, [r3, #4]
 800633a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800633e:	3301      	adds	r3, #1
 8006340:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8006342:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006346:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006348:	4802      	ldr	r0, [pc, #8]	; (8006354 <HAL_RCC_GetSysClockFreq+0x54>)
 800634a:	e7fc      	b.n	8006346 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800634c:	4802      	ldr	r0, [pc, #8]	; (8006358 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800634e:	e7fa      	b.n	8006346 <HAL_RCC_GetSysClockFreq+0x46>
 8006350:	40023800 	.word	0x40023800
 8006354:	007a1200 	.word	0x007a1200
 8006358:	00f42400 	.word	0x00f42400

0800635c <HAL_RCC_ClockConfig>:
{
 800635c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006360:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006362:	4604      	mov	r4, r0
 8006364:	b910      	cbnz	r0, 800636c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006366:	2001      	movs	r0, #1
}
 8006368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800636c:	4b44      	ldr	r3, [pc, #272]	; (8006480 <HAL_RCC_ClockConfig+0x124>)
 800636e:	681a      	ldr	r2, [r3, #0]
 8006370:	f002 020f 	and.w	r2, r2, #15
 8006374:	428a      	cmp	r2, r1
 8006376:	d328      	bcc.n	80063ca <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006378:	6822      	ldr	r2, [r4, #0]
 800637a:	0797      	lsls	r7, r2, #30
 800637c:	d42d      	bmi.n	80063da <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800637e:	07d0      	lsls	r0, r2, #31
 8006380:	d441      	bmi.n	8006406 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006382:	4b3f      	ldr	r3, [pc, #252]	; (8006480 <HAL_RCC_ClockConfig+0x124>)
 8006384:	681a      	ldr	r2, [r3, #0]
 8006386:	f002 020f 	and.w	r2, r2, #15
 800638a:	42aa      	cmp	r2, r5
 800638c:	d866      	bhi.n	800645c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800638e:	6822      	ldr	r2, [r4, #0]
 8006390:	0751      	lsls	r1, r2, #29
 8006392:	d46c      	bmi.n	800646e <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006394:	0713      	lsls	r3, r2, #28
 8006396:	d507      	bpl.n	80063a8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006398:	4a3a      	ldr	r2, [pc, #232]	; (8006484 <HAL_RCC_ClockConfig+0x128>)
 800639a:	6921      	ldr	r1, [r4, #16]
 800639c:	6893      	ldr	r3, [r2, #8]
 800639e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80063a2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80063a6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80063a8:	f7ff ffaa 	bl	8006300 <HAL_RCC_GetSysClockFreq>
 80063ac:	4b35      	ldr	r3, [pc, #212]	; (8006484 <HAL_RCC_ClockConfig+0x128>)
 80063ae:	4a36      	ldr	r2, [pc, #216]	; (8006488 <HAL_RCC_ClockConfig+0x12c>)
 80063b0:	689b      	ldr	r3, [r3, #8]
 80063b2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80063b6:	5cd3      	ldrb	r3, [r2, r3]
 80063b8:	40d8      	lsrs	r0, r3
 80063ba:	4b34      	ldr	r3, [pc, #208]	; (800648c <HAL_RCC_ClockConfig+0x130>)
 80063bc:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80063be:	4b34      	ldr	r3, [pc, #208]	; (8006490 <HAL_RCC_ClockConfig+0x134>)
 80063c0:	6818      	ldr	r0, [r3, #0]
 80063c2:	f7fb fcb5 	bl	8001d30 <HAL_InitTick>
  return HAL_OK;
 80063c6:	2000      	movs	r0, #0
 80063c8:	e7ce      	b.n	8006368 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80063ca:	b2ca      	uxtb	r2, r1
 80063cc:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80063ce:	681b      	ldr	r3, [r3, #0]
 80063d0:	f003 030f 	and.w	r3, r3, #15
 80063d4:	428b      	cmp	r3, r1
 80063d6:	d1c6      	bne.n	8006366 <HAL_RCC_ClockConfig+0xa>
 80063d8:	e7ce      	b.n	8006378 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80063da:	4b2a      	ldr	r3, [pc, #168]	; (8006484 <HAL_RCC_ClockConfig+0x128>)
 80063dc:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80063e0:	bf1e      	ittt	ne
 80063e2:	6899      	ldrne	r1, [r3, #8]
 80063e4:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 80063e8:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80063ea:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80063ec:	bf42      	ittt	mi
 80063ee:	6899      	ldrmi	r1, [r3, #8]
 80063f0:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 80063f4:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80063f6:	4923      	ldr	r1, [pc, #140]	; (8006484 <HAL_RCC_ClockConfig+0x128>)
 80063f8:	68a0      	ldr	r0, [r4, #8]
 80063fa:	688b      	ldr	r3, [r1, #8]
 80063fc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006400:	4303      	orrs	r3, r0
 8006402:	608b      	str	r3, [r1, #8]
 8006404:	e7bb      	b.n	800637e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006406:	6862      	ldr	r2, [r4, #4]
 8006408:	4b1e      	ldr	r3, [pc, #120]	; (8006484 <HAL_RCC_ClockConfig+0x128>)
 800640a:	2a01      	cmp	r2, #1
 800640c:	d11c      	bne.n	8006448 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006414:	d0a7      	beq.n	8006366 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006416:	4e1b      	ldr	r6, [pc, #108]	; (8006484 <HAL_RCC_ClockConfig+0x128>)
 8006418:	68b3      	ldr	r3, [r6, #8]
 800641a:	f023 0303 	bic.w	r3, r3, #3
 800641e:	4313      	orrs	r3, r2
 8006420:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006422:	f7fe fd55 	bl	8004ed0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006426:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800642a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800642c:	68b3      	ldr	r3, [r6, #8]
 800642e:	6862      	ldr	r2, [r4, #4]
 8006430:	f003 030c 	and.w	r3, r3, #12
 8006434:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006438:	d0a3      	beq.n	8006382 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800643a:	f7fe fd49 	bl	8004ed0 <HAL_GetTick>
 800643e:	1bc0      	subs	r0, r0, r7
 8006440:	4540      	cmp	r0, r8
 8006442:	d9f3      	bls.n	800642c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006444:	2003      	movs	r0, #3
 8006446:	e78f      	b.n	8006368 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006448:	1e91      	subs	r1, r2, #2
 800644a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800644c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800644e:	d802      	bhi.n	8006456 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006450:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006454:	e7de      	b.n	8006414 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006456:	f013 0f02 	tst.w	r3, #2
 800645a:	e7db      	b.n	8006414 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800645c:	b2ea      	uxtb	r2, r5
 800645e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006460:	681b      	ldr	r3, [r3, #0]
 8006462:	f003 030f 	and.w	r3, r3, #15
 8006466:	42ab      	cmp	r3, r5
 8006468:	f47f af7d 	bne.w	8006366 <HAL_RCC_ClockConfig+0xa>
 800646c:	e78f      	b.n	800638e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800646e:	4905      	ldr	r1, [pc, #20]	; (8006484 <HAL_RCC_ClockConfig+0x128>)
 8006470:	68e0      	ldr	r0, [r4, #12]
 8006472:	688b      	ldr	r3, [r1, #8]
 8006474:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006478:	4303      	orrs	r3, r0
 800647a:	608b      	str	r3, [r1, #8]
 800647c:	e78a      	b.n	8006394 <HAL_RCC_ClockConfig+0x38>
 800647e:	bf00      	nop
 8006480:	40023c00 	.word	0x40023c00
 8006484:	40023800 	.word	0x40023800
 8006488:	0801f234 	.word	0x0801f234
 800648c:	20000074 	.word	0x20000074
 8006490:	2000007c 	.word	0x2000007c

08006494 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006494:	4b04      	ldr	r3, [pc, #16]	; (80064a8 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006496:	4a05      	ldr	r2, [pc, #20]	; (80064ac <HAL_RCC_GetPCLK1Freq+0x18>)
 8006498:	689b      	ldr	r3, [r3, #8]
 800649a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800649e:	5cd3      	ldrb	r3, [r2, r3]
 80064a0:	4a03      	ldr	r2, [pc, #12]	; (80064b0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80064a2:	6810      	ldr	r0, [r2, #0]
}
 80064a4:	40d8      	lsrs	r0, r3
 80064a6:	4770      	bx	lr
 80064a8:	40023800 	.word	0x40023800
 80064ac:	0801f244 	.word	0x0801f244
 80064b0:	20000074 	.word	0x20000074

080064b4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80064b4:	230f      	movs	r3, #15
 80064b6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80064b8:	4b0b      	ldr	r3, [pc, #44]	; (80064e8 <HAL_RCC_GetClockConfig+0x34>)
 80064ba:	689a      	ldr	r2, [r3, #8]
 80064bc:	f002 0203 	and.w	r2, r2, #3
 80064c0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80064c2:	689a      	ldr	r2, [r3, #8]
 80064c4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80064c8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80064ca:	689a      	ldr	r2, [r3, #8]
 80064cc:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80064d0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80064d2:	689b      	ldr	r3, [r3, #8]
 80064d4:	08db      	lsrs	r3, r3, #3
 80064d6:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80064da:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80064dc:	4b03      	ldr	r3, [pc, #12]	; (80064ec <HAL_RCC_GetClockConfig+0x38>)
 80064de:	681b      	ldr	r3, [r3, #0]
 80064e0:	f003 030f 	and.w	r3, r3, #15
 80064e4:	600b      	str	r3, [r1, #0]
}
 80064e6:	4770      	bx	lr
 80064e8:	40023800 	.word	0x40023800
 80064ec:	40023c00 	.word	0x40023c00

080064f0 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80064f0:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80064f2:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 80064f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80064f8:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80064fa:	f040 808c 	bne.w	8006616 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80064fe:	6823      	ldr	r3, [r4, #0]
 8006500:	f013 0f0c 	tst.w	r3, #12
 8006504:	d045      	beq.n	8006592 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006506:	4b8b      	ldr	r3, [pc, #556]	; (8006734 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006508:	4d8b      	ldr	r5, [pc, #556]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 800650a:	2200      	movs	r2, #0
 800650c:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800650e:	f7fe fcdf 	bl	8004ed0 <HAL_GetTick>
 8006512:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006514:	682b      	ldr	r3, [r5, #0]
 8006516:	009f      	lsls	r7, r3, #2
 8006518:	f100 80cf 	bmi.w	80066ba <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800651c:	6821      	ldr	r1, [r4, #0]
 800651e:	074e      	lsls	r6, r1, #29
 8006520:	d515      	bpl.n	800654e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006522:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006526:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800652a:	061b      	lsls	r3, r3, #24
 800652c:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8006530:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006534:	4313      	orrs	r3, r2
 8006536:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800653a:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800653e:	6a22      	ldr	r2, [r4, #32]
 8006540:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006544:	3a01      	subs	r2, #1
 8006546:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800654a:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800654e:	070d      	lsls	r5, r1, #28
 8006550:	d514      	bpl.n	800657c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006552:	4a79      	ldr	r2, [pc, #484]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006554:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006556:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800655a:	6920      	ldr	r0, [r4, #16]
 800655c:	071b      	lsls	r3, r3, #28
 800655e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8006562:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006566:	430b      	orrs	r3, r1
 8006568:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800656c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006570:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006572:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006576:	430b      	orrs	r3, r1
 8006578:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800657c:	4b6d      	ldr	r3, [pc, #436]	; (8006734 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800657e:	4e6e      	ldr	r6, [pc, #440]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006580:	2201      	movs	r2, #1
 8006582:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006584:	f7fe fca4 	bl	8004ed0 <HAL_GetTick>
 8006588:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800658a:	6833      	ldr	r3, [r6, #0]
 800658c:	0098      	lsls	r0, r3, #2
 800658e:	f140 809b 	bpl.w	80066c8 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006592:	6823      	ldr	r3, [r4, #0]
 8006594:	069b      	lsls	r3, r3, #26
 8006596:	d533      	bpl.n	8006600 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006598:	2300      	movs	r3, #0
 800659a:	9301      	str	r3, [sp, #4]
 800659c:	4b66      	ldr	r3, [pc, #408]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800659e:	4d67      	ldr	r5, [pc, #412]	; (800673c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80065a0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80065a2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80065a6:	641a      	str	r2, [r3, #64]	; 0x40
 80065a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80065ae:	9301      	str	r3, [sp, #4]
 80065b0:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80065b2:	682b      	ldr	r3, [r5, #0]
 80065b4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80065b8:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80065ba:	f7fe fc89 	bl	8004ed0 <HAL_GetTick>
 80065be:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 80065c0:	682b      	ldr	r3, [r5, #0]
 80065c2:	05d9      	lsls	r1, r3, #23
 80065c4:	f140 8087 	bpl.w	80066d6 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80065c8:	4d5b      	ldr	r5, [pc, #364]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80065ca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80065cc:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80065d0:	f040 8088 	bne.w	80066e4 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80065d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80065d6:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80065da:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80065de:	4a56      	ldr	r2, [pc, #344]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80065e0:	f040 80a4 	bne.w	800672c <HAL_RCCEx_PeriphCLKConfig+0x23c>
 80065e4:	6891      	ldr	r1, [r2, #8]
 80065e6:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80065ea:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80065ee:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80065f2:	4301      	orrs	r1, r0
 80065f4:	6091      	str	r1, [r2, #8]
 80065f6:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80065f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80065fc:	430b      	orrs	r3, r1
 80065fe:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006600:	6820      	ldr	r0, [r4, #0]
 8006602:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006606:	bf1f      	itttt	ne
 8006608:	4b4d      	ldrne	r3, [pc, #308]	; (8006740 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800660a:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 800660e:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8006612:	2000      	movne	r0, #0
 8006614:	e04f      	b.n	80066b6 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8006616:	4b47      	ldr	r3, [pc, #284]	; (8006734 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006618:	4e47      	ldr	r6, [pc, #284]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 800661a:	2200      	movs	r2, #0
 800661c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800661e:	f7fe fc57 	bl	8004ed0 <HAL_GetTick>
 8006622:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006624:	6833      	ldr	r3, [r6, #0]
 8006626:	011f      	lsls	r7, r3, #4
 8006628:	d43f      	bmi.n	80066aa <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800662a:	6821      	ldr	r1, [r4, #0]
 800662c:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800662e:	bf41      	itttt	mi
 8006630:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006634:	071b      	lslmi	r3, r3, #28
 8006636:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800663a:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800663e:	0788      	lsls	r0, r1, #30
 8006640:	d515      	bpl.n	800666e <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006642:	4a3d      	ldr	r2, [pc, #244]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006644:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006646:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800664a:	6865      	ldr	r5, [r4, #4]
 800664c:	061b      	lsls	r3, r3, #24
 800664e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006652:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006656:	4303      	orrs	r3, r0
 8006658:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800665c:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006660:	69e3      	ldr	r3, [r4, #28]
 8006662:	f020 001f 	bic.w	r0, r0, #31
 8006666:	3b01      	subs	r3, #1
 8006668:	4303      	orrs	r3, r0
 800666a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800666e:	0649      	lsls	r1, r1, #25
 8006670:	d50a      	bpl.n	8006688 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006672:	68e3      	ldr	r3, [r4, #12]
 8006674:	6862      	ldr	r2, [r4, #4]
 8006676:	061b      	lsls	r3, r3, #24
 8006678:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800667c:	68a2      	ldr	r2, [r4, #8]
 800667e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006682:	4a2d      	ldr	r2, [pc, #180]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006684:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006688:	4b2a      	ldr	r3, [pc, #168]	; (8006734 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800668a:	4e2b      	ldr	r6, [pc, #172]	; (8006738 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 800668c:	2201      	movs	r2, #1
 800668e:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006690:	f7fe fc1e 	bl	8004ed0 <HAL_GetTick>
 8006694:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006696:	6833      	ldr	r3, [r6, #0]
 8006698:	011a      	lsls	r2, r3, #4
 800669a:	f53f af30 	bmi.w	80064fe <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800669e:	f7fe fc17 	bl	8004ed0 <HAL_GetTick>
 80066a2:	1b40      	subs	r0, r0, r5
 80066a4:	2802      	cmp	r0, #2
 80066a6:	d9f6      	bls.n	8006696 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80066a8:	e004      	b.n	80066b4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80066aa:	f7fe fc11 	bl	8004ed0 <HAL_GetTick>
 80066ae:	1b40      	subs	r0, r0, r5
 80066b0:	2802      	cmp	r0, #2
 80066b2:	d9b7      	bls.n	8006624 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 80066b4:	2003      	movs	r0, #3
}
 80066b6:	b003      	add	sp, #12
 80066b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80066ba:	f7fe fc09 	bl	8004ed0 <HAL_GetTick>
 80066be:	1b80      	subs	r0, r0, r6
 80066c0:	2802      	cmp	r0, #2
 80066c2:	f67f af27 	bls.w	8006514 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80066c6:	e7f5      	b.n	80066b4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80066c8:	f7fe fc02 	bl	8004ed0 <HAL_GetTick>
 80066cc:	1b40      	subs	r0, r0, r5
 80066ce:	2802      	cmp	r0, #2
 80066d0:	f67f af5b 	bls.w	800658a <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80066d4:	e7ee      	b.n	80066b4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80066d6:	f7fe fbfb 	bl	8004ed0 <HAL_GetTick>
 80066da:	1b80      	subs	r0, r0, r6
 80066dc:	2802      	cmp	r0, #2
 80066de:	f67f af6f 	bls.w	80065c0 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 80066e2:	e7e7      	b.n	80066b4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80066e4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80066e6:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80066ea:	4293      	cmp	r3, r2
 80066ec:	f43f af72 	beq.w	80065d4 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80066f0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80066f2:	4a10      	ldr	r2, [pc, #64]	; (8006734 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80066f4:	2101      	movs	r1, #1
 80066f6:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80066fa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80066fe:	2100      	movs	r1, #0
 8006700:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8006704:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006706:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006708:	07da      	lsls	r2, r3, #31
 800670a:	f57f af63 	bpl.w	80065d4 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 800670e:	f7fe fbdf 	bl	8004ed0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006712:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006716:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006718:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800671a:	079b      	lsls	r3, r3, #30
 800671c:	f53f af5a 	bmi.w	80065d4 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006720:	f7fe fbd6 	bl	8004ed0 <HAL_GetTick>
 8006724:	1b80      	subs	r0, r0, r6
 8006726:	42b8      	cmp	r0, r7
 8006728:	d9f6      	bls.n	8006718 <HAL_RCCEx_PeriphCLKConfig+0x228>
 800672a:	e7c3      	b.n	80066b4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800672c:	6891      	ldr	r1, [r2, #8]
 800672e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006732:	e75f      	b.n	80065f4 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8006734:	42470000 	.word	0x42470000
 8006738:	40023800 	.word	0x40023800
 800673c:	40007000 	.word	0x40007000
 8006740:	42471000 	.word	0x42471000

08006744 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006744:	b538      	push	{r3, r4, r5, lr}
 8006746:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006748:	4604      	mov	r4, r0
 800674a:	b1c8      	cbz	r0, 8006780 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800674c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006750:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006754:	b91b      	cbnz	r3, 800675e <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006756:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800675a:	f7fb fa7d 	bl	8001c58 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800675e:	2302      	movs	r3, #2
 8006760:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006764:	1d21      	adds	r1, r4, #4
 8006766:	6820      	ldr	r0, [r4, #0]
 8006768:	f000 fd04 	bl	8007174 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800676c:	6862      	ldr	r2, [r4, #4]
 800676e:	6820      	ldr	r0, [r4, #0]
 8006770:	4629      	mov	r1, r5
 8006772:	f000 fd3a 	bl	80071ea <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006776:	2301      	movs	r3, #1
 8006778:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800677c:	2000      	movs	r0, #0
}
 800677e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006780:	2001      	movs	r0, #1
 8006782:	e7fc      	b.n	800677e <HAL_SDRAM_Init+0x3a>

08006784 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006784:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006786:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800678a:	2b02      	cmp	r3, #2
{
 800678c:	4605      	mov	r5, r0
 800678e:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006790:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006792:	d012      	beq.n	80067ba <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006794:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8006798:	2c01      	cmp	r4, #1
 800679a:	d10f      	bne.n	80067bc <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800679c:	2302      	movs	r3, #2
 800679e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80067a2:	6828      	ldr	r0, [r5, #0]
 80067a4:	f000 fd57 	bl	8007256 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80067a8:	6833      	ldr	r3, [r6, #0]
 80067aa:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80067ac:	bf06      	itte	eq
 80067ae:	2305      	moveq	r3, #5
 80067b0:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80067b4:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80067b8:	2000      	movs	r0, #0
}
 80067ba:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 80067bc:	2001      	movs	r0, #1
 80067be:	e7fc      	b.n	80067ba <HAL_SDRAM_SendCommand+0x36>

080067c0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80067c0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80067c2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80067c6:	2b02      	cmp	r3, #2
{
 80067c8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80067ca:	b2d8      	uxtb	r0, r3
 80067cc:	d00d      	beq.n	80067ea <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80067ce:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80067d2:	2b01      	cmp	r3, #1
 80067d4:	b2dd      	uxtb	r5, r3
 80067d6:	d109      	bne.n	80067ec <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80067d8:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80067da:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80067dc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80067e0:	f000 fd5f 	bl	80072a2 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 80067e4:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80067e8:	2000      	movs	r0, #0
}
 80067ea:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80067ec:	2001      	movs	r0, #1
 80067ee:	e7fc      	b.n	80067ea <HAL_SDRAM_ProgramRefreshRate+0x2a>

080067f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 80067f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80067f4:	461d      	mov	r5, r3
 80067f6:	4617      	mov	r7, r2
 80067f8:	4688      	mov	r8, r1
 80067fa:	4606      	mov	r6, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80067fc:	f7fe fb68 	bl	8004ed0 <HAL_GetTick>
 8006800:	443d      	add	r5, r7
 8006802:	1a2c      	subs	r4, r5, r0
  tmp_tickstart = HAL_GetTick();
 8006804:	f7fe fb64 	bl	8004ed0 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006808:	4b22      	ldr	r3, [pc, #136]	; (8006894 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>)
 800680a:	681b      	ldr	r3, [r3, #0]
 800680c:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 8006810:	4605      	mov	r5, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006812:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006814:	6832      	ldr	r2, [r6, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 8006816:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006818:	6893      	ldr	r3, [r2, #8]
 800681a:	ea38 0303 	bics.w	r3, r8, r3
 800681e:	d001      	beq.n	8006824 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 8006820:	2000      	movs	r0, #0
 8006822:	e02d      	b.n	8006880 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
    if (Timeout != HAL_MAX_DELAY)
 8006824:	1c7b      	adds	r3, r7, #1
 8006826:	d0f7      	beq.n	8006818 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006828:	f7fe fb52 	bl	8004ed0 <HAL_GetTick>
 800682c:	1b40      	subs	r0, r0, r5
 800682e:	42a0      	cmp	r0, r4
 8006830:	d329      	bcc.n	8006886 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006832:	6833      	ldr	r3, [r6, #0]
 8006834:	685a      	ldr	r2, [r3, #4]
 8006836:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800683a:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800683c:	6872      	ldr	r2, [r6, #4]
 800683e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006842:	d10a      	bne.n	800685a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
 8006844:	68b2      	ldr	r2, [r6, #8]
 8006846:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800684a:	d002      	beq.n	8006852 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800684c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006850:	d103      	bne.n	800685a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
          __HAL_SPI_DISABLE(hspi);
 8006852:	681a      	ldr	r2, [r3, #0]
 8006854:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006858:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800685a:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 800685c:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8006860:	d107      	bne.n	8006872 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x82>
          SPI_RESET_CRC(hspi);
 8006862:	681a      	ldr	r2, [r3, #0]
 8006864:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006868:	601a      	str	r2, [r3, #0]
 800686a:	681a      	ldr	r2, [r3, #0]
 800686c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006870:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8006872:	2301      	movs	r3, #1
 8006874:	f886 3051 	strb.w	r3, [r6, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8006878:	2300      	movs	r3, #0
 800687a:	f886 3050 	strb.w	r3, [r6, #80]	; 0x50
        return HAL_TIMEOUT;
 800687e:	2003      	movs	r0, #3
}
 8006880:	b002      	add	sp, #8
 8006882:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 8006886:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8006888:	2b00      	cmp	r3, #0
      count--;
 800688a:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800688c:	bf08      	it	eq
 800688e:	2400      	moveq	r4, #0
      count--;
 8006890:	3b01      	subs	r3, #1
 8006892:	e7bf      	b.n	8006814 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 8006894:	20000074 	.word	0x20000074

08006898 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006898:	b538      	push	{r3, r4, r5, lr}
 800689a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800689c:	6842      	ldr	r2, [r0, #4]
 800689e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80068a2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80068a4:	d11f      	bne.n	80068e6 <SPI_EndRxTransaction+0x4e>
 80068a6:	6882      	ldr	r2, [r0, #8]
 80068a8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80068ac:	d002      	beq.n	80068b4 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80068ae:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80068b2:	d107      	bne.n	80068c4 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80068b4:	6825      	ldr	r5, [r4, #0]
 80068b6:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80068b8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80068bc:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80068c0:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80068c2:	d007      	beq.n	80068d4 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80068c4:	460a      	mov	r2, r1
 80068c6:	2180      	movs	r1, #128	; 0x80
 80068c8:	4620      	mov	r0, r4
 80068ca:	f7ff ff91 	bl	80067f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80068ce:	b920      	cbnz	r0, 80068da <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80068d0:	2000      	movs	r0, #0
}
 80068d2:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80068d4:	460a      	mov	r2, r1
 80068d6:	2101      	movs	r1, #1
 80068d8:	e7f6      	b.n	80068c8 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80068da:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80068dc:	f043 0320 	orr.w	r3, r3, #32
 80068e0:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80068e2:	2003      	movs	r0, #3
 80068e4:	e7f5      	b.n	80068d2 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80068e6:	460a      	mov	r2, r1
 80068e8:	2101      	movs	r1, #1
 80068ea:	e7ee      	b.n	80068ca <SPI_EndRxTransaction+0x32>

080068ec <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80068ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80068ee:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80068f0:	4a12      	ldr	r2, [pc, #72]	; (800693c <SPI_EndRxTxTransaction+0x50>)
 80068f2:	6815      	ldr	r5, [r2, #0]
 80068f4:	4a12      	ldr	r2, [pc, #72]	; (8006940 <SPI_EndRxTxTransaction+0x54>)
 80068f6:	fbb5 f5f2 	udiv	r5, r5, r2
 80068fa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80068fe:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006900:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006902:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006904:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8006908:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800690a:	d10b      	bne.n	8006924 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800690c:	460a      	mov	r2, r1
 800690e:	2180      	movs	r1, #128	; 0x80
 8006910:	f7ff ff6e 	bl	80067f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006914:	b178      	cbz	r0, 8006936 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006916:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006918:	f043 0320 	orr.w	r3, r3, #32
 800691c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800691e:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006920:	b003      	add	sp, #12
 8006922:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8006924:	9b01      	ldr	r3, [sp, #4]
 8006926:	b133      	cbz	r3, 8006936 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8006928:	9b01      	ldr	r3, [sp, #4]
 800692a:	3b01      	subs	r3, #1
 800692c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800692e:	6823      	ldr	r3, [r4, #0]
 8006930:	689b      	ldr	r3, [r3, #8]
 8006932:	061b      	lsls	r3, r3, #24
 8006934:	d4f6      	bmi.n	8006924 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8006936:	2000      	movs	r0, #0
 8006938:	e7f2      	b.n	8006920 <SPI_EndRxTxTransaction+0x34>
 800693a:	bf00      	nop
 800693c:	20000074 	.word	0x20000074
 8006940:	016e3600 	.word	0x016e3600

08006944 <HAL_SPI_Init>:
{
 8006944:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8006946:	4604      	mov	r4, r0
 8006948:	2800      	cmp	r0, #0
 800694a:	d055      	beq.n	80069f8 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800694c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800694e:	2b00      	cmp	r3, #0
 8006950:	d14e      	bne.n	80069f0 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006952:	6842      	ldr	r2, [r0, #4]
 8006954:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006958:	d000      	beq.n	800695c <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800695a:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800695c:	2300      	movs	r3, #0
 800695e:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006960:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006964:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006968:	b923      	cbnz	r3, 8006974 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800696a:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800696e:	4620      	mov	r0, r4
 8006970:	f7fb f93c 	bl	8001bec <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006974:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006976:	68a0      	ldr	r0, [r4, #8]
 8006978:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800697a:	2302      	movs	r3, #2
 800697c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8006980:	680b      	ldr	r3, [r1, #0]
 8006982:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006986:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006988:	6863      	ldr	r3, [r4, #4]
 800698a:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 800698e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8006992:	4303      	orrs	r3, r0
 8006994:	68e0      	ldr	r0, [r4, #12]
 8006996:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 800699a:	4303      	orrs	r3, r0
 800699c:	6920      	ldr	r0, [r4, #16]
 800699e:	f000 0002 	and.w	r0, r0, #2
 80069a2:	4303      	orrs	r3, r0
 80069a4:	6960      	ldr	r0, [r4, #20]
 80069a6:	f000 0001 	and.w	r0, r0, #1
 80069aa:	4303      	orrs	r3, r0
 80069ac:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80069b0:	4303      	orrs	r3, r0
 80069b2:	69e0      	ldr	r0, [r4, #28]
 80069b4:	f000 0038 	and.w	r0, r0, #56	; 0x38
 80069b8:	4303      	orrs	r3, r0
 80069ba:	6a20      	ldr	r0, [r4, #32]
 80069bc:	f000 0080 	and.w	r0, r0, #128	; 0x80
 80069c0:	4303      	orrs	r3, r0
 80069c2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80069c4:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 80069c8:	4303      	orrs	r3, r0
 80069ca:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80069cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80069ce:	0c12      	lsrs	r2, r2, #16
 80069d0:	f003 0310 	and.w	r3, r3, #16
 80069d4:	f002 0204 	and.w	r2, r2, #4
 80069d8:	431a      	orrs	r2, r3
 80069da:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80069dc:	69cb      	ldr	r3, [r1, #28]
 80069de:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80069e2:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80069e4:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80069e6:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80069e8:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80069ea:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80069ee:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80069f0:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80069f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80069f6:	e7b1      	b.n	800695c <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 80069f8:	2001      	movs	r0, #1
 80069fa:	e7f8      	b.n	80069ee <HAL_SPI_Init+0xaa>

080069fc <HAL_SPI_Transmit>:
{
 80069fc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006a00:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006a02:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8006a06:	2b01      	cmp	r3, #1
{
 8006a08:	4604      	mov	r4, r0
 8006a0a:	460d      	mov	r5, r1
 8006a0c:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8006a0e:	f000 80a1 	beq.w	8006b54 <HAL_SPI_Transmit+0x158>
 8006a12:	2301      	movs	r3, #1
 8006a14:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006a18:	f7fe fa5a 	bl	8004ed0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006a1c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006a20:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006a22:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006a24:	b2d8      	uxtb	r0, r3
 8006a26:	f040 8093 	bne.w	8006b50 <HAL_SPI_Transmit+0x154>
  if ((pData == NULL) || (Size == 0U))
 8006a2a:	2d00      	cmp	r5, #0
 8006a2c:	d05e      	beq.n	8006aec <HAL_SPI_Transmit+0xf0>
 8006a2e:	2f00      	cmp	r7, #0
 8006a30:	d05c      	beq.n	8006aec <HAL_SPI_Transmit+0xf0>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a32:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8006a34:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006a36:	2303      	movs	r3, #3
 8006a38:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a3c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a40:	f04f 0300 	mov.w	r3, #0
 8006a44:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8006a46:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8006a4a:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006a4c:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8006a4e:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8006a50:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 8006a52:	86a7      	strh	r7, [r4, #52]	; 0x34
    __HAL_SPI_DISABLE(hspi);
 8006a54:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a56:	d107      	bne.n	8006a68 <HAL_SPI_Transmit+0x6c>
    __HAL_SPI_DISABLE(hspi);
 8006a58:	681a      	ldr	r2, [r3, #0]
 8006a5a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006a5e:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006a60:	681a      	ldr	r2, [r3, #0]
 8006a62:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006a66:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a68:	681a      	ldr	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006a6a:	68e1      	ldr	r1, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a6c:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006a6e:	bf5e      	ittt	pl
 8006a70:	681a      	ldrpl	r2, [r3, #0]
 8006a72:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006a76:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006a78:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006a7c:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006a7e:	d141      	bne.n	8006b04 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006a80:	b10a      	cbz	r2, 8006a86 <HAL_SPI_Transmit+0x8a>
 8006a82:	2f01      	cmp	r7, #1
 8006a84:	d107      	bne.n	8006a96 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006a86:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006a8a:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006a8c:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006a8e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006a90:	3b01      	subs	r3, #1
 8006a92:	b29b      	uxth	r3, r3
 8006a94:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006a96:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006a98:	b29b      	uxth	r3, r3
 8006a9a:	b9a3      	cbnz	r3, 8006ac6 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006a9c:	4642      	mov	r2, r8
 8006a9e:	4631      	mov	r1, r6
 8006aa0:	4620      	mov	r0, r4
 8006aa2:	f7ff ff23 	bl	80068ec <SPI_EndRxTxTransaction>
 8006aa6:	2800      	cmp	r0, #0
 8006aa8:	d14f      	bne.n	8006b4a <HAL_SPI_Transmit+0x14e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006aaa:	68a3      	ldr	r3, [r4, #8]
 8006aac:	b933      	cbnz	r3, 8006abc <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006aae:	9301      	str	r3, [sp, #4]
 8006ab0:	6823      	ldr	r3, [r4, #0]
 8006ab2:	68da      	ldr	r2, [r3, #12]
 8006ab4:	9201      	str	r2, [sp, #4]
 8006ab6:	689b      	ldr	r3, [r3, #8]
 8006ab8:	9301      	str	r3, [sp, #4]
 8006aba:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006abc:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006abe:	3800      	subs	r0, #0
 8006ac0:	bf18      	it	ne
 8006ac2:	2001      	movne	r0, #1
error:
 8006ac4:	e012      	b.n	8006aec <HAL_SPI_Transmit+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006ac6:	6822      	ldr	r2, [r4, #0]
 8006ac8:	6893      	ldr	r3, [r2, #8]
 8006aca:	0798      	lsls	r0, r3, #30
 8006acc:	d505      	bpl.n	8006ada <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006ace:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006ad0:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006ad4:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006ad6:	6323      	str	r3, [r4, #48]	; 0x30
 8006ad8:	e7d9      	b.n	8006a8e <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006ada:	f7fe f9f9 	bl	8004ed0 <HAL_GetTick>
 8006ade:	eba0 0008 	sub.w	r0, r0, r8
 8006ae2:	42b0      	cmp	r0, r6
 8006ae4:	d30b      	bcc.n	8006afe <HAL_SPI_Transmit+0x102>
 8006ae6:	1c71      	adds	r1, r6, #1
 8006ae8:	d0d5      	beq.n	8006a96 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 8006aea:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006aec:	2301      	movs	r3, #1
 8006aee:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006af2:	2300      	movs	r3, #0
 8006af4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006af8:	b002      	add	sp, #8
 8006afa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006afe:	2e00      	cmp	r6, #0
 8006b00:	d1c9      	bne.n	8006a96 <HAL_SPI_Transmit+0x9a>
 8006b02:	e7f2      	b.n	8006aea <HAL_SPI_Transmit+0xee>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006b04:	b10a      	cbz	r2, 8006b0a <HAL_SPI_Transmit+0x10e>
 8006b06:	2f01      	cmp	r7, #1
 8006b08:	d108      	bne.n	8006b1c <HAL_SPI_Transmit+0x120>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006b0a:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006b0c:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006b0e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006b10:	3301      	adds	r3, #1
 8006b12:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006b14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006b16:	3b01      	subs	r3, #1
 8006b18:	b29b      	uxth	r3, r3
 8006b1a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006b1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006b1e:	b29b      	uxth	r3, r3
 8006b20:	2b00      	cmp	r3, #0
 8006b22:	d0bb      	beq.n	8006a9c <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006b24:	6823      	ldr	r3, [r4, #0]
 8006b26:	689a      	ldr	r2, [r3, #8]
 8006b28:	0792      	lsls	r2, r2, #30
 8006b2a:	d502      	bpl.n	8006b32 <HAL_SPI_Transmit+0x136>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006b2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006b2e:	7812      	ldrb	r2, [r2, #0]
 8006b30:	e7ec      	b.n	8006b0c <HAL_SPI_Transmit+0x110>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006b32:	f7fe f9cd 	bl	8004ed0 <HAL_GetTick>
 8006b36:	eba0 0008 	sub.w	r0, r0, r8
 8006b3a:	42b0      	cmp	r0, r6
 8006b3c:	d302      	bcc.n	8006b44 <HAL_SPI_Transmit+0x148>
 8006b3e:	1c73      	adds	r3, r6, #1
 8006b40:	d0ec      	beq.n	8006b1c <HAL_SPI_Transmit+0x120>
 8006b42:	e7d2      	b.n	8006aea <HAL_SPI_Transmit+0xee>
 8006b44:	2e00      	cmp	r6, #0
 8006b46:	d1e9      	bne.n	8006b1c <HAL_SPI_Transmit+0x120>
 8006b48:	e7cf      	b.n	8006aea <HAL_SPI_Transmit+0xee>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006b4a:	2320      	movs	r3, #32
 8006b4c:	6563      	str	r3, [r4, #84]	; 0x54
 8006b4e:	e7ac      	b.n	8006aaa <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8006b50:	2002      	movs	r0, #2
 8006b52:	e7cb      	b.n	8006aec <HAL_SPI_Transmit+0xf0>
  __HAL_LOCK(hspi);
 8006b54:	2002      	movs	r0, #2
 8006b56:	e7cf      	b.n	8006af8 <HAL_SPI_Transmit+0xfc>

08006b58 <HAL_SPI_TransmitReceive>:
{
 8006b58:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b5c:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006b5e:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8006b62:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8006b64:	2b01      	cmp	r3, #1
{
 8006b66:	4604      	mov	r4, r0
 8006b68:	460d      	mov	r5, r1
 8006b6a:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8006b6c:	f000 80e6 	beq.w	8006d3c <HAL_SPI_TransmitReceive+0x1e4>
 8006b70:	2301      	movs	r3, #1
 8006b72:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006b76:	f7fe f9ab 	bl	8004ed0 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006b7a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8006b7e:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006b80:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006b82:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8006b84:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006b86:	d00a      	beq.n	8006b9e <HAL_SPI_TransmitReceive+0x46>
 8006b88:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006b8c:	f040 80d4 	bne.w	8006d38 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006b90:	68a3      	ldr	r3, [r4, #8]
 8006b92:	2b00      	cmp	r3, #0
 8006b94:	f040 80d0 	bne.w	8006d38 <HAL_SPI_TransmitReceive+0x1e0>
 8006b98:	2904      	cmp	r1, #4
 8006b9a:	f040 80cd 	bne.w	8006d38 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006b9e:	2d00      	cmp	r5, #0
 8006ba0:	d040      	beq.n	8006c24 <HAL_SPI_TransmitReceive+0xcc>
 8006ba2:	f1b9 0f00 	cmp.w	r9, #0
 8006ba6:	d03d      	beq.n	8006c24 <HAL_SPI_TransmitReceive+0xcc>
 8006ba8:	2e00      	cmp	r6, #0
 8006baa:	d03b      	beq.n	8006c24 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006bac:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006bb0:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006bb4:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006bb6:	bf1c      	itt	ne
 8006bb8:	2305      	movne	r3, #5
 8006bba:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006bbe:	2300      	movs	r3, #0
 8006bc0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8006bc2:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006bc6:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006bc8:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8006bca:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006bcc:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006bce:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006bd0:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006bd2:	bf58      	it	pl
 8006bd4:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006bd6:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8006bd8:	bf58      	it	pl
 8006bda:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8006bde:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8006be0:	bf58      	it	pl
 8006be2:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006be4:	68e1      	ldr	r1, [r4, #12]
 8006be6:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8006bea:	d152      	bne.n	8006c92 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006bec:	b10a      	cbz	r2, 8006bf2 <HAL_SPI_TransmitReceive+0x9a>
 8006bee:	2e01      	cmp	r6, #1
 8006bf0:	d107      	bne.n	8006c02 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006bf2:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006bf6:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006bf8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006bfa:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006bfc:	3b01      	subs	r3, #1
 8006bfe:	b29b      	uxth	r3, r3
 8006c00:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006c02:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006c04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c06:	b29b      	uxth	r3, r3
 8006c08:	b973      	cbnz	r3, 8006c28 <HAL_SPI_TransmitReceive+0xd0>
 8006c0a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006c0c:	b29b      	uxth	r3, r3
 8006c0e:	b95b      	cbnz	r3, 8006c28 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006c10:	4642      	mov	r2, r8
 8006c12:	4639      	mov	r1, r7
 8006c14:	4620      	mov	r0, r4
 8006c16:	f7ff fe69 	bl	80068ec <SPI_EndRxTxTransaction>
 8006c1a:	2800      	cmp	r0, #0
 8006c1c:	f000 8081 	beq.w	8006d22 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006c20:	2320      	movs	r3, #32
 8006c22:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8006c24:	2001      	movs	r0, #1
 8006c26:	e02b      	b.n	8006c80 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006c28:	6821      	ldr	r1, [r4, #0]
 8006c2a:	688b      	ldr	r3, [r1, #8]
 8006c2c:	079e      	lsls	r6, r3, #30
 8006c2e:	d50d      	bpl.n	8006c4c <HAL_SPI_TransmitReceive+0xf4>
 8006c30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c32:	b29b      	uxth	r3, r3
 8006c34:	b153      	cbz	r3, 8006c4c <HAL_SPI_TransmitReceive+0xf4>
 8006c36:	b14d      	cbz	r5, 8006c4c <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006c38:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006c3a:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006c3e:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006c40:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006c42:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c44:	3b01      	subs	r3, #1
 8006c46:	b29b      	uxth	r3, r3
 8006c48:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006c4a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006c4c:	688a      	ldr	r2, [r1, #8]
 8006c4e:	f012 0201 	ands.w	r2, r2, #1
 8006c52:	d00c      	beq.n	8006c6e <HAL_SPI_TransmitReceive+0x116>
 8006c54:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006c56:	b29b      	uxth	r3, r3
 8006c58:	b14b      	cbz	r3, 8006c6e <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006c5a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006c5c:	68c9      	ldr	r1, [r1, #12]
 8006c5e:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006c62:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006c64:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006c66:	3b01      	subs	r3, #1
 8006c68:	b29b      	uxth	r3, r3
 8006c6a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006c6c:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006c6e:	f7fe f92f 	bl	8004ed0 <HAL_GetTick>
 8006c72:	eba0 0008 	sub.w	r0, r0, r8
 8006c76:	42b8      	cmp	r0, r7
 8006c78:	d3c4      	bcc.n	8006c04 <HAL_SPI_TransmitReceive+0xac>
 8006c7a:	1c78      	adds	r0, r7, #1
 8006c7c:	d0c2      	beq.n	8006c04 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8006c7e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006c80:	2301      	movs	r3, #1
 8006c82:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006c86:	2300      	movs	r3, #0
 8006c88:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006c8c:	b003      	add	sp, #12
 8006c8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006c92:	b10a      	cbz	r2, 8006c98 <HAL_SPI_TransmitReceive+0x140>
 8006c94:	2e01      	cmp	r6, #1
 8006c96:	d108      	bne.n	8006caa <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006c98:	782a      	ldrb	r2, [r5, #0]
 8006c9a:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006c9c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006c9e:	3301      	adds	r3, #1
 8006ca0:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006ca2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006ca4:	3b01      	subs	r3, #1
 8006ca6:	b29b      	uxth	r3, r3
 8006ca8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006caa:	2501      	movs	r5, #1
 8006cac:	e02d      	b.n	8006d0a <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006cae:	6822      	ldr	r2, [r4, #0]
 8006cb0:	6893      	ldr	r3, [r2, #8]
 8006cb2:	0799      	lsls	r1, r3, #30
 8006cb4:	d50e      	bpl.n	8006cd4 <HAL_SPI_TransmitReceive+0x17c>
 8006cb6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006cb8:	b29b      	uxth	r3, r3
 8006cba:	b15b      	cbz	r3, 8006cd4 <HAL_SPI_TransmitReceive+0x17c>
 8006cbc:	b155      	cbz	r5, 8006cd4 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006cbe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006cc0:	781b      	ldrb	r3, [r3, #0]
 8006cc2:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006cc4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006cc6:	3301      	adds	r3, #1
 8006cc8:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006cca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006ccc:	3b01      	subs	r3, #1
 8006cce:	b29b      	uxth	r3, r3
 8006cd0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006cd2:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006cd4:	6822      	ldr	r2, [r4, #0]
 8006cd6:	6891      	ldr	r1, [r2, #8]
 8006cd8:	f011 0101 	ands.w	r1, r1, #1
 8006cdc:	d00d      	beq.n	8006cfa <HAL_SPI_TransmitReceive+0x1a2>
 8006cde:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006ce0:	b29b      	uxth	r3, r3
 8006ce2:	b153      	cbz	r3, 8006cfa <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006ce4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006ce6:	68d2      	ldr	r2, [r2, #12]
 8006ce8:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006cea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006cec:	3301      	adds	r3, #1
 8006cee:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006cf0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006cf2:	3b01      	subs	r3, #1
 8006cf4:	b29b      	uxth	r3, r3
 8006cf6:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006cf8:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006cfa:	f7fe f8e9 	bl	8004ed0 <HAL_GetTick>
 8006cfe:	eba0 0008 	sub.w	r0, r0, r8
 8006d02:	42b8      	cmp	r0, r7
 8006d04:	d30a      	bcc.n	8006d1c <HAL_SPI_TransmitReceive+0x1c4>
 8006d06:	1c7b      	adds	r3, r7, #1
 8006d08:	d1b9      	bne.n	8006c7e <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006d0a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006d0c:	b29b      	uxth	r3, r3
 8006d0e:	2b00      	cmp	r3, #0
 8006d10:	d1cd      	bne.n	8006cae <HAL_SPI_TransmitReceive+0x156>
 8006d12:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006d14:	b29b      	uxth	r3, r3
 8006d16:	2b00      	cmp	r3, #0
 8006d18:	d1c9      	bne.n	8006cae <HAL_SPI_TransmitReceive+0x156>
 8006d1a:	e779      	b.n	8006c10 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006d1c:	2f00      	cmp	r7, #0
 8006d1e:	d1f4      	bne.n	8006d0a <HAL_SPI_TransmitReceive+0x1b2>
 8006d20:	e7ad      	b.n	8006c7e <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006d22:	68a3      	ldr	r3, [r4, #8]
 8006d24:	2b00      	cmp	r3, #0
 8006d26:	d1ab      	bne.n	8006c80 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006d28:	6823      	ldr	r3, [r4, #0]
 8006d2a:	9001      	str	r0, [sp, #4]
 8006d2c:	68da      	ldr	r2, [r3, #12]
 8006d2e:	9201      	str	r2, [sp, #4]
 8006d30:	689b      	ldr	r3, [r3, #8]
 8006d32:	9301      	str	r3, [sp, #4]
 8006d34:	9b01      	ldr	r3, [sp, #4]
 8006d36:	e7a3      	b.n	8006c80 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8006d38:	2002      	movs	r0, #2
 8006d3a:	e7a1      	b.n	8006c80 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8006d3c:	2002      	movs	r0, #2
 8006d3e:	e7a5      	b.n	8006c8c <HAL_SPI_TransmitReceive+0x134>

08006d40 <HAL_SPI_Receive>:
{
 8006d40:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006d44:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006d46:	6843      	ldr	r3, [r0, #4]
 8006d48:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8006d4c:	4604      	mov	r4, r0
 8006d4e:	4689      	mov	r9, r1
 8006d50:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006d52:	d10c      	bne.n	8006d6e <HAL_SPI_Receive+0x2e>
 8006d54:	6883      	ldr	r3, [r0, #8]
 8006d56:	b953      	cbnz	r3, 8006d6e <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006d58:	2304      	movs	r3, #4
 8006d5a:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006d5e:	4613      	mov	r3, r2
 8006d60:	9500      	str	r5, [sp, #0]
 8006d62:	460a      	mov	r2, r1
 8006d64:	f7ff fef8 	bl	8006b58 <HAL_SPI_TransmitReceive>
}
 8006d68:	b003      	add	sp, #12
 8006d6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8006d6e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8006d72:	2b01      	cmp	r3, #1
 8006d74:	f000 8086 	beq.w	8006e84 <HAL_SPI_Receive+0x144>
 8006d78:	2301      	movs	r3, #1
 8006d7a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006d7e:	f7fe f8a7 	bl	8004ed0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006d82:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006d86:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006d88:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006d8a:	b2d8      	uxtb	r0, r3
 8006d8c:	d178      	bne.n	8006e80 <HAL_SPI_Receive+0x140>
  if ((pData == NULL) || (Size == 0U))
 8006d8e:	f1b9 0f00 	cmp.w	r9, #0
 8006d92:	d05c      	beq.n	8006e4e <HAL_SPI_Receive+0x10e>
 8006d94:	2f00      	cmp	r7, #0
 8006d96:	d05a      	beq.n	8006e4e <HAL_SPI_Receive+0x10e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006d98:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006d9a:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006d9e:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006da0:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006da2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006da6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 8006daa:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006dae:	6566      	str	r6, [r4, #84]	; 0x54
    __HAL_SPI_DISABLE(hspi);
 8006db0:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006db2:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8006db4:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006db6:	6326      	str	r6, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8006db8:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8006dba:	86e6      	strh	r6, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006dbc:	d107      	bne.n	8006dce <HAL_SPI_Receive+0x8e>
    __HAL_SPI_DISABLE(hspi);
 8006dbe:	681a      	ldr	r2, [r3, #0]
 8006dc0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006dc4:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006dc6:	681a      	ldr	r2, [r3, #0]
 8006dc8:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8006dcc:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006dce:	681a      	ldr	r2, [r3, #0]
 8006dd0:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006dd2:	bf5e      	ittt	pl
 8006dd4:	681a      	ldrpl	r2, [r3, #0]
 8006dd6:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006dda:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006ddc:	68e3      	ldr	r3, [r4, #12]
 8006dde:	b1f3      	cbz	r3, 8006e1e <HAL_SPI_Receive+0xde>
    while (hspi->RxXferCount > 0U)
 8006de0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006de2:	b29b      	uxth	r3, r3
 8006de4:	b1fb      	cbz	r3, 8006e26 <HAL_SPI_Receive+0xe6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006de6:	6823      	ldr	r3, [r4, #0]
 8006de8:	689a      	ldr	r2, [r3, #8]
 8006dea:	07d2      	lsls	r2, r2, #31
 8006dec:	d539      	bpl.n	8006e62 <HAL_SPI_Receive+0x122>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006dee:	68da      	ldr	r2, [r3, #12]
 8006df0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006df2:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006df6:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006df8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006dfa:	3b01      	subs	r3, #1
 8006dfc:	b29b      	uxth	r3, r3
 8006dfe:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8006e00:	e7ee      	b.n	8006de0 <HAL_SPI_Receive+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006e02:	6823      	ldr	r3, [r4, #0]
 8006e04:	689a      	ldr	r2, [r3, #8]
 8006e06:	07d0      	lsls	r0, r2, #31
 8006e08:	d518      	bpl.n	8006e3c <HAL_SPI_Receive+0xfc>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006e0a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006e0c:	7b1b      	ldrb	r3, [r3, #12]
 8006e0e:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006e10:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006e12:	3301      	adds	r3, #1
 8006e14:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006e16:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006e18:	3b01      	subs	r3, #1
 8006e1a:	b29b      	uxth	r3, r3
 8006e1c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8006e1e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006e20:	b29b      	uxth	r3, r3
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	d1ed      	bne.n	8006e02 <HAL_SPI_Receive+0xc2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006e26:	4642      	mov	r2, r8
 8006e28:	4629      	mov	r1, r5
 8006e2a:	4620      	mov	r0, r4
 8006e2c:	f7ff fd34 	bl	8006898 <SPI_EndRxTransaction>
 8006e30:	bb18      	cbnz	r0, 8006e7a <HAL_SPI_Receive+0x13a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006e32:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006e34:	3800      	subs	r0, #0
 8006e36:	bf18      	it	ne
 8006e38:	2001      	movne	r0, #1
error :
 8006e3a:	e008      	b.n	8006e4e <HAL_SPI_Receive+0x10e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006e3c:	f7fe f848 	bl	8004ed0 <HAL_GetTick>
 8006e40:	eba0 0008 	sub.w	r0, r0, r8
 8006e44:	42a8      	cmp	r0, r5
 8006e46:	d309      	bcc.n	8006e5c <HAL_SPI_Receive+0x11c>
 8006e48:	1c69      	adds	r1, r5, #1
 8006e4a:	d0e8      	beq.n	8006e1e <HAL_SPI_Receive+0xde>
          errorcode = HAL_TIMEOUT;
 8006e4c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006e4e:	2301      	movs	r3, #1
 8006e50:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006e54:	2300      	movs	r3, #0
 8006e56:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8006e5a:	e785      	b.n	8006d68 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006e5c:	2d00      	cmp	r5, #0
 8006e5e:	d1de      	bne.n	8006e1e <HAL_SPI_Receive+0xde>
 8006e60:	e7f4      	b.n	8006e4c <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006e62:	f7fe f835 	bl	8004ed0 <HAL_GetTick>
 8006e66:	eba0 0008 	sub.w	r0, r0, r8
 8006e6a:	42a8      	cmp	r0, r5
 8006e6c:	d302      	bcc.n	8006e74 <HAL_SPI_Receive+0x134>
 8006e6e:	1c6b      	adds	r3, r5, #1
 8006e70:	d0b6      	beq.n	8006de0 <HAL_SPI_Receive+0xa0>
 8006e72:	e7eb      	b.n	8006e4c <HAL_SPI_Receive+0x10c>
 8006e74:	2d00      	cmp	r5, #0
 8006e76:	d1b3      	bne.n	8006de0 <HAL_SPI_Receive+0xa0>
 8006e78:	e7e8      	b.n	8006e4c <HAL_SPI_Receive+0x10c>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006e7a:	2320      	movs	r3, #32
 8006e7c:	6563      	str	r3, [r4, #84]	; 0x54
 8006e7e:	e7d8      	b.n	8006e32 <HAL_SPI_Receive+0xf2>
    errorcode = HAL_BUSY;
 8006e80:	2002      	movs	r0, #2
 8006e82:	e7e4      	b.n	8006e4e <HAL_SPI_Receive+0x10e>
  __HAL_LOCK(hspi);
 8006e84:	2002      	movs	r0, #2
 8006e86:	e76f      	b.n	8006d68 <HAL_SPI_Receive+0x28>

08006e88 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006e88:	4770      	bx	lr
	...

08006e8c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006e8c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e90:	2b01      	cmp	r3, #1
 8006e92:	d130      	bne.n	8006ef6 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006e94:	2302      	movs	r3, #2
 8006e96:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006e9a:	6803      	ldr	r3, [r0, #0]
 8006e9c:	68da      	ldr	r2, [r3, #12]
 8006e9e:	f042 0201 	orr.w	r2, r2, #1
 8006ea2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006ea4:	4a15      	ldr	r2, [pc, #84]	; (8006efc <HAL_TIM_Base_Start_IT+0x70>)
 8006ea6:	4293      	cmp	r3, r2
 8006ea8:	d01a      	beq.n	8006ee0 <HAL_TIM_Base_Start_IT+0x54>
 8006eaa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006eae:	d017      	beq.n	8006ee0 <HAL_TIM_Base_Start_IT+0x54>
 8006eb0:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006eb4:	4293      	cmp	r3, r2
 8006eb6:	d013      	beq.n	8006ee0 <HAL_TIM_Base_Start_IT+0x54>
 8006eb8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ebc:	4293      	cmp	r3, r2
 8006ebe:	d00f      	beq.n	8006ee0 <HAL_TIM_Base_Start_IT+0x54>
 8006ec0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ec4:	4293      	cmp	r3, r2
 8006ec6:	d00b      	beq.n	8006ee0 <HAL_TIM_Base_Start_IT+0x54>
 8006ec8:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006ecc:	4293      	cmp	r3, r2
 8006ece:	d007      	beq.n	8006ee0 <HAL_TIM_Base_Start_IT+0x54>
 8006ed0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8006ed4:	4293      	cmp	r3, r2
 8006ed6:	d003      	beq.n	8006ee0 <HAL_TIM_Base_Start_IT+0x54>
 8006ed8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006edc:	4293      	cmp	r3, r2
 8006ede:	d104      	bne.n	8006eea <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006ee0:	689a      	ldr	r2, [r3, #8]
 8006ee2:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006ee6:	2a06      	cmp	r2, #6
 8006ee8:	d003      	beq.n	8006ef2 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006eea:	681a      	ldr	r2, [r3, #0]
 8006eec:	f042 0201 	orr.w	r2, r2, #1
 8006ef0:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006ef2:	2000      	movs	r0, #0
}
 8006ef4:	4770      	bx	lr
    return HAL_ERROR;
 8006ef6:	2001      	movs	r0, #1
 8006ef8:	4770      	bx	lr
 8006efa:	bf00      	nop
 8006efc:	40010000 	.word	0x40010000

08006f00 <HAL_TIM_OC_DelayElapsedCallback>:
 8006f00:	4770      	bx	lr

08006f02 <HAL_TIM_IC_CaptureCallback>:
 8006f02:	4770      	bx	lr

08006f04 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006f04:	4770      	bx	lr

08006f06 <HAL_TIM_TriggerCallback>:
 8006f06:	4770      	bx	lr

08006f08 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006f08:	6803      	ldr	r3, [r0, #0]
 8006f0a:	691a      	ldr	r2, [r3, #16]
 8006f0c:	0791      	lsls	r1, r2, #30
{
 8006f0e:	b510      	push	{r4, lr}
 8006f10:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006f12:	d50e      	bpl.n	8006f32 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006f14:	68da      	ldr	r2, [r3, #12]
 8006f16:	0792      	lsls	r2, r2, #30
 8006f18:	d50b      	bpl.n	8006f32 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006f1a:	f06f 0202 	mvn.w	r2, #2
 8006f1e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006f20:	2201      	movs	r2, #1
 8006f22:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006f24:	699b      	ldr	r3, [r3, #24]
 8006f26:	079b      	lsls	r3, r3, #30
 8006f28:	d077      	beq.n	800701a <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006f2a:	f7ff ffea 	bl	8006f02 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f2e:	2300      	movs	r3, #0
 8006f30:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006f32:	6823      	ldr	r3, [r4, #0]
 8006f34:	691a      	ldr	r2, [r3, #16]
 8006f36:	0750      	lsls	r0, r2, #29
 8006f38:	d510      	bpl.n	8006f5c <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006f3a:	68da      	ldr	r2, [r3, #12]
 8006f3c:	0751      	lsls	r1, r2, #29
 8006f3e:	d50d      	bpl.n	8006f5c <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006f40:	f06f 0204 	mvn.w	r2, #4
 8006f44:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006f46:	2202      	movs	r2, #2
 8006f48:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006f4a:	699b      	ldr	r3, [r3, #24]
 8006f4c:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006f50:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006f52:	d068      	beq.n	8007026 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006f54:	f7ff ffd5 	bl	8006f02 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f58:	2300      	movs	r3, #0
 8006f5a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006f5c:	6823      	ldr	r3, [r4, #0]
 8006f5e:	691a      	ldr	r2, [r3, #16]
 8006f60:	0712      	lsls	r2, r2, #28
 8006f62:	d50f      	bpl.n	8006f84 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006f64:	68da      	ldr	r2, [r3, #12]
 8006f66:	0710      	lsls	r0, r2, #28
 8006f68:	d50c      	bpl.n	8006f84 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006f6a:	f06f 0208 	mvn.w	r2, #8
 8006f6e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006f70:	2204      	movs	r2, #4
 8006f72:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006f74:	69db      	ldr	r3, [r3, #28]
 8006f76:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006f78:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006f7a:	d05a      	beq.n	8007032 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006f7c:	f7ff ffc1 	bl	8006f02 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f80:	2300      	movs	r3, #0
 8006f82:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006f84:	6823      	ldr	r3, [r4, #0]
 8006f86:	691a      	ldr	r2, [r3, #16]
 8006f88:	06d2      	lsls	r2, r2, #27
 8006f8a:	d510      	bpl.n	8006fae <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006f8c:	68da      	ldr	r2, [r3, #12]
 8006f8e:	06d0      	lsls	r0, r2, #27
 8006f90:	d50d      	bpl.n	8006fae <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006f92:	f06f 0210 	mvn.w	r2, #16
 8006f96:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006f98:	2208      	movs	r2, #8
 8006f9a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006f9c:	69db      	ldr	r3, [r3, #28]
 8006f9e:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006fa2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006fa4:	d04b      	beq.n	800703e <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006fa6:	f7ff ffac 	bl	8006f02 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006faa:	2300      	movs	r3, #0
 8006fac:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006fae:	6823      	ldr	r3, [r4, #0]
 8006fb0:	691a      	ldr	r2, [r3, #16]
 8006fb2:	07d1      	lsls	r1, r2, #31
 8006fb4:	d508      	bpl.n	8006fc8 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006fb6:	68da      	ldr	r2, [r3, #12]
 8006fb8:	07d2      	lsls	r2, r2, #31
 8006fba:	d505      	bpl.n	8006fc8 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006fbc:	f06f 0201 	mvn.w	r2, #1
 8006fc0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006fc2:	4620      	mov	r0, r4
 8006fc4:	f7fa fc74 	bl	80018b0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006fc8:	6823      	ldr	r3, [r4, #0]
 8006fca:	691a      	ldr	r2, [r3, #16]
 8006fcc:	0610      	lsls	r0, r2, #24
 8006fce:	d508      	bpl.n	8006fe2 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006fd0:	68da      	ldr	r2, [r3, #12]
 8006fd2:	0611      	lsls	r1, r2, #24
 8006fd4:	d505      	bpl.n	8006fe2 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006fd6:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006fda:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006fdc:	4620      	mov	r0, r4
 8006fde:	f000 f8c8 	bl	8007172 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006fe2:	6823      	ldr	r3, [r4, #0]
 8006fe4:	691a      	ldr	r2, [r3, #16]
 8006fe6:	0652      	lsls	r2, r2, #25
 8006fe8:	d508      	bpl.n	8006ffc <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006fea:	68da      	ldr	r2, [r3, #12]
 8006fec:	0650      	lsls	r0, r2, #25
 8006fee:	d505      	bpl.n	8006ffc <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006ff0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006ff4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006ff6:	4620      	mov	r0, r4
 8006ff8:	f7ff ff85 	bl	8006f06 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006ffc:	6823      	ldr	r3, [r4, #0]
 8006ffe:	691a      	ldr	r2, [r3, #16]
 8007000:	0691      	lsls	r1, r2, #26
 8007002:	d522      	bpl.n	800704a <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007004:	68da      	ldr	r2, [r3, #12]
 8007006:	0692      	lsls	r2, r2, #26
 8007008:	d51f      	bpl.n	800704a <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800700a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800700e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007010:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007016:	f000 b8ab 	b.w	8007170 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800701a:	f7ff ff71 	bl	8006f00 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800701e:	4620      	mov	r0, r4
 8007020:	f7ff ff70 	bl	8006f04 <HAL_TIM_PWM_PulseFinishedCallback>
 8007024:	e783      	b.n	8006f2e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007026:	f7ff ff6b 	bl	8006f00 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800702a:	4620      	mov	r0, r4
 800702c:	f7ff ff6a 	bl	8006f04 <HAL_TIM_PWM_PulseFinishedCallback>
 8007030:	e792      	b.n	8006f58 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007032:	f7ff ff65 	bl	8006f00 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007036:	4620      	mov	r0, r4
 8007038:	f7ff ff64 	bl	8006f04 <HAL_TIM_PWM_PulseFinishedCallback>
 800703c:	e7a0      	b.n	8006f80 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800703e:	f7ff ff5f 	bl	8006f00 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007042:	4620      	mov	r0, r4
 8007044:	f7ff ff5e 	bl	8006f04 <HAL_TIM_PWM_PulseFinishedCallback>
 8007048:	e7af      	b.n	8006faa <HAL_TIM_IRQHandler+0xa2>
}
 800704a:	bd10      	pop	{r4, pc}

0800704c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800704c:	4a30      	ldr	r2, [pc, #192]	; (8007110 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800704e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007050:	4290      	cmp	r0, r2
 8007052:	d012      	beq.n	800707a <TIM_Base_SetConfig+0x2e>
 8007054:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007058:	d00f      	beq.n	800707a <TIM_Base_SetConfig+0x2e>
 800705a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800705e:	4290      	cmp	r0, r2
 8007060:	d00b      	beq.n	800707a <TIM_Base_SetConfig+0x2e>
 8007062:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007066:	4290      	cmp	r0, r2
 8007068:	d007      	beq.n	800707a <TIM_Base_SetConfig+0x2e>
 800706a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800706e:	4290      	cmp	r0, r2
 8007070:	d003      	beq.n	800707a <TIM_Base_SetConfig+0x2e>
 8007072:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007076:	4290      	cmp	r0, r2
 8007078:	d119      	bne.n	80070ae <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800707a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800707c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007080:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007082:	4a23      	ldr	r2, [pc, #140]	; (8007110 <TIM_Base_SetConfig+0xc4>)
 8007084:	4290      	cmp	r0, r2
 8007086:	d029      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 8007088:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800708c:	d026      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 800708e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007092:	4290      	cmp	r0, r2
 8007094:	d022      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 8007096:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800709a:	4290      	cmp	r0, r2
 800709c:	d01e      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 800709e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80070a2:	4290      	cmp	r0, r2
 80070a4:	d01a      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 80070a6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80070aa:	4290      	cmp	r0, r2
 80070ac:	d016      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 80070ae:	4a19      	ldr	r2, [pc, #100]	; (8007114 <TIM_Base_SetConfig+0xc8>)
 80070b0:	4290      	cmp	r0, r2
 80070b2:	d013      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 80070b4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80070b8:	4290      	cmp	r0, r2
 80070ba:	d00f      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 80070bc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80070c0:	4290      	cmp	r0, r2
 80070c2:	d00b      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 80070c4:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80070c8:	4290      	cmp	r0, r2
 80070ca:	d007      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 80070cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80070d0:	4290      	cmp	r0, r2
 80070d2:	d003      	beq.n	80070dc <TIM_Base_SetConfig+0x90>
 80070d4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80070d8:	4290      	cmp	r0, r2
 80070da:	d103      	bne.n	80070e4 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80070dc:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80070de:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80070e2:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80070e4:	694a      	ldr	r2, [r1, #20]
 80070e6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80070ea:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80070ec:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80070ee:	688b      	ldr	r3, [r1, #8]
 80070f0:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80070f2:	680b      	ldr	r3, [r1, #0]
 80070f4:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80070f6:	4b06      	ldr	r3, [pc, #24]	; (8007110 <TIM_Base_SetConfig+0xc4>)
 80070f8:	4298      	cmp	r0, r3
 80070fa:	d003      	beq.n	8007104 <TIM_Base_SetConfig+0xb8>
 80070fc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007100:	4298      	cmp	r0, r3
 8007102:	d101      	bne.n	8007108 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007104:	690b      	ldr	r3, [r1, #16]
 8007106:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007108:	2301      	movs	r3, #1
 800710a:	6143      	str	r3, [r0, #20]
}
 800710c:	4770      	bx	lr
 800710e:	bf00      	nop
 8007110:	40010000 	.word	0x40010000
 8007114:	40014000 	.word	0x40014000

08007118 <HAL_TIM_Base_Init>:
{
 8007118:	b510      	push	{r4, lr}
  if (htim == NULL)
 800711a:	4604      	mov	r4, r0
 800711c:	b330      	cbz	r0, 800716c <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800711e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007122:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007126:	b91b      	cbnz	r3, 8007130 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007128:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800712c:	f7ff feac 	bl	8006e88 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007130:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007132:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007134:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007138:	1d21      	adds	r1, r4, #4
 800713a:	f7ff ff87 	bl	800704c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800713e:	2301      	movs	r3, #1
 8007140:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8007144:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007146:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800714a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800714e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007152:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007156:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800715a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800715e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8007162:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8007166:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800716a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800716c:	2001      	movs	r0, #1
 800716e:	e7fc      	b.n	800716a <HAL_TIM_Base_Init+0x52>

08007170 <HAL_TIMEx_CommutCallback>:
 8007170:	4770      	bx	lr

08007172 <HAL_TIMEx_BreakCallback>:
 8007172:	4770      	bx	lr

08007174 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007174:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007178:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800717c:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800717e:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8007182:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8007186:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800718a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 800718e:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007190:	b9a2      	cbnz	r2, 80071bc <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007192:	ea43 0209 	orr.w	r2, r3, r9
 8007196:	432a      	orrs	r2, r5
 8007198:	ea42 0308 	orr.w	r3, r2, r8
 800719c:	6801      	ldr	r1, [r0, #0]
 800719e:	ea43 030e 	orr.w	r3, r3, lr
 80071a2:	ea43 030c 	orr.w	r3, r3, ip
 80071a6:	433b      	orrs	r3, r7
 80071a8:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 80071ac:	4333      	orrs	r3, r6
 80071ae:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 80071b2:	430b      	orrs	r3, r1
 80071b4:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 80071b6:	2000      	movs	r0, #0
 80071b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80071bc:	6802      	ldr	r2, [r0, #0]
 80071be:	ea43 0309 	orr.w	r3, r3, r9
 80071c2:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 80071c6:	4313      	orrs	r3, r2
 80071c8:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 80071ca:	ea45 0308 	orr.w	r3, r5, r8
 80071ce:	6842      	ldr	r2, [r0, #4]
 80071d0:	ea43 030e 	orr.w	r3, r3, lr
 80071d4:	ea43 030c 	orr.w	r3, r3, ip
 80071d8:	433b      	orrs	r3, r7
 80071da:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 80071de:	4333      	orrs	r3, r6
 80071e0:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 80071e4:	4313      	orrs	r3, r2
 80071e6:	6043      	str	r3, [r0, #4]
 80071e8:	e7e5      	b.n	80071b6 <FMC_SDRAM_Init+0x42>

080071ea <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80071ea:	68cb      	ldr	r3, [r1, #12]
 80071ec:	f103 3cff 	add.w	ip, r3, #4294967295
 80071f0:	694b      	ldr	r3, [r1, #20]
{
 80071f2:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80071f4:	680f      	ldr	r7, [r1, #0]
 80071f6:	684c      	ldr	r4, [r1, #4]
 80071f8:	688e      	ldr	r6, [r1, #8]
 80071fa:	690d      	ldr	r5, [r1, #16]
 80071fc:	6989      	ldr	r1, [r1, #24]
 80071fe:	3b01      	subs	r3, #1
 8007200:	051b      	lsls	r3, r3, #20
 8007202:	3c01      	subs	r4, #1
 8007204:	3e01      	subs	r6, #1
 8007206:	3d01      	subs	r5, #1
 8007208:	3901      	subs	r1, #1
 800720a:	3f01      	subs	r7, #1
 800720c:	0124      	lsls	r4, r4, #4
 800720e:	0236      	lsls	r6, r6, #8
 8007210:	042d      	lsls	r5, r5, #16
 8007212:	0609      	lsls	r1, r1, #24
 8007214:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007218:	b95a      	cbnz	r2, 8007232 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800721a:	433b      	orrs	r3, r7
 800721c:	4323      	orrs	r3, r4
 800721e:	6882      	ldr	r2, [r0, #8]
 8007220:	4333      	orrs	r3, r6
 8007222:	432b      	orrs	r3, r5
 8007224:	430b      	orrs	r3, r1
 8007226:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800722a:	4313      	orrs	r3, r2
 800722c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800722e:	2000      	movs	r0, #0
 8007230:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007232:	6882      	ldr	r2, [r0, #8]
 8007234:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007238:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800723c:	431a      	orrs	r2, r3
 800723e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007240:	ea44 0306 	orr.w	r3, r4, r6
 8007244:	68c2      	ldr	r2, [r0, #12]
 8007246:	433b      	orrs	r3, r7
 8007248:	432b      	orrs	r3, r5
 800724a:	430b      	orrs	r3, r1
 800724c:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8007250:	4313      	orrs	r3, r2
 8007252:	60c3      	str	r3, [r0, #12]
 8007254:	e7eb      	b.n	800722e <FMC_SDRAM_Timing_Init+0x44>

08007256 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007256:	b570      	push	{r4, r5, r6, lr}
 8007258:	4604      	mov	r4, r0
 800725a:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800725c:	6902      	ldr	r2, [r0, #16]
 800725e:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007262:	4303      	orrs	r3, r0
 8007264:	68c8      	ldr	r0, [r1, #12]
 8007266:	0d92      	lsrs	r2, r2, #22
 8007268:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800726c:	0592      	lsls	r2, r2, #22
 800726e:	4313      	orrs	r3, r2
 8007270:	688a      	ldr	r2, [r1, #8]
 8007272:	3a01      	subs	r2, #1
 8007274:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007278:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800727a:	f7fd fe29 	bl	8004ed0 <HAL_GetTick>
 800727e:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007280:	69a3      	ldr	r3, [r4, #24]
 8007282:	f013 0320 	ands.w	r3, r3, #32
 8007286:	d101      	bne.n	800728c <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8007288:	4618      	mov	r0, r3
 800728a:	e003      	b.n	8007294 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800728c:	1c6b      	adds	r3, r5, #1
 800728e:	d0f7      	beq.n	8007280 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007290:	b90d      	cbnz	r5, 8007296 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8007292:	2003      	movs	r0, #3
}
 8007294:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007296:	f7fd fe1b 	bl	8004ed0 <HAL_GetTick>
 800729a:	1b80      	subs	r0, r0, r6
 800729c:	42a8      	cmp	r0, r5
 800729e:	d9ef      	bls.n	8007280 <FMC_SDRAM_SendCommand+0x2a>
 80072a0:	e7f7      	b.n	8007292 <FMC_SDRAM_SendCommand+0x3c>

080072a2 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80072a2:	6943      	ldr	r3, [r0, #20]
 80072a4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80072a8:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 80072ac:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80072b0:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 80072b2:	2000      	movs	r0, #0
 80072b4:	4770      	bx	lr

080072b6 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80072b6:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80072b8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80072bc:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80072be:	f001 fe09 	bl	8008ed4 <xTaskGetSchedulerState>
 80072c2:	2801      	cmp	r0, #1
 80072c4:	d003      	beq.n	80072ce <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 80072c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80072ca:	f000 bbdb 	b.w	8007a84 <xPortSysTickHandler>
}
 80072ce:	bd08      	pop	{r3, pc}

080072d0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80072d0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80072d4:	b92b      	cbnz	r3, 80072e2 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 80072d6:	4b06      	ldr	r3, [pc, #24]	; (80072f0 <osKernelInitialize+0x20>)
 80072d8:	6818      	ldr	r0, [r3, #0]
 80072da:	b928      	cbnz	r0, 80072e8 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80072dc:	2201      	movs	r2, #1
 80072de:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80072e0:	4770      	bx	lr
    stat = osErrorISR;
 80072e2:	f06f 0005 	mvn.w	r0, #5
 80072e6:	4770      	bx	lr
    } else {
      stat = osError;
 80072e8:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80072ec:	4770      	bx	lr
 80072ee:	bf00      	nop
 80072f0:	20006c50 	.word	0x20006c50

080072f4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80072f4:	b510      	push	{r4, lr}
 80072f6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80072fa:	b95c      	cbnz	r4, 8007314 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 80072fc:	4b08      	ldr	r3, [pc, #32]	; (8007320 <osKernelStart+0x2c>)
 80072fe:	681a      	ldr	r2, [r3, #0]
 8007300:	2a01      	cmp	r2, #1
 8007302:	d10a      	bne.n	800731a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007304:	4a07      	ldr	r2, [pc, #28]	; (8007324 <osKernelStart+0x30>)
 8007306:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007308:	2202      	movs	r2, #2
 800730a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800730c:	f001 fb5c 	bl	80089c8 <vTaskStartScheduler>
      stat = osOK;
 8007310:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007312:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007314:	f06f 0005 	mvn.w	r0, #5
 8007318:	e7fb      	b.n	8007312 <osKernelStart+0x1e>
      stat = osError;
 800731a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800731e:	e7f8      	b.n	8007312 <osKernelStart+0x1e>
 8007320:	20006c50 	.word	0x20006c50
 8007324:	e000ed00 	.word	0xe000ed00

08007328 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007328:	b5f0      	push	{r4, r5, r6, r7, lr}
 800732a:	b087      	sub	sp, #28
 800732c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800732e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007330:	460b      	mov	r3, r1
  hTask = NULL;
 8007332:	9205      	str	r2, [sp, #20]
 8007334:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007338:	b9d2      	cbnz	r2, 8007370 <osThreadNew+0x48>
 800733a:	b1c8      	cbz	r0, 8007370 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800733c:	2c00      	cmp	r4, #0
 800733e:	d02f      	beq.n	80073a0 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007340:	69a5      	ldr	r5, [r4, #24]
 8007342:	2d00      	cmp	r5, #0
 8007344:	bf08      	it	eq
 8007346:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007348:	1e69      	subs	r1, r5, #1
 800734a:	2937      	cmp	r1, #55	; 0x37
 800734c:	46ac      	mov	ip, r5
 800734e:	d82b      	bhi.n	80073a8 <osThreadNew+0x80>
 8007350:	6861      	ldr	r1, [r4, #4]
 8007352:	07c9      	lsls	r1, r1, #31
 8007354:	d428      	bmi.n	80073a8 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007356:	6966      	ldr	r6, [r4, #20]
 8007358:	b16e      	cbz	r6, 8007376 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800735a:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800735c:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007360:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007362:	b157      	cbz	r7, 800737a <osThreadNew+0x52>
 8007364:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8007368:	d902      	bls.n	8007370 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800736a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800736c:	b104      	cbz	r4, 8007370 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800736e:	b9ee      	cbnz	r6, 80073ac <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007370:	9805      	ldr	r0, [sp, #20]
}
 8007372:	b007      	add	sp, #28
 8007374:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007376:	2280      	movs	r2, #128	; 0x80
 8007378:	e7f0      	b.n	800735c <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800737a:	f1be 0f00 	cmp.w	lr, #0
 800737e:	d1f7      	bne.n	8007370 <osThreadNew+0x48>
      if (mem == 0) {
 8007380:	6924      	ldr	r4, [r4, #16]
 8007382:	2c00      	cmp	r4, #0
 8007384:	d1f4      	bne.n	8007370 <osThreadNew+0x48>
 8007386:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007388:	a905      	add	r1, sp, #20
 800738a:	e9cd c100 	strd	ip, r1, [sp]
 800738e:	b292      	uxth	r2, r2
 8007390:	4621      	mov	r1, r4
 8007392:	f001 faec 	bl	800896e <xTaskCreate>
 8007396:	2801      	cmp	r0, #1
            hTask = NULL;
 8007398:	bf1c      	itt	ne
 800739a:	2300      	movne	r3, #0
 800739c:	9305      	strne	r3, [sp, #20]
 800739e:	e7e7      	b.n	8007370 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 80073a0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80073a4:	2280      	movs	r2, #128	; 0x80
 80073a6:	e7ef      	b.n	8007388 <osThreadNew+0x60>
        return (NULL);
 80073a8:	4610      	mov	r0, r2
 80073aa:	e7e2      	b.n	8007372 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80073ac:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80073b0:	9500      	str	r5, [sp, #0]
 80073b2:	f001 faa4 	bl	80088fe <xTaskCreateStatic>
 80073b6:	9005      	str	r0, [sp, #20]
 80073b8:	e7da      	b.n	8007370 <osThreadNew+0x48>

080073ba <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80073ba:	b510      	push	{r4, lr}
 80073bc:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80073c0:	b924      	cbnz	r4, 80073cc <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 80073c2:	b110      	cbz	r0, 80073ca <osDelay+0x10>
      vTaskDelay(ticks);
 80073c4:	f001 fc5e 	bl	8008c84 <vTaskDelay>
    stat = osOK;
 80073c8:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 80073ca:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80073cc:	f06f 0005 	mvn.w	r0, #5
 80073d0:	e7fb      	b.n	80073ca <osDelay+0x10>

080073d2 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80073d2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80073d4:	4604      	mov	r4, r0
 80073d6:	460e      	mov	r6, r1
 80073d8:	4615      	mov	r5, r2
 80073da:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80073de:	b11a      	cbz	r2, 80073e8 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80073e0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80073e2:	4620      	mov	r0, r4
 80073e4:	b003      	add	sp, #12
 80073e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80073e8:	2800      	cmp	r0, #0
 80073ea:	d0f9      	beq.n	80073e0 <osSemaphoreNew+0xe>
 80073ec:	4288      	cmp	r0, r1
 80073ee:	d3f7      	bcc.n	80073e0 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 80073f0:	b1e5      	cbz	r5, 800742c <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80073f2:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80073f6:	b1bb      	cbz	r3, 8007428 <osSemaphoreNew+0x56>
 80073f8:	2f4f      	cmp	r7, #79	; 0x4f
 80073fa:	d9f1      	bls.n	80073e0 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80073fc:	2801      	cmp	r0, #1
 80073fe:	d12a      	bne.n	8007456 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007400:	2103      	movs	r1, #3
 8007402:	9100      	str	r1, [sp, #0]
 8007404:	4611      	mov	r1, r2
 8007406:	f000 fce6 	bl	8007dd6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800740a:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800740c:	2800      	cmp	r0, #0
 800740e:	d0e7      	beq.n	80073e0 <osSemaphoreNew+0xe>
 8007410:	b1de      	cbz	r6, 800744a <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007412:	2300      	movs	r3, #0
 8007414:	461a      	mov	r2, r3
 8007416:	4619      	mov	r1, r3
 8007418:	f000 fd92 	bl	8007f40 <xQueueGenericSend>
 800741c:	2801      	cmp	r0, #1
 800741e:	d014      	beq.n	800744a <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8007420:	4620      	mov	r0, r4
 8007422:	f001 f8cd 	bl	80085c0 <vQueueDelete>
 8007426:	e7db      	b.n	80073e0 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007428:	2f00      	cmp	r7, #0
 800742a:	d1d9      	bne.n	80073e0 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800742c:	2c01      	cmp	r4, #1
 800742e:	d105      	bne.n	800743c <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8007430:	2203      	movs	r2, #3
 8007432:	2100      	movs	r1, #0
 8007434:	4620      	mov	r0, r4
 8007436:	f000 fd1c 	bl	8007e72 <xQueueGenericCreate>
 800743a:	e7e6      	b.n	800740a <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800743c:	4620      	mov	r0, r4
 800743e:	4631      	mov	r1, r6
 8007440:	f000 fd60 	bl	8007f04 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007444:	4604      	mov	r4, r0
 8007446:	2800      	cmp	r0, #0
 8007448:	d0ca      	beq.n	80073e0 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800744a:	b955      	cbnz	r5, 8007462 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800744c:	4629      	mov	r1, r5
 800744e:	4620      	mov	r0, r4
 8007450:	f001 f890 	bl	8008574 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007454:	e7c5      	b.n	80073e2 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007456:	461a      	mov	r2, r3
 8007458:	f000 fd32 	bl	8007ec0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800745c:	4604      	mov	r4, r0
 800745e:	2800      	cmp	r0, #0
 8007460:	d0be      	beq.n	80073e0 <osSemaphoreNew+0xe>
          name = attr->name;
 8007462:	682d      	ldr	r5, [r5, #0]
 8007464:	e7f2      	b.n	800744c <osSemaphoreNew+0x7a>

08007466 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007466:	b513      	push	{r0, r1, r4, lr}
 8007468:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800746a:	b308      	cbz	r0, 80074b0 <osSemaphoreAcquire+0x4a>
 800746c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007470:	b1b3      	cbz	r3, 80074a0 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8007472:	b9e9      	cbnz	r1, 80074b0 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007474:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007476:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007478:	f001 f82d 	bl	80084d6 <xQueueReceiveFromISR>
 800747c:	2801      	cmp	r0, #1
 800747e:	d114      	bne.n	80074aa <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007480:	9b01      	ldr	r3, [sp, #4]
 8007482:	b913      	cbnz	r3, 800748a <osSemaphoreAcquire+0x24>
  stat = osOK;
 8007484:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007486:	b002      	add	sp, #8
 8007488:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800748a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800748e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007492:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007496:	f3bf 8f4f 	dsb	sy
 800749a:	f3bf 8f6f 	isb	sy
 800749e:	e7f1      	b.n	8007484 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80074a0:	f000 ff56 	bl	8008350 <xQueueSemaphoreTake>
 80074a4:	2801      	cmp	r0, #1
 80074a6:	d0ed      	beq.n	8007484 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 80074a8:	b92c      	cbnz	r4, 80074b6 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 80074aa:	f06f 0002 	mvn.w	r0, #2
 80074ae:	e7ea      	b.n	8007486 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 80074b0:	f06f 0003 	mvn.w	r0, #3
 80074b4:	e7e7      	b.n	8007486 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 80074b6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80074ba:	e7e4      	b.n	8007486 <osSemaphoreAcquire+0x20>

080074bc <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80074bc:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80074be:	b310      	cbz	r0, 8007506 <osSemaphoreRelease+0x4a>
 80074c0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80074c4:	b1b3      	cbz	r3, 80074f4 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 80074c6:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80074c8:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80074ca:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80074cc:	f000 fe4d 	bl	800816a <xQueueGiveFromISR>
 80074d0:	2801      	cmp	r0, #1
 80074d2:	d115      	bne.n	8007500 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 80074d4:	9b01      	ldr	r3, [sp, #4]
 80074d6:	b913      	cbnz	r3, 80074de <osSemaphoreRelease+0x22>
  stat = osOK;
 80074d8:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 80074da:	b002      	add	sp, #8
 80074dc:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80074de:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80074e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80074e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80074ea:	f3bf 8f4f 	dsb	sy
 80074ee:	f3bf 8f6f 	isb	sy
 80074f2:	e7f1      	b.n	80074d8 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80074f4:	461a      	mov	r2, r3
 80074f6:	4619      	mov	r1, r3
 80074f8:	f000 fd22 	bl	8007f40 <xQueueGenericSend>
 80074fc:	2801      	cmp	r0, #1
 80074fe:	d0eb      	beq.n	80074d8 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8007500:	f06f 0002 	mvn.w	r0, #2
 8007504:	e7e9      	b.n	80074da <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8007506:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800750a:	e7e6      	b.n	80074da <osSemaphoreRelease+0x1e>

0800750c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800750c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800750e:	4605      	mov	r5, r0
 8007510:	460e      	mov	r6, r1
 8007512:	4614      	mov	r4, r2
 8007514:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007518:	b11f      	cbz	r7, 8007522 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800751a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800751c:	4628      	mov	r0, r5
 800751e:	b003      	add	sp, #12
 8007520:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007522:	2800      	cmp	r0, #0
 8007524:	d0f9      	beq.n	800751a <osMessageQueueNew+0xe>
 8007526:	2900      	cmp	r1, #0
 8007528:	d0f7      	beq.n	800751a <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800752a:	b1da      	cbz	r2, 8007564 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800752c:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8007530:	b183      	cbz	r3, 8007554 <osMessageQueueNew+0x48>
 8007532:	2a4f      	cmp	r2, #79	; 0x4f
 8007534:	d9f1      	bls.n	800751a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007536:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007538:	2a00      	cmp	r2, #0
 800753a:	d0ee      	beq.n	800751a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800753c:	6966      	ldr	r6, [r4, #20]
 800753e:	434d      	muls	r5, r1
 8007540:	42ae      	cmp	r6, r5
 8007542:	d3ea      	bcc.n	800751a <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007544:	9700      	str	r7, [sp, #0]
 8007546:	f000 fc46 	bl	8007dd6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800754a:	4605      	mov	r5, r0
 800754c:	2800      	cmp	r0, #0
 800754e:	d0e4      	beq.n	800751a <osMessageQueueNew+0xe>
        name = attr->name;
 8007550:	6824      	ldr	r4, [r4, #0]
 8007552:	e011      	b.n	8007578 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007554:	2a00      	cmp	r2, #0
 8007556:	d1e0      	bne.n	800751a <osMessageQueueNew+0xe>
 8007558:	6923      	ldr	r3, [r4, #16]
 800755a:	2b00      	cmp	r3, #0
 800755c:	d1dd      	bne.n	800751a <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800755e:	6963      	ldr	r3, [r4, #20]
 8007560:	2b00      	cmp	r3, #0
 8007562:	d1da      	bne.n	800751a <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8007564:	4628      	mov	r0, r5
 8007566:	2200      	movs	r2, #0
 8007568:	4631      	mov	r1, r6
 800756a:	f000 fc82 	bl	8007e72 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800756e:	4605      	mov	r5, r0
 8007570:	2800      	cmp	r0, #0
 8007572:	d0d2      	beq.n	800751a <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007574:	2c00      	cmp	r4, #0
 8007576:	d1eb      	bne.n	8007550 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007578:	4621      	mov	r1, r4
 800757a:	4628      	mov	r0, r5
 800757c:	f000 fffa 	bl	8008574 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007580:	e7cc      	b.n	800751c <osMessageQueueNew+0x10>

08007582 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007582:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007584:	461c      	mov	r4, r3
 8007586:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800758a:	b1c6      	cbz	r6, 80075be <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800758c:	b318      	cbz	r0, 80075d6 <osMessageQueuePut+0x54>
 800758e:	b311      	cbz	r1, 80075d6 <osMessageQueuePut+0x54>
 8007590:	bb0b      	cbnz	r3, 80075d6 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007592:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007594:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007596:	f000 fd86 	bl	80080a6 <xQueueGenericSendFromISR>
 800759a:	2801      	cmp	r0, #1
 800759c:	d118      	bne.n	80075d0 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800759e:	9b01      	ldr	r3, [sp, #4]
 80075a0:	b913      	cbnz	r3, 80075a8 <osMessageQueuePut+0x26>
  stat = osOK;
 80075a2:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80075a4:	b002      	add	sp, #8
 80075a6:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80075a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80075ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80075b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80075b4:	f3bf 8f4f 	dsb	sy
 80075b8:	f3bf 8f6f 	isb	sy
 80075bc:	e7f1      	b.n	80075a2 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80075be:	b150      	cbz	r0, 80075d6 <osMessageQueuePut+0x54>
 80075c0:	b149      	cbz	r1, 80075d6 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80075c2:	4633      	mov	r3, r6
 80075c4:	4622      	mov	r2, r4
 80075c6:	f000 fcbb 	bl	8007f40 <xQueueGenericSend>
 80075ca:	2801      	cmp	r0, #1
 80075cc:	d0e9      	beq.n	80075a2 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 80075ce:	b92c      	cbnz	r4, 80075dc <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 80075d0:	f06f 0002 	mvn.w	r0, #2
 80075d4:	e7e6      	b.n	80075a4 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 80075d6:	f06f 0003 	mvn.w	r0, #3
 80075da:	e7e3      	b.n	80075a4 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 80075dc:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80075e0:	e7e0      	b.n	80075a4 <osMessageQueuePut+0x22>

080075e2 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80075e2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80075e4:	461c      	mov	r4, r3
 80075e6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80075ea:	b1c3      	cbz	r3, 800761e <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80075ec:	b310      	cbz	r0, 8007634 <osMessageQueueGet+0x52>
 80075ee:	b309      	cbz	r1, 8007634 <osMessageQueueGet+0x52>
 80075f0:	bb04      	cbnz	r4, 8007634 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80075f2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80075f4:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80075f6:	f000 ff6e 	bl	80084d6 <xQueueReceiveFromISR>
 80075fa:	2801      	cmp	r0, #1
 80075fc:	d117      	bne.n	800762e <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80075fe:	9b01      	ldr	r3, [sp, #4]
 8007600:	b913      	cbnz	r3, 8007608 <osMessageQueueGet+0x26>
  stat = osOK;
 8007602:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007604:	b003      	add	sp, #12
 8007606:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007608:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800760c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007610:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007614:	f3bf 8f4f 	dsb	sy
 8007618:	f3bf 8f6f 	isb	sy
 800761c:	e7f1      	b.n	8007602 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800761e:	b148      	cbz	r0, 8007634 <osMessageQueueGet+0x52>
 8007620:	b141      	cbz	r1, 8007634 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007622:	4622      	mov	r2, r4
 8007624:	f000 fdf5 	bl	8008212 <xQueueReceive>
 8007628:	2801      	cmp	r0, #1
 800762a:	d0ea      	beq.n	8007602 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800762c:	b92c      	cbnz	r4, 800763a <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800762e:	f06f 0002 	mvn.w	r0, #2
 8007632:	e7e7      	b.n	8007604 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8007634:	f06f 0003 	mvn.w	r0, #3
 8007638:	e7e4      	b.n	8007604 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800763a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800763e:	e7e1      	b.n	8007604 <osMessageQueueGet+0x22>

08007640 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007640:	4b03      	ldr	r3, [pc, #12]	; (8007650 <vApplicationGetIdleTaskMemory+0x10>)
 8007642:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007644:	4b03      	ldr	r3, [pc, #12]	; (8007654 <vApplicationGetIdleTaskMemory+0x14>)
 8007646:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007648:	2380      	movs	r3, #128	; 0x80
 800764a:	6013      	str	r3, [r2, #0]
}
 800764c:	4770      	bx	lr
 800764e:	bf00      	nop
 8007650:	20006bf0 	.word	0x20006bf0
 8007654:	200069f0 	.word	0x200069f0

08007658 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007658:	4b03      	ldr	r3, [pc, #12]	; (8007668 <vApplicationGetTimerTaskMemory+0x10>)
 800765a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800765c:	4b03      	ldr	r3, [pc, #12]	; (800766c <vApplicationGetTimerTaskMemory+0x14>)
 800765e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007660:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007664:	6013      	str	r3, [r2, #0]
}
 8007666:	4770      	bx	lr
 8007668:	20007054 	.word	0x20007054
 800766c:	20006c54 	.word	0x20006c54

08007670 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007670:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007672:	4b0f      	ldr	r3, [pc, #60]	; (80076b0 <prvInsertBlockIntoFreeList+0x40>)
 8007674:	461a      	mov	r2, r3
 8007676:	681b      	ldr	r3, [r3, #0]
 8007678:	4283      	cmp	r3, r0
 800767a:	d3fb      	bcc.n	8007674 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800767c:	6854      	ldr	r4, [r2, #4]
 800767e:	1911      	adds	r1, r2, r4
 8007680:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007682:	bf01      	itttt	eq
 8007684:	6841      	ldreq	r1, [r0, #4]
 8007686:	4610      	moveq	r0, r2
 8007688:	1909      	addeq	r1, r1, r4
 800768a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800768c:	6844      	ldr	r4, [r0, #4]
 800768e:	1901      	adds	r1, r0, r4
 8007690:	428b      	cmp	r3, r1
 8007692:	d107      	bne.n	80076a4 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007694:	4907      	ldr	r1, [pc, #28]	; (80076b4 <prvInsertBlockIntoFreeList+0x44>)
 8007696:	6809      	ldr	r1, [r1, #0]
 8007698:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800769a:	bf1f      	itttt	ne
 800769c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800769e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80076a0:	1909      	addne	r1, r1, r4
 80076a2:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80076a4:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80076a6:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80076a8:	bf18      	it	ne
 80076aa:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80076ac:	bd10      	pop	{r4, pc}
 80076ae:	bf00      	nop
 80076b0:	200170cc 	.word	0x200170cc
 80076b4:	200070b4 	.word	0x200070b4

080076b8 <pvPortMalloc>:
{
 80076b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076bc:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80076be:	f001 f9c9 	bl	8008a54 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80076c2:	4842      	ldr	r0, [pc, #264]	; (80077cc <pvPortMalloc+0x114>)
 80076c4:	4d42      	ldr	r5, [pc, #264]	; (80077d0 <pvPortMalloc+0x118>)
 80076c6:	6803      	ldr	r3, [r0, #0]
 80076c8:	bb0b      	cbnz	r3, 800770e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80076ca:	4942      	ldr	r1, [pc, #264]	; (80077d4 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80076cc:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80076ce:	bf1f      	itttt	ne
 80076d0:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80076d2:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80076d6:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 80076da:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80076dc:	bf14      	ite	ne
 80076de:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80076e0:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80076e4:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80076e6:	4e3c      	ldr	r6, [pc, #240]	; (80077d8 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 80076e8:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80076ea:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 80076ee:	2300      	movs	r3, #0
 80076f0:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80076f2:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80076f4:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80076f8:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80076fa:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80076fe:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007700:	4a36      	ldr	r2, [pc, #216]	; (80077dc <pvPortMalloc+0x124>)
 8007702:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007704:	4a36      	ldr	r2, [pc, #216]	; (80077e0 <pvPortMalloc+0x128>)
 8007706:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007708:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800770c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800770e:	682f      	ldr	r7, [r5, #0]
 8007710:	4227      	tst	r7, r4
 8007712:	d155      	bne.n	80077c0 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8007714:	2c00      	cmp	r4, #0
 8007716:	d046      	beq.n	80077a6 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8007718:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800771c:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800771e:	bf1c      	itt	ne
 8007720:	f023 0307 	bicne.w	r3, r3, #7
 8007724:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007726:	2b00      	cmp	r3, #0
 8007728:	d04a      	beq.n	80077c0 <pvPortMalloc+0x108>
 800772a:	4c2d      	ldr	r4, [pc, #180]	; (80077e0 <pvPortMalloc+0x128>)
 800772c:	6826      	ldr	r6, [r4, #0]
 800772e:	429e      	cmp	r6, r3
 8007730:	d346      	bcc.n	80077c0 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8007732:	4a29      	ldr	r2, [pc, #164]	; (80077d8 <pvPortMalloc+0x120>)
 8007734:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007736:	6869      	ldr	r1, [r5, #4]
 8007738:	4299      	cmp	r1, r3
 800773a:	d204      	bcs.n	8007746 <pvPortMalloc+0x8e>
 800773c:	f8d5 c000 	ldr.w	ip, [r5]
 8007740:	f1bc 0f00 	cmp.w	ip, #0
 8007744:	d115      	bne.n	8007772 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8007746:	6800      	ldr	r0, [r0, #0]
 8007748:	42a8      	cmp	r0, r5
 800774a:	d039      	beq.n	80077c0 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800774c:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800774e:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007750:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007754:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007756:	2910      	cmp	r1, #16
 8007758:	d912      	bls.n	8007780 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800775a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800775c:	0742      	lsls	r2, r0, #29
 800775e:	d00b      	beq.n	8007778 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007760:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007764:	f383 8811 	msr	BASEPRI, r3
 8007768:	f3bf 8f6f 	isb	sy
 800776c:	f3bf 8f4f 	dsb	sy
 8007770:	e7fe      	b.n	8007770 <pvPortMalloc+0xb8>
 8007772:	462a      	mov	r2, r5
 8007774:	4665      	mov	r5, ip
 8007776:	e7de      	b.n	8007736 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007778:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800777a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800777c:	f7ff ff78 	bl	8007670 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007780:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007782:	4916      	ldr	r1, [pc, #88]	; (80077dc <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 8007784:	4a17      	ldr	r2, [pc, #92]	; (80077e4 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007786:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007788:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800778a:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800778c:	2300      	movs	r3, #0
 800778e:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8007790:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007792:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007794:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8007796:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800779a:	bf38      	it	cc
 800779c:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800779e:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80077a2:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 80077a4:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 80077a6:	f001 f9f9 	bl	8008b9c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80077aa:	0763      	lsls	r3, r4, #29
 80077ac:	d00a      	beq.n	80077c4 <pvPortMalloc+0x10c>
 80077ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077b2:	f383 8811 	msr	BASEPRI, r3
 80077b6:	f3bf 8f6f 	isb	sy
 80077ba:	f3bf 8f4f 	dsb	sy
 80077be:	e7fe      	b.n	80077be <pvPortMalloc+0x106>
void *pvReturn = NULL;
 80077c0:	2400      	movs	r4, #0
 80077c2:	e7f0      	b.n	80077a6 <pvPortMalloc+0xee>
}
 80077c4:	4620      	mov	r0, r4
 80077c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80077ca:	bf00      	nop
 80077cc:	200070b4 	.word	0x200070b4
 80077d0:	200170b8 	.word	0x200170b8
 80077d4:	200070b8 	.word	0x200070b8
 80077d8:	200170cc 	.word	0x200170cc
 80077dc:	200170c0 	.word	0x200170c0
 80077e0:	200170bc 	.word	0x200170bc
 80077e4:	200170c4 	.word	0x200170c4

080077e8 <vPortFree>:
{
 80077e8:	b510      	push	{r4, lr}
	if( pv != NULL )
 80077ea:	4604      	mov	r4, r0
 80077ec:	b390      	cbz	r0, 8007854 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80077ee:	4a1a      	ldr	r2, [pc, #104]	; (8007858 <vPortFree+0x70>)
 80077f0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80077f4:	6812      	ldr	r2, [r2, #0]
 80077f6:	4213      	tst	r3, r2
 80077f8:	d108      	bne.n	800780c <vPortFree+0x24>
 80077fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077fe:	f383 8811 	msr	BASEPRI, r3
 8007802:	f3bf 8f6f 	isb	sy
 8007806:	f3bf 8f4f 	dsb	sy
 800780a:	e7fe      	b.n	800780a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800780c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007810:	b141      	cbz	r1, 8007824 <vPortFree+0x3c>
 8007812:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007816:	f383 8811 	msr	BASEPRI, r3
 800781a:	f3bf 8f6f 	isb	sy
 800781e:	f3bf 8f4f 	dsb	sy
 8007822:	e7fe      	b.n	8007822 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007824:	ea23 0302 	bic.w	r3, r3, r2
 8007828:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800782c:	f001 f912 	bl	8008a54 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007830:	4a0a      	ldr	r2, [pc, #40]	; (800785c <vPortFree+0x74>)
 8007832:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007836:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007838:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800783c:	440b      	add	r3, r1
 800783e:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007840:	f7ff ff16 	bl	8007670 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8007844:	4a06      	ldr	r2, [pc, #24]	; (8007860 <vPortFree+0x78>)
 8007846:	6813      	ldr	r3, [r2, #0]
}
 8007848:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800784c:	3301      	adds	r3, #1
 800784e:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8007850:	f001 b9a4 	b.w	8008b9c <xTaskResumeAll>
}
 8007854:	bd10      	pop	{r4, pc}
 8007856:	bf00      	nop
 8007858:	200170b8 	.word	0x200170b8
 800785c:	200170bc 	.word	0x200170bc
 8007860:	200170c8 	.word	0x200170c8

08007864 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007864:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007868:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800786c:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007870:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007872:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007874:	2300      	movs	r3, #0
 8007876:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007878:	4770      	bx	lr

0800787a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800787a:	2300      	movs	r3, #0
 800787c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800787e:	4770      	bx	lr

08007880 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007880:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007882:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007884:	689a      	ldr	r2, [r3, #8]
 8007886:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007888:	689a      	ldr	r2, [r3, #8]
 800788a:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800788c:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800788e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007890:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007892:	3301      	adds	r3, #1
 8007894:	6003      	str	r3, [r0, #0]
}
 8007896:	4770      	bx	lr

08007898 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007898:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800789a:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800789c:	1c63      	adds	r3, r4, #1
 800789e:	d10a      	bne.n	80078b6 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80078a0:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80078a2:	685a      	ldr	r2, [r3, #4]
 80078a4:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80078a6:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80078a8:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80078aa:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80078ac:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80078ae:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80078b0:	3301      	adds	r3, #1
 80078b2:	6003      	str	r3, [r0, #0]
}
 80078b4:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80078b6:	f100 0208 	add.w	r2, r0, #8
 80078ba:	4613      	mov	r3, r2
 80078bc:	6852      	ldr	r2, [r2, #4]
 80078be:	6815      	ldr	r5, [r2, #0]
 80078c0:	42a5      	cmp	r5, r4
 80078c2:	d9fa      	bls.n	80078ba <vListInsert+0x22>
 80078c4:	e7ed      	b.n	80078a2 <vListInsert+0xa>

080078c6 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80078c6:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 80078ca:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80078cc:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80078ce:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80078d0:	6859      	ldr	r1, [r3, #4]
 80078d2:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80078d4:	bf08      	it	eq
 80078d6:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80078d8:	2200      	movs	r2, #0
 80078da:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80078dc:	681a      	ldr	r2, [r3, #0]
 80078de:	3a01      	subs	r2, #1
 80078e0:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80078e2:	6818      	ldr	r0, [r3, #0]
}
 80078e4:	4770      	bx	lr
	...

080078e8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80078e8:	4808      	ldr	r0, [pc, #32]	; (800790c <prvPortStartFirstTask+0x24>)
 80078ea:	6800      	ldr	r0, [r0, #0]
 80078ec:	6800      	ldr	r0, [r0, #0]
 80078ee:	f380 8808 	msr	MSP, r0
 80078f2:	f04f 0000 	mov.w	r0, #0
 80078f6:	f380 8814 	msr	CONTROL, r0
 80078fa:	b662      	cpsie	i
 80078fc:	b661      	cpsie	f
 80078fe:	f3bf 8f4f 	dsb	sy
 8007902:	f3bf 8f6f 	isb	sy
 8007906:	df00      	svc	0
 8007908:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800790a:	0000      	.short	0x0000
 800790c:	e000ed08 	.word	0xe000ed08

08007910 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007910:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007920 <vPortEnableVFP+0x10>
 8007914:	6801      	ldr	r1, [r0, #0]
 8007916:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800791a:	6001      	str	r1, [r0, #0]
 800791c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800791e:	0000      	.short	0x0000
 8007920:	e000ed88 	.word	0xe000ed88

08007924 <prvTaskExitError>:
{
 8007924:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007926:	2300      	movs	r3, #0
 8007928:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800792a:	4b0d      	ldr	r3, [pc, #52]	; (8007960 <prvTaskExitError+0x3c>)
 800792c:	681b      	ldr	r3, [r3, #0]
 800792e:	3301      	adds	r3, #1
 8007930:	d008      	beq.n	8007944 <prvTaskExitError+0x20>
 8007932:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007936:	f383 8811 	msr	BASEPRI, r3
 800793a:	f3bf 8f6f 	isb	sy
 800793e:	f3bf 8f4f 	dsb	sy
 8007942:	e7fe      	b.n	8007942 <prvTaskExitError+0x1e>
 8007944:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007948:	f383 8811 	msr	BASEPRI, r3
 800794c:	f3bf 8f6f 	isb	sy
 8007950:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007954:	9b01      	ldr	r3, [sp, #4]
 8007956:	2b00      	cmp	r3, #0
 8007958:	d0fc      	beq.n	8007954 <prvTaskExitError+0x30>
}
 800795a:	b002      	add	sp, #8
 800795c:	4770      	bx	lr
 800795e:	bf00      	nop
 8007960:	20000080 	.word	0x20000080

08007964 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007964:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007968:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800796c:	4b07      	ldr	r3, [pc, #28]	; (800798c <pxPortInitialiseStack+0x28>)
 800796e:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007972:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007976:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800797a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800797e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007982:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007986:	3844      	subs	r0, #68	; 0x44
 8007988:	4770      	bx	lr
 800798a:	bf00      	nop
 800798c:	08007925 	.word	0x08007925

08007990 <SVC_Handler>:
	__asm volatile (
 8007990:	4b07      	ldr	r3, [pc, #28]	; (80079b0 <pxCurrentTCBConst2>)
 8007992:	6819      	ldr	r1, [r3, #0]
 8007994:	6808      	ldr	r0, [r1, #0]
 8007996:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800799a:	f380 8809 	msr	PSP, r0
 800799e:	f3bf 8f6f 	isb	sy
 80079a2:	f04f 0000 	mov.w	r0, #0
 80079a6:	f380 8811 	msr	BASEPRI, r0
 80079aa:	4770      	bx	lr
 80079ac:	f3af 8000 	nop.w

080079b0 <pxCurrentTCBConst2>:
 80079b0:	2001711c 	.word	0x2001711c

080079b4 <vPortEnterCritical>:
 80079b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079b8:	f383 8811 	msr	BASEPRI, r3
 80079bc:	f3bf 8f6f 	isb	sy
 80079c0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80079c4:	4a0a      	ldr	r2, [pc, #40]	; (80079f0 <vPortEnterCritical+0x3c>)
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80079ca:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80079cc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80079ce:	d10e      	bne.n	80079ee <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80079d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80079d4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 80079d8:	b2db      	uxtb	r3, r3
 80079da:	b143      	cbz	r3, 80079ee <vPortEnterCritical+0x3a>
 80079dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079e0:	f383 8811 	msr	BASEPRI, r3
 80079e4:	f3bf 8f6f 	isb	sy
 80079e8:	f3bf 8f4f 	dsb	sy
 80079ec:	e7fe      	b.n	80079ec <vPortEnterCritical+0x38>
}
 80079ee:	4770      	bx	lr
 80079f0:	20000080 	.word	0x20000080

080079f4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80079f4:	4a08      	ldr	r2, [pc, #32]	; (8007a18 <vPortExitCritical+0x24>)
 80079f6:	6813      	ldr	r3, [r2, #0]
 80079f8:	b943      	cbnz	r3, 8007a0c <vPortExitCritical+0x18>
 80079fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079fe:	f383 8811 	msr	BASEPRI, r3
 8007a02:	f3bf 8f6f 	isb	sy
 8007a06:	f3bf 8f4f 	dsb	sy
 8007a0a:	e7fe      	b.n	8007a0a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007a0c:	3b01      	subs	r3, #1
 8007a0e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007a10:	b90b      	cbnz	r3, 8007a16 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007a12:	f383 8811 	msr	BASEPRI, r3
}
 8007a16:	4770      	bx	lr
 8007a18:	20000080 	.word	0x20000080
 8007a1c:	00000000 	.word	0x00000000

08007a20 <PendSV_Handler>:
	__asm volatile
 8007a20:	f3ef 8009 	mrs	r0, PSP
 8007a24:	f3bf 8f6f 	isb	sy
 8007a28:	4b15      	ldr	r3, [pc, #84]	; (8007a80 <pxCurrentTCBConst>)
 8007a2a:	681a      	ldr	r2, [r3, #0]
 8007a2c:	f01e 0f10 	tst.w	lr, #16
 8007a30:	bf08      	it	eq
 8007a32:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007a36:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a3a:	6010      	str	r0, [r2, #0]
 8007a3c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007a40:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007a44:	f380 8811 	msr	BASEPRI, r0
 8007a48:	f3bf 8f4f 	dsb	sy
 8007a4c:	f3bf 8f6f 	isb	sy
 8007a50:	f001 f93c 	bl	8008ccc <vTaskSwitchContext>
 8007a54:	f04f 0000 	mov.w	r0, #0
 8007a58:	f380 8811 	msr	BASEPRI, r0
 8007a5c:	bc09      	pop	{r0, r3}
 8007a5e:	6819      	ldr	r1, [r3, #0]
 8007a60:	6808      	ldr	r0, [r1, #0]
 8007a62:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a66:	f01e 0f10 	tst.w	lr, #16
 8007a6a:	bf08      	it	eq
 8007a6c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007a70:	f380 8809 	msr	PSP, r0
 8007a74:	f3bf 8f6f 	isb	sy
 8007a78:	4770      	bx	lr
 8007a7a:	bf00      	nop
 8007a7c:	f3af 8000 	nop.w

08007a80 <pxCurrentTCBConst>:
 8007a80:	2001711c 	.word	0x2001711c

08007a84 <xPortSysTickHandler>:
{
 8007a84:	b508      	push	{r3, lr}
	__asm volatile
 8007a86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a8a:	f383 8811 	msr	BASEPRI, r3
 8007a8e:	f3bf 8f6f 	isb	sy
 8007a92:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007a96:	f000 ffeb 	bl	8008a70 <xTaskIncrementTick>
 8007a9a:	b128      	cbz	r0, 8007aa8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007a9c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007aa0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007aa4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007aa8:	2300      	movs	r3, #0
 8007aaa:	f383 8811 	msr	BASEPRI, r3
}
 8007aae:	bd08      	pop	{r3, pc}

08007ab0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007ab0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007ab4:	2300      	movs	r3, #0
 8007ab6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007ab8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007aba:	4b05      	ldr	r3, [pc, #20]	; (8007ad0 <vPortSetupTimerInterrupt+0x20>)
 8007abc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007ac0:	681b      	ldr	r3, [r3, #0]
 8007ac2:	fbb3 f3f1 	udiv	r3, r3, r1
 8007ac6:	3b01      	subs	r3, #1
 8007ac8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007aca:	2307      	movs	r3, #7
 8007acc:	6113      	str	r3, [r2, #16]
}
 8007ace:	4770      	bx	lr
 8007ad0:	20000074 	.word	0x20000074

08007ad4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007ad4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007ad8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007ada:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8007ade:	4a3a      	ldr	r2, [pc, #232]	; (8007bc8 <xPortStartScheduler+0xf4>)
 8007ae0:	4291      	cmp	r1, r2
 8007ae2:	d108      	bne.n	8007af6 <xPortStartScheduler+0x22>
	__asm volatile
 8007ae4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ae8:	f383 8811 	msr	BASEPRI, r3
 8007aec:	f3bf 8f6f 	isb	sy
 8007af0:	f3bf 8f4f 	dsb	sy
 8007af4:	e7fe      	b.n	8007af4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007af6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8007afa:	4b34      	ldr	r3, [pc, #208]	; (8007bcc <xPortStartScheduler+0xf8>)
 8007afc:	429a      	cmp	r2, r3
 8007afe:	d108      	bne.n	8007b12 <xPortStartScheduler+0x3e>
 8007b00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b04:	f383 8811 	msr	BASEPRI, r3
 8007b08:	f3bf 8f6f 	isb	sy
 8007b0c:	f3bf 8f4f 	dsb	sy
 8007b10:	e7fe      	b.n	8007b10 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007b12:	4b2f      	ldr	r3, [pc, #188]	; (8007bd0 <xPortStartScheduler+0xfc>)
 8007b14:	781a      	ldrb	r2, [r3, #0]
 8007b16:	b2d2      	uxtb	r2, r2
 8007b18:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007b1a:	22ff      	movs	r2, #255	; 0xff
 8007b1c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007b1e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007b20:	4a2c      	ldr	r2, [pc, #176]	; (8007bd4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007b22:	b2db      	uxtb	r3, r3
 8007b24:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007b28:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007b2c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007b30:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007b32:	4a29      	ldr	r2, [pc, #164]	; (8007bd8 <xPortStartScheduler+0x104>)
 8007b34:	2307      	movs	r3, #7
 8007b36:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007b38:	2100      	movs	r1, #0
 8007b3a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007b3e:	0600      	lsls	r0, r0, #24
 8007b40:	f103 34ff 	add.w	r4, r3, #4294967295
 8007b44:	d40c      	bmi.n	8007b60 <xPortStartScheduler+0x8c>
 8007b46:	b111      	cbz	r1, 8007b4e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007b48:	2b03      	cmp	r3, #3
 8007b4a:	6013      	str	r3, [r2, #0]
 8007b4c:	d011      	beq.n	8007b72 <xPortStartScheduler+0x9e>
 8007b4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b52:	f383 8811 	msr	BASEPRI, r3
 8007b56:	f3bf 8f6f 	isb	sy
 8007b5a:	f3bf 8f4f 	dsb	sy
 8007b5e:	e7fe      	b.n	8007b5e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007b60:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007b64:	005b      	lsls	r3, r3, #1
 8007b66:	b2db      	uxtb	r3, r3
 8007b68:	f88d 3003 	strb.w	r3, [sp, #3]
 8007b6c:	2101      	movs	r1, #1
 8007b6e:	4623      	mov	r3, r4
 8007b70:	e7e3      	b.n	8007b3a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007b72:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007b76:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007b78:	9b01      	ldr	r3, [sp, #4]
 8007b7a:	4a15      	ldr	r2, [pc, #84]	; (8007bd0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007b7c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007b80:	b2db      	uxtb	r3, r3
 8007b82:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007b84:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007b88:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007b8c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007b90:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007b94:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007b98:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8007b9c:	f7ff ff88 	bl	8007ab0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007ba0:	4b0e      	ldr	r3, [pc, #56]	; (8007bdc <xPortStartScheduler+0x108>)
 8007ba2:	2500      	movs	r5, #0
 8007ba4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007ba6:	f7ff feb3 	bl	8007910 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007baa:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8007bae:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007bb2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007bb6:	f7ff fe97 	bl	80078e8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007bba:	f001 f887 	bl	8008ccc <vTaskSwitchContext>
	prvTaskExitError();
 8007bbe:	f7ff feb1 	bl	8007924 <prvTaskExitError>
}
 8007bc2:	4628      	mov	r0, r5
 8007bc4:	b003      	add	sp, #12
 8007bc6:	bd30      	pop	{r4, r5, pc}
 8007bc8:	410fc271 	.word	0x410fc271
 8007bcc:	410fc270 	.word	0x410fc270
 8007bd0:	e000e400 	.word	0xe000e400
 8007bd4:	200170d4 	.word	0x200170d4
 8007bd8:	200170d8 	.word	0x200170d8
 8007bdc:	20000080 	.word	0x20000080

08007be0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007be0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007be4:	2b0f      	cmp	r3, #15
 8007be6:	d90e      	bls.n	8007c06 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007be8:	4a11      	ldr	r2, [pc, #68]	; (8007c30 <vPortValidateInterruptPriority+0x50>)
 8007bea:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007bec:	4a11      	ldr	r2, [pc, #68]	; (8007c34 <vPortValidateInterruptPriority+0x54>)
 8007bee:	7812      	ldrb	r2, [r2, #0]
 8007bf0:	429a      	cmp	r2, r3
 8007bf2:	d908      	bls.n	8007c06 <vPortValidateInterruptPriority+0x26>
 8007bf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bf8:	f383 8811 	msr	BASEPRI, r3
 8007bfc:	f3bf 8f6f 	isb	sy
 8007c00:	f3bf 8f4f 	dsb	sy
 8007c04:	e7fe      	b.n	8007c04 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007c06:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007c0a:	4a0b      	ldr	r2, [pc, #44]	; (8007c38 <vPortValidateInterruptPriority+0x58>)
 8007c0c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8007c10:	6812      	ldr	r2, [r2, #0]
 8007c12:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007c16:	4293      	cmp	r3, r2
 8007c18:	d908      	bls.n	8007c2c <vPortValidateInterruptPriority+0x4c>
 8007c1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c1e:	f383 8811 	msr	BASEPRI, r3
 8007c22:	f3bf 8f6f 	isb	sy
 8007c26:	f3bf 8f4f 	dsb	sy
 8007c2a:	e7fe      	b.n	8007c2a <vPortValidateInterruptPriority+0x4a>
	}
 8007c2c:	4770      	bx	lr
 8007c2e:	bf00      	nop
 8007c30:	e000e3f0 	.word	0xe000e3f0
 8007c34:	200170d4 	.word	0x200170d4
 8007c38:	200170d8 	.word	0x200170d8

08007c3c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007c3c:	b510      	push	{r4, lr}
 8007c3e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007c40:	f7ff feb8 	bl	80079b4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007c44:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007c46:	f7ff fed5 	bl	80079f4 <vPortExitCritical>

	return xReturn;
}
 8007c4a:	fab4 f084 	clz	r0, r4
 8007c4e:	0940      	lsrs	r0, r0, #5
 8007c50:	bd10      	pop	{r4, pc}

08007c52 <prvCopyDataToQueue>:
{
 8007c52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c54:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007c56:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c58:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8007c5a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007c5c:	b952      	cbnz	r2, 8007c74 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007c5e:	6807      	ldr	r7, [r0, #0]
 8007c60:	bb47      	cbnz	r7, 8007cb4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007c62:	6880      	ldr	r0, [r0, #8]
 8007c64:	f001 f988 	bl	8008f78 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007c68:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007c6a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007c6c:	3601      	adds	r6, #1
 8007c6e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007c70:	4628      	mov	r0, r5
 8007c72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007c74:	b965      	cbnz	r5, 8007c90 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007c76:	6840      	ldr	r0, [r0, #4]
 8007c78:	f014 fd42 	bl	801c700 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007c7c:	6863      	ldr	r3, [r4, #4]
 8007c7e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007c80:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007c82:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007c84:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007c86:	4293      	cmp	r3, r2
 8007c88:	d3f0      	bcc.n	8007c6c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007c8a:	6823      	ldr	r3, [r4, #0]
 8007c8c:	6063      	str	r3, [r4, #4]
 8007c8e:	e7ed      	b.n	8007c6c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007c90:	68c0      	ldr	r0, [r0, #12]
 8007c92:	f014 fd35 	bl	801c700 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007c96:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007c98:	68e3      	ldr	r3, [r4, #12]
 8007c9a:	4251      	negs	r1, r2
 8007c9c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007c9e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007ca0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ca2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007ca4:	bf3e      	ittt	cc
 8007ca6:	68a3      	ldrcc	r3, [r4, #8]
 8007ca8:	185b      	addcc	r3, r3, r1
 8007caa:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007cac:	2d02      	cmp	r5, #2
 8007cae:	d101      	bne.n	8007cb4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007cb0:	b116      	cbz	r6, 8007cb8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007cb2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007cb4:	2500      	movs	r5, #0
 8007cb6:	e7d9      	b.n	8007c6c <prvCopyDataToQueue+0x1a>
 8007cb8:	4635      	mov	r5, r6
 8007cba:	e7d7      	b.n	8007c6c <prvCopyDataToQueue+0x1a>

08007cbc <prvCopyDataFromQueue>:
{
 8007cbc:	4603      	mov	r3, r0
 8007cbe:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007cc0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007cc2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007cc4:	b16a      	cbz	r2, 8007ce2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007cc6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007cc8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007cca:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007ccc:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007cce:	bf28      	it	cs
 8007cd0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007cd2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007cd4:	bf28      	it	cs
 8007cd6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007cd8:	68d9      	ldr	r1, [r3, #12]
}
 8007cda:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007cde:	f014 bd0f 	b.w	801c700 <memcpy>
}
 8007ce2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007ce6:	4770      	bx	lr

08007ce8 <prvUnlockQueue>:
{
 8007ce8:	b570      	push	{r4, r5, r6, lr}
 8007cea:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007cec:	f7ff fe62 	bl	80079b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007cf0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007cf4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007cf8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007cfa:	2d00      	cmp	r5, #0
 8007cfc:	dc14      	bgt.n	8007d28 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007cfe:	23ff      	movs	r3, #255	; 0xff
 8007d00:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007d04:	f7ff fe76 	bl	80079f4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007d08:	f7ff fe54 	bl	80079b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007d0c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d10:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007d14:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007d16:	2d00      	cmp	r5, #0
 8007d18:	dc12      	bgt.n	8007d40 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007d1a:	23ff      	movs	r3, #255	; 0xff
 8007d1c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007d20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007d24:	f7ff be66 	b.w	80079f4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007d28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007d2a:	2b00      	cmp	r3, #0
 8007d2c:	d0e7      	beq.n	8007cfe <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007d2e:	4630      	mov	r0, r6
 8007d30:	f001 f83e 	bl	8008db0 <xTaskRemoveFromEventList>
 8007d34:	b108      	cbz	r0, 8007d3a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007d36:	f001 f8c7 	bl	8008ec8 <vTaskMissedYield>
			--cTxLock;
 8007d3a:	3d01      	subs	r5, #1
 8007d3c:	b26d      	sxtb	r5, r5
 8007d3e:	e7dc      	b.n	8007cfa <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007d40:	6923      	ldr	r3, [r4, #16]
 8007d42:	2b00      	cmp	r3, #0
 8007d44:	d0e9      	beq.n	8007d1a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d46:	4630      	mov	r0, r6
 8007d48:	f001 f832 	bl	8008db0 <xTaskRemoveFromEventList>
 8007d4c:	b108      	cbz	r0, 8007d52 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007d4e:	f001 f8bb 	bl	8008ec8 <vTaskMissedYield>
				--cRxLock;
 8007d52:	3d01      	subs	r5, #1
 8007d54:	b26d      	sxtb	r5, r5
 8007d56:	e7de      	b.n	8007d16 <prvUnlockQueue+0x2e>

08007d58 <xQueueGenericReset>:
{
 8007d58:	b538      	push	{r3, r4, r5, lr}
 8007d5a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007d5c:	4604      	mov	r4, r0
 8007d5e:	b940      	cbnz	r0, 8007d72 <xQueueGenericReset+0x1a>
 8007d60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d64:	f383 8811 	msr	BASEPRI, r3
 8007d68:	f3bf 8f6f 	isb	sy
 8007d6c:	f3bf 8f4f 	dsb	sy
 8007d70:	e7fe      	b.n	8007d70 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007d72:	f7ff fe1f 	bl	80079b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d76:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007d7a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007d7c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d7e:	434b      	muls	r3, r1
 8007d80:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d82:	1a5b      	subs	r3, r3, r1
 8007d84:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d86:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d88:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007d8a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007d8c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007d8e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007d90:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007d94:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007d98:	b9a5      	cbnz	r5, 8007dc4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007d9a:	6923      	ldr	r3, [r4, #16]
 8007d9c:	b173      	cbz	r3, 8007dbc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d9e:	f104 0010 	add.w	r0, r4, #16
 8007da2:	f001 f805 	bl	8008db0 <xTaskRemoveFromEventList>
 8007da6:	b148      	cbz	r0, 8007dbc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007da8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007dac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007db0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007db4:	f3bf 8f4f 	dsb	sy
 8007db8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007dbc:	f7ff fe1a 	bl	80079f4 <vPortExitCritical>
}
 8007dc0:	2001      	movs	r0, #1
 8007dc2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007dc4:	f104 0010 	add.w	r0, r4, #16
 8007dc8:	f7ff fd4c 	bl	8007864 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007dcc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007dd0:	f7ff fd48 	bl	8007864 <vListInitialise>
 8007dd4:	e7f2      	b.n	8007dbc <xQueueGenericReset+0x64>

08007dd6 <xQueueGenericCreateStatic>:
	{
 8007dd6:	b513      	push	{r0, r1, r4, lr}
 8007dd8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007dda:	b940      	cbnz	r0, 8007dee <xQueueGenericCreateStatic+0x18>
 8007ddc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007de0:	f383 8811 	msr	BASEPRI, r3
 8007de4:	f3bf 8f6f 	isb	sy
 8007de8:	f3bf 8f4f 	dsb	sy
 8007dec:	e7fe      	b.n	8007dec <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8007dee:	b943      	cbnz	r3, 8007e02 <xQueueGenericCreateStatic+0x2c>
 8007df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007df4:	f383 8811 	msr	BASEPRI, r3
 8007df8:	f3bf 8f6f 	isb	sy
 8007dfc:	f3bf 8f4f 	dsb	sy
 8007e00:	e7fe      	b.n	8007e00 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007e02:	b14a      	cbz	r2, 8007e18 <xQueueGenericCreateStatic+0x42>
 8007e04:	b991      	cbnz	r1, 8007e2c <xQueueGenericCreateStatic+0x56>
 8007e06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e0a:	f383 8811 	msr	BASEPRI, r3
 8007e0e:	f3bf 8f6f 	isb	sy
 8007e12:	f3bf 8f4f 	dsb	sy
 8007e16:	e7fe      	b.n	8007e16 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007e18:	b141      	cbz	r1, 8007e2c <xQueueGenericCreateStatic+0x56>
 8007e1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e1e:	f383 8811 	msr	BASEPRI, r3
 8007e22:	f3bf 8f6f 	isb	sy
 8007e26:	f3bf 8f4f 	dsb	sy
 8007e2a:	e7fe      	b.n	8007e2a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007e2c:	2350      	movs	r3, #80	; 0x50
 8007e2e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007e30:	9b01      	ldr	r3, [sp, #4]
 8007e32:	2b50      	cmp	r3, #80	; 0x50
 8007e34:	d008      	beq.n	8007e48 <xQueueGenericCreateStatic+0x72>
 8007e36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e3a:	f383 8811 	msr	BASEPRI, r3
 8007e3e:	f3bf 8f6f 	isb	sy
 8007e42:	f3bf 8f4f 	dsb	sy
 8007e46:	e7fe      	b.n	8007e46 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007e48:	2900      	cmp	r1, #0
 8007e4a:	bf08      	it	eq
 8007e4c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007e4e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007e50:	6022      	str	r2, [r4, #0]
 8007e52:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007e54:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007e58:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007e5c:	4619      	mov	r1, r3
 8007e5e:	4620      	mov	r0, r4
 8007e60:	f7ff ff7a 	bl	8007d58 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007e64:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007e68:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8007e6c:	4620      	mov	r0, r4
 8007e6e:	b002      	add	sp, #8
 8007e70:	bd10      	pop	{r4, pc}

08007e72 <xQueueGenericCreate>:
	{
 8007e72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007e74:	460d      	mov	r5, r1
 8007e76:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007e78:	4606      	mov	r6, r0
 8007e7a:	b940      	cbnz	r0, 8007e8e <xQueueGenericCreate+0x1c>
 8007e7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e80:	f383 8811 	msr	BASEPRI, r3
 8007e84:	f3bf 8f6f 	isb	sy
 8007e88:	f3bf 8f4f 	dsb	sy
 8007e8c:	e7fe      	b.n	8007e8c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007e8e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007e90:	3050      	adds	r0, #80	; 0x50
 8007e92:	f7ff fc11 	bl	80076b8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007e96:	4604      	mov	r4, r0
 8007e98:	b170      	cbz	r0, 8007eb8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007e9a:	2300      	movs	r3, #0
 8007e9c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007ea0:	b165      	cbz	r5, 8007ebc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007ea2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007ea6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8007eaa:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007eac:	2101      	movs	r1, #1
 8007eae:	4620      	mov	r0, r4
 8007eb0:	f7ff ff52 	bl	8007d58 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007eb4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007eb8:	4620      	mov	r0, r4
 8007eba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007ebc:	4603      	mov	r3, r0
 8007ebe:	e7f2      	b.n	8007ea6 <xQueueGenericCreate+0x34>

08007ec0 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007ec0:	b513      	push	{r0, r1, r4, lr}
 8007ec2:	4613      	mov	r3, r2
 8007ec4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007ec6:	b940      	cbnz	r0, 8007eda <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007ec8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ecc:	f383 8811 	msr	BASEPRI, r3
 8007ed0:	f3bf 8f6f 	isb	sy
 8007ed4:	f3bf 8f4f 	dsb	sy
 8007ed8:	e7fe      	b.n	8007ed8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007eda:	4288      	cmp	r0, r1
 8007edc:	d208      	bcs.n	8007ef0 <xQueueCreateCountingSemaphoreStatic+0x30>
 8007ede:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ee2:	f383 8811 	msr	BASEPRI, r3
 8007ee6:	f3bf 8f6f 	isb	sy
 8007eea:	f3bf 8f4f 	dsb	sy
 8007eee:	e7fe      	b.n	8007eee <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007ef0:	2202      	movs	r2, #2
 8007ef2:	9200      	str	r2, [sp, #0]
 8007ef4:	2200      	movs	r2, #0
 8007ef6:	4611      	mov	r1, r2
 8007ef8:	f7ff ff6d 	bl	8007dd6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007efc:	b100      	cbz	r0, 8007f00 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007efe:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007f00:	b002      	add	sp, #8
 8007f02:	bd10      	pop	{r4, pc}

08007f04 <xQueueCreateCountingSemaphore>:
	{
 8007f04:	b510      	push	{r4, lr}
 8007f06:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007f08:	b940      	cbnz	r0, 8007f1c <xQueueCreateCountingSemaphore+0x18>
 8007f0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f0e:	f383 8811 	msr	BASEPRI, r3
 8007f12:	f3bf 8f6f 	isb	sy
 8007f16:	f3bf 8f4f 	dsb	sy
 8007f1a:	e7fe      	b.n	8007f1a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007f1c:	4288      	cmp	r0, r1
 8007f1e:	d208      	bcs.n	8007f32 <xQueueCreateCountingSemaphore+0x2e>
 8007f20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f24:	f383 8811 	msr	BASEPRI, r3
 8007f28:	f3bf 8f6f 	isb	sy
 8007f2c:	f3bf 8f4f 	dsb	sy
 8007f30:	e7fe      	b.n	8007f30 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007f32:	2202      	movs	r2, #2
 8007f34:	2100      	movs	r1, #0
 8007f36:	f7ff ff9c 	bl	8007e72 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007f3a:	b100      	cbz	r0, 8007f3e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007f3c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007f3e:	bd10      	pop	{r4, pc}

08007f40 <xQueueGenericSend>:
{
 8007f40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007f44:	b085      	sub	sp, #20
 8007f46:	4688      	mov	r8, r1
 8007f48:	9201      	str	r2, [sp, #4]
 8007f4a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007f4c:	4604      	mov	r4, r0
 8007f4e:	b940      	cbnz	r0, 8007f62 <xQueueGenericSend+0x22>
 8007f50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f54:	f383 8811 	msr	BASEPRI, r3
 8007f58:	f3bf 8f6f 	isb	sy
 8007f5c:	f3bf 8f4f 	dsb	sy
 8007f60:	e7fe      	b.n	8007f60 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007f62:	b951      	cbnz	r1, 8007f7a <xQueueGenericSend+0x3a>
 8007f64:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007f66:	b143      	cbz	r3, 8007f7a <xQueueGenericSend+0x3a>
 8007f68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f6c:	f383 8811 	msr	BASEPRI, r3
 8007f70:	f3bf 8f6f 	isb	sy
 8007f74:	f3bf 8f4f 	dsb	sy
 8007f78:	e7fe      	b.n	8007f78 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007f7a:	2f02      	cmp	r7, #2
 8007f7c:	d10b      	bne.n	8007f96 <xQueueGenericSend+0x56>
 8007f7e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f80:	2b01      	cmp	r3, #1
 8007f82:	d008      	beq.n	8007f96 <xQueueGenericSend+0x56>
 8007f84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f88:	f383 8811 	msr	BASEPRI, r3
 8007f8c:	f3bf 8f6f 	isb	sy
 8007f90:	f3bf 8f4f 	dsb	sy
 8007f94:	e7fe      	b.n	8007f94 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007f96:	f000 ff9d 	bl	8008ed4 <xTaskGetSchedulerState>
 8007f9a:	4606      	mov	r6, r0
 8007f9c:	b950      	cbnz	r0, 8007fb4 <xQueueGenericSend+0x74>
 8007f9e:	9b01      	ldr	r3, [sp, #4]
 8007fa0:	b14b      	cbz	r3, 8007fb6 <xQueueGenericSend+0x76>
 8007fa2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fa6:	f383 8811 	msr	BASEPRI, r3
 8007faa:	f3bf 8f6f 	isb	sy
 8007fae:	f3bf 8f4f 	dsb	sy
 8007fb2:	e7fe      	b.n	8007fb2 <xQueueGenericSend+0x72>
 8007fb4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007fb6:	f04f 0900 	mov.w	r9, #0
 8007fba:	e037      	b.n	800802c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007fbc:	9d01      	ldr	r5, [sp, #4]
 8007fbe:	b91d      	cbnz	r5, 8007fc8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007fc0:	f7ff fd18 	bl	80079f4 <vPortExitCritical>
			return errQUEUE_FULL;
 8007fc4:	2000      	movs	r0, #0
 8007fc6:	e052      	b.n	800806e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8007fc8:	b916      	cbnz	r6, 8007fd0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007fca:	a802      	add	r0, sp, #8
 8007fcc:	f000 ff34 	bl	8008e38 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007fd0:	f7ff fd10 	bl	80079f4 <vPortExitCritical>
		vTaskSuspendAll();
 8007fd4:	f000 fd3e 	bl	8008a54 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007fd8:	f7ff fcec 	bl	80079b4 <vPortEnterCritical>
 8007fdc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007fe0:	2bff      	cmp	r3, #255	; 0xff
 8007fe2:	bf08      	it	eq
 8007fe4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007fe8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007fec:	2bff      	cmp	r3, #255	; 0xff
 8007fee:	bf08      	it	eq
 8007ff0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007ff4:	f7ff fcfe 	bl	80079f4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007ff8:	a901      	add	r1, sp, #4
 8007ffa:	a802      	add	r0, sp, #8
 8007ffc:	f000 ff28 	bl	8008e50 <xTaskCheckForTimeOut>
 8008000:	2800      	cmp	r0, #0
 8008002:	d14a      	bne.n	800809a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008004:	f7ff fcd6 	bl	80079b4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008008:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800800a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800800c:	429a      	cmp	r2, r3
 800800e:	d131      	bne.n	8008074 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008010:	f7ff fcf0 	bl	80079f4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008014:	9901      	ldr	r1, [sp, #4]
 8008016:	f104 0010 	add.w	r0, r4, #16
 800801a:	f000 fe91 	bl	8008d40 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800801e:	4620      	mov	r0, r4
 8008020:	f7ff fe62 	bl	8007ce8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008024:	f000 fdba 	bl	8008b9c <xTaskResumeAll>
 8008028:	b360      	cbz	r0, 8008084 <xQueueGenericSend+0x144>
 800802a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800802c:	f7ff fcc2 	bl	80079b4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008030:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008032:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008034:	429a      	cmp	r2, r3
 8008036:	d301      	bcc.n	800803c <xQueueGenericSend+0xfc>
 8008038:	2f02      	cmp	r7, #2
 800803a:	d1bf      	bne.n	8007fbc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800803c:	463a      	mov	r2, r7
 800803e:	4641      	mov	r1, r8
 8008040:	4620      	mov	r0, r4
 8008042:	f7ff fe06 	bl	8007c52 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008046:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008048:	b11b      	cbz	r3, 8008052 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800804a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800804e:	f000 feaf 	bl	8008db0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008052:	b148      	cbz	r0, 8008068 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008054:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008058:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800805c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008060:	f3bf 8f4f 	dsb	sy
 8008064:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008068:	f7ff fcc4 	bl	80079f4 <vPortExitCritical>
				return pdPASS;
 800806c:	2001      	movs	r0, #1
}
 800806e:	b005      	add	sp, #20
 8008070:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008074:	f7ff fcbe 	bl	80079f4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008078:	4620      	mov	r0, r4
 800807a:	f7ff fe35 	bl	8007ce8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800807e:	f000 fd8d 	bl	8008b9c <xTaskResumeAll>
 8008082:	e7d2      	b.n	800802a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008084:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008088:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800808c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008090:	f3bf 8f4f 	dsb	sy
 8008094:	f3bf 8f6f 	isb	sy
 8008098:	e7c7      	b.n	800802a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800809a:	4620      	mov	r0, r4
 800809c:	f7ff fe24 	bl	8007ce8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80080a0:	f000 fd7c 	bl	8008b9c <xTaskResumeAll>
 80080a4:	e78e      	b.n	8007fc4 <xQueueGenericSend+0x84>

080080a6 <xQueueGenericSendFromISR>:
{
 80080a6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80080aa:	4689      	mov	r9, r1
 80080ac:	4690      	mov	r8, r2
 80080ae:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80080b0:	4604      	mov	r4, r0
 80080b2:	b940      	cbnz	r0, 80080c6 <xQueueGenericSendFromISR+0x20>
 80080b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080b8:	f383 8811 	msr	BASEPRI, r3
 80080bc:	f3bf 8f6f 	isb	sy
 80080c0:	f3bf 8f4f 	dsb	sy
 80080c4:	e7fe      	b.n	80080c4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80080c6:	b951      	cbnz	r1, 80080de <xQueueGenericSendFromISR+0x38>
 80080c8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80080ca:	b143      	cbz	r3, 80080de <xQueueGenericSendFromISR+0x38>
 80080cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080d0:	f383 8811 	msr	BASEPRI, r3
 80080d4:	f3bf 8f6f 	isb	sy
 80080d8:	f3bf 8f4f 	dsb	sy
 80080dc:	e7fe      	b.n	80080dc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80080de:	2f02      	cmp	r7, #2
 80080e0:	d10b      	bne.n	80080fa <xQueueGenericSendFromISR+0x54>
 80080e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80080e4:	2b01      	cmp	r3, #1
 80080e6:	d008      	beq.n	80080fa <xQueueGenericSendFromISR+0x54>
 80080e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080ec:	f383 8811 	msr	BASEPRI, r3
 80080f0:	f3bf 8f6f 	isb	sy
 80080f4:	f3bf 8f4f 	dsb	sy
 80080f8:	e7fe      	b.n	80080f8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80080fa:	f7ff fd71 	bl	8007be0 <vPortValidateInterruptPriority>
	__asm volatile
 80080fe:	f3ef 8611 	mrs	r6, BASEPRI
 8008102:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008106:	f383 8811 	msr	BASEPRI, r3
 800810a:	f3bf 8f6f 	isb	sy
 800810e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008112:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008114:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008116:	429a      	cmp	r2, r3
 8008118:	d301      	bcc.n	800811e <xQueueGenericSendFromISR+0x78>
 800811a:	2f02      	cmp	r7, #2
 800811c:	d123      	bne.n	8008166 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800811e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008122:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008124:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008126:	463a      	mov	r2, r7
 8008128:	4649      	mov	r1, r9
 800812a:	4620      	mov	r0, r4
 800812c:	f7ff fd91 	bl	8007c52 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008130:	1c6b      	adds	r3, r5, #1
 8008132:	d113      	bne.n	800815c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008134:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008136:	b90b      	cbnz	r3, 800813c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8008138:	2001      	movs	r0, #1
 800813a:	e00b      	b.n	8008154 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800813c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008140:	f000 fe36 	bl	8008db0 <xTaskRemoveFromEventList>
 8008144:	2800      	cmp	r0, #0
 8008146:	d0f7      	beq.n	8008138 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8008148:	f1b8 0f00 	cmp.w	r8, #0
 800814c:	d0f4      	beq.n	8008138 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800814e:	2001      	movs	r0, #1
 8008150:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008154:	f386 8811 	msr	BASEPRI, r6
}
 8008158:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800815c:	3501      	adds	r5, #1
 800815e:	b26d      	sxtb	r5, r5
 8008160:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008164:	e7e8      	b.n	8008138 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8008166:	2000      	movs	r0, #0
 8008168:	e7f4      	b.n	8008154 <xQueueGenericSendFromISR+0xae>

0800816a <xQueueGiveFromISR>:
{
 800816a:	b570      	push	{r4, r5, r6, lr}
 800816c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800816e:	4604      	mov	r4, r0
 8008170:	b940      	cbnz	r0, 8008184 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008172:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008176:	f383 8811 	msr	BASEPRI, r3
 800817a:	f3bf 8f6f 	isb	sy
 800817e:	f3bf 8f4f 	dsb	sy
 8008182:	e7fe      	b.n	8008182 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008184:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008186:	b143      	cbz	r3, 800819a <xQueueGiveFromISR+0x30>
 8008188:	f04f 0350 	mov.w	r3, #80	; 0x50
 800818c:	f383 8811 	msr	BASEPRI, r3
 8008190:	f3bf 8f6f 	isb	sy
 8008194:	f3bf 8f4f 	dsb	sy
 8008198:	e7fe      	b.n	8008198 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800819a:	6803      	ldr	r3, [r0, #0]
 800819c:	b953      	cbnz	r3, 80081b4 <xQueueGiveFromISR+0x4a>
 800819e:	6883      	ldr	r3, [r0, #8]
 80081a0:	b143      	cbz	r3, 80081b4 <xQueueGiveFromISR+0x4a>
 80081a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081a6:	f383 8811 	msr	BASEPRI, r3
 80081aa:	f3bf 8f6f 	isb	sy
 80081ae:	f3bf 8f4f 	dsb	sy
 80081b2:	e7fe      	b.n	80081b2 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80081b4:	f7ff fd14 	bl	8007be0 <vPortValidateInterruptPriority>
	__asm volatile
 80081b8:	f3ef 8611 	mrs	r6, BASEPRI
 80081bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081c0:	f383 8811 	msr	BASEPRI, r3
 80081c4:	f3bf 8f6f 	isb	sy
 80081c8:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80081cc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80081ce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80081d0:	4293      	cmp	r3, r2
 80081d2:	d91c      	bls.n	800820e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80081d4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80081d8:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80081da:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80081dc:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80081de:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80081e0:	d110      	bne.n	8008204 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80081e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80081e4:	b90b      	cbnz	r3, 80081ea <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80081e6:	2001      	movs	r0, #1
 80081e8:	e009      	b.n	80081fe <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80081ea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80081ee:	f000 fddf 	bl	8008db0 <xTaskRemoveFromEventList>
 80081f2:	2800      	cmp	r0, #0
 80081f4:	d0f7      	beq.n	80081e6 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80081f6:	2d00      	cmp	r5, #0
 80081f8:	d0f5      	beq.n	80081e6 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80081fa:	2001      	movs	r0, #1
 80081fc:	6028      	str	r0, [r5, #0]
	__asm volatile
 80081fe:	f386 8811 	msr	BASEPRI, r6
}
 8008202:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008204:	3301      	adds	r3, #1
 8008206:	b25b      	sxtb	r3, r3
 8008208:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800820c:	e7eb      	b.n	80081e6 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800820e:	2000      	movs	r0, #0
 8008210:	e7f5      	b.n	80081fe <xQueueGiveFromISR+0x94>

08008212 <xQueueReceive>:
{
 8008212:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008216:	460f      	mov	r7, r1
 8008218:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800821a:	4604      	mov	r4, r0
 800821c:	b940      	cbnz	r0, 8008230 <xQueueReceive+0x1e>
	__asm volatile
 800821e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008222:	f383 8811 	msr	BASEPRI, r3
 8008226:	f3bf 8f6f 	isb	sy
 800822a:	f3bf 8f4f 	dsb	sy
 800822e:	e7fe      	b.n	800822e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008230:	b951      	cbnz	r1, 8008248 <xQueueReceive+0x36>
 8008232:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008234:	b143      	cbz	r3, 8008248 <xQueueReceive+0x36>
 8008236:	f04f 0350 	mov.w	r3, #80	; 0x50
 800823a:	f383 8811 	msr	BASEPRI, r3
 800823e:	f3bf 8f6f 	isb	sy
 8008242:	f3bf 8f4f 	dsb	sy
 8008246:	e7fe      	b.n	8008246 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008248:	f000 fe44 	bl	8008ed4 <xTaskGetSchedulerState>
 800824c:	4606      	mov	r6, r0
 800824e:	b950      	cbnz	r0, 8008266 <xQueueReceive+0x54>
 8008250:	9b01      	ldr	r3, [sp, #4]
 8008252:	b14b      	cbz	r3, 8008268 <xQueueReceive+0x56>
 8008254:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008258:	f383 8811 	msr	BASEPRI, r3
 800825c:	f3bf 8f6f 	isb	sy
 8008260:	f3bf 8f4f 	dsb	sy
 8008264:	e7fe      	b.n	8008264 <xQueueReceive+0x52>
 8008266:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008268:	f04f 0800 	mov.w	r8, #0
 800826c:	e03d      	b.n	80082ea <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800826e:	9d01      	ldr	r5, [sp, #4]
 8008270:	b91d      	cbnz	r5, 800827a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008272:	f7ff fbbf 	bl	80079f4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008276:	2000      	movs	r0, #0
 8008278:	e056      	b.n	8008328 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800827a:	b916      	cbnz	r6, 8008282 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800827c:	a802      	add	r0, sp, #8
 800827e:	f000 fddb 	bl	8008e38 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008282:	f7ff fbb7 	bl	80079f4 <vPortExitCritical>
		vTaskSuspendAll();
 8008286:	f000 fbe5 	bl	8008a54 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800828a:	f7ff fb93 	bl	80079b4 <vPortEnterCritical>
 800828e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008292:	2bff      	cmp	r3, #255	; 0xff
 8008294:	bf08      	it	eq
 8008296:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800829a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800829e:	2bff      	cmp	r3, #255	; 0xff
 80082a0:	bf08      	it	eq
 80082a2:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80082a6:	f7ff fba5 	bl	80079f4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80082aa:	a901      	add	r1, sp, #4
 80082ac:	a802      	add	r0, sp, #8
 80082ae:	f000 fdcf 	bl	8008e50 <xTaskCheckForTimeOut>
 80082b2:	2800      	cmp	r0, #0
 80082b4:	d141      	bne.n	800833a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80082b6:	4620      	mov	r0, r4
 80082b8:	f7ff fcc0 	bl	8007c3c <prvIsQueueEmpty>
 80082bc:	b3b8      	cbz	r0, 800832e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80082be:	9901      	ldr	r1, [sp, #4]
 80082c0:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80082c4:	f000 fd3c 	bl	8008d40 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80082c8:	4620      	mov	r0, r4
 80082ca:	f7ff fd0d 	bl	8007ce8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80082ce:	f000 fc65 	bl	8008b9c <xTaskResumeAll>
 80082d2:	b948      	cbnz	r0, 80082e8 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80082d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80082d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80082e0:	f3bf 8f4f 	dsb	sy
 80082e4:	f3bf 8f6f 	isb	sy
 80082e8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80082ea:	f7ff fb63 	bl	80079b4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80082ee:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80082f0:	2d00      	cmp	r5, #0
 80082f2:	d0bc      	beq.n	800826e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082f4:	4639      	mov	r1, r7
 80082f6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80082f8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082fa:	f7ff fcdf 	bl	8007cbc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80082fe:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008300:	6923      	ldr	r3, [r4, #16]
 8008302:	b173      	cbz	r3, 8008322 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008304:	f104 0010 	add.w	r0, r4, #16
 8008308:	f000 fd52 	bl	8008db0 <xTaskRemoveFromEventList>
 800830c:	b148      	cbz	r0, 8008322 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800830e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008312:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008316:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800831a:	f3bf 8f4f 	dsb	sy
 800831e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008322:	f7ff fb67 	bl	80079f4 <vPortExitCritical>
				return pdPASS;
 8008326:	2001      	movs	r0, #1
}
 8008328:	b004      	add	sp, #16
 800832a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800832e:	4620      	mov	r0, r4
 8008330:	f7ff fcda 	bl	8007ce8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008334:	f000 fc32 	bl	8008b9c <xTaskResumeAll>
 8008338:	e7d6      	b.n	80082e8 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800833a:	4620      	mov	r0, r4
 800833c:	f7ff fcd4 	bl	8007ce8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008340:	f000 fc2c 	bl	8008b9c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008344:	4620      	mov	r0, r4
 8008346:	f7ff fc79 	bl	8007c3c <prvIsQueueEmpty>
 800834a:	2800      	cmp	r0, #0
 800834c:	d0cc      	beq.n	80082e8 <xQueueReceive+0xd6>
 800834e:	e792      	b.n	8008276 <xQueueReceive+0x64>

08008350 <xQueueSemaphoreTake>:
{
 8008350:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008352:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008354:	4604      	mov	r4, r0
{
 8008356:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008358:	b940      	cbnz	r0, 800836c <xQueueSemaphoreTake+0x1c>
 800835a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800835e:	f383 8811 	msr	BASEPRI, r3
 8008362:	f3bf 8f6f 	isb	sy
 8008366:	f3bf 8f4f 	dsb	sy
 800836a:	e7fe      	b.n	800836a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800836c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800836e:	b145      	cbz	r5, 8008382 <xQueueSemaphoreTake+0x32>
 8008370:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008374:	f383 8811 	msr	BASEPRI, r3
 8008378:	f3bf 8f6f 	isb	sy
 800837c:	f3bf 8f4f 	dsb	sy
 8008380:	e7fe      	b.n	8008380 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008382:	f000 fda7 	bl	8008ed4 <xTaskGetSchedulerState>
 8008386:	4606      	mov	r6, r0
 8008388:	b950      	cbnz	r0, 80083a0 <xQueueSemaphoreTake+0x50>
 800838a:	9b01      	ldr	r3, [sp, #4]
 800838c:	b15b      	cbz	r3, 80083a6 <xQueueSemaphoreTake+0x56>
 800838e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008392:	f383 8811 	msr	BASEPRI, r3
 8008396:	f3bf 8f6f 	isb	sy
 800839a:	f3bf 8f4f 	dsb	sy
 800839e:	e7fe      	b.n	800839e <xQueueSemaphoreTake+0x4e>
 80083a0:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80083a2:	2700      	movs	r7, #0
 80083a4:	e053      	b.n	800844e <xQueueSemaphoreTake+0xfe>
 80083a6:	4605      	mov	r5, r0
 80083a8:	e7fb      	b.n	80083a2 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 80083aa:	9b01      	ldr	r3, [sp, #4]
 80083ac:	b963      	cbnz	r3, 80083c8 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80083ae:	b145      	cbz	r5, 80083c2 <xQueueSemaphoreTake+0x72>
 80083b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083b4:	f383 8811 	msr	BASEPRI, r3
 80083b8:	f3bf 8f6f 	isb	sy
 80083bc:	f3bf 8f4f 	dsb	sy
 80083c0:	e7fe      	b.n	80083c0 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 80083c2:	f7ff fb17 	bl	80079f4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80083c6:	e062      	b.n	800848e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 80083c8:	b916      	cbnz	r6, 80083d0 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80083ca:	a802      	add	r0, sp, #8
 80083cc:	f000 fd34 	bl	8008e38 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80083d0:	f7ff fb10 	bl	80079f4 <vPortExitCritical>
		vTaskSuspendAll();
 80083d4:	f000 fb3e 	bl	8008a54 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80083d8:	f7ff faec 	bl	80079b4 <vPortEnterCritical>
 80083dc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80083e0:	2bff      	cmp	r3, #255	; 0xff
 80083e2:	bf08      	it	eq
 80083e4:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80083e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80083ec:	2bff      	cmp	r3, #255	; 0xff
 80083ee:	bf08      	it	eq
 80083f0:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80083f4:	f7ff fafe 	bl	80079f4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80083f8:	a901      	add	r1, sp, #4
 80083fa:	a802      	add	r0, sp, #8
 80083fc:	f000 fd28 	bl	8008e50 <xTaskCheckForTimeOut>
 8008400:	2800      	cmp	r0, #0
 8008402:	d14d      	bne.n	80084a0 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008404:	4620      	mov	r0, r4
 8008406:	f7ff fc19 	bl	8007c3c <prvIsQueueEmpty>
 800840a:	2800      	cmp	r0, #0
 800840c:	d042      	beq.n	8008494 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800840e:	6823      	ldr	r3, [r4, #0]
 8008410:	b93b      	cbnz	r3, 8008422 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008412:	f7ff facf 	bl	80079b4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008416:	68a0      	ldr	r0, [r4, #8]
 8008418:	f000 fd6c 	bl	8008ef4 <xTaskPriorityInherit>
 800841c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800841e:	f7ff fae9 	bl	80079f4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008422:	9901      	ldr	r1, [sp, #4]
 8008424:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008428:	f000 fc8a 	bl	8008d40 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800842c:	4620      	mov	r0, r4
 800842e:	f7ff fc5b 	bl	8007ce8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008432:	f000 fbb3 	bl	8008b9c <xTaskResumeAll>
 8008436:	b948      	cbnz	r0, 800844c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8008438:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800843c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008440:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008444:	f3bf 8f4f 	dsb	sy
 8008448:	f3bf 8f6f 	isb	sy
 800844c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800844e:	f7ff fab1 	bl	80079b4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008452:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008454:	2b00      	cmp	r3, #0
 8008456:	d0a8      	beq.n	80083aa <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008458:	3b01      	subs	r3, #1
 800845a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800845c:	6823      	ldr	r3, [r4, #0]
 800845e:	b913      	cbnz	r3, 8008466 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008460:	f000 fe20 	bl	80090a4 <pvTaskIncrementMutexHeldCount>
 8008464:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008466:	6923      	ldr	r3, [r4, #16]
 8008468:	b173      	cbz	r3, 8008488 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800846a:	f104 0010 	add.w	r0, r4, #16
 800846e:	f000 fc9f 	bl	8008db0 <xTaskRemoveFromEventList>
 8008472:	b148      	cbz	r0, 8008488 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8008474:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008478:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800847c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008480:	f3bf 8f4f 	dsb	sy
 8008484:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008488:	f7ff fab4 	bl	80079f4 <vPortExitCritical>
				return pdPASS;
 800848c:	2501      	movs	r5, #1
}
 800848e:	4628      	mov	r0, r5
 8008490:	b005      	add	sp, #20
 8008492:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8008494:	4620      	mov	r0, r4
 8008496:	f7ff fc27 	bl	8007ce8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800849a:	f000 fb7f 	bl	8008b9c <xTaskResumeAll>
 800849e:	e7d5      	b.n	800844c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 80084a0:	4620      	mov	r0, r4
 80084a2:	f7ff fc21 	bl	8007ce8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80084a6:	f000 fb79 	bl	8008b9c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80084aa:	4620      	mov	r0, r4
 80084ac:	f7ff fbc6 	bl	8007c3c <prvIsQueueEmpty>
 80084b0:	2800      	cmp	r0, #0
 80084b2:	d0cb      	beq.n	800844c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 80084b4:	2d00      	cmp	r5, #0
 80084b6:	d0ea      	beq.n	800848e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 80084b8:	f7ff fa7c 	bl	80079b4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80084bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80084be:	b119      	cbz	r1, 80084c8 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80084c0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80084c2:	6819      	ldr	r1, [r3, #0]
 80084c4:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80084c8:	68a0      	ldr	r0, [r4, #8]
 80084ca:	f000 fd99 	bl	8009000 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80084ce:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 80084d0:	f7ff fa90 	bl	80079f4 <vPortExitCritical>
 80084d4:	e7db      	b.n	800848e <xQueueSemaphoreTake+0x13e>

080084d6 <xQueueReceiveFromISR>:
{
 80084d6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80084da:	4689      	mov	r9, r1
 80084dc:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80084de:	4605      	mov	r5, r0
 80084e0:	b940      	cbnz	r0, 80084f4 <xQueueReceiveFromISR+0x1e>
 80084e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084e6:	f383 8811 	msr	BASEPRI, r3
 80084ea:	f3bf 8f6f 	isb	sy
 80084ee:	f3bf 8f4f 	dsb	sy
 80084f2:	e7fe      	b.n	80084f2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80084f4:	b951      	cbnz	r1, 800850c <xQueueReceiveFromISR+0x36>
 80084f6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80084f8:	b143      	cbz	r3, 800850c <xQueueReceiveFromISR+0x36>
 80084fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084fe:	f383 8811 	msr	BASEPRI, r3
 8008502:	f3bf 8f6f 	isb	sy
 8008506:	f3bf 8f4f 	dsb	sy
 800850a:	e7fe      	b.n	800850a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800850c:	f7ff fb68 	bl	8007be0 <vPortValidateInterruptPriority>
	__asm volatile
 8008510:	f3ef 8711 	mrs	r7, BASEPRI
 8008514:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008518:	f383 8811 	msr	BASEPRI, r3
 800851c:	f3bf 8f6f 	isb	sy
 8008520:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008524:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008526:	b31c      	cbz	r4, 8008570 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008528:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800852c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800852e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008530:	4628      	mov	r0, r5
 8008532:	f7ff fbc3 	bl	8007cbc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008536:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8008538:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800853a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800853c:	d113      	bne.n	8008566 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800853e:	692b      	ldr	r3, [r5, #16]
 8008540:	b90b      	cbnz	r3, 8008546 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008542:	2001      	movs	r0, #1
 8008544:	e00b      	b.n	800855e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008546:	f105 0010 	add.w	r0, r5, #16
 800854a:	f000 fc31 	bl	8008db0 <xTaskRemoveFromEventList>
 800854e:	2800      	cmp	r0, #0
 8008550:	d0f7      	beq.n	8008542 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008552:	f1b8 0f00 	cmp.w	r8, #0
 8008556:	d0f4      	beq.n	8008542 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008558:	2001      	movs	r0, #1
 800855a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800855e:	f387 8811 	msr	BASEPRI, r7
}
 8008562:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008566:	3601      	adds	r6, #1
 8008568:	b276      	sxtb	r6, r6
 800856a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800856e:	e7e8      	b.n	8008542 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008570:	4620      	mov	r0, r4
 8008572:	e7f4      	b.n	800855e <xQueueReceiveFromISR+0x88>

08008574 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008574:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008576:	4a07      	ldr	r2, [pc, #28]	; (8008594 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008578:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800857a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800857e:	b92c      	cbnz	r4, 800858c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008580:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008584:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8008588:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800858a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800858c:	3301      	adds	r3, #1
 800858e:	2b08      	cmp	r3, #8
 8008590:	d1f3      	bne.n	800857a <vQueueAddToRegistry+0x6>
 8008592:	e7fa      	b.n	800858a <vQueueAddToRegistry+0x16>
 8008594:	200170dc 	.word	0x200170dc

08008598 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008598:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800859a:	4a08      	ldr	r2, [pc, #32]	; (80085bc <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800859c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800859e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 80085a2:	684c      	ldr	r4, [r1, #4]
 80085a4:	4284      	cmp	r4, r0
 80085a6:	d104      	bne.n	80085b2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80085a8:	2000      	movs	r0, #0
 80085aa:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80085ae:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80085b0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80085b2:	3301      	adds	r3, #1
 80085b4:	2b08      	cmp	r3, #8
 80085b6:	d1f2      	bne.n	800859e <vQueueUnregisterQueue+0x6>
 80085b8:	e7fa      	b.n	80085b0 <vQueueUnregisterQueue+0x18>
 80085ba:	bf00      	nop
 80085bc:	200170dc 	.word	0x200170dc

080085c0 <vQueueDelete>:
{
 80085c0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80085c2:	4604      	mov	r4, r0
 80085c4:	b940      	cbnz	r0, 80085d8 <vQueueDelete+0x18>
	__asm volatile
 80085c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085ca:	f383 8811 	msr	BASEPRI, r3
 80085ce:	f3bf 8f6f 	isb	sy
 80085d2:	f3bf 8f4f 	dsb	sy
 80085d6:	e7fe      	b.n	80085d6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80085d8:	f7ff ffde 	bl	8008598 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80085dc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80085e0:	b923      	cbnz	r3, 80085ec <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80085e2:	4620      	mov	r0, r4
}
 80085e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80085e8:	f7ff b8fe 	b.w	80077e8 <vPortFree>
}
 80085ec:	bd10      	pop	{r4, pc}

080085ee <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80085ee:	b570      	push	{r4, r5, r6, lr}
 80085f0:	4604      	mov	r4, r0
 80085f2:	460d      	mov	r5, r1
 80085f4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80085f6:	f7ff f9dd 	bl	80079b4 <vPortEnterCritical>
 80085fa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80085fe:	2bff      	cmp	r3, #255	; 0xff
 8008600:	bf04      	itt	eq
 8008602:	2300      	moveq	r3, #0
 8008604:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008608:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800860c:	2bff      	cmp	r3, #255	; 0xff
 800860e:	bf04      	itt	eq
 8008610:	2300      	moveq	r3, #0
 8008612:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8008616:	f7ff f9ed 	bl	80079f4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800861a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800861c:	b92b      	cbnz	r3, 800862a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800861e:	4632      	mov	r2, r6
 8008620:	4629      	mov	r1, r5
 8008622:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008626:	f000 fba5 	bl	8008d74 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800862a:	4620      	mov	r0, r4
	}
 800862c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008630:	f7ff bb5a 	b.w	8007ce8 <prvUnlockQueue>

08008634 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008638:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800863a:	f7ff f9bb 	bl	80079b4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800863e:	4b30      	ldr	r3, [pc, #192]	; (8008700 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008640:	4e30      	ldr	r6, [pc, #192]	; (8008704 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008642:	681a      	ldr	r2, [r3, #0]
 8008644:	4f30      	ldr	r7, [pc, #192]	; (8008708 <prvAddNewTaskToReadyList+0xd4>)
 8008646:	3201      	adds	r2, #1
 8008648:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800864a:	6835      	ldr	r5, [r6, #0]
 800864c:	2d00      	cmp	r5, #0
 800864e:	d14b      	bne.n	80086e8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008650:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008652:	681b      	ldr	r3, [r3, #0]
 8008654:	2b01      	cmp	r3, #1
 8008656:	d11f      	bne.n	8008698 <prvAddNewTaskToReadyList+0x64>
 8008658:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800865a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800865c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800865e:	f7ff f901 	bl	8007864 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008662:	2d38      	cmp	r5, #56	; 0x38
 8008664:	f108 0814 	add.w	r8, r8, #20
 8008668:	d1f7      	bne.n	800865a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800866a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008730 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800866e:	4d27      	ldr	r5, [pc, #156]	; (800870c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008670:	4640      	mov	r0, r8
 8008672:	f7ff f8f7 	bl	8007864 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008676:	4628      	mov	r0, r5
 8008678:	f7ff f8f4 	bl	8007864 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800867c:	4824      	ldr	r0, [pc, #144]	; (8008710 <prvAddNewTaskToReadyList+0xdc>)
 800867e:	f7ff f8f1 	bl	8007864 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008682:	4824      	ldr	r0, [pc, #144]	; (8008714 <prvAddNewTaskToReadyList+0xe0>)
 8008684:	f7ff f8ee 	bl	8007864 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008688:	4823      	ldr	r0, [pc, #140]	; (8008718 <prvAddNewTaskToReadyList+0xe4>)
 800868a:	f7ff f8eb 	bl	8007864 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800868e:	4b23      	ldr	r3, [pc, #140]	; (800871c <prvAddNewTaskToReadyList+0xe8>)
 8008690:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008694:	4b22      	ldr	r3, [pc, #136]	; (8008720 <prvAddNewTaskToReadyList+0xec>)
 8008696:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008698:	4a22      	ldr	r2, [pc, #136]	; (8008724 <prvAddNewTaskToReadyList+0xf0>)
 800869a:	6813      	ldr	r3, [r2, #0]
 800869c:	3301      	adds	r3, #1
 800869e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80086a0:	4a21      	ldr	r2, [pc, #132]	; (8008728 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80086a2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80086a4:	6811      	ldr	r1, [r2, #0]
 80086a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80086a8:	2014      	movs	r0, #20
 80086aa:	428b      	cmp	r3, r1
 80086ac:	fb00 7003 	mla	r0, r0, r3, r7
 80086b0:	f104 0104 	add.w	r1, r4, #4
 80086b4:	bf88      	it	hi
 80086b6:	6013      	strhi	r3, [r2, #0]
 80086b8:	f7ff f8e2 	bl	8007880 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80086bc:	f7ff f99a 	bl	80079f4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80086c0:	4b1a      	ldr	r3, [pc, #104]	; (800872c <prvAddNewTaskToReadyList+0xf8>)
 80086c2:	681b      	ldr	r3, [r3, #0]
 80086c4:	b173      	cbz	r3, 80086e4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80086c6:	6833      	ldr	r3, [r6, #0]
 80086c8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80086ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80086cc:	429a      	cmp	r2, r3
 80086ce:	d209      	bcs.n	80086e4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80086d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086dc:	f3bf 8f4f 	dsb	sy
 80086e0:	f3bf 8f6f 	isb	sy
}
 80086e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80086e8:	4b10      	ldr	r3, [pc, #64]	; (800872c <prvAddNewTaskToReadyList+0xf8>)
 80086ea:	681b      	ldr	r3, [r3, #0]
 80086ec:	2b00      	cmp	r3, #0
 80086ee:	d1d3      	bne.n	8008698 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80086f0:	6833      	ldr	r3, [r6, #0]
 80086f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80086f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80086f6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 80086f8:	bf98      	it	ls
 80086fa:	6034      	strls	r4, [r6, #0]
 80086fc:	e7cc      	b.n	8008698 <prvAddNewTaskToReadyList+0x64>
 80086fe:	bf00      	nop
 8008700:	20017588 	.word	0x20017588
 8008704:	2001711c 	.word	0x2001711c
 8008708:	20017128 	.word	0x20017128
 800870c:	200175b0 	.word	0x200175b0
 8008710:	200175d0 	.word	0x200175d0
 8008714:	200175fc 	.word	0x200175fc
 8008718:	200175e8 	.word	0x200175e8
 800871c:	20017120 	.word	0x20017120
 8008720:	20017124 	.word	0x20017124
 8008724:	20017594 	.word	0x20017594
 8008728:	20017598 	.word	0x20017598
 800872c:	200175e4 	.word	0x200175e4
 8008730:	2001759c 	.word	0x2001759c

08008734 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008736:	4b15      	ldr	r3, [pc, #84]	; (800878c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008738:	4e15      	ldr	r6, [pc, #84]	; (8008790 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800873a:	681d      	ldr	r5, [r3, #0]
{
 800873c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800873e:	6830      	ldr	r0, [r6, #0]
 8008740:	3004      	adds	r0, #4
{
 8008742:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008744:	f7ff f8bf 	bl	80078c6 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008748:	1c63      	adds	r3, r4, #1
 800874a:	d107      	bne.n	800875c <prvAddCurrentTaskToDelayedList+0x28>
 800874c:	b137      	cbz	r7, 800875c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800874e:	6831      	ldr	r1, [r6, #0]
 8008750:	4810      	ldr	r0, [pc, #64]	; (8008794 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008752:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008756:	3104      	adds	r1, #4
 8008758:	f7ff b892 	b.w	8007880 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800875c:	6833      	ldr	r3, [r6, #0]
 800875e:	192c      	adds	r4, r5, r4
 8008760:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008762:	d307      	bcc.n	8008774 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008764:	4b0c      	ldr	r3, [pc, #48]	; (8008798 <prvAddCurrentTaskToDelayedList+0x64>)
 8008766:	6818      	ldr	r0, [r3, #0]
 8008768:	6831      	ldr	r1, [r6, #0]
}
 800876a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800876e:	3104      	adds	r1, #4
 8008770:	f7ff b892 	b.w	8007898 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008774:	4b09      	ldr	r3, [pc, #36]	; (800879c <prvAddCurrentTaskToDelayedList+0x68>)
 8008776:	6818      	ldr	r0, [r3, #0]
 8008778:	6831      	ldr	r1, [r6, #0]
 800877a:	3104      	adds	r1, #4
 800877c:	f7ff f88c 	bl	8007898 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008780:	4b07      	ldr	r3, [pc, #28]	; (80087a0 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008782:	681a      	ldr	r2, [r3, #0]
 8008784:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008786:	bf88      	it	hi
 8008788:	601c      	strhi	r4, [r3, #0]
}
 800878a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800878c:	20017610 	.word	0x20017610
 8008790:	2001711c 	.word	0x2001711c
 8008794:	200175e8 	.word	0x200175e8
 8008798:	20017124 	.word	0x20017124
 800879c:	20017120 	.word	0x20017120
 80087a0:	200175c4 	.word	0x200175c4

080087a4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80087a4:	4a06      	ldr	r2, [pc, #24]	; (80087c0 <prvResetNextTaskUnblockTime+0x1c>)
 80087a6:	6813      	ldr	r3, [r2, #0]
 80087a8:	6819      	ldr	r1, [r3, #0]
 80087aa:	4b06      	ldr	r3, [pc, #24]	; (80087c4 <prvResetNextTaskUnblockTime+0x20>)
 80087ac:	b919      	cbnz	r1, 80087b6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80087ae:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80087b2:	601a      	str	r2, [r3, #0]
}
 80087b4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80087b6:	6812      	ldr	r2, [r2, #0]
 80087b8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80087ba:	68d2      	ldr	r2, [r2, #12]
 80087bc:	6852      	ldr	r2, [r2, #4]
 80087be:	e7f8      	b.n	80087b2 <prvResetNextTaskUnblockTime+0xe>
 80087c0:	20017120 	.word	0x20017120
 80087c4:	200175c4 	.word	0x200175c4

080087c8 <prvDeleteTCB>:
	{
 80087c8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80087ca:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 80087ce:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80087d0:	b93b      	cbnz	r3, 80087e2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 80087d2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80087d4:	f7ff f808 	bl	80077e8 <vPortFree>
				vPortFree( pxTCB );
 80087d8:	4620      	mov	r0, r4
	}
 80087da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80087de:	f7ff b803 	b.w	80077e8 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80087e2:	2b01      	cmp	r3, #1
 80087e4:	d0f9      	beq.n	80087da <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80087e6:	2b02      	cmp	r3, #2
 80087e8:	d008      	beq.n	80087fc <prvDeleteTCB+0x34>
 80087ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087ee:	f383 8811 	msr	BASEPRI, r3
 80087f2:	f3bf 8f6f 	isb	sy
 80087f6:	f3bf 8f4f 	dsb	sy
 80087fa:	e7fe      	b.n	80087fa <prvDeleteTCB+0x32>
	}
 80087fc:	bd10      	pop	{r4, pc}
	...

08008800 <prvIdleTask>:
{
 8008800:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008802:	4c13      	ldr	r4, [pc, #76]	; (8008850 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008804:	4f13      	ldr	r7, [pc, #76]	; (8008854 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008806:	4d14      	ldr	r5, [pc, #80]	; (8008858 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008808:	6823      	ldr	r3, [r4, #0]
 800880a:	b973      	cbnz	r3, 800882a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800880c:	4b13      	ldr	r3, [pc, #76]	; (800885c <prvIdleTask+0x5c>)
 800880e:	681b      	ldr	r3, [r3, #0]
 8008810:	2b01      	cmp	r3, #1
 8008812:	d9f8      	bls.n	8008806 <prvIdleTask+0x6>
				taskYIELD();
 8008814:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008818:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800881c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008820:	f3bf 8f4f 	dsb	sy
 8008824:	f3bf 8f6f 	isb	sy
 8008828:	e7ed      	b.n	8008806 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800882a:	f7ff f8c3 	bl	80079b4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800882e:	68fb      	ldr	r3, [r7, #12]
 8008830:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008832:	1d30      	adds	r0, r6, #4
 8008834:	f7ff f847 	bl	80078c6 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008838:	682b      	ldr	r3, [r5, #0]
 800883a:	3b01      	subs	r3, #1
 800883c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800883e:	6823      	ldr	r3, [r4, #0]
 8008840:	3b01      	subs	r3, #1
 8008842:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008844:	f7ff f8d6 	bl	80079f4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008848:	4630      	mov	r0, r6
 800884a:	f7ff ffbd 	bl	80087c8 <prvDeleteTCB>
 800884e:	e7db      	b.n	8008808 <prvIdleTask+0x8>
 8008850:	2001758c 	.word	0x2001758c
 8008854:	200175fc 	.word	0x200175fc
 8008858:	20017588 	.word	0x20017588
 800885c:	20017128 	.word	0x20017128

08008860 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008860:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008864:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008868:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800886c:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800886e:	4606      	mov	r6, r0
 8008870:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008872:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008874:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008876:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008878:	f013 ff50 	bl	801c71c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800887c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800887e:	f1a9 0904 	sub.w	r9, r9, #4
 8008882:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008884:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008888:	b3b5      	cbz	r5, 80088f8 <prvInitialiseNewTask.constprop.0+0x98>
 800888a:	1e6b      	subs	r3, r5, #1
 800888c:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008890:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008892:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8008896:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800889a:	b108      	cbz	r0, 80088a0 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800889c:	42ab      	cmp	r3, r5
 800889e:	d1f8      	bne.n	8008892 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80088a0:	2300      	movs	r3, #0
 80088a2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80088a6:	9d08      	ldr	r5, [sp, #32]
 80088a8:	2d37      	cmp	r5, #55	; 0x37
 80088aa:	bf28      	it	cs
 80088ac:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80088ae:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80088b2:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80088b4:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80088b6:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80088b8:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80088bc:	f7fe ffdd 	bl	800787a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088c0:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80088c4:	f104 0018 	add.w	r0, r4, #24
 80088c8:	f7fe ffd7 	bl	800787a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80088cc:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80088d0:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088d2:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80088d4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80088d6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80088da:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80088de:	463a      	mov	r2, r7
 80088e0:	4631      	mov	r1, r6
 80088e2:	4648      	mov	r0, r9
 80088e4:	f7ff f83e 	bl	8007964 <pxPortInitialiseStack>
 80088e8:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80088ea:	f1b8 0f00 	cmp.w	r8, #0
 80088ee:	d001      	beq.n	80088f4 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80088f0:	f8c8 4000 	str.w	r4, [r8]
}
 80088f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80088f8:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80088fc:	e7d3      	b.n	80088a6 <prvInitialiseNewTask.constprop.0+0x46>

080088fe <xTaskCreateStatic>:
	{
 80088fe:	b570      	push	{r4, r5, r6, lr}
 8008900:	b086      	sub	sp, #24
 8008902:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008906:	b945      	cbnz	r5, 800891a <xTaskCreateStatic+0x1c>
 8008908:	f04f 0350 	mov.w	r3, #80	; 0x50
 800890c:	f383 8811 	msr	BASEPRI, r3
 8008910:	f3bf 8f6f 	isb	sy
 8008914:	f3bf 8f4f 	dsb	sy
 8008918:	e7fe      	b.n	8008918 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800891a:	b944      	cbnz	r4, 800892e <xTaskCreateStatic+0x30>
 800891c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008920:	f383 8811 	msr	BASEPRI, r3
 8008924:	f3bf 8f6f 	isb	sy
 8008928:	f3bf 8f4f 	dsb	sy
 800892c:	e7fe      	b.n	800892c <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800892e:	2660      	movs	r6, #96	; 0x60
 8008930:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008932:	9e05      	ldr	r6, [sp, #20]
 8008934:	2e60      	cmp	r6, #96	; 0x60
 8008936:	d008      	beq.n	800894a <xTaskCreateStatic+0x4c>
 8008938:	f04f 0350 	mov.w	r3, #80	; 0x50
 800893c:	f383 8811 	msr	BASEPRI, r3
 8008940:	f3bf 8f6f 	isb	sy
 8008944:	f3bf 8f4f 	dsb	sy
 8008948:	e7fe      	b.n	8008948 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800894a:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800894c:	2502      	movs	r5, #2
 800894e:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008952:	ad04      	add	r5, sp, #16
 8008954:	9501      	str	r5, [sp, #4]
 8008956:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008958:	9402      	str	r4, [sp, #8]
 800895a:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800895c:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800895e:	f7ff ff7f 	bl	8008860 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008962:	4620      	mov	r0, r4
 8008964:	f7ff fe66 	bl	8008634 <prvAddNewTaskToReadyList>
	}
 8008968:	9804      	ldr	r0, [sp, #16]
 800896a:	b006      	add	sp, #24
 800896c:	bd70      	pop	{r4, r5, r6, pc}

0800896e <xTaskCreate>:
	{
 800896e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008972:	4607      	mov	r7, r0
 8008974:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008976:	0090      	lsls	r0, r2, #2
	{
 8008978:	4688      	mov	r8, r1
 800897a:	4616      	mov	r6, r2
 800897c:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800897e:	f7fe fe9b 	bl	80076b8 <pvPortMalloc>
			if( pxStack != NULL )
 8008982:	4605      	mov	r5, r0
 8008984:	b1e8      	cbz	r0, 80089c2 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008986:	2060      	movs	r0, #96	; 0x60
 8008988:	f7fe fe96 	bl	80076b8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800898c:	4604      	mov	r4, r0
 800898e:	b1a8      	cbz	r0, 80089bc <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008990:	2300      	movs	r3, #0
 8008992:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008996:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8008998:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800899a:	9301      	str	r3, [sp, #4]
 800899c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800899e:	9002      	str	r0, [sp, #8]
 80089a0:	9300      	str	r3, [sp, #0]
 80089a2:	4632      	mov	r2, r6
 80089a4:	464b      	mov	r3, r9
 80089a6:	4641      	mov	r1, r8
 80089a8:	4638      	mov	r0, r7
 80089aa:	f7ff ff59 	bl	8008860 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80089ae:	4620      	mov	r0, r4
 80089b0:	f7ff fe40 	bl	8008634 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80089b4:	2001      	movs	r0, #1
	}
 80089b6:	b005      	add	sp, #20
 80089b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80089bc:	4628      	mov	r0, r5
 80089be:	f7fe ff13 	bl	80077e8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80089c2:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80089c6:	e7f6      	b.n	80089b6 <xTaskCreate+0x48>

080089c8 <vTaskStartScheduler>:
{
 80089c8:	b510      	push	{r4, lr}
 80089ca:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80089cc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80089ce:	aa07      	add	r2, sp, #28
 80089d0:	a906      	add	r1, sp, #24
 80089d2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80089d4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80089d8:	f7fe fe32 	bl	8007640 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80089dc:	9b05      	ldr	r3, [sp, #20]
 80089de:	9302      	str	r3, [sp, #8]
 80089e0:	9b06      	ldr	r3, [sp, #24]
 80089e2:	9a07      	ldr	r2, [sp, #28]
 80089e4:	4916      	ldr	r1, [pc, #88]	; (8008a40 <vTaskStartScheduler+0x78>)
 80089e6:	4817      	ldr	r0, [pc, #92]	; (8008a44 <vTaskStartScheduler+0x7c>)
 80089e8:	e9cd 4300 	strd	r4, r3, [sp]
 80089ec:	4623      	mov	r3, r4
 80089ee:	f7ff ff86 	bl	80088fe <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80089f2:	b318      	cbz	r0, 8008a3c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 80089f4:	f000 fbb4 	bl	8009160 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80089f8:	2801      	cmp	r0, #1
 80089fa:	d114      	bne.n	8008a26 <vTaskStartScheduler+0x5e>
 80089fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a00:	f383 8811 	msr	BASEPRI, r3
 8008a04:	f3bf 8f6f 	isb	sy
 8008a08:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008a0c:	4b0e      	ldr	r3, [pc, #56]	; (8008a48 <vTaskStartScheduler+0x80>)
 8008a0e:	f04f 32ff 	mov.w	r2, #4294967295
 8008a12:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008a14:	4b0d      	ldr	r3, [pc, #52]	; (8008a4c <vTaskStartScheduler+0x84>)
 8008a16:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008a18:	4b0d      	ldr	r3, [pc, #52]	; (8008a50 <vTaskStartScheduler+0x88>)
 8008a1a:	601c      	str	r4, [r3, #0]
}
 8008a1c:	b008      	add	sp, #32
 8008a1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008a22:	f7ff b857 	b.w	8007ad4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008a26:	3001      	adds	r0, #1
 8008a28:	d108      	bne.n	8008a3c <vTaskStartScheduler+0x74>
 8008a2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a2e:	f383 8811 	msr	BASEPRI, r3
 8008a32:	f3bf 8f6f 	isb	sy
 8008a36:	f3bf 8f4f 	dsb	sy
 8008a3a:	e7fe      	b.n	8008a3a <vTaskStartScheduler+0x72>
}
 8008a3c:	b008      	add	sp, #32
 8008a3e:	bd10      	pop	{r4, pc}
 8008a40:	0801f24c 	.word	0x0801f24c
 8008a44:	08008801 	.word	0x08008801
 8008a48:	200175c4 	.word	0x200175c4
 8008a4c:	200175e4 	.word	0x200175e4
 8008a50:	20017610 	.word	0x20017610

08008a54 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008a54:	4a02      	ldr	r2, [pc, #8]	; (8008a60 <vTaskSuspendAll+0xc>)
 8008a56:	6813      	ldr	r3, [r2, #0]
 8008a58:	3301      	adds	r3, #1
 8008a5a:	6013      	str	r3, [r2, #0]
}
 8008a5c:	4770      	bx	lr
 8008a5e:	bf00      	nop
 8008a60:	20017590 	.word	0x20017590

08008a64 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008a64:	4b01      	ldr	r3, [pc, #4]	; (8008a6c <xTaskGetTickCount+0x8>)
 8008a66:	6818      	ldr	r0, [r3, #0]
}
 8008a68:	4770      	bx	lr
 8008a6a:	bf00      	nop
 8008a6c:	20017610 	.word	0x20017610

08008a70 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a70:	4b3f      	ldr	r3, [pc, #252]	; (8008b70 <xTaskIncrementTick+0x100>)
 8008a72:	681b      	ldr	r3, [r3, #0]
{
 8008a74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a78:	2b00      	cmp	r3, #0
 8008a7a:	d173      	bne.n	8008b64 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008a7c:	4b3d      	ldr	r3, [pc, #244]	; (8008b74 <xTaskIncrementTick+0x104>)
 8008a7e:	681d      	ldr	r5, [r3, #0]
 8008a80:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8008a82:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008a84:	b9bd      	cbnz	r5, 8008ab6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008a86:	4b3c      	ldr	r3, [pc, #240]	; (8008b78 <xTaskIncrementTick+0x108>)
 8008a88:	681a      	ldr	r2, [r3, #0]
 8008a8a:	6812      	ldr	r2, [r2, #0]
 8008a8c:	b142      	cbz	r2, 8008aa0 <xTaskIncrementTick+0x30>
 8008a8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a92:	f383 8811 	msr	BASEPRI, r3
 8008a96:	f3bf 8f6f 	isb	sy
 8008a9a:	f3bf 8f4f 	dsb	sy
 8008a9e:	e7fe      	b.n	8008a9e <xTaskIncrementTick+0x2e>
 8008aa0:	4a36      	ldr	r2, [pc, #216]	; (8008b7c <xTaskIncrementTick+0x10c>)
 8008aa2:	6819      	ldr	r1, [r3, #0]
 8008aa4:	6810      	ldr	r0, [r2, #0]
 8008aa6:	6018      	str	r0, [r3, #0]
 8008aa8:	6011      	str	r1, [r2, #0]
 8008aaa:	4a35      	ldr	r2, [pc, #212]	; (8008b80 <xTaskIncrementTick+0x110>)
 8008aac:	6813      	ldr	r3, [r2, #0]
 8008aae:	3301      	adds	r3, #1
 8008ab0:	6013      	str	r3, [r2, #0]
 8008ab2:	f7ff fe77 	bl	80087a4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008ab6:	4e33      	ldr	r6, [pc, #204]	; (8008b84 <xTaskIncrementTick+0x114>)
 8008ab8:	4f33      	ldr	r7, [pc, #204]	; (8008b88 <xTaskIncrementTick+0x118>)
 8008aba:	6833      	ldr	r3, [r6, #0]
 8008abc:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008b94 <xTaskIncrementTick+0x124>
 8008ac0:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008ac2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008ac6:	d211      	bcs.n	8008aec <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008ac8:	f8d8 3000 	ldr.w	r3, [r8]
 8008acc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ace:	2214      	movs	r2, #20
 8008ad0:	4353      	muls	r3, r2
 8008ad2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008ad4:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8008ad6:	4b2d      	ldr	r3, [pc, #180]	; (8008b8c <xTaskIncrementTick+0x11c>)
 8008ad8:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8008ada:	bf28      	it	cs
 8008adc:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8008ade:	2b00      	cmp	r3, #0
 8008ae0:	bf18      	it	ne
 8008ae2:	2401      	movne	r4, #1
}
 8008ae4:	4620      	mov	r0, r4
 8008ae6:	b003      	add	sp, #12
 8008ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008aec:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008b78 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008af0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008b98 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008af4:	f8d9 3000 	ldr.w	r3, [r9]
 8008af8:	681b      	ldr	r3, [r3, #0]
 8008afa:	b91b      	cbnz	r3, 8008b04 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008afc:	f04f 33ff 	mov.w	r3, #4294967295
 8008b00:	6033      	str	r3, [r6, #0]
					break;
 8008b02:	e7e1      	b.n	8008ac8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b04:	f8d9 3000 	ldr.w	r3, [r9]
 8008b08:	68db      	ldr	r3, [r3, #12]
 8008b0a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008b0e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8008b12:	4295      	cmp	r5, r2
 8008b14:	d201      	bcs.n	8008b1a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008b16:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008b18:	e7d6      	b.n	8008ac8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008b1a:	f10b 0104 	add.w	r1, fp, #4
 8008b1e:	4608      	mov	r0, r1
 8008b20:	9101      	str	r1, [sp, #4]
 8008b22:	f7fe fed0 	bl	80078c6 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008b26:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008b2a:	9901      	ldr	r1, [sp, #4]
 8008b2c:	b122      	cbz	r2, 8008b38 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008b2e:	f10b 0018 	add.w	r0, fp, #24
 8008b32:	f7fe fec8 	bl	80078c6 <uxListRemove>
 8008b36:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008b38:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008b3c:	f8da 2000 	ldr.w	r2, [sl]
 8008b40:	2314      	movs	r3, #20
 8008b42:	4290      	cmp	r0, r2
 8008b44:	bf88      	it	hi
 8008b46:	f8ca 0000 	strhi.w	r0, [sl]
 8008b4a:	fb03 7000 	mla	r0, r3, r0, r7
 8008b4e:	f7fe fe97 	bl	8007880 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008b52:	f8d8 1000 	ldr.w	r1, [r8]
 8008b56:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008b5a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008b5c:	429a      	cmp	r2, r3
 8008b5e:	bf28      	it	cs
 8008b60:	2401      	movcs	r4, #1
 8008b62:	e7c7      	b.n	8008af4 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008b64:	4a0a      	ldr	r2, [pc, #40]	; (8008b90 <xTaskIncrementTick+0x120>)
 8008b66:	6813      	ldr	r3, [r2, #0]
 8008b68:	3301      	adds	r3, #1
 8008b6a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008b6c:	2400      	movs	r4, #0
	return xSwitchRequired;
 8008b6e:	e7b9      	b.n	8008ae4 <xTaskIncrementTick+0x74>
 8008b70:	20017590 	.word	0x20017590
 8008b74:	20017610 	.word	0x20017610
 8008b78:	20017120 	.word	0x20017120
 8008b7c:	20017124 	.word	0x20017124
 8008b80:	200175c8 	.word	0x200175c8
 8008b84:	200175c4 	.word	0x200175c4
 8008b88:	20017128 	.word	0x20017128
 8008b8c:	20017614 	.word	0x20017614
 8008b90:	200175cc 	.word	0x200175cc
 8008b94:	2001711c 	.word	0x2001711c
 8008b98:	20017598 	.word	0x20017598

08008b9c <xTaskResumeAll>:
{
 8008b9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008b9e:	4c31      	ldr	r4, [pc, #196]	; (8008c64 <xTaskResumeAll+0xc8>)
 8008ba0:	6823      	ldr	r3, [r4, #0]
 8008ba2:	b943      	cbnz	r3, 8008bb6 <xTaskResumeAll+0x1a>
 8008ba4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ba8:	f383 8811 	msr	BASEPRI, r3
 8008bac:	f3bf 8f6f 	isb	sy
 8008bb0:	f3bf 8f4f 	dsb	sy
 8008bb4:	e7fe      	b.n	8008bb4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008bb6:	f7fe fefd 	bl	80079b4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008bba:	6823      	ldr	r3, [r4, #0]
 8008bbc:	3b01      	subs	r3, #1
 8008bbe:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008bc0:	6824      	ldr	r4, [r4, #0]
 8008bc2:	b12c      	cbz	r4, 8008bd0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008bc4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008bc6:	f7fe ff15 	bl	80079f4 <vPortExitCritical>
}
 8008bca:	4620      	mov	r0, r4
 8008bcc:	b003      	add	sp, #12
 8008bce:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008bd0:	4b25      	ldr	r3, [pc, #148]	; (8008c68 <xTaskResumeAll+0xcc>)
 8008bd2:	681b      	ldr	r3, [r3, #0]
 8008bd4:	2b00      	cmp	r3, #0
 8008bd6:	d0f5      	beq.n	8008bc4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008bd8:	4d24      	ldr	r5, [pc, #144]	; (8008c6c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008bda:	4e25      	ldr	r6, [pc, #148]	; (8008c70 <xTaskResumeAll+0xd4>)
 8008bdc:	4f25      	ldr	r7, [pc, #148]	; (8008c74 <xTaskResumeAll+0xd8>)
 8008bde:	e01e      	b.n	8008c1e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008be0:	68eb      	ldr	r3, [r5, #12]
 8008be2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008be4:	f104 0018 	add.w	r0, r4, #24
 8008be8:	f7fe fe6d 	bl	80078c6 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008bec:	1d21      	adds	r1, r4, #4
 8008bee:	4608      	mov	r0, r1
 8008bf0:	9101      	str	r1, [sp, #4]
 8008bf2:	f7fe fe68 	bl	80078c6 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008bf6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008bf8:	6832      	ldr	r2, [r6, #0]
 8008bfa:	9901      	ldr	r1, [sp, #4]
 8008bfc:	2014      	movs	r0, #20
 8008bfe:	4293      	cmp	r3, r2
 8008c00:	fb00 7003 	mla	r0, r0, r3, r7
 8008c04:	bf88      	it	hi
 8008c06:	6033      	strhi	r3, [r6, #0]
 8008c08:	f7fe fe3a 	bl	8007880 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008c0c:	4b1a      	ldr	r3, [pc, #104]	; (8008c78 <xTaskResumeAll+0xdc>)
 8008c0e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008c10:	681b      	ldr	r3, [r3, #0]
 8008c12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c14:	429a      	cmp	r2, r3
 8008c16:	d302      	bcc.n	8008c1e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008c18:	4b18      	ldr	r3, [pc, #96]	; (8008c7c <xTaskResumeAll+0xe0>)
 8008c1a:	2201      	movs	r2, #1
 8008c1c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008c1e:	682b      	ldr	r3, [r5, #0]
 8008c20:	2b00      	cmp	r3, #0
 8008c22:	d1dd      	bne.n	8008be0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8008c24:	b10c      	cbz	r4, 8008c2a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8008c26:	f7ff fdbd 	bl	80087a4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008c2a:	4d15      	ldr	r5, [pc, #84]	; (8008c80 <xTaskResumeAll+0xe4>)
 8008c2c:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008c2e:	b144      	cbz	r4, 8008c42 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008c30:	4e12      	ldr	r6, [pc, #72]	; (8008c7c <xTaskResumeAll+0xe0>)
 8008c32:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008c34:	f7ff ff1c 	bl	8008a70 <xTaskIncrementTick>
 8008c38:	b100      	cbz	r0, 8008c3c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008c3a:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008c3c:	3c01      	subs	r4, #1
 8008c3e:	d1f9      	bne.n	8008c34 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8008c40:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008c42:	4b0e      	ldr	r3, [pc, #56]	; (8008c7c <xTaskResumeAll+0xe0>)
 8008c44:	681b      	ldr	r3, [r3, #0]
 8008c46:	2b00      	cmp	r3, #0
 8008c48:	d0bc      	beq.n	8008bc4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008c4a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c4e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008c52:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008c56:	f3bf 8f4f 	dsb	sy
 8008c5a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008c5e:	2401      	movs	r4, #1
 8008c60:	e7b1      	b.n	8008bc6 <xTaskResumeAll+0x2a>
 8008c62:	bf00      	nop
 8008c64:	20017590 	.word	0x20017590
 8008c68:	20017588 	.word	0x20017588
 8008c6c:	200175d0 	.word	0x200175d0
 8008c70:	20017598 	.word	0x20017598
 8008c74:	20017128 	.word	0x20017128
 8008c78:	2001711c 	.word	0x2001711c
 8008c7c:	20017614 	.word	0x20017614
 8008c80:	200175cc 	.word	0x200175cc

08008c84 <vTaskDelay>:
	{
 8008c84:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008c86:	b950      	cbnz	r0, 8008c9e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008c88:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c8c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008c90:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008c94:	f3bf 8f4f 	dsb	sy
 8008c98:	f3bf 8f6f 	isb	sy
	}
 8008c9c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008c9e:	4b0a      	ldr	r3, [pc, #40]	; (8008cc8 <vTaskDelay+0x44>)
 8008ca0:	6819      	ldr	r1, [r3, #0]
 8008ca2:	b141      	cbz	r1, 8008cb6 <vTaskDelay+0x32>
 8008ca4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ca8:	f383 8811 	msr	BASEPRI, r3
 8008cac:	f3bf 8f6f 	isb	sy
 8008cb0:	f3bf 8f4f 	dsb	sy
 8008cb4:	e7fe      	b.n	8008cb4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008cb6:	f7ff fecd 	bl	8008a54 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008cba:	f7ff fd3b 	bl	8008734 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008cbe:	f7ff ff6d 	bl	8008b9c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008cc2:	2800      	cmp	r0, #0
 8008cc4:	d0e0      	beq.n	8008c88 <vTaskDelay+0x4>
 8008cc6:	e7e9      	b.n	8008c9c <vTaskDelay+0x18>
 8008cc8:	20017590 	.word	0x20017590

08008ccc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008ccc:	4b17      	ldr	r3, [pc, #92]	; (8008d2c <vTaskSwitchContext+0x60>)
 8008cce:	681a      	ldr	r2, [r3, #0]
 8008cd0:	4b17      	ldr	r3, [pc, #92]	; (8008d30 <vTaskSwitchContext+0x64>)
{
 8008cd2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008cd4:	b112      	cbz	r2, 8008cdc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008cd6:	2201      	movs	r2, #1
 8008cd8:	601a      	str	r2, [r3, #0]
}
 8008cda:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008cdc:	4d15      	ldr	r5, [pc, #84]	; (8008d34 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 8008cde:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008ce0:	682a      	ldr	r2, [r5, #0]
 8008ce2:	4915      	ldr	r1, [pc, #84]	; (8008d38 <vTaskSwitchContext+0x6c>)
 8008ce4:	2614      	movs	r6, #20
 8008ce6:	fb06 f302 	mul.w	r3, r6, r2
 8008cea:	18c8      	adds	r0, r1, r3
 8008cec:	58cc      	ldr	r4, [r1, r3]
 8008cee:	b18c      	cbz	r4, 8008d14 <vTaskSwitchContext+0x48>
 8008cf0:	6844      	ldr	r4, [r0, #4]
 8008cf2:	3308      	adds	r3, #8
 8008cf4:	6864      	ldr	r4, [r4, #4]
 8008cf6:	6044      	str	r4, [r0, #4]
 8008cf8:	440b      	add	r3, r1
 8008cfa:	429c      	cmp	r4, r3
 8008cfc:	bf04      	itt	eq
 8008cfe:	6863      	ldreq	r3, [r4, #4]
 8008d00:	6043      	streq	r3, [r0, #4]
 8008d02:	2314      	movs	r3, #20
 8008d04:	fb03 1102 	mla	r1, r3, r2, r1
 8008d08:	684b      	ldr	r3, [r1, #4]
 8008d0a:	68d9      	ldr	r1, [r3, #12]
 8008d0c:	4b0b      	ldr	r3, [pc, #44]	; (8008d3c <vTaskSwitchContext+0x70>)
 8008d0e:	6019      	str	r1, [r3, #0]
 8008d10:	602a      	str	r2, [r5, #0]
}
 8008d12:	e7e2      	b.n	8008cda <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d14:	b942      	cbnz	r2, 8008d28 <vTaskSwitchContext+0x5c>
 8008d16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d1a:	f383 8811 	msr	BASEPRI, r3
 8008d1e:	f3bf 8f6f 	isb	sy
 8008d22:	f3bf 8f4f 	dsb	sy
 8008d26:	e7fe      	b.n	8008d26 <vTaskSwitchContext+0x5a>
 8008d28:	3a01      	subs	r2, #1
 8008d2a:	e7dc      	b.n	8008ce6 <vTaskSwitchContext+0x1a>
 8008d2c:	20017590 	.word	0x20017590
 8008d30:	20017614 	.word	0x20017614
 8008d34:	20017598 	.word	0x20017598
 8008d38:	20017128 	.word	0x20017128
 8008d3c:	2001711c 	.word	0x2001711c

08008d40 <vTaskPlaceOnEventList>:
{
 8008d40:	b510      	push	{r4, lr}
 8008d42:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008d44:	b940      	cbnz	r0, 8008d58 <vTaskPlaceOnEventList+0x18>
 8008d46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d4a:	f383 8811 	msr	BASEPRI, r3
 8008d4e:	f3bf 8f6f 	isb	sy
 8008d52:	f3bf 8f4f 	dsb	sy
 8008d56:	e7fe      	b.n	8008d56 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008d58:	4b05      	ldr	r3, [pc, #20]	; (8008d70 <vTaskPlaceOnEventList+0x30>)
 8008d5a:	6819      	ldr	r1, [r3, #0]
 8008d5c:	3118      	adds	r1, #24
 8008d5e:	f7fe fd9b 	bl	8007898 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008d62:	4620      	mov	r0, r4
 8008d64:	2101      	movs	r1, #1
}
 8008d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008d6a:	f7ff bce3 	b.w	8008734 <prvAddCurrentTaskToDelayedList>
 8008d6e:	bf00      	nop
 8008d70:	2001711c 	.word	0x2001711c

08008d74 <vTaskPlaceOnEventListRestricted>:
	{
 8008d74:	b538      	push	{r3, r4, r5, lr}
 8008d76:	460d      	mov	r5, r1
 8008d78:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008d7a:	b940      	cbnz	r0, 8008d8e <vTaskPlaceOnEventListRestricted+0x1a>
 8008d7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d80:	f383 8811 	msr	BASEPRI, r3
 8008d84:	f3bf 8f6f 	isb	sy
 8008d88:	f3bf 8f4f 	dsb	sy
 8008d8c:	e7fe      	b.n	8008d8c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008d8e:	4b07      	ldr	r3, [pc, #28]	; (8008dac <vTaskPlaceOnEventListRestricted+0x38>)
 8008d90:	6819      	ldr	r1, [r3, #0]
 8008d92:	3118      	adds	r1, #24
 8008d94:	f7fe fd74 	bl	8007880 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008d98:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008d9a:	4621      	mov	r1, r4
 8008d9c:	bf0c      	ite	eq
 8008d9e:	4628      	moveq	r0, r5
 8008da0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008da4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008da8:	f7ff bcc4 	b.w	8008734 <prvAddCurrentTaskToDelayedList>
 8008dac:	2001711c 	.word	0x2001711c

08008db0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008db0:	68c3      	ldr	r3, [r0, #12]
{
 8008db2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008db4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008db6:	b944      	cbnz	r4, 8008dca <xTaskRemoveFromEventList+0x1a>
 8008db8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dbc:	f383 8811 	msr	BASEPRI, r3
 8008dc0:	f3bf 8f6f 	isb	sy
 8008dc4:	f3bf 8f4f 	dsb	sy
 8008dc8:	e7fe      	b.n	8008dc8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008dca:	f104 0118 	add.w	r1, r4, #24
 8008dce:	4608      	mov	r0, r1
 8008dd0:	9101      	str	r1, [sp, #4]
 8008dd2:	f7fe fd78 	bl	80078c6 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008dd6:	4b12      	ldr	r3, [pc, #72]	; (8008e20 <xTaskRemoveFromEventList+0x70>)
 8008dd8:	9901      	ldr	r1, [sp, #4]
 8008dda:	681b      	ldr	r3, [r3, #0]
 8008ddc:	b9eb      	cbnz	r3, 8008e1a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008dde:	1d21      	adds	r1, r4, #4
 8008de0:	4608      	mov	r0, r1
 8008de2:	9101      	str	r1, [sp, #4]
 8008de4:	f7fe fd6f 	bl	80078c6 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008de8:	4a0e      	ldr	r2, [pc, #56]	; (8008e24 <xTaskRemoveFromEventList+0x74>)
 8008dea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008dec:	6810      	ldr	r0, [r2, #0]
 8008dee:	9901      	ldr	r1, [sp, #4]
 8008df0:	4283      	cmp	r3, r0
 8008df2:	bf88      	it	hi
 8008df4:	6013      	strhi	r3, [r2, #0]
 8008df6:	4a0c      	ldr	r2, [pc, #48]	; (8008e28 <xTaskRemoveFromEventList+0x78>)
 8008df8:	2014      	movs	r0, #20
 8008dfa:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008dfe:	f7fe fd3f 	bl	8007880 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008e02:	4b0a      	ldr	r3, [pc, #40]	; (8008e2c <xTaskRemoveFromEventList+0x7c>)
 8008e04:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008e06:	681b      	ldr	r3, [r3, #0]
 8008e08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e0a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008e0c:	bf85      	ittet	hi
 8008e0e:	4b08      	ldrhi	r3, [pc, #32]	; (8008e30 <xTaskRemoveFromEventList+0x80>)
 8008e10:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008e12:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008e14:	6018      	strhi	r0, [r3, #0]
}
 8008e16:	b002      	add	sp, #8
 8008e18:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008e1a:	4806      	ldr	r0, [pc, #24]	; (8008e34 <xTaskRemoveFromEventList+0x84>)
 8008e1c:	e7ef      	b.n	8008dfe <xTaskRemoveFromEventList+0x4e>
 8008e1e:	bf00      	nop
 8008e20:	20017590 	.word	0x20017590
 8008e24:	20017598 	.word	0x20017598
 8008e28:	20017128 	.word	0x20017128
 8008e2c:	2001711c 	.word	0x2001711c
 8008e30:	20017614 	.word	0x20017614
 8008e34:	200175d0 	.word	0x200175d0

08008e38 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008e38:	4b03      	ldr	r3, [pc, #12]	; (8008e48 <vTaskInternalSetTimeOutState+0x10>)
 8008e3a:	681b      	ldr	r3, [r3, #0]
 8008e3c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008e3e:	4b03      	ldr	r3, [pc, #12]	; (8008e4c <vTaskInternalSetTimeOutState+0x14>)
 8008e40:	681b      	ldr	r3, [r3, #0]
 8008e42:	6043      	str	r3, [r0, #4]
}
 8008e44:	4770      	bx	lr
 8008e46:	bf00      	nop
 8008e48:	200175c8 	.word	0x200175c8
 8008e4c:	20017610 	.word	0x20017610

08008e50 <xTaskCheckForTimeOut>:
{
 8008e50:	b570      	push	{r4, r5, r6, lr}
 8008e52:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008e54:	4605      	mov	r5, r0
 8008e56:	b940      	cbnz	r0, 8008e6a <xTaskCheckForTimeOut+0x1a>
 8008e58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e5c:	f383 8811 	msr	BASEPRI, r3
 8008e60:	f3bf 8f6f 	isb	sy
 8008e64:	f3bf 8f4f 	dsb	sy
 8008e68:	e7fe      	b.n	8008e68 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008e6a:	b941      	cbnz	r1, 8008e7e <xTaskCheckForTimeOut+0x2e>
 8008e6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e70:	f383 8811 	msr	BASEPRI, r3
 8008e74:	f3bf 8f6f 	isb	sy
 8008e78:	f3bf 8f4f 	dsb	sy
 8008e7c:	e7fe      	b.n	8008e7c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008e7e:	f7fe fd99 	bl	80079b4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008e82:	4b0f      	ldr	r3, [pc, #60]	; (8008ec0 <xTaskCheckForTimeOut+0x70>)
 8008e84:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008e86:	6823      	ldr	r3, [r4, #0]
 8008e88:	1c5a      	adds	r2, r3, #1
 8008e8a:	d010      	beq.n	8008eae <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008e8c:	480d      	ldr	r0, [pc, #52]	; (8008ec4 <xTaskCheckForTimeOut+0x74>)
 8008e8e:	682e      	ldr	r6, [r5, #0]
 8008e90:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008e92:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008e94:	4286      	cmp	r6, r0
 8008e96:	d001      	beq.n	8008e9c <xTaskCheckForTimeOut+0x4c>
 8008e98:	428a      	cmp	r2, r1
 8008e9a:	d90f      	bls.n	8008ebc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008e9c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008e9e:	4283      	cmp	r3, r0
 8008ea0:	d90a      	bls.n	8008eb8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008ea2:	1a5b      	subs	r3, r3, r1
 8008ea4:	4413      	add	r3, r2
 8008ea6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008ea8:	4628      	mov	r0, r5
 8008eaa:	f7ff ffc5 	bl	8008e38 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008eae:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008eb0:	f7fe fda0 	bl	80079f4 <vPortExitCritical>
}
 8008eb4:	4620      	mov	r0, r4
 8008eb6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008eb8:	2300      	movs	r3, #0
 8008eba:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008ebc:	2401      	movs	r4, #1
 8008ebe:	e7f7      	b.n	8008eb0 <xTaskCheckForTimeOut+0x60>
 8008ec0:	20017610 	.word	0x20017610
 8008ec4:	200175c8 	.word	0x200175c8

08008ec8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008ec8:	4b01      	ldr	r3, [pc, #4]	; (8008ed0 <vTaskMissedYield+0x8>)
 8008eca:	2201      	movs	r2, #1
 8008ecc:	601a      	str	r2, [r3, #0]
}
 8008ece:	4770      	bx	lr
 8008ed0:	20017614 	.word	0x20017614

08008ed4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008ed4:	4b05      	ldr	r3, [pc, #20]	; (8008eec <xTaskGetSchedulerState+0x18>)
 8008ed6:	681b      	ldr	r3, [r3, #0]
 8008ed8:	b133      	cbz	r3, 8008ee8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008eda:	4b05      	ldr	r3, [pc, #20]	; (8008ef0 <xTaskGetSchedulerState+0x1c>)
 8008edc:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8008ede:	2b00      	cmp	r3, #0
 8008ee0:	bf0c      	ite	eq
 8008ee2:	2002      	moveq	r0, #2
 8008ee4:	2000      	movne	r0, #0
 8008ee6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008ee8:	2001      	movs	r0, #1
	}
 8008eea:	4770      	bx	lr
 8008eec:	200175e4 	.word	0x200175e4
 8008ef0:	20017590 	.word	0x20017590

08008ef4 <xTaskPriorityInherit>:
	{
 8008ef4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008ef6:	4604      	mov	r4, r0
 8008ef8:	b348      	cbz	r0, 8008f4e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008efa:	4d1c      	ldr	r5, [pc, #112]	; (8008f6c <xTaskPriorityInherit+0x78>)
 8008efc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008efe:	682a      	ldr	r2, [r5, #0]
 8008f00:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008f02:	4293      	cmp	r3, r2
 8008f04:	d229      	bcs.n	8008f5a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008f06:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008f08:	4e19      	ldr	r6, [pc, #100]	; (8008f70 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008f0a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008f0c:	bfa1      	itttt	ge
 8008f0e:	682a      	ldrge	r2, [r5, #0]
 8008f10:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008f12:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008f16:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008f18:	2214      	movs	r2, #20
 8008f1a:	fb02 6303 	mla	r3, r2, r3, r6
 8008f1e:	6942      	ldr	r2, [r0, #20]
 8008f20:	429a      	cmp	r2, r3
 8008f22:	d116      	bne.n	8008f52 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008f24:	1d01      	adds	r1, r0, #4
 8008f26:	4608      	mov	r0, r1
 8008f28:	9101      	str	r1, [sp, #4]
 8008f2a:	f7fe fccc 	bl	80078c6 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f2e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008f30:	4a10      	ldr	r2, [pc, #64]	; (8008f74 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008f34:	6810      	ldr	r0, [r2, #0]
 8008f36:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f38:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008f3a:	4283      	cmp	r3, r0
 8008f3c:	f04f 0014 	mov.w	r0, #20
 8008f40:	fb00 6003 	mla	r0, r0, r3, r6
 8008f44:	bf88      	it	hi
 8008f46:	6013      	strhi	r3, [r2, #0]
 8008f48:	f7fe fc9a 	bl	8007880 <vListInsertEnd>
				xReturn = pdTRUE;
 8008f4c:	2001      	movs	r0, #1
	}
 8008f4e:	b002      	add	sp, #8
 8008f50:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f52:	682b      	ldr	r3, [r5, #0]
 8008f54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f56:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008f58:	e7f8      	b.n	8008f4c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008f5a:	682b      	ldr	r3, [r5, #0]
 8008f5c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008f5e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008f60:	42a0      	cmp	r0, r4
 8008f62:	bf2c      	ite	cs
 8008f64:	2000      	movcs	r0, #0
 8008f66:	2001      	movcc	r0, #1
 8008f68:	e7f1      	b.n	8008f4e <xTaskPriorityInherit+0x5a>
 8008f6a:	bf00      	nop
 8008f6c:	2001711c 	.word	0x2001711c
 8008f70:	20017128 	.word	0x20017128
 8008f74:	20017598 	.word	0x20017598

08008f78 <xTaskPriorityDisinherit>:
	{
 8008f78:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008f7a:	b910      	cbnz	r0, 8008f82 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008f7c:	2000      	movs	r0, #0
	}
 8008f7e:	b002      	add	sp, #8
 8008f80:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008f82:	4b1c      	ldr	r3, [pc, #112]	; (8008ff4 <xTaskPriorityDisinherit+0x7c>)
 8008f84:	681c      	ldr	r4, [r3, #0]
 8008f86:	4284      	cmp	r4, r0
 8008f88:	d008      	beq.n	8008f9c <xTaskPriorityDisinherit+0x24>
 8008f8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f8e:	f383 8811 	msr	BASEPRI, r3
 8008f92:	f3bf 8f6f 	isb	sy
 8008f96:	f3bf 8f4f 	dsb	sy
 8008f9a:	e7fe      	b.n	8008f9a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008f9c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008f9e:	b943      	cbnz	r3, 8008fb2 <xTaskPriorityDisinherit+0x3a>
 8008fa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fa4:	f383 8811 	msr	BASEPRI, r3
 8008fa8:	f3bf 8f6f 	isb	sy
 8008fac:	f3bf 8f4f 	dsb	sy
 8008fb0:	e7fe      	b.n	8008fb0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008fb2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008fb4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008fb6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008fb8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008fba:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008fbc:	d0de      	beq.n	8008f7c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008fbe:	2b00      	cmp	r3, #0
 8008fc0:	d1dc      	bne.n	8008f7c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008fc2:	1d21      	adds	r1, r4, #4
 8008fc4:	4608      	mov	r0, r1
 8008fc6:	9101      	str	r1, [sp, #4]
 8008fc8:	f7fe fc7d 	bl	80078c6 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008fcc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8008fce:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008fd0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008fd2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008fd6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008fd8:	4a07      	ldr	r2, [pc, #28]	; (8008ff8 <xTaskPriorityDisinherit+0x80>)
 8008fda:	6810      	ldr	r0, [r2, #0]
 8008fdc:	4283      	cmp	r3, r0
 8008fde:	bf88      	it	hi
 8008fe0:	6013      	strhi	r3, [r2, #0]
 8008fe2:	4a06      	ldr	r2, [pc, #24]	; (8008ffc <xTaskPriorityDisinherit+0x84>)
 8008fe4:	2014      	movs	r0, #20
 8008fe6:	fb00 2003 	mla	r0, r0, r3, r2
 8008fea:	f7fe fc49 	bl	8007880 <vListInsertEnd>
					xReturn = pdTRUE;
 8008fee:	2001      	movs	r0, #1
		return xReturn;
 8008ff0:	e7c5      	b.n	8008f7e <xTaskPriorityDisinherit+0x6>
 8008ff2:	bf00      	nop
 8008ff4:	2001711c 	.word	0x2001711c
 8008ff8:	20017598 	.word	0x20017598
 8008ffc:	20017128 	.word	0x20017128

08009000 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009000:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009002:	4604      	mov	r4, r0
 8009004:	2800      	cmp	r0, #0
 8009006:	d044      	beq.n	8009092 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009008:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800900a:	b942      	cbnz	r2, 800901e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800900c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009010:	f383 8811 	msr	BASEPRI, r3
 8009014:	f3bf 8f6f 	isb	sy
 8009018:	f3bf 8f4f 	dsb	sy
 800901c:	e7fe      	b.n	800901c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800901e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009020:	4299      	cmp	r1, r3
 8009022:	bf38      	it	cc
 8009024:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009026:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009028:	428b      	cmp	r3, r1
 800902a:	d032      	beq.n	8009092 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800902c:	2a01      	cmp	r2, #1
 800902e:	d130      	bne.n	8009092 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009030:	4a19      	ldr	r2, [pc, #100]	; (8009098 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009032:	6812      	ldr	r2, [r2, #0]
 8009034:	4282      	cmp	r2, r0
 8009036:	d108      	bne.n	800904a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009038:	f04f 0350 	mov.w	r3, #80	; 0x50
 800903c:	f383 8811 	msr	BASEPRI, r3
 8009040:	f3bf 8f6f 	isb	sy
 8009044:	f3bf 8f4f 	dsb	sy
 8009048:	e7fe      	b.n	8009048 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800904a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800904c:	4d13      	ldr	r5, [pc, #76]	; (800909c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800904e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009050:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009052:	f04f 0214 	mov.w	r2, #20
 8009056:	fb02 5303 	mla	r3, r2, r3, r5
 800905a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800905c:	bfa4      	itt	ge
 800905e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8009062:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009064:	429a      	cmp	r2, r3
 8009066:	d114      	bne.n	8009092 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009068:	1d01      	adds	r1, r0, #4
 800906a:	4608      	mov	r0, r1
 800906c:	9101      	str	r1, [sp, #4]
 800906e:	f7fe fc2a 	bl	80078c6 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009072:	4a0b      	ldr	r2, [pc, #44]	; (80090a0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009074:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009076:	6810      	ldr	r0, [r2, #0]
 8009078:	9901      	ldr	r1, [sp, #4]
 800907a:	4283      	cmp	r3, r0
 800907c:	f04f 0014 	mov.w	r0, #20
 8009080:	fb00 5003 	mla	r0, r0, r3, r5
 8009084:	bf88      	it	hi
 8009086:	6013      	strhi	r3, [r2, #0]
	}
 8009088:	b003      	add	sp, #12
 800908a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800908e:	f7fe bbf7 	b.w	8007880 <vListInsertEnd>
	}
 8009092:	b003      	add	sp, #12
 8009094:	bd30      	pop	{r4, r5, pc}
 8009096:	bf00      	nop
 8009098:	2001711c 	.word	0x2001711c
 800909c:	20017128 	.word	0x20017128
 80090a0:	20017598 	.word	0x20017598

080090a4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80090a4:	4b04      	ldr	r3, [pc, #16]	; (80090b8 <pvTaskIncrementMutexHeldCount+0x14>)
 80090a6:	681a      	ldr	r2, [r3, #0]
 80090a8:	b11a      	cbz	r2, 80090b2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80090aa:	6819      	ldr	r1, [r3, #0]
 80090ac:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80090ae:	3201      	adds	r2, #1
 80090b0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80090b2:	6818      	ldr	r0, [r3, #0]
	}
 80090b4:	4770      	bx	lr
 80090b6:	bf00      	nop
 80090b8:	2001711c 	.word	0x2001711c

080090bc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80090bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80090be:	4c11      	ldr	r4, [pc, #68]	; (8009104 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80090c0:	f7fe fc78 	bl	80079b4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80090c4:	6825      	ldr	r5, [r4, #0]
 80090c6:	b9bd      	cbnz	r5, 80090f8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80090c8:	4f0f      	ldr	r7, [pc, #60]	; (8009108 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80090ca:	4e10      	ldr	r6, [pc, #64]	; (800910c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80090cc:	4638      	mov	r0, r7
 80090ce:	f7fe fbc9 	bl	8007864 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80090d2:	4630      	mov	r0, r6
 80090d4:	f7fe fbc6 	bl	8007864 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80090d8:	4b0d      	ldr	r3, [pc, #52]	; (8009110 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80090da:	4a0e      	ldr	r2, [pc, #56]	; (8009114 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80090dc:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80090de:	4b0e      	ldr	r3, [pc, #56]	; (8009118 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80090e0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80090e2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80090e4:	200a      	movs	r0, #10
 80090e6:	4b0d      	ldr	r3, [pc, #52]	; (800911c <prvCheckForValidListAndQueue+0x60>)
 80090e8:	9500      	str	r5, [sp, #0]
 80090ea:	f7fe fe74 	bl	8007dd6 <xQueueGenericCreateStatic>
 80090ee:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 80090f0:	b110      	cbz	r0, 80090f8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80090f2:	490b      	ldr	r1, [pc, #44]	; (8009120 <prvCheckForValidListAndQueue+0x64>)
 80090f4:	f7ff fa3e 	bl	8008574 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80090f8:	b003      	add	sp, #12
 80090fa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80090fe:	f7fe bc79 	b.w	80079f4 <vPortExitCritical>
 8009102:	bf00      	nop
 8009104:	2001773c 	.word	0x2001773c
 8009108:	200176c0 	.word	0x200176c0
 800910c:	200176d4 	.word	0x200176d4
 8009110:	20017618 	.word	0x20017618
 8009114:	20017620 	.word	0x20017620
 8009118:	2001761c 	.word	0x2001761c
 800911c:	200176ec 	.word	0x200176ec
 8009120:	0801f251 	.word	0x0801f251

08009124 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009124:	4291      	cmp	r1, r2
{
 8009126:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009128:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800912a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800912c:	d80a      	bhi.n	8009144 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800912e:	1ad2      	subs	r2, r2, r3
 8009130:	6983      	ldr	r3, [r0, #24]
 8009132:	429a      	cmp	r2, r3
 8009134:	d20d      	bcs.n	8009152 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009136:	4b08      	ldr	r3, [pc, #32]	; (8009158 <prvInsertTimerInActiveList+0x34>)
 8009138:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800913a:	6818      	ldr	r0, [r3, #0]
 800913c:	f7fe fbac 	bl	8007898 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009140:	2000      	movs	r0, #0
}
 8009142:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009144:	429a      	cmp	r2, r3
 8009146:	d201      	bcs.n	800914c <prvInsertTimerInActiveList+0x28>
 8009148:	4299      	cmp	r1, r3
 800914a:	d202      	bcs.n	8009152 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800914c:	4b03      	ldr	r3, [pc, #12]	; (800915c <prvInsertTimerInActiveList+0x38>)
 800914e:	1d01      	adds	r1, r0, #4
 8009150:	e7f3      	b.n	800913a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009152:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009154:	e7f5      	b.n	8009142 <prvInsertTimerInActiveList+0x1e>
 8009156:	bf00      	nop
 8009158:	2001761c 	.word	0x2001761c
 800915c:	20017618 	.word	0x20017618

08009160 <xTimerCreateTimerTask>:
{
 8009160:	b510      	push	{r4, lr}
 8009162:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009164:	f7ff ffaa 	bl	80090bc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009168:	4b12      	ldr	r3, [pc, #72]	; (80091b4 <xTimerCreateTimerTask+0x54>)
 800916a:	681b      	ldr	r3, [r3, #0]
 800916c:	b1b3      	cbz	r3, 800919c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800916e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009170:	aa07      	add	r2, sp, #28
 8009172:	a906      	add	r1, sp, #24
 8009174:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009176:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800917a:	f7fe fa6d 	bl	8007658 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800917e:	9b05      	ldr	r3, [sp, #20]
 8009180:	9302      	str	r3, [sp, #8]
 8009182:	9b06      	ldr	r3, [sp, #24]
 8009184:	9301      	str	r3, [sp, #4]
 8009186:	2302      	movs	r3, #2
 8009188:	9300      	str	r3, [sp, #0]
 800918a:	9a07      	ldr	r2, [sp, #28]
 800918c:	490a      	ldr	r1, [pc, #40]	; (80091b8 <xTimerCreateTimerTask+0x58>)
 800918e:	480b      	ldr	r0, [pc, #44]	; (80091bc <xTimerCreateTimerTask+0x5c>)
 8009190:	4623      	mov	r3, r4
 8009192:	f7ff fbb4 	bl	80088fe <xTaskCreateStatic>
 8009196:	4b0a      	ldr	r3, [pc, #40]	; (80091c0 <xTimerCreateTimerTask+0x60>)
 8009198:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800919a:	b940      	cbnz	r0, 80091ae <xTimerCreateTimerTask+0x4e>
 800919c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091a0:	f383 8811 	msr	BASEPRI, r3
 80091a4:	f3bf 8f6f 	isb	sy
 80091a8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80091ac:	e7fe      	b.n	80091ac <xTimerCreateTimerTask+0x4c>
}
 80091ae:	2001      	movs	r0, #1
 80091b0:	b008      	add	sp, #32
 80091b2:	bd10      	pop	{r4, pc}
 80091b4:	2001773c 	.word	0x2001773c
 80091b8:	0801f256 	.word	0x0801f256
 80091bc:	080092c9 	.word	0x080092c9
 80091c0:	20017740 	.word	0x20017740

080091c4 <xTimerGenericCommand>:
{
 80091c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80091c6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80091c8:	4604      	mov	r4, r0
{
 80091ca:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80091cc:	b940      	cbnz	r0, 80091e0 <xTimerGenericCommand+0x1c>
 80091ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091d2:	f383 8811 	msr	BASEPRI, r3
 80091d6:	f3bf 8f6f 	isb	sy
 80091da:	f3bf 8f4f 	dsb	sy
 80091de:	e7fe      	b.n	80091de <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 80091e0:	4d0d      	ldr	r5, [pc, #52]	; (8009218 <xTimerGenericCommand+0x54>)
 80091e2:	6828      	ldr	r0, [r5, #0]
 80091e4:	b180      	cbz	r0, 8009208 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80091e6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80091e8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80091ec:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80091ee:	dc0d      	bgt.n	800920c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80091f0:	f7ff fe70 	bl	8008ed4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80091f4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80091f6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80091f8:	bf08      	it	eq
 80091fa:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80091fc:	6828      	ldr	r0, [r5, #0]
 80091fe:	bf18      	it	ne
 8009200:	461a      	movne	r2, r3
 8009202:	4669      	mov	r1, sp
 8009204:	f7fe fe9c 	bl	8007f40 <xQueueGenericSend>
}
 8009208:	b004      	add	sp, #16
 800920a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800920c:	2300      	movs	r3, #0
 800920e:	4669      	mov	r1, sp
 8009210:	f7fe ff49 	bl	80080a6 <xQueueGenericSendFromISR>
 8009214:	e7f8      	b.n	8009208 <xTimerGenericCommand+0x44>
 8009216:	bf00      	nop
 8009218:	2001773c 	.word	0x2001773c

0800921c <prvSampleTimeNow>:
{
 800921c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009220:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80092c4 <prvSampleTimeNow+0xa8>
{
 8009224:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009226:	f7ff fc1d 	bl	8008a64 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800922a:	f8d8 3000 	ldr.w	r3, [r8]
 800922e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009230:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009232:	d940      	bls.n	80092b6 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009234:	4f21      	ldr	r7, [pc, #132]	; (80092bc <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009236:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800923a:	683b      	ldr	r3, [r7, #0]
 800923c:	681a      	ldr	r2, [r3, #0]
 800923e:	b95a      	cbnz	r2, 8009258 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009240:	4a1f      	ldr	r2, [pc, #124]	; (80092c0 <prvSampleTimeNow+0xa4>)
 8009242:	6811      	ldr	r1, [r2, #0]
 8009244:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009246:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009248:	2301      	movs	r3, #1
}
 800924a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800924c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800924e:	f8c8 5000 	str.w	r5, [r8]
}
 8009252:	b004      	add	sp, #16
 8009254:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009258:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800925a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800925c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009260:	1d21      	adds	r1, r4, #4
 8009262:	4608      	mov	r0, r1
 8009264:	9103      	str	r1, [sp, #12]
 8009266:	f7fe fb2e 	bl	80078c6 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800926a:	6a23      	ldr	r3, [r4, #32]
 800926c:	4620      	mov	r0, r4
 800926e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009270:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009274:	9903      	ldr	r1, [sp, #12]
 8009276:	f013 0f04 	tst.w	r3, #4
 800927a:	d0de      	beq.n	800923a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800927c:	69a3      	ldr	r3, [r4, #24]
 800927e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8009280:	459a      	cmp	sl, r3
 8009282:	d205      	bcs.n	8009290 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009284:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009286:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009288:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800928a:	f7fe fb05 	bl	8007898 <vListInsert>
 800928e:	e7d4      	b.n	800923a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009290:	2300      	movs	r3, #0
 8009292:	f8cd 9000 	str.w	r9, [sp]
 8009296:	4652      	mov	r2, sl
 8009298:	4619      	mov	r1, r3
 800929a:	4620      	mov	r0, r4
 800929c:	f7ff ff92 	bl	80091c4 <xTimerGenericCommand>
				configASSERT( xResult );
 80092a0:	2800      	cmp	r0, #0
 80092a2:	d1ca      	bne.n	800923a <prvSampleTimeNow+0x1e>
 80092a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092a8:	f383 8811 	msr	BASEPRI, r3
 80092ac:	f3bf 8f6f 	isb	sy
 80092b0:	f3bf 8f4f 	dsb	sy
 80092b4:	e7fe      	b.n	80092b4 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 80092b6:	2300      	movs	r3, #0
 80092b8:	e7c7      	b.n	800924a <prvSampleTimeNow+0x2e>
 80092ba:	bf00      	nop
 80092bc:	20017618 	.word	0x20017618
 80092c0:	2001761c 	.word	0x2001761c
 80092c4:	200176e8 	.word	0x200176e8

080092c8 <prvTimerTask>:
{
 80092c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80092cc:	4d6e      	ldr	r5, [pc, #440]	; (8009488 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80092ce:	4e6f      	ldr	r6, [pc, #444]	; (800948c <prvTimerTask+0x1c4>)
{
 80092d0:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80092d2:	682b      	ldr	r3, [r5, #0]
 80092d4:	f8d3 8000 	ldr.w	r8, [r3]
 80092d8:	f1b8 0f00 	cmp.w	r8, #0
 80092dc:	d035      	beq.n	800934a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80092de:	68db      	ldr	r3, [r3, #12]
 80092e0:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80092e4:	2400      	movs	r4, #0
	vTaskSuspendAll();
 80092e6:	f7ff fbb5 	bl	8008a54 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80092ea:	a804      	add	r0, sp, #16
 80092ec:	f7ff ff96 	bl	800921c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 80092f0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80092f2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 80092f4:	2b00      	cmp	r3, #0
 80092f6:	d169      	bne.n	80093cc <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80092f8:	2c00      	cmp	r4, #0
 80092fa:	d14c      	bne.n	8009396 <prvTimerTask+0xce>
 80092fc:	4540      	cmp	r0, r8
 80092fe:	d350      	bcc.n	80093a2 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009300:	f7ff fc4c 	bl	8008b9c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009304:	682b      	ldr	r3, [r5, #0]
 8009306:	68db      	ldr	r3, [r3, #12]
 8009308:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800930a:	1d38      	adds	r0, r7, #4
 800930c:	f7fe fadb 	bl	80078c6 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009310:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009314:	0758      	lsls	r0, r3, #29
 8009316:	d51a      	bpl.n	800934e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009318:	69b9      	ldr	r1, [r7, #24]
 800931a:	4643      	mov	r3, r8
 800931c:	464a      	mov	r2, r9
 800931e:	4441      	add	r1, r8
 8009320:	4638      	mov	r0, r7
 8009322:	f7ff feff 	bl	8009124 <prvInsertTimerInActiveList>
 8009326:	b1b0      	cbz	r0, 8009356 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009328:	9400      	str	r4, [sp, #0]
 800932a:	4623      	mov	r3, r4
 800932c:	4642      	mov	r2, r8
 800932e:	4621      	mov	r1, r4
 8009330:	4638      	mov	r0, r7
 8009332:	f7ff ff47 	bl	80091c4 <xTimerGenericCommand>
			configASSERT( xResult );
 8009336:	b970      	cbnz	r0, 8009356 <prvTimerTask+0x8e>
 8009338:	f04f 0350 	mov.w	r3, #80	; 0x50
 800933c:	f383 8811 	msr	BASEPRI, r3
 8009340:	f3bf 8f6f 	isb	sy
 8009344:	f3bf 8f4f 	dsb	sy
 8009348:	e7fe      	b.n	8009348 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800934a:	2401      	movs	r4, #1
 800934c:	e7cb      	b.n	80092e6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800934e:	f023 0301 	bic.w	r3, r3, #1
 8009352:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009356:	6a3b      	ldr	r3, [r7, #32]
 8009358:	4638      	mov	r0, r7
 800935a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800935c:	6830      	ldr	r0, [r6, #0]
 800935e:	2200      	movs	r2, #0
 8009360:	a904      	add	r1, sp, #16
 8009362:	f7fe ff56 	bl	8008212 <xQueueReceive>
 8009366:	2800      	cmp	r0, #0
 8009368:	d0b3      	beq.n	80092d2 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800936a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800936c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800936e:	2b00      	cmp	r3, #0
 8009370:	db2f      	blt.n	80093d2 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009372:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009374:	6963      	ldr	r3, [r4, #20]
 8009376:	2b00      	cmp	r3, #0
 8009378:	d132      	bne.n	80093e0 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800937a:	a803      	add	r0, sp, #12
 800937c:	f7ff ff4e 	bl	800921c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009380:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009382:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009384:	2b09      	cmp	r3, #9
 8009386:	d8e9      	bhi.n	800935c <prvTimerTask+0x94>
 8009388:	e8df f003 	tbb	[pc, r3]
 800938c:	572e2e2e 	.word	0x572e2e2e
 8009390:	2e2e765e 	.word	0x2e2e765e
 8009394:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009396:	4b3e      	ldr	r3, [pc, #248]	; (8009490 <prvTimerTask+0x1c8>)
 8009398:	681b      	ldr	r3, [r3, #0]
 800939a:	681c      	ldr	r4, [r3, #0]
 800939c:	fab4 f484 	clz	r4, r4
 80093a0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80093a2:	6830      	ldr	r0, [r6, #0]
 80093a4:	4622      	mov	r2, r4
 80093a6:	eba8 0109 	sub.w	r1, r8, r9
 80093aa:	f7ff f920 	bl	80085ee <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80093ae:	f7ff fbf5 	bl	8008b9c <xTaskResumeAll>
 80093b2:	2800      	cmp	r0, #0
 80093b4:	d1d2      	bne.n	800935c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 80093b6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80093ba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80093be:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80093c2:	f3bf 8f4f 	dsb	sy
 80093c6:	f3bf 8f6f 	isb	sy
 80093ca:	e7c7      	b.n	800935c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 80093cc:	f7ff fbe6 	bl	8008b9c <xTaskResumeAll>
}
 80093d0:	e7c4      	b.n	800935c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80093d2:	9b05      	ldr	r3, [sp, #20]
 80093d4:	9907      	ldr	r1, [sp, #28]
 80093d6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80093d8:	9b04      	ldr	r3, [sp, #16]
 80093da:	2b00      	cmp	r3, #0
 80093dc:	dbbe      	blt.n	800935c <prvTimerTask+0x94>
 80093de:	e7c8      	b.n	8009372 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80093e0:	1d20      	adds	r0, r4, #4
 80093e2:	f7fe fa70 	bl	80078c6 <uxListRemove>
 80093e6:	e7c8      	b.n	800937a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80093e8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80093ec:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80093ee:	f043 0301 	orr.w	r3, r3, #1
 80093f2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80093f6:	9b05      	ldr	r3, [sp, #20]
 80093f8:	4620      	mov	r0, r4
 80093fa:	4419      	add	r1, r3
 80093fc:	f7ff fe92 	bl	8009124 <prvInsertTimerInActiveList>
 8009400:	2800      	cmp	r0, #0
 8009402:	d0ab      	beq.n	800935c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009404:	6a23      	ldr	r3, [r4, #32]
 8009406:	4620      	mov	r0, r4
 8009408:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800940a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800940e:	0759      	lsls	r1, r3, #29
 8009410:	d5a4      	bpl.n	800935c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009412:	69a2      	ldr	r2, [r4, #24]
 8009414:	9905      	ldr	r1, [sp, #20]
 8009416:	2300      	movs	r3, #0
 8009418:	440a      	add	r2, r1
 800941a:	9300      	str	r3, [sp, #0]
 800941c:	4619      	mov	r1, r3
 800941e:	4620      	mov	r0, r4
 8009420:	f7ff fed0 	bl	80091c4 <xTimerGenericCommand>
							configASSERT( xResult );
 8009424:	2800      	cmp	r0, #0
 8009426:	d199      	bne.n	800935c <prvTimerTask+0x94>
 8009428:	f04f 0350 	mov.w	r3, #80	; 0x50
 800942c:	f383 8811 	msr	BASEPRI, r3
 8009430:	f3bf 8f6f 	isb	sy
 8009434:	f3bf 8f4f 	dsb	sy
 8009438:	e7fe      	b.n	8009438 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800943a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800943e:	f023 0301 	bic.w	r3, r3, #1
 8009442:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009446:	e789      	b.n	800935c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009448:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800944c:	f043 0301 	orr.w	r3, r3, #1
 8009450:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009454:	9905      	ldr	r1, [sp, #20]
 8009456:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009458:	b941      	cbnz	r1, 800946c <prvTimerTask+0x1a4>
 800945a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800945e:	f383 8811 	msr	BASEPRI, r3
 8009462:	f3bf 8f6f 	isb	sy
 8009466:	f3bf 8f4f 	dsb	sy
 800946a:	e7fe      	b.n	800946a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800946c:	4603      	mov	r3, r0
 800946e:	4401      	add	r1, r0
 8009470:	4620      	mov	r0, r4
 8009472:	f7ff fe57 	bl	8009124 <prvInsertTimerInActiveList>
					break;
 8009476:	e771      	b.n	800935c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009478:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800947c:	079a      	lsls	r2, r3, #30
 800947e:	d4de      	bmi.n	800943e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009480:	4620      	mov	r0, r4
 8009482:	f7fe f9b1 	bl	80077e8 <vPortFree>
 8009486:	e769      	b.n	800935c <prvTimerTask+0x94>
 8009488:	20017618 	.word	0x20017618
 800948c:	2001773c 	.word	0x2001773c
 8009490:	2001761c 	.word	0x2001761c

08009494 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009494:	8880      	ldrh	r0, [r0, #4]
 8009496:	4770      	bx	lr

08009498 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009498:	b570      	push	{r4, r5, r6, lr}
 800949a:	6803      	ldr	r3, [r0, #0]
 800949c:	4605      	mov	r5, r0
 800949e:	460c      	mov	r4, r1
 80094a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094a2:	2100      	movs	r1, #0
 80094a4:	4798      	blx	r3
 80094a6:	682b      	ldr	r3, [r5, #0]
 80094a8:	4606      	mov	r6, r0
 80094aa:	6a1b      	ldr	r3, [r3, #32]
 80094ac:	4628      	mov	r0, r5
 80094ae:	4798      	blx	r3
 80094b0:	1ba4      	subs	r4, r4, r6
 80094b2:	b2a4      	uxth	r4, r4
 80094b4:	fbb4 f0f0 	udiv	r0, r4, r0
 80094b8:	bd70      	pop	{r4, r5, r6, pc}

080094ba <_ZN8touchgfx17AbstractPartition5clearEv>:
 80094ba:	2300      	movs	r3, #0
 80094bc:	8083      	strh	r3, [r0, #4]
 80094be:	4770      	bx	lr

080094c0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80094c0:	b510      	push	{r4, lr}
 80094c2:	6803      	ldr	r3, [r0, #0]
 80094c4:	8881      	ldrh	r1, [r0, #4]
 80094c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094c8:	4604      	mov	r4, r0
 80094ca:	4798      	blx	r3
 80094cc:	88a3      	ldrh	r3, [r4, #4]
 80094ce:	3301      	adds	r3, #1
 80094d0:	80a3      	strh	r3, [r4, #4]
 80094d2:	bd10      	pop	{r4, pc}

080094d4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80094d4:	6803      	ldr	r3, [r0, #0]
 80094d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094d8:	4718      	bx	r3

080094da <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80094da:	4770      	bx	lr

080094dc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80094dc:	4a02      	ldr	r2, [pc, #8]	; (80094e8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80094de:	6002      	str	r2, [r0, #0]
 80094e0:	2200      	movs	r2, #0
 80094e2:	8082      	strh	r2, [r0, #4]
 80094e4:	4770      	bx	lr
 80094e6:	bf00      	nop
 80094e8:	0801f268 	.word	0x0801f268

080094ec <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80094ec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80094ee:	2000      	movs	r0, #0
 80094f0:	b12b      	cbz	r3, 80094fe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80094f2:	b920      	cbnz	r0, 80094fe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80094f4:	1a5a      	subs	r2, r3, r1
 80094f6:	4250      	negs	r0, r2
 80094f8:	4150      	adcs	r0, r2
 80094fa:	699b      	ldr	r3, [r3, #24]
 80094fc:	e7f8      	b.n	80094f0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80094fe:	4770      	bx	lr

08009500 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009500:	2300      	movs	r3, #0
 8009502:	6148      	str	r0, [r1, #20]
 8009504:	618b      	str	r3, [r1, #24]
 8009506:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009508:	b913      	cbnz	r3, 8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800950a:	6281      	str	r1, [r0, #40]	; 0x28
 800950c:	4770      	bx	lr
 800950e:	4613      	mov	r3, r2
 8009510:	699a      	ldr	r2, [r3, #24]
 8009512:	2a00      	cmp	r2, #0
 8009514:	d1fb      	bne.n	800950e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8009516:	6199      	str	r1, [r3, #24]
 8009518:	4770      	bx	lr

0800951a <_ZN8touchgfx9Container9removeAllEv>:
 800951a:	2200      	movs	r2, #0
 800951c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800951e:	b123      	cbz	r3, 800952a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009520:	6999      	ldr	r1, [r3, #24]
 8009522:	6281      	str	r1, [r0, #40]	; 0x28
 8009524:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009528:	e7f8      	b.n	800951c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800952a:	4770      	bx	lr

0800952c <_ZN8touchgfx9Container6unlinkEv>:
 800952c:	2300      	movs	r3, #0
 800952e:	6283      	str	r3, [r0, #40]	; 0x28
 8009530:	4770      	bx	lr

08009532 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009532:	2200      	movs	r2, #0
 8009534:	8002      	strh	r2, [r0, #0]
 8009536:	8042      	strh	r2, [r0, #2]
 8009538:	8082      	strh	r2, [r0, #4]
 800953a:	80c2      	strh	r2, [r0, #6]
 800953c:	4770      	bx	lr

0800953e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800953e:	b570      	push	{r4, r5, r6, lr}
 8009540:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009542:	460d      	mov	r5, r1
 8009544:	4616      	mov	r6, r2
 8009546:	b13c      	cbz	r4, 8009558 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009548:	6823      	ldr	r3, [r4, #0]
 800954a:	4620      	mov	r0, r4
 800954c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800954e:	4632      	mov	r2, r6
 8009550:	4629      	mov	r1, r5
 8009552:	4798      	blx	r3
 8009554:	69a4      	ldr	r4, [r4, #24]
 8009556:	e7f6      	b.n	8009546 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009558:	bd70      	pop	{r4, r5, r6, pc}

0800955a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800955a:	b538      	push	{r3, r4, r5, lr}
 800955c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800955e:	460d      	mov	r5, r1
 8009560:	b134      	cbz	r4, 8009570 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009562:	682b      	ldr	r3, [r5, #0]
 8009564:	4621      	mov	r1, r4
 8009566:	689b      	ldr	r3, [r3, #8]
 8009568:	4628      	mov	r0, r5
 800956a:	4798      	blx	r3
 800956c:	69a4      	ldr	r4, [r4, #24]
 800956e:	e7f7      	b.n	8009560 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009570:	bd38      	pop	{r3, r4, r5, pc}

08009572 <_ZN8touchgfx9ContainerD1Ev>:
 8009572:	4770      	bx	lr

08009574 <_ZN8touchgfx9ContainerD0Ev>:
 8009574:	b510      	push	{r4, lr}
 8009576:	212c      	movs	r1, #44	; 0x2c
 8009578:	4604      	mov	r4, r0
 800957a:	f012 fa73 	bl	801ba64 <_ZdlPvj>
 800957e:	4620      	mov	r0, r4
 8009580:	bd10      	pop	{r4, pc}

08009582 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009582:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009584:	b19b      	cbz	r3, 80095ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009586:	428b      	cmp	r3, r1
 8009588:	d109      	bne.n	800959e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800958a:	699a      	ldr	r2, [r3, #24]
 800958c:	2100      	movs	r1, #0
 800958e:	6159      	str	r1, [r3, #20]
 8009590:	6282      	str	r2, [r0, #40]	; 0x28
 8009592:	b902      	cbnz	r2, 8009596 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009594:	4770      	bx	lr
 8009596:	6199      	str	r1, [r3, #24]
 8009598:	4770      	bx	lr
 800959a:	4613      	mov	r3, r2
 800959c:	b13a      	cbz	r2, 80095ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800959e:	699a      	ldr	r2, [r3, #24]
 80095a0:	428a      	cmp	r2, r1
 80095a2:	d1fa      	bne.n	800959a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80095a4:	698a      	ldr	r2, [r1, #24]
 80095a6:	619a      	str	r2, [r3, #24]
 80095a8:	2300      	movs	r3, #0
 80095aa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80095ae:	4770      	bx	lr

080095b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80095b0:	b410      	push	{r4}
 80095b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80095b4:	4604      	mov	r4, r0
 80095b6:	b92b      	cbnz	r3, 80095c4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80095b8:	6803      	ldr	r3, [r0, #0]
 80095ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80095be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80095c0:	4611      	mov	r1, r2
 80095c2:	4718      	bx	r3
 80095c4:	b941      	cbnz	r1, 80095d8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80095c6:	6193      	str	r3, [r2, #24]
 80095c8:	6282      	str	r2, [r0, #40]	; 0x28
 80095ca:	6154      	str	r4, [r2, #20]
 80095cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80095d0:	4770      	bx	lr
 80095d2:	4603      	mov	r3, r0
 80095d4:	2800      	cmp	r0, #0
 80095d6:	d0f9      	beq.n	80095cc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80095d8:	4299      	cmp	r1, r3
 80095da:	6998      	ldr	r0, [r3, #24]
 80095dc:	d1f9      	bne.n	80095d2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80095de:	6190      	str	r0, [r2, #24]
 80095e0:	618a      	str	r2, [r1, #24]
 80095e2:	e7f2      	b.n	80095ca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080095e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80095e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80095e8:	461f      	mov	r7, r3
 80095ea:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80095ee:	460d      	mov	r5, r1
 80095f0:	4616      	mov	r6, r2
 80095f2:	b103      	cbz	r3, 80095f6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80095f4:	6038      	str	r0, [r7, #0]
 80095f6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80095f8:	b314      	cbz	r4, 8009640 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80095fa:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80095fe:	b1eb      	cbz	r3, 800963c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009600:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009604:	428d      	cmp	r5, r1
 8009606:	db19      	blt.n	800963c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009608:	8923      	ldrh	r3, [r4, #8]
 800960a:	b289      	uxth	r1, r1
 800960c:	440b      	add	r3, r1
 800960e:	b21b      	sxth	r3, r3
 8009610:	429d      	cmp	r5, r3
 8009612:	da13      	bge.n	800963c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009614:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009618:	4296      	cmp	r6, r2
 800961a:	db0f      	blt.n	800963c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800961c:	8963      	ldrh	r3, [r4, #10]
 800961e:	b292      	uxth	r2, r2
 8009620:	4413      	add	r3, r2
 8009622:	b21b      	sxth	r3, r3
 8009624:	429e      	cmp	r6, r3
 8009626:	da09      	bge.n	800963c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009628:	6823      	ldr	r3, [r4, #0]
 800962a:	1ab2      	subs	r2, r6, r2
 800962c:	1a69      	subs	r1, r5, r1
 800962e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8009632:	b212      	sxth	r2, r2
 8009634:	463b      	mov	r3, r7
 8009636:	b209      	sxth	r1, r1
 8009638:	4620      	mov	r0, r4
 800963a:	47c0      	blx	r8
 800963c:	69a4      	ldr	r4, [r4, #24]
 800963e:	e7db      	b.n	80095f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009644 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8009644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009648:	4c6e      	ldr	r4, [pc, #440]	; (8009804 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800964a:	b0a1      	sub	sp, #132	; 0x84
 800964c:	6824      	ldr	r4, [r4, #0]
 800964e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8009650:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8009654:	9303      	str	r3, [sp, #12]
 8009656:	2400      	movs	r4, #0
 8009658:	802c      	strh	r4, [r5, #0]
 800965a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800965c:	802c      	strh	r4, [r5, #0]
 800965e:	601c      	str	r4, [r3, #0]
 8009660:	4606      	mov	r6, r0
 8009662:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8009666:	f7ff ffbd 	bl	80095e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800966a:	f1b9 0f03 	cmp.w	r9, #3
 800966e:	f340 80c2 	ble.w	80097f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8009672:	4631      	mov	r1, r6
 8009674:	a80c      	add	r0, sp, #48	; 0x30
 8009676:	f004 fc0f 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800967a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800967e:	9306      	str	r3, [sp, #24]
 8009680:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009684:	9307      	str	r3, [sp, #28]
 8009686:	9b03      	ldr	r3, [sp, #12]
 8009688:	f8d3 a000 	ldr.w	sl, [r3]
 800968c:	f1ba 0f00 	cmp.w	sl, #0
 8009690:	f000 80b4 	beq.w	80097fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009694:	4651      	mov	r1, sl
 8009696:	a810      	add	r0, sp, #64	; 0x40
 8009698:	f004 fbfe 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800969c:	9b01      	ldr	r3, [sp, #4]
 800969e:	9a06      	ldr	r2, [sp, #24]
 80096a0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80096a4:	189d      	adds	r5, r3, r2
 80096a6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80096aa:	9a07      	ldr	r2, [sp, #28]
 80096ac:	2002      	movs	r0, #2
 80096ae:	fb91 f1f0 	sdiv	r1, r1, r0
 80096b2:	4419      	add	r1, r3
 80096b4:	1a6d      	subs	r5, r5, r1
 80096b6:	9b02      	ldr	r3, [sp, #8]
 80096b8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80096bc:	4413      	add	r3, r2
 80096be:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80096c2:	fb92 f2f0 	sdiv	r2, r2, r0
 80096c6:	440a      	add	r2, r1
 80096c8:	1a9b      	subs	r3, r3, r2
 80096ca:	435b      	muls	r3, r3
 80096cc:	fb05 3505 	mla	r5, r5, r5, r3
 80096d0:	4f4d      	ldr	r7, [pc, #308]	; (8009808 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80096d2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80096d4:	ac10      	add	r4, sp, #64	; 0x40
 80096d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80096d8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80096da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80096dc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80096de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80096e0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80096e4:	f1b9 0f0c 	cmp.w	r9, #12
 80096e8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80096ec:	f04f 0303 	mov.w	r3, #3
 80096f0:	bfc8      	it	gt
 80096f2:	4698      	movgt	r8, r3
 80096f4:	f8cd 9000 	str.w	r9, [sp]
 80096f8:	f04f 0400 	mov.w	r4, #0
 80096fc:	bfdc      	itt	le
 80096fe:	f109 32ff 	addle.w	r2, r9, #4294967295
 8009702:	fb92 f8f3 	sdivle	r8, r2, r3
 8009706:	1c63      	adds	r3, r4, #1
 8009708:	aa10      	add	r2, sp, #64	; 0x40
 800970a:	f004 0401 	and.w	r4, r4, #1
 800970e:	9308      	str	r3, [sp, #32]
 8009710:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8009714:	9b00      	ldr	r3, [sp, #0]
 8009716:	fb93 f3f8 	sdiv	r3, r3, r8
 800971a:	b29b      	uxth	r3, r3
 800971c:	3404      	adds	r4, #4
 800971e:	f04f 0b00 	mov.w	fp, #0
 8009722:	9304      	str	r3, [sp, #16]
 8009724:	9a04      	ldr	r2, [sp, #16]
 8009726:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800972a:	fb13 f302 	smulbb	r3, r3, r2
 800972e:	9a01      	ldr	r2, [sp, #4]
 8009730:	b29b      	uxth	r3, r3
 8009732:	1899      	adds	r1, r3, r2
 8009734:	9305      	str	r3, [sp, #20]
 8009736:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800973a:	b209      	sxth	r1, r1
 800973c:	4299      	cmp	r1, r3
 800973e:	db4d      	blt.n	80097dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009740:	8932      	ldrh	r2, [r6, #8]
 8009742:	4413      	add	r3, r2
 8009744:	b21b      	sxth	r3, r3
 8009746:	4299      	cmp	r1, r3
 8009748:	da48      	bge.n	80097dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800974a:	9b04      	ldr	r3, [sp, #16]
 800974c:	6827      	ldr	r7, [r4, #0]
 800974e:	fb17 f703 	smulbb	r7, r7, r3
 8009752:	9b02      	ldr	r3, [sp, #8]
 8009754:	b2bf      	uxth	r7, r7
 8009756:	18fa      	adds	r2, r7, r3
 8009758:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800975c:	b212      	sxth	r2, r2
 800975e:	429a      	cmp	r2, r3
 8009760:	db3c      	blt.n	80097dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009762:	8970      	ldrh	r0, [r6, #10]
 8009764:	4403      	add	r3, r0
 8009766:	b21b      	sxth	r3, r3
 8009768:	429a      	cmp	r2, r3
 800976a:	da37      	bge.n	80097dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800976c:	2300      	movs	r3, #0
 800976e:	930b      	str	r3, [sp, #44]	; 0x2c
 8009770:	4630      	mov	r0, r6
 8009772:	ab0b      	add	r3, sp, #44	; 0x2c
 8009774:	f7ff ff36 	bl	80095e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009778:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800977a:	b37a      	cbz	r2, 80097dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800977c:	4552      	cmp	r2, sl
 800977e:	d02d      	beq.n	80097dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009780:	4611      	mov	r1, r2
 8009782:	a80e      	add	r0, sp, #56	; 0x38
 8009784:	9209      	str	r2, [sp, #36]	; 0x24
 8009786:	f004 fb87 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800978a:	9a06      	ldr	r2, [sp, #24]
 800978c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8009790:	9b01      	ldr	r3, [sp, #4]
 8009792:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8009796:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800979a:	4413      	add	r3, r2
 800979c:	f04f 0e02 	mov.w	lr, #2
 80097a0:	fb91 f1fe 	sdiv	r1, r1, lr
 80097a4:	4401      	add	r1, r0
 80097a6:	1a58      	subs	r0, r3, r1
 80097a8:	9a07      	ldr	r2, [sp, #28]
 80097aa:	9b02      	ldr	r3, [sp, #8]
 80097ac:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80097b0:	fb9c fcfe 	sdiv	ip, ip, lr
 80097b4:	4413      	add	r3, r2
 80097b6:	448c      	add	ip, r1
 80097b8:	eba3 030c 	sub.w	r3, r3, ip
 80097bc:	435b      	muls	r3, r3
 80097be:	fb00 3300 	mla	r3, r0, r0, r3
 80097c2:	42ab      	cmp	r3, r5
 80097c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80097c6:	d208      	bcs.n	80097da <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80097c8:	9803      	ldr	r0, [sp, #12]
 80097ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80097cc:	6001      	str	r1, [r0, #0]
 80097ce:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80097d0:	9805      	ldr	r0, [sp, #20]
 80097d2:	8008      	strh	r0, [r1, #0]
 80097d4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80097d6:	461d      	mov	r5, r3
 80097d8:	800f      	strh	r7, [r1, #0]
 80097da:	4692      	mov	sl, r2
 80097dc:	f10b 0b01 	add.w	fp, fp, #1
 80097e0:	f1bb 0f04 	cmp.w	fp, #4
 80097e4:	f104 0408 	add.w	r4, r4, #8
 80097e8:	d19c      	bne.n	8009724 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80097ea:	9b00      	ldr	r3, [sp, #0]
 80097ec:	9c08      	ldr	r4, [sp, #32]
 80097ee:	444b      	add	r3, r9
 80097f0:	4544      	cmp	r4, r8
 80097f2:	9300      	str	r3, [sp, #0]
 80097f4:	d187      	bne.n	8009706 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80097f6:	b021      	add	sp, #132	; 0x84
 80097f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80097fc:	f04f 35ff 	mov.w	r5, #4294967295
 8009800:	e766      	b.n	80096d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8009802:	bf00      	nop
 8009804:	20017750 	.word	0x20017750
 8009808:	0801d7cc 	.word	0x0801d7cc

0800980c <_ZN8touchgfx4RectaNERKS0_>:
 800980c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009810:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009814:	888c      	ldrh	r4, [r1, #4]
 8009816:	f9b0 9000 	ldrsh.w	r9, [r0]
 800981a:	443c      	add	r4, r7
 800981c:	b2a4      	uxth	r4, r4
 800981e:	fa0f f884 	sxth.w	r8, r4
 8009822:	45c1      	cmp	r9, r8
 8009824:	da2f      	bge.n	8009886 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009826:	8882      	ldrh	r2, [r0, #4]
 8009828:	444a      	add	r2, r9
 800982a:	b292      	uxth	r2, r2
 800982c:	fa0f fe82 	sxth.w	lr, r2
 8009830:	4577      	cmp	r7, lr
 8009832:	da28      	bge.n	8009886 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009834:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009838:	88cb      	ldrh	r3, [r1, #6]
 800983a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800983e:	442b      	add	r3, r5
 8009840:	b21b      	sxth	r3, r3
 8009842:	429e      	cmp	r6, r3
 8009844:	da1f      	bge.n	8009886 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009846:	88c3      	ldrh	r3, [r0, #6]
 8009848:	4433      	add	r3, r6
 800984a:	b29b      	uxth	r3, r3
 800984c:	fa0f fc83 	sxth.w	ip, r3
 8009850:	4565      	cmp	r5, ip
 8009852:	da18      	bge.n	8009886 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009854:	454f      	cmp	r7, r9
 8009856:	bfb8      	it	lt
 8009858:	464f      	movlt	r7, r9
 800985a:	42b5      	cmp	r5, r6
 800985c:	bfb8      	it	lt
 800985e:	4635      	movlt	r5, r6
 8009860:	45f0      	cmp	r8, lr
 8009862:	bfd8      	it	le
 8009864:	4622      	movle	r2, r4
 8009866:	1bd2      	subs	r2, r2, r7
 8009868:	8082      	strh	r2, [r0, #4]
 800986a:	884a      	ldrh	r2, [r1, #2]
 800986c:	88c9      	ldrh	r1, [r1, #6]
 800986e:	8007      	strh	r7, [r0, #0]
 8009870:	440a      	add	r2, r1
 8009872:	b292      	uxth	r2, r2
 8009874:	b211      	sxth	r1, r2
 8009876:	458c      	cmp	ip, r1
 8009878:	bfa8      	it	ge
 800987a:	4613      	movge	r3, r2
 800987c:	1b5b      	subs	r3, r3, r5
 800987e:	80c3      	strh	r3, [r0, #6]
 8009880:	8045      	strh	r5, [r0, #2]
 8009882:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009886:	2300      	movs	r3, #0
 8009888:	8003      	strh	r3, [r0, #0]
 800988a:	8043      	strh	r3, [r0, #2]
 800988c:	8083      	strh	r3, [r0, #4]
 800988e:	80c3      	strh	r3, [r0, #6]
 8009890:	e7f7      	b.n	8009882 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009892 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009892:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009896:	2b00      	cmp	r3, #0
 8009898:	dd06      	ble.n	80098a8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800989a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800989e:	2800      	cmp	r0, #0
 80098a0:	bfcc      	ite	gt
 80098a2:	2000      	movgt	r0, #0
 80098a4:	2001      	movle	r0, #1
 80098a6:	4770      	bx	lr
 80098a8:	2001      	movs	r0, #1
 80098aa:	4770      	bx	lr

080098ac <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80098ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098b0:	2300      	movs	r3, #0
 80098b2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80098b4:	8003      	strh	r3, [r0, #0]
 80098b6:	4604      	mov	r4, r0
 80098b8:	8043      	strh	r3, [r0, #2]
 80098ba:	8083      	strh	r3, [r0, #4]
 80098bc:	80c3      	strh	r3, [r0, #6]
 80098be:	2d00      	cmp	r5, #0
 80098c0:	d040      	beq.n	8009944 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80098c2:	1d28      	adds	r0, r5, #4
 80098c4:	f7ff ffe5 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 80098c8:	b988      	cbnz	r0, 80098ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80098ca:	4620      	mov	r0, r4
 80098cc:	f7ff ffe1 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 80098d0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80098d4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80098d8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80098dc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80098e0:	b138      	cbz	r0, 80098f2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80098e2:	8022      	strh	r2, [r4, #0]
 80098e4:	8063      	strh	r3, [r4, #2]
 80098e6:	f8a4 e004 	strh.w	lr, [r4, #4]
 80098ea:	f8a4 c006 	strh.w	ip, [r4, #6]
 80098ee:	69ad      	ldr	r5, [r5, #24]
 80098f0:	e7e5      	b.n	80098be <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80098f2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80098f6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80098fa:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80098fe:	4290      	cmp	r0, r2
 8009900:	4607      	mov	r7, r0
 8009902:	bfa8      	it	ge
 8009904:	4617      	movge	r7, r2
 8009906:	4472      	add	r2, lr
 8009908:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800990c:	8027      	strh	r7, [r4, #0]
 800990e:	4299      	cmp	r1, r3
 8009910:	460e      	mov	r6, r1
 8009912:	4440      	add	r0, r8
 8009914:	bfa8      	it	ge
 8009916:	461e      	movge	r6, r3
 8009918:	4471      	add	r1, lr
 800991a:	4463      	add	r3, ip
 800991c:	b200      	sxth	r0, r0
 800991e:	b212      	sxth	r2, r2
 8009920:	b209      	sxth	r1, r1
 8009922:	b21b      	sxth	r3, r3
 8009924:	4290      	cmp	r0, r2
 8009926:	bfac      	ite	ge
 8009928:	ebc7 0200 	rsbge	r2, r7, r0
 800992c:	ebc7 0202 	rsblt	r2, r7, r2
 8009930:	4299      	cmp	r1, r3
 8009932:	bfac      	ite	ge
 8009934:	ebc6 0301 	rsbge	r3, r6, r1
 8009938:	ebc6 0303 	rsblt	r3, r6, r3
 800993c:	8066      	strh	r6, [r4, #2]
 800993e:	80a2      	strh	r2, [r4, #4]
 8009940:	80e3      	strh	r3, [r4, #6]
 8009942:	e7d4      	b.n	80098ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009944:	4620      	mov	r0, r4
 8009946:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800994a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800994a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800994e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009952:	b383      	cbz	r3, 80099b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009954:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009956:	b374      	cbz	r4, 80099b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009958:	f9b1 5000 	ldrsh.w	r5, [r1]
 800995c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009960:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009964:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009968:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800996c:	b303      	cbz	r3, 80099b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800996e:	4668      	mov	r0, sp
 8009970:	1d21      	adds	r1, r4, #4
 8009972:	f8ad 5000 	strh.w	r5, [sp]
 8009976:	f8ad 6002 	strh.w	r6, [sp, #2]
 800997a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800997e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009982:	f7ff ff43 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 8009986:	4668      	mov	r0, sp
 8009988:	f7ff ff83 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800998c:	b980      	cbnz	r0, 80099b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800998e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009992:	88a2      	ldrh	r2, [r4, #4]
 8009994:	1a9b      	subs	r3, r3, r2
 8009996:	f8ad 3000 	strh.w	r3, [sp]
 800999a:	88e2      	ldrh	r2, [r4, #6]
 800999c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80099a0:	1a9b      	subs	r3, r3, r2
 80099a2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80099a6:	6823      	ldr	r3, [r4, #0]
 80099a8:	4669      	mov	r1, sp
 80099aa:	689b      	ldr	r3, [r3, #8]
 80099ac:	4620      	mov	r0, r4
 80099ae:	4798      	blx	r3
 80099b0:	69a4      	ldr	r4, [r4, #24]
 80099b2:	2c00      	cmp	r4, #0
 80099b4:	d1d8      	bne.n	8009968 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80099b6:	b002      	add	sp, #8
 80099b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080099bc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80099bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80099be:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80099c2:	460d      	mov	r5, r1
 80099c4:	4616      	mov	r6, r2
 80099c6:	b323      	cbz	r3, 8009a12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80099c8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80099ca:	b314      	cbz	r4, 8009a12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80099cc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80099d0:	b1eb      	cbz	r3, 8009a0e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80099d2:	6828      	ldr	r0, [r5, #0]
 80099d4:	6869      	ldr	r1, [r5, #4]
 80099d6:	466b      	mov	r3, sp
 80099d8:	c303      	stmia	r3!, {r0, r1}
 80099da:	4668      	mov	r0, sp
 80099dc:	1d21      	adds	r1, r4, #4
 80099de:	f7ff ff15 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 80099e2:	4668      	mov	r0, sp
 80099e4:	f7ff ff55 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 80099e8:	b988      	cbnz	r0, 8009a0e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80099ea:	f8bd 3000 	ldrh.w	r3, [sp]
 80099ee:	88a2      	ldrh	r2, [r4, #4]
 80099f0:	1a9b      	subs	r3, r3, r2
 80099f2:	f8ad 3000 	strh.w	r3, [sp]
 80099f6:	88e2      	ldrh	r2, [r4, #6]
 80099f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80099fc:	1a9b      	subs	r3, r3, r2
 80099fe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009a02:	6823      	ldr	r3, [r4, #0]
 8009a04:	4632      	mov	r2, r6
 8009a06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009a08:	4669      	mov	r1, sp
 8009a0a:	4620      	mov	r0, r4
 8009a0c:	4798      	blx	r3
 8009a0e:	69a4      	ldr	r4, [r4, #24]
 8009a10:	e7db      	b.n	80099ca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009a12:	b002      	add	sp, #8
 8009a14:	bd70      	pop	{r4, r5, r6, pc}

08009a16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009a16:	b513      	push	{r0, r1, r4, lr}
 8009a18:	6803      	ldr	r3, [r0, #0]
 8009a1a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8009a1e:	2300      	movs	r3, #0
 8009a20:	e9cd 3300 	strd	r3, r3, [sp]
 8009a24:	466b      	mov	r3, sp
 8009a26:	47a0      	blx	r4
 8009a28:	b002      	add	sp, #8
 8009a2a:	bd10      	pop	{r4, pc}

08009a2c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009a2c:	2301      	movs	r3, #1
 8009a2e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009a32:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009a36:	4770      	bx	lr

08009a38 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009a38:	2301      	movs	r3, #1
 8009a3a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009a3e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009a42:	4770      	bx	lr

08009a44 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009a44:	6843      	ldr	r3, [r0, #4]
 8009a46:	2201      	movs	r2, #1
 8009a48:	725a      	strb	r2, [r3, #9]
 8009a4a:	6840      	ldr	r0, [r0, #4]
 8009a4c:	6803      	ldr	r3, [r0, #0]
 8009a4e:	691b      	ldr	r3, [r3, #16]
 8009a50:	4718      	bx	r3

08009a52 <_ZN8touchgfx3HAL8flushDMAEv>:
 8009a52:	6840      	ldr	r0, [r0, #4]
 8009a54:	6803      	ldr	r3, [r0, #0]
 8009a56:	689b      	ldr	r3, [r3, #8]
 8009a58:	4718      	bx	r3

08009a5a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009a5a:	b530      	push	{r4, r5, lr}
 8009a5c:	b08b      	sub	sp, #44	; 0x2c
 8009a5e:	6804      	ldr	r4, [r0, #0]
 8009a60:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8009a64:	9509      	str	r5, [sp, #36]	; 0x24
 8009a66:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8009a6a:	9508      	str	r5, [sp, #32]
 8009a6c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009a70:	9507      	str	r5, [sp, #28]
 8009a72:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8009a76:	9506      	str	r5, [sp, #24]
 8009a78:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009a7c:	9505      	str	r5, [sp, #20]
 8009a7e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009a82:	9504      	str	r5, [sp, #16]
 8009a84:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8009a88:	9503      	str	r5, [sp, #12]
 8009a8a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009a8e:	9502      	str	r5, [sp, #8]
 8009a90:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009a94:	e9cd 3500 	strd	r3, r5, [sp]
 8009a98:	4613      	mov	r3, r2
 8009a9a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009a9c:	2200      	movs	r2, #0
 8009a9e:	47a0      	blx	r4
 8009aa0:	b00b      	add	sp, #44	; 0x2c
 8009aa2:	bd30      	pop	{r4, r5, pc}

08009aa4 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009aa4:	4b04      	ldr	r3, [pc, #16]	; (8009ab8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009aa6:	781b      	ldrb	r3, [r3, #0]
 8009aa8:	b123      	cbz	r3, 8009ab4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009aaa:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009aae:	f080 0001 	eor.w	r0, r0, #1
 8009ab2:	4770      	bx	lr
 8009ab4:	2001      	movs	r0, #1
 8009ab6:	4770      	bx	lr
 8009ab8:	2001774e 	.word	0x2001774e

08009abc <_ZN8touchgfx3HAL8endFrameEv>:
 8009abc:	b510      	push	{r4, lr}
 8009abe:	4604      	mov	r4, r0
 8009ac0:	6840      	ldr	r0, [r0, #4]
 8009ac2:	6803      	ldr	r3, [r0, #0]
 8009ac4:	689b      	ldr	r3, [r3, #8]
 8009ac6:	4798      	blx	r3
 8009ac8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009acc:	b113      	cbz	r3, 8009ad4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009ace:	2301      	movs	r3, #1
 8009ad0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009ad4:	bd10      	pop	{r4, pc}

08009ad6 <_ZN8touchgfx3HAL10initializeEv>:
 8009ad6:	b510      	push	{r4, lr}
 8009ad8:	4604      	mov	r4, r0
 8009ada:	f7f6 ffaf 	bl	8000a3c <_ZN8touchgfx10OSWrappers10initializeEv>
 8009ade:	f7f6 feb7 	bl	8000850 <_ZN8touchgfx4GPIO4initEv>
 8009ae2:	6860      	ldr	r0, [r4, #4]
 8009ae4:	6803      	ldr	r3, [r0, #0]
 8009ae6:	68db      	ldr	r3, [r3, #12]
 8009ae8:	4798      	blx	r3
 8009aea:	68e0      	ldr	r0, [r4, #12]
 8009aec:	6803      	ldr	r3, [r0, #0]
 8009aee:	689b      	ldr	r3, [r3, #8]
 8009af0:	4798      	blx	r3
 8009af2:	6823      	ldr	r3, [r4, #0]
 8009af4:	4620      	mov	r0, r4
 8009af6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009af8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009afc:	4718      	bx	r3
	...

08009b00 <_ZN8touchgfx3HAL4tickEv>:
 8009b00:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009b02:	6803      	ldr	r3, [r0, #0]
 8009b04:	4d5b      	ldr	r5, [pc, #364]	; (8009c74 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009b06:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009b0a:	4604      	mov	r4, r0
 8009b0c:	4798      	blx	r3
 8009b0e:	2800      	cmp	r0, #0
 8009b10:	f000 8095 	beq.w	8009c3e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009b14:	2001      	movs	r0, #1
 8009b16:	f7f6 fe19 	bl	800074c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009b1a:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009b1e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009b22:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009b26:	2600      	movs	r6, #0
 8009b28:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009b2c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009b30:	b133      	cbz	r3, 8009b40 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009b32:	6823      	ldr	r3, [r4, #0]
 8009b34:	4620      	mov	r0, r4
 8009b36:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8009b3a:	4798      	blx	r3
 8009b3c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009b40:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009b44:	6862      	ldr	r2, [r4, #4]
 8009b46:	f083 0301 	eor.w	r3, r3, #1
 8009b4a:	7253      	strb	r3, [r2, #9]
 8009b4c:	2601      	movs	r6, #1
 8009b4e:	702e      	strb	r6, [r5, #0]
 8009b50:	f003 f878 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
 8009b54:	6803      	ldr	r3, [r0, #0]
 8009b56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009b58:	4798      	blx	r3
 8009b5a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009b5e:	b90b      	cbnz	r3, 8009b64 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009b60:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009b64:	f003 f86e 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
 8009b68:	6803      	ldr	r3, [r0, #0]
 8009b6a:	695b      	ldr	r3, [r3, #20]
 8009b6c:	4798      	blx	r3
 8009b6e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009b70:	6803      	ldr	r3, [r0, #0]
 8009b72:	691b      	ldr	r3, [r3, #16]
 8009b74:	4798      	blx	r3
 8009b76:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009b7a:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009b7e:	3b01      	subs	r3, #1
 8009b80:	b2db      	uxtb	r3, r3
 8009b82:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009b86:	b10a      	cbz	r2, 8009b8c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009b88:	2b00      	cmp	r3, #0
 8009b8a:	d1eb      	bne.n	8009b64 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009b8c:	4a3a      	ldr	r2, [pc, #232]	; (8009c78 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009b8e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009b92:	7813      	ldrb	r3, [r2, #0]
 8009b94:	3301      	adds	r3, #1
 8009b96:	b25b      	sxtb	r3, r3
 8009b98:	4299      	cmp	r1, r3
 8009b9a:	7013      	strb	r3, [r2, #0]
 8009b9c:	dc10      	bgt.n	8009bc0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009b9e:	68e0      	ldr	r0, [r4, #12]
 8009ba0:	2300      	movs	r3, #0
 8009ba2:	7013      	strb	r3, [r2, #0]
 8009ba4:	6803      	ldr	r3, [r0, #0]
 8009ba6:	aa03      	add	r2, sp, #12
 8009ba8:	68db      	ldr	r3, [r3, #12]
 8009baa:	a902      	add	r1, sp, #8
 8009bac:	4798      	blx	r3
 8009bae:	6823      	ldr	r3, [r4, #0]
 8009bb0:	2800      	cmp	r0, #0
 8009bb2:	d050      	beq.n	8009c56 <_ZN8touchgfx3HAL4tickEv+0x156>
 8009bb4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009bb8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009bbc:	4620      	mov	r0, r4
 8009bbe:	4798      	blx	r3
 8009bc0:	6960      	ldr	r0, [r4, #20]
 8009bc2:	2300      	movs	r3, #0
 8009bc4:	f88d 3007 	strb.w	r3, [sp, #7]
 8009bc8:	b158      	cbz	r0, 8009be2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009bca:	6803      	ldr	r3, [r0, #0]
 8009bcc:	f10d 0107 	add.w	r1, sp, #7
 8009bd0:	68db      	ldr	r3, [r3, #12]
 8009bd2:	4798      	blx	r3
 8009bd4:	b128      	cbz	r0, 8009be2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009bd6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009bd8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009bdc:	6803      	ldr	r3, [r0, #0]
 8009bde:	68db      	ldr	r3, [r3, #12]
 8009be0:	4798      	blx	r3
 8009be2:	f104 001c 	add.w	r0, r4, #28
 8009be6:	f011 fe69 	bl	801b8bc <_ZN8touchgfx8Gestures4tickEv>
 8009bea:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009bee:	b30b      	cbz	r3, 8009c34 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009bf0:	6920      	ldr	r0, [r4, #16]
 8009bf2:	6803      	ldr	r3, [r0, #0]
 8009bf4:	691b      	ldr	r3, [r3, #16]
 8009bf6:	4798      	blx	r3
 8009bf8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009bfa:	4606      	mov	r6, r0
 8009bfc:	b903      	cbnz	r3, 8009c00 <_ZN8touchgfx3HAL4tickEv+0x100>
 8009bfe:	6720      	str	r0, [r4, #112]	; 0x70
 8009c00:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009c02:	4a1e      	ldr	r2, [pc, #120]	; (8009c7c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009c04:	1af3      	subs	r3, r6, r3
 8009c06:	4293      	cmp	r3, r2
 8009c08:	d914      	bls.n	8009c34 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009c0a:	6920      	ldr	r0, [r4, #16]
 8009c0c:	6803      	ldr	r3, [r0, #0]
 8009c0e:	699b      	ldr	r3, [r3, #24]
 8009c10:	4798      	blx	r3
 8009c12:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009c14:	2264      	movs	r2, #100	; 0x64
 8009c16:	1af3      	subs	r3, r6, r3
 8009c18:	fbb3 f3f2 	udiv	r3, r3, r2
 8009c1c:	fbb0 f0f3 	udiv	r0, r0, r3
 8009c20:	2800      	cmp	r0, #0
 8009c22:	dc1d      	bgt.n	8009c60 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009c24:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009c28:	6920      	ldr	r0, [r4, #16]
 8009c2a:	6803      	ldr	r3, [r0, #0]
 8009c2c:	2100      	movs	r1, #0
 8009c2e:	69db      	ldr	r3, [r3, #28]
 8009c30:	4798      	blx	r3
 8009c32:	6726      	str	r6, [r4, #112]	; 0x70
 8009c34:	f003 f806 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
 8009c38:	6803      	ldr	r3, [r0, #0]
 8009c3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009c3c:	4798      	blx	r3
 8009c3e:	6823      	ldr	r3, [r4, #0]
 8009c40:	4620      	mov	r0, r4
 8009c42:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009c46:	4798      	blx	r3
 8009c48:	2001      	movs	r0, #1
 8009c4a:	f7f6 fda9 	bl	80007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009c4e:	2300      	movs	r3, #0
 8009c50:	702b      	strb	r3, [r5, #0]
 8009c52:	b004      	add	sp, #16
 8009c54:	bd70      	pop	{r4, r5, r6, pc}
 8009c56:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8009c5a:	4620      	mov	r0, r4
 8009c5c:	4798      	blx	r3
 8009c5e:	e7af      	b.n	8009bc0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009c60:	2863      	cmp	r0, #99	; 0x63
 8009c62:	bfcb      	itete	gt
 8009c64:	2300      	movgt	r3, #0
 8009c66:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009c6a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009c6e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009c72:	e7d9      	b.n	8009c28 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009c74:	20017754 	.word	0x20017754
 8009c78:	20017755 	.word	0x20017755
 8009c7c:	05f5e100 	.word	0x05f5e100

08009c80 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009c80:	f7f6 bf0c 	b.w	8000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009c84 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009c84:	6581      	str	r1, [r0, #88]	; 0x58
 8009c86:	301c      	adds	r0, #28
 8009c88:	f011 be16 	b.w	801b8b8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009c8c <_ZN8touchgfx3HAL5touchEll>:
 8009c8c:	b530      	push	{r4, r5, lr}
 8009c8e:	b087      	sub	sp, #28
 8009c90:	4604      	mov	r4, r0
 8009c92:	a804      	add	r0, sp, #16
 8009c94:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009c98:	f002 fdd4 	bl	800c844 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009c9c:	9b04      	ldr	r3, [sp, #16]
 8009c9e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009ca2:	a906      	add	r1, sp, #24
 8009ca4:	9b05      	ldr	r3, [sp, #20]
 8009ca6:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009caa:	a803      	add	r0, sp, #12
 8009cac:	f002 fe1c 	bl	800c8e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009cb0:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009cb4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009cb8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009cbc:	f104 001c 	add.w	r0, r4, #28
 8009cc0:	b189      	cbz	r1, 8009ce6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009cc2:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009cc6:	9300      	str	r3, [sp, #0]
 8009cc8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009ccc:	4613      	mov	r3, r2
 8009cce:	462a      	mov	r2, r5
 8009cd0:	f011 fe02 	bl	801b8d8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009cd4:	b128      	cbz	r0, 8009ce2 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009cd6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009cda:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009cdc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009ce0:	6623      	str	r3, [r4, #96]	; 0x60
 8009ce2:	b007      	add	sp, #28
 8009ce4:	bd30      	pop	{r4, r5, pc}
 8009ce6:	f011 fe37 	bl	801b958 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009cea:	2301      	movs	r3, #1
 8009cec:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009cf0:	e7f1      	b.n	8009cd6 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009cf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009cf2:	b510      	push	{r4, lr}
 8009cf4:	2b00      	cmp	r3, #0
 8009cf6:	d046      	beq.n	8009d86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009cf8:	ea81 0002 	eor.w	r0, r1, r2
 8009cfc:	07c4      	lsls	r4, r0, #31
 8009cfe:	d508      	bpl.n	8009d12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009d00:	440b      	add	r3, r1
 8009d02:	3a01      	subs	r2, #1
 8009d04:	428b      	cmp	r3, r1
 8009d06:	d93e      	bls.n	8009d86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009d08:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009d0c:	f801 0b01 	strb.w	r0, [r1], #1
 8009d10:	e7f8      	b.n	8009d04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009d12:	07d0      	lsls	r0, r2, #31
 8009d14:	bf42      	ittt	mi
 8009d16:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009d1a:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009d1e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009d22:	2b01      	cmp	r3, #1
 8009d24:	d911      	bls.n	8009d4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009d26:	ea81 0402 	eor.w	r4, r1, r2
 8009d2a:	07a4      	lsls	r4, r4, #30
 8009d2c:	4610      	mov	r0, r2
 8009d2e:	d022      	beq.n	8009d76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009d30:	f023 0401 	bic.w	r4, r3, #1
 8009d34:	440c      	add	r4, r1
 8009d36:	428c      	cmp	r4, r1
 8009d38:	4602      	mov	r2, r0
 8009d3a:	d904      	bls.n	8009d46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009d3c:	8812      	ldrh	r2, [r2, #0]
 8009d3e:	f821 2b02 	strh.w	r2, [r1], #2
 8009d42:	3002      	adds	r0, #2
 8009d44:	e7f7      	b.n	8009d36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009d46:	f003 0301 	and.w	r3, r3, #1
 8009d4a:	f023 0003 	bic.w	r0, r3, #3
 8009d4e:	4408      	add	r0, r1
 8009d50:	4288      	cmp	r0, r1
 8009d52:	4614      	mov	r4, r2
 8009d54:	d904      	bls.n	8009d60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009d56:	6824      	ldr	r4, [r4, #0]
 8009d58:	f841 4b04 	str.w	r4, [r1], #4
 8009d5c:	3204      	adds	r2, #4
 8009d5e:	e7f7      	b.n	8009d50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009d60:	f003 0303 	and.w	r3, r3, #3
 8009d64:	440b      	add	r3, r1
 8009d66:	3a01      	subs	r2, #1
 8009d68:	428b      	cmp	r3, r1
 8009d6a:	d90c      	bls.n	8009d86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009d6c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009d70:	f801 0b01 	strb.w	r0, [r1], #1
 8009d74:	e7f8      	b.n	8009d68 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009d76:	0790      	lsls	r0, r2, #30
 8009d78:	d0e7      	beq.n	8009d4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009d7a:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009d7e:	f821 0b02 	strh.w	r0, [r1], #2
 8009d82:	3b02      	subs	r3, #2
 8009d84:	e7e1      	b.n	8009d4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009d86:	2001      	movs	r0, #1
 8009d88:	bd10      	pop	{r4, pc}

08009d8a <_ZN8touchgfx3HAL7noTouchEv>:
 8009d8a:	b510      	push	{r4, lr}
 8009d8c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009d90:	4604      	mov	r4, r0
 8009d92:	b153      	cbz	r3, 8009daa <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009d94:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009d98:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009d9c:	2101      	movs	r1, #1
 8009d9e:	301c      	adds	r0, #28
 8009da0:	f011 fdda 	bl	801b958 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009da4:	2300      	movs	r3, #0
 8009da6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009daa:	bd10      	pop	{r4, pc}

08009dac <_ZN8touchgfx3HAL3lcdEv>:
 8009dac:	4b04      	ldr	r3, [pc, #16]	; (8009dc0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8009dae:	681b      	ldr	r3, [r3, #0]
 8009db0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009db4:	b10a      	cbz	r2, 8009dba <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009db6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009db8:	b900      	cbnz	r0, 8009dbc <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009dba:	6898      	ldr	r0, [r3, #8]
 8009dbc:	4770      	bx	lr
 8009dbe:	bf00      	nop
 8009dc0:	20017750 	.word	0x20017750

08009dc4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009dc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009dc8:	b085      	sub	sp, #20
 8009dca:	ad04      	add	r5, sp, #16
 8009dcc:	4604      	mov	r4, r0
 8009dce:	2000      	movs	r0, #0
 8009dd0:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009dd4:	69a0      	ldr	r0, [r4, #24]
 8009dd6:	6806      	ldr	r6, [r0, #0]
 8009dd8:	9501      	str	r5, [sp, #4]
 8009dda:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009dde:	9500      	str	r5, [sp, #0]
 8009de0:	6835      	ldr	r5, [r6, #0]
 8009de2:	4699      	mov	r9, r3
 8009de4:	460f      	mov	r7, r1
 8009de6:	4690      	mov	r8, r2
 8009de8:	47a8      	blx	r5
 8009dea:	4d10      	ldr	r5, [pc, #64]	; (8009e2c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8009dec:	4606      	mov	r6, r0
 8009dee:	f8a5 9000 	strh.w	r9, [r5]
 8009df2:	f7ff ffdb 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 8009df6:	6803      	ldr	r3, [r0, #0]
 8009df8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dfa:	4798      	blx	r3
 8009dfc:	b128      	cbz	r0, 8009e0a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8009dfe:	2801      	cmp	r0, #1
 8009e00:	d00b      	beq.n	8009e1a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8009e02:	4630      	mov	r0, r6
 8009e04:	b005      	add	sp, #20
 8009e06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e0a:	882b      	ldrh	r3, [r5, #0]
 8009e0c:	fb08 7203 	mla	r2, r8, r3, r7
 8009e10:	9b03      	ldr	r3, [sp, #12]
 8009e12:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009e16:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009e18:	e7f3      	b.n	8009e02 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009e1a:	882a      	ldrh	r2, [r5, #0]
 8009e1c:	9b03      	ldr	r3, [sp, #12]
 8009e1e:	fb08 7202 	mla	r2, r8, r2, r7
 8009e22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009e26:	1a9a      	subs	r2, r3, r2
 8009e28:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009e2a:	e7ea      	b.n	8009e02 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009e2c:	2001774a 	.word	0x2001774a

08009e30 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8009e30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e32:	b08b      	sub	sp, #44	; 0x2c
 8009e34:	4617      	mov	r7, r2
 8009e36:	4604      	mov	r4, r0
 8009e38:	460e      	mov	r6, r1
 8009e3a:	461d      	mov	r5, r3
 8009e3c:	f7ff ffb6 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 8009e40:	6803      	ldr	r3, [r0, #0]
 8009e42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e44:	4798      	blx	r3
 8009e46:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009e4a:	9007      	str	r0, [sp, #28]
 8009e4c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009e50:	4b0d      	ldr	r3, [pc, #52]	; (8009e88 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8009e52:	6822      	ldr	r2, [r4, #0]
 8009e54:	881b      	ldrh	r3, [r3, #0]
 8009e56:	9306      	str	r3, [sp, #24]
 8009e58:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009e5c:	9305      	str	r3, [sp, #20]
 8009e5e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009e62:	9304      	str	r3, [sp, #16]
 8009e64:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009e68:	9303      	str	r3, [sp, #12]
 8009e6a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009e6e:	9302      	str	r3, [sp, #8]
 8009e70:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009e74:	e9cd 5300 	strd	r5, r3, [sp]
 8009e78:	4631      	mov	r1, r6
 8009e7a:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009e7c:	463b      	mov	r3, r7
 8009e7e:	2200      	movs	r2, #0
 8009e80:	4620      	mov	r0, r4
 8009e82:	47a8      	blx	r5
 8009e84:	b00b      	add	sp, #44	; 0x2c
 8009e86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e88:	2001774a 	.word	0x2001774a

08009e8c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009e8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e90:	4698      	mov	r8, r3
 8009e92:	6803      	ldr	r3, [r0, #0]
 8009e94:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8009e96:	4b15      	ldr	r3, [pc, #84]	; (8009eec <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009e98:	b08b      	sub	sp, #44	; 0x2c
 8009e9a:	4617      	mov	r7, r2
 8009e9c:	f8b3 9000 	ldrh.w	r9, [r3]
 8009ea0:	460e      	mov	r6, r1
 8009ea2:	4604      	mov	r4, r0
 8009ea4:	f7ff ff82 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 8009ea8:	6803      	ldr	r3, [r0, #0]
 8009eaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009eac:	4798      	blx	r3
 8009eae:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009eb2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009eb6:	2302      	movs	r3, #2
 8009eb8:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009ebc:	2301      	movs	r3, #1
 8009ebe:	9305      	str	r3, [sp, #20]
 8009ec0:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009ec4:	9304      	str	r3, [sp, #16]
 8009ec6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009eca:	9303      	str	r3, [sp, #12]
 8009ecc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009ed0:	9302      	str	r3, [sp, #8]
 8009ed2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009ed6:	2200      	movs	r2, #0
 8009ed8:	e9cd 8300 	strd	r8, r3, [sp]
 8009edc:	4631      	mov	r1, r6
 8009ede:	463b      	mov	r3, r7
 8009ee0:	4620      	mov	r0, r4
 8009ee2:	47a8      	blx	r5
 8009ee4:	b00b      	add	sp, #44	; 0x2c
 8009ee6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009eea:	bf00      	nop
 8009eec:	2001774a 	.word	0x2001774a

08009ef0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009ef0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009ef4:	4698      	mov	r8, r3
 8009ef6:	6803      	ldr	r3, [r0, #0]
 8009ef8:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009efa:	4b11      	ldr	r3, [pc, #68]	; (8009f40 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009efc:	b087      	sub	sp, #28
 8009efe:	f8b3 9000 	ldrh.w	r9, [r3]
 8009f02:	460e      	mov	r6, r1
 8009f04:	4617      	mov	r7, r2
 8009f06:	4604      	mov	r4, r0
 8009f08:	f7ff ff50 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 8009f0c:	6803      	ldr	r3, [r0, #0]
 8009f0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f10:	4798      	blx	r3
 8009f12:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8009f16:	f8cd 900c 	str.w	r9, [sp, #12]
 8009f1a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009f1e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009f22:	9302      	str	r3, [sp, #8]
 8009f24:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009f28:	9301      	str	r3, [sp, #4]
 8009f2a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009f2e:	9300      	str	r3, [sp, #0]
 8009f30:	463a      	mov	r2, r7
 8009f32:	4643      	mov	r3, r8
 8009f34:	4631      	mov	r1, r6
 8009f36:	4620      	mov	r0, r4
 8009f38:	47a8      	blx	r5
 8009f3a:	b007      	add	sp, #28
 8009f3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009f40:	2001774a 	.word	0x2001774a

08009f44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f48:	4604      	mov	r4, r0
 8009f4a:	b08f      	sub	sp, #60	; 0x3c
 8009f4c:	4610      	mov	r0, r2
 8009f4e:	460d      	mov	r5, r1
 8009f50:	4691      	mov	r9, r2
 8009f52:	461e      	mov	r6, r3
 8009f54:	f005 fefa 	bl	800fd4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009f58:	2800      	cmp	r0, #0
 8009f5a:	f000 809d 	beq.w	800a098 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8009f5e:	6823      	ldr	r3, [r4, #0]
 8009f60:	f8df b198 	ldr.w	fp, [pc, #408]	; 800a0fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009f64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f66:	f8df a198 	ldr.w	sl, [pc, #408]	; 800a100 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8009f6a:	4f61      	ldr	r7, [pc, #388]	; (800a0f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009f6c:	4620      	mov	r0, r4
 8009f6e:	4798      	blx	r3
 8009f70:	6823      	ldr	r3, [r4, #0]
 8009f72:	4620      	mov	r0, r4
 8009f74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f76:	4798      	blx	r3
 8009f78:	f8bb 3000 	ldrh.w	r3, [fp]
 8009f7c:	9301      	str	r3, [sp, #4]
 8009f7e:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8009f82:	f8ba 3000 	ldrh.w	r3, [sl]
 8009f86:	9302      	str	r3, [sp, #8]
 8009f88:	883b      	ldrh	r3, [r7, #0]
 8009f8a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009f8e:	9303      	str	r3, [sp, #12]
 8009f90:	4b58      	ldr	r3, [pc, #352]	; (800a0f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009f92:	9305      	str	r3, [sp, #20]
 8009f94:	881a      	ldrh	r2, [r3, #0]
 8009f96:	9204      	str	r2, [sp, #16]
 8009f98:	4640      	mov	r0, r8
 8009f9a:	f005 ff6b 	bl	800fe74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009f9e:	8038      	strh	r0, [r7, #0]
 8009fa0:	4640      	mov	r0, r8
 8009fa2:	f005 ff9b 	bl	800fedc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009fa6:	9b05      	ldr	r3, [sp, #20]
 8009fa8:	b280      	uxth	r0, r0
 8009faa:	8018      	strh	r0, [r3, #0]
 8009fac:	4b52      	ldr	r3, [pc, #328]	; (800a0f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009fae:	781b      	ldrb	r3, [r3, #0]
 8009fb0:	2b00      	cmp	r3, #0
 8009fb2:	d174      	bne.n	800a09e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8009fb4:	883b      	ldrh	r3, [r7, #0]
 8009fb6:	f8ab 3000 	strh.w	r3, [fp]
 8009fba:	f8aa 0000 	strh.w	r0, [sl]
 8009fbe:	4648      	mov	r0, r9
 8009fc0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8009fc4:	f005 fec2 	bl	800fd4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009fc8:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009fcc:	2200      	movs	r2, #0
 8009fce:	4611      	mov	r1, r2
 8009fd0:	4628      	mov	r0, r5
 8009fd2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009fd6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009fda:	f7f8 facc 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
 8009fde:	2301      	movs	r3, #1
 8009fe0:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009fe4:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009fe8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009fec:	2b00      	cmp	r3, #0
 8009fee:	dd5c      	ble.n	800a0aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8009ff0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009ff4:	2b00      	cmp	r3, #0
 8009ff6:	dd58      	ble.n	800a0aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8009ff8:	462a      	mov	r2, r5
 8009ffa:	ab0a      	add	r3, sp, #40	; 0x28
 8009ffc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a000:	6851      	ldr	r1, [r2, #4]
 800a002:	c303      	stmia	r3!, {r0, r1}
 800a004:	4631      	mov	r1, r6
 800a006:	a80a      	add	r0, sp, #40	; 0x28
 800a008:	f7ff fc00 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800a00c:	4b38      	ldr	r3, [pc, #224]	; (800a0f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a00e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a012:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a016:	2100      	movs	r1, #0
 800a018:	aa0a      	add	r2, sp, #40	; 0x28
 800a01a:	4b36      	ldr	r3, [pc, #216]	; (800a0f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a01c:	910c      	str	r1, [sp, #48]	; 0x30
 800a01e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a022:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a026:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800a02a:	ab08      	add	r3, sp, #32
 800a02c:	e883 0003 	stmia.w	r3, {r0, r1}
 800a030:	4618      	mov	r0, r3
 800a032:	a90c      	add	r1, sp, #48	; 0x30
 800a034:	f7ff fbea 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800a038:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800a03a:	2b00      	cmp	r3, #0
 800a03c:	d13c      	bne.n	800a0b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800a03e:	2000      	movs	r0, #0
 800a040:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800a044:	2600      	movs	r6, #0
 800a046:	682a      	ldr	r2, [r5, #0]
 800a048:	696b      	ldr	r3, [r5, #20]
 800a04a:	616e      	str	r6, [r5, #20]
 800a04c:	9305      	str	r3, [sp, #20]
 800a04e:	6892      	ldr	r2, [r2, #8]
 800a050:	a908      	add	r1, sp, #32
 800a052:	4628      	mov	r0, r5
 800a054:	4790      	blx	r2
 800a056:	9b05      	ldr	r3, [sp, #20]
 800a058:	616b      	str	r3, [r5, #20]
 800a05a:	4652      	mov	r2, sl
 800a05c:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800a060:	4649      	mov	r1, r9
 800a062:	4628      	mov	r0, r5
 800a064:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800a068:	f7f8 fa85 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
 800a06c:	4b23      	ldr	r3, [pc, #140]	; (800a0fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a06e:	9a01      	ldr	r2, [sp, #4]
 800a070:	801a      	strh	r2, [r3, #0]
 800a072:	4b23      	ldr	r3, [pc, #140]	; (800a100 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800a074:	9a02      	ldr	r2, [sp, #8]
 800a076:	801a      	strh	r2, [r3, #0]
 800a078:	4b1d      	ldr	r3, [pc, #116]	; (800a0f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a07a:	9a03      	ldr	r2, [sp, #12]
 800a07c:	801a      	strh	r2, [r3, #0]
 800a07e:	4b1d      	ldr	r3, [pc, #116]	; (800a0f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a080:	9a04      	ldr	r2, [sp, #16]
 800a082:	801a      	strh	r2, [r3, #0]
 800a084:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800a088:	6823      	ldr	r3, [r4, #0]
 800a08a:	4620      	mov	r0, r4
 800a08c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a08e:	4798      	blx	r3
 800a090:	6823      	ldr	r3, [r4, #0]
 800a092:	4620      	mov	r0, r4
 800a094:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a096:	4798      	blx	r3
 800a098:	b00f      	add	sp, #60	; 0x3c
 800a09a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a09e:	883b      	ldrh	r3, [r7, #0]
 800a0a0:	f8ab 0000 	strh.w	r0, [fp]
 800a0a4:	f8aa 3000 	strh.w	r3, [sl]
 800a0a8:	e789      	b.n	8009fbe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800a0aa:	462a      	mov	r2, r5
 800a0ac:	ab0a      	add	r3, sp, #40	; 0x28
 800a0ae:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a0b2:	6851      	ldr	r1, [r2, #4]
 800a0b4:	c303      	stmia	r3!, {r0, r1}
 800a0b6:	e7a9      	b.n	800a00c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800a0b8:	a807      	add	r0, sp, #28
 800a0ba:	f006 f84b 	bl	8010154 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a0be:	4606      	mov	r6, r0
 800a0c0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a0c2:	6803      	ldr	r3, [r0, #0]
 800a0c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0c6:	4798      	blx	r3
 800a0c8:	4286      	cmp	r6, r0
 800a0ca:	d1b8      	bne.n	800a03e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a0cc:	f7ff fe6e 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 800a0d0:	6803      	ldr	r3, [r0, #0]
 800a0d2:	4606      	mov	r6, r0
 800a0d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a0d6:	9305      	str	r3, [sp, #20]
 800a0d8:	a807      	add	r0, sp, #28
 800a0da:	f006 f83b 	bl	8010154 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a0de:	9b05      	ldr	r3, [sp, #20]
 800a0e0:	4601      	mov	r1, r0
 800a0e2:	4630      	mov	r0, r6
 800a0e4:	4798      	blx	r3
 800a0e6:	f080 0001 	eor.w	r0, r0, #1
 800a0ea:	b2c0      	uxtb	r0, r0
 800a0ec:	e7a8      	b.n	800a040 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a0ee:	bf00      	nop
 800a0f0:	20017744 	.word	0x20017744
 800a0f4:	20017746 	.word	0x20017746
 800a0f8:	20017748 	.word	0x20017748
 800a0fc:	2001774a 	.word	0x2001774a
 800a100:	2001774c 	.word	0x2001774c

0800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a104:	b510      	push	{r4, lr}
 800a106:	4b07      	ldr	r3, [pc, #28]	; (800a124 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a108:	781b      	ldrb	r3, [r3, #0]
 800a10a:	4604      	mov	r4, r0
 800a10c:	b13b      	cbz	r3, 800a11e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a10e:	6803      	ldr	r3, [r0, #0]
 800a110:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a112:	4798      	blx	r3
 800a114:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a116:	4283      	cmp	r3, r0
 800a118:	d101      	bne.n	800a11e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a11a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a11c:	bd10      	pop	{r4, pc}
 800a11e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a120:	e7fc      	b.n	800a11c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a122:	bf00      	nop
 800a124:	2001774e 	.word	0x2001774e

0800a128 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a12c:	b08a      	sub	sp, #40	; 0x28
 800a12e:	461d      	mov	r5, r3
 800a130:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a134:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a138:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a13c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a140:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a144:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a148:	2400      	movs	r4, #0
 800a14a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a14e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800a152:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a156:	4690      	mov	r8, r2
 800a158:	4607      	mov	r7, r0
 800a15a:	9404      	str	r4, [sp, #16]
 800a15c:	f88d 4020 	strb.w	r4, [sp, #32]
 800a160:	f7ff ffd0 	bl	800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a164:	fb06 8505 	mla	r5, r6, r5, r8
 800a168:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a16c:	6878      	ldr	r0, [r7, #4]
 800a16e:	9505      	str	r5, [sp, #20]
 800a170:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a174:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a178:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800a17c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800a180:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800a184:	6803      	ldr	r3, [r0, #0]
 800a186:	a901      	add	r1, sp, #4
 800a188:	685b      	ldr	r3, [r3, #4]
 800a18a:	4798      	blx	r3
 800a18c:	b00a      	add	sp, #40	; 0x28
 800a18e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a192 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a192:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a196:	b08b      	sub	sp, #44	; 0x2c
 800a198:	2400      	movs	r4, #0
 800a19a:	461d      	mov	r5, r3
 800a19c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800a1a0:	4688      	mov	r8, r1
 800a1a2:	4691      	mov	r9, r2
 800a1a4:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800a1a8:	9404      	str	r4, [sp, #16]
 800a1aa:	4607      	mov	r7, r0
 800a1ac:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a1b0:	f7ff ffa8 	bl	800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a1b4:	fb06 9505 	mla	r5, r6, r5, r9
 800a1b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a1bc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a1c0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a1c4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a1c8:	6878      	ldr	r0, [r7, #4]
 800a1ca:	9505      	str	r5, [sp, #20]
 800a1cc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a1d0:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a1d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a1d8:	f8cd 8010 	str.w	r8, [sp, #16]
 800a1dc:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a1e0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a1e4:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800a1e8:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800a1ec:	6803      	ldr	r3, [r0, #0]
 800a1ee:	a901      	add	r1, sp, #4
 800a1f0:	685b      	ldr	r3, [r3, #4]
 800a1f2:	4798      	blx	r3
 800a1f4:	b00b      	add	sp, #44	; 0x2c
 800a1f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a1fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a1fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a200:	b08a      	sub	sp, #40	; 0x28
 800a202:	4698      	mov	r8, r3
 800a204:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800a208:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800a20c:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800a210:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800a214:	2300      	movs	r3, #0
 800a216:	2d0b      	cmp	r5, #11
 800a218:	4606      	mov	r6, r0
 800a21a:	9304      	str	r3, [sp, #16]
 800a21c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800a220:	d138      	bne.n	800a294 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800a222:	2380      	movs	r3, #128	; 0x80
 800a224:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a228:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a22c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a230:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a234:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a238:	f88d 0020 	strb.w	r0, [sp, #32]
 800a23c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a240:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a244:	4630      	mov	r0, r6
 800a246:	9203      	str	r2, [sp, #12]
 800a248:	f7ff ff5c 	bl	800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a24c:	2c0b      	cmp	r4, #11
 800a24e:	bf98      	it	ls
 800a250:	4b1b      	ldrls	r3, [pc, #108]	; (800a2c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800a252:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800a256:	bf98      	it	ls
 800a258:	5d19      	ldrbls	r1, [r3, r4]
 800a25a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a25e:	bf88      	it	hi
 800a260:	2100      	movhi	r1, #0
 800a262:	fb02 8307 	mla	r3, r2, r7, r8
 800a266:	10c9      	asrs	r1, r1, #3
 800a268:	fb01 0003 	mla	r0, r1, r3, r0
 800a26c:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800a270:	9005      	str	r0, [sp, #20]
 800a272:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a276:	6870      	ldr	r0, [r6, #4]
 800a278:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800a27c:	2300      	movs	r3, #0
 800a27e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a282:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a286:	6803      	ldr	r3, [r0, #0]
 800a288:	a901      	add	r1, sp, #4
 800a28a:	685b      	ldr	r3, [r3, #4]
 800a28c:	4798      	blx	r3
 800a28e:	b00a      	add	sp, #40	; 0x28
 800a290:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a294:	2d02      	cmp	r5, #2
 800a296:	d109      	bne.n	800a2ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800a298:	28ff      	cmp	r0, #255	; 0xff
 800a29a:	d105      	bne.n	800a2a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800a29c:	f1bc 0f00 	cmp.w	ip, #0
 800a2a0:	bf14      	ite	ne
 800a2a2:	2340      	movne	r3, #64	; 0x40
 800a2a4:	2320      	moveq	r3, #32
 800a2a6:	e7bd      	b.n	800a224 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a2a8:	2340      	movs	r3, #64	; 0x40
 800a2aa:	e7bb      	b.n	800a224 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a2ac:	28ff      	cmp	r0, #255	; 0xff
 800a2ae:	d105      	bne.n	800a2bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800a2b0:	f1bc 0f00 	cmp.w	ip, #0
 800a2b4:	bf14      	ite	ne
 800a2b6:	2304      	movne	r3, #4
 800a2b8:	2301      	moveq	r3, #1
 800a2ba:	e7b3      	b.n	800a224 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a2bc:	2304      	movs	r3, #4
 800a2be:	e7b1      	b.n	800a224 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a2c0:	0801f324 	.word	0x0801f324

0800a2c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a2c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2c8:	b08b      	sub	sp, #44	; 0x2c
 800a2ca:	461d      	mov	r5, r3
 800a2cc:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800a2d0:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800a2d4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800a2d8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800a2dc:	bf14      	ite	ne
 800a2de:	2308      	movne	r3, #8
 800a2e0:	2302      	moveq	r3, #2
 800a2e2:	2400      	movs	r4, #0
 800a2e4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a2e8:	4688      	mov	r8, r1
 800a2ea:	4693      	mov	fp, r2
 800a2ec:	9404      	str	r4, [sp, #16]
 800a2ee:	4607      	mov	r7, r0
 800a2f0:	f7ff ff08 	bl	800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a2f4:	2e0b      	cmp	r6, #11
 800a2f6:	bf98      	it	ls
 800a2f8:	4b15      	ldrls	r3, [pc, #84]	; (800a350 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a2fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800a2fe:	bf98      	it	ls
 800a300:	5d9c      	ldrbls	r4, [r3, r6]
 800a302:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a306:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a30a:	fb05 b50a 	mla	r5, r5, sl, fp
 800a30e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a312:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a316:	10e4      	asrs	r4, r4, #3
 800a318:	fb04 0405 	mla	r4, r4, r5, r0
 800a31c:	2300      	movs	r3, #0
 800a31e:	6878      	ldr	r0, [r7, #4]
 800a320:	9405      	str	r4, [sp, #20]
 800a322:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a326:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a32a:	f8cd 8010 	str.w	r8, [sp, #16]
 800a32e:	f88d 9020 	strb.w	r9, [sp, #32]
 800a332:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800a336:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a33a:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800a33e:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800a342:	6803      	ldr	r3, [r0, #0]
 800a344:	a901      	add	r1, sp, #4
 800a346:	685b      	ldr	r3, [r3, #4]
 800a348:	4798      	blx	r3
 800a34a:	b00b      	add	sp, #44	; 0x2c
 800a34c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a350:	0801f324 	.word	0x0801f324

0800a354 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a354:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a358:	461e      	mov	r6, r3
 800a35a:	4b0a      	ldr	r3, [pc, #40]	; (800a384 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a35c:	460f      	mov	r7, r1
 800a35e:	881d      	ldrh	r5, [r3, #0]
 800a360:	4690      	mov	r8, r2
 800a362:	f7ff fd23 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 800a366:	6803      	ldr	r3, [r0, #0]
 800a368:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a36a:	4798      	blx	r3
 800a36c:	280b      	cmp	r0, #11
 800a36e:	bf9a      	itte	ls
 800a370:	4b05      	ldrls	r3, [pc, #20]	; (800a388 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a372:	5c1c      	ldrbls	r4, [r3, r0]
 800a374:	2400      	movhi	r4, #0
 800a376:	fb08 7005 	mla	r0, r8, r5, r7
 800a37a:	10e4      	asrs	r4, r4, #3
 800a37c:	fb04 6000 	mla	r0, r4, r0, r6
 800a380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a384:	2001774a 	.word	0x2001774a
 800a388:	0801f324 	.word	0x0801f324

0800a38c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a38c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a38e:	b08b      	sub	sp, #44	; 0x2c
 800a390:	461f      	mov	r7, r3
 800a392:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a396:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a39a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a39e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a3a2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a3a6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a3aa:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a3ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a3b2:	2500      	movs	r5, #0
 800a3b4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a3b8:	f88d 3020 	strb.w	r3, [sp, #32]
 800a3bc:	4604      	mov	r4, r0
 800a3be:	4616      	mov	r6, r2
 800a3c0:	9504      	str	r5, [sp, #16]
 800a3c2:	f7ff fe9f 	bl	800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a3c6:	463a      	mov	r2, r7
 800a3c8:	4631      	mov	r1, r6
 800a3ca:	4603      	mov	r3, r0
 800a3cc:	4620      	mov	r0, r4
 800a3ce:	f7ff ffc1 	bl	800a354 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a3d2:	4b0e      	ldr	r3, [pc, #56]	; (800a40c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a3d4:	9005      	str	r0, [sp, #20]
 800a3d6:	881b      	ldrh	r3, [r3, #0]
 800a3d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a3dc:	f7ff fce6 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 800a3e0:	6803      	ldr	r3, [r0, #0]
 800a3e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3e4:	4798      	blx	r3
 800a3e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a3e8:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800a3ec:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800a3f0:	9304      	str	r3, [sp, #16]
 800a3f2:	6860      	ldr	r0, [r4, #4]
 800a3f4:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a3f8:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a3fc:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800a400:	6803      	ldr	r3, [r0, #0]
 800a402:	a901      	add	r1, sp, #4
 800a404:	685b      	ldr	r3, [r3, #4]
 800a406:	4798      	blx	r3
 800a408:	b00b      	add	sp, #44	; 0x2c
 800a40a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a40c:	2001774a 	.word	0x2001774a

0800a410 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a410:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a412:	b08d      	sub	sp, #52	; 0x34
 800a414:	466b      	mov	r3, sp
 800a416:	e883 0006 	stmia.w	r3, {r1, r2}
 800a41a:	2300      	movs	r3, #0
 800a41c:	9306      	str	r3, [sp, #24]
 800a41e:	6803      	ldr	r3, [r0, #0]
 800a420:	f8bd 6000 	ldrh.w	r6, [sp]
 800a424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a426:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a42a:	2501      	movs	r5, #1
 800a42c:	9503      	str	r5, [sp, #12]
 800a42e:	4604      	mov	r4, r0
 800a430:	4798      	blx	r3
 800a432:	463a      	mov	r2, r7
 800a434:	4631      	mov	r1, r6
 800a436:	4603      	mov	r3, r0
 800a438:	4620      	mov	r0, r4
 800a43a:	f7ff ff8b 	bl	800a354 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a43e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a440:	9307      	str	r3, [sp, #28]
 800a442:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a446:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a44a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a44e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a452:	4b0f      	ldr	r3, [pc, #60]	; (800a490 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a454:	9004      	str	r0, [sp, #16]
 800a456:	881b      	ldrh	r3, [r3, #0]
 800a458:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a45c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a460:	f7ff fca4 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 800a464:	6803      	ldr	r3, [r0, #0]
 800a466:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a468:	4798      	blx	r3
 800a46a:	23ff      	movs	r3, #255	; 0xff
 800a46c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a470:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a474:	6860      	ldr	r0, [r4, #4]
 800a476:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a47a:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a47e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a482:	6803      	ldr	r3, [r0, #0]
 800a484:	a903      	add	r1, sp, #12
 800a486:	685b      	ldr	r3, [r3, #4]
 800a488:	4798      	blx	r3
 800a48a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a48c:	b00d      	add	sp, #52	; 0x34
 800a48e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a490:	2001774a 	.word	0x2001774a

0800a494 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a494:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a498:	b08c      	sub	sp, #48	; 0x30
 800a49a:	461e      	mov	r6, r3
 800a49c:	466d      	mov	r5, sp
 800a49e:	2300      	movs	r3, #0
 800a4a0:	e885 0006 	stmia.w	r5, {r1, r2}
 800a4a4:	9306      	str	r3, [sp, #24]
 800a4a6:	6803      	ldr	r3, [r0, #0]
 800a4a8:	f8bd 7000 	ldrh.w	r7, [sp]
 800a4ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a4ae:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a4b2:	2501      	movs	r5, #1
 800a4b4:	9503      	str	r5, [sp, #12]
 800a4b6:	4604      	mov	r4, r0
 800a4b8:	4798      	blx	r3
 800a4ba:	4642      	mov	r2, r8
 800a4bc:	4639      	mov	r1, r7
 800a4be:	4603      	mov	r3, r0
 800a4c0:	4620      	mov	r0, r4
 800a4c2:	f7ff ff47 	bl	800a354 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a4c6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a4ca:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a4ce:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a4d2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a4d6:	4b11      	ldr	r3, [pc, #68]	; (800a51c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a4d8:	9004      	str	r0, [sp, #16]
 800a4da:	881b      	ldrh	r3, [r3, #0]
 800a4dc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a4e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a4e2:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a4e6:	9607      	str	r6, [sp, #28]
 800a4e8:	f7ff fc60 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 800a4ec:	6803      	ldr	r3, [r0, #0]
 800a4ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a4f0:	4798      	blx	r3
 800a4f2:	23ff      	movs	r3, #255	; 0xff
 800a4f4:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a4f8:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a4fc:	6860      	ldr	r0, [r4, #4]
 800a4fe:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a502:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a506:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a50a:	6803      	ldr	r3, [r0, #0]
 800a50c:	a903      	add	r1, sp, #12
 800a50e:	685b      	ldr	r3, [r3, #4]
 800a510:	4798      	blx	r3
 800a512:	4630      	mov	r0, r6
 800a514:	b00c      	add	sp, #48	; 0x30
 800a516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a51a:	bf00      	nop
 800a51c:	2001774a 	.word	0x2001774a

0800a520 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a520:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a522:	b085      	sub	sp, #20
 800a524:	ac02      	add	r4, sp, #8
 800a526:	e884 0006 	stmia.w	r4, {r1, r2}
 800a52a:	4605      	mov	r5, r0
 800a52c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a530:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a534:	f7ff fde6 	bl	800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a538:	463a      	mov	r2, r7
 800a53a:	4603      	mov	r3, r0
 800a53c:	4631      	mov	r1, r6
 800a53e:	4628      	mov	r0, r5
 800a540:	f7ff ff08 	bl	800a354 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a544:	4a05      	ldr	r2, [pc, #20]	; (800a55c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a546:	682b      	ldr	r3, [r5, #0]
 800a548:	8812      	ldrh	r2, [r2, #0]
 800a54a:	9200      	str	r2, [sp, #0]
 800a54c:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800a54e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a552:	4603      	mov	r3, r0
 800a554:	4628      	mov	r0, r5
 800a556:	47b0      	blx	r6
 800a558:	b005      	add	sp, #20
 800a55a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a55c:	2001774a 	.word	0x2001774a

0800a560 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a560:	b570      	push	{r4, r5, r6, lr}
 800a562:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a566:	4604      	mov	r4, r0
 800a568:	b19b      	cbz	r3, 800a592 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a56a:	2002      	movs	r0, #2
 800a56c:	f7f6 f942 	bl	80007f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a570:	2300      	movs	r3, #0
 800a572:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a576:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a57a:	6823      	ldr	r3, [r4, #0]
 800a57c:	4620      	mov	r0, r4
 800a57e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800a582:	f7ff fdbf 	bl	800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a586:	462b      	mov	r3, r5
 800a588:	4601      	mov	r1, r0
 800a58a:	4620      	mov	r0, r4
 800a58c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a590:	4718      	bx	r3
 800a592:	bd70      	pop	{r4, r5, r6, pc}

0800a594 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a594:	b538      	push	{r3, r4, r5, lr}
 800a596:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800a59a:	428b      	cmp	r3, r1
 800a59c:	4604      	mov	r4, r0
 800a59e:	460d      	mov	r5, r1
 800a5a0:	d006      	beq.n	800a5b0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a5a2:	6803      	ldr	r3, [r0, #0]
 800a5a4:	b929      	cbnz	r1, 800a5b2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a5a6:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800a5aa:	4798      	blx	r3
 800a5ac:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800a5b0:	bd38      	pop	{r3, r4, r5, pc}
 800a5b2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800a5b6:	e7f8      	b.n	800a5aa <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a5b8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a5b8:	b510      	push	{r4, lr}
 800a5ba:	4b0d      	ldr	r3, [pc, #52]	; (800a5f0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a5bc:	781b      	ldrb	r3, [r3, #0]
 800a5be:	4604      	mov	r4, r0
 800a5c0:	b95b      	cbnz	r3, 800a5da <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a5c2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a5c6:	2b02      	cmp	r3, #2
 800a5c8:	d007      	beq.n	800a5da <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a5ca:	6840      	ldr	r0, [r0, #4]
 800a5cc:	f000 f912 	bl	800a7f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a5d0:	b118      	cbz	r0, 800a5da <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a5d2:	6862      	ldr	r2, [r4, #4]
 800a5d4:	7a53      	ldrb	r3, [r2, #9]
 800a5d6:	2b00      	cmp	r3, #0
 800a5d8:	d0fc      	beq.n	800a5d4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a5da:	f7f6 fa57 	bl	8000a8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a5de:	4620      	mov	r0, r4
 800a5e0:	2100      	movs	r1, #0
 800a5e2:	f7ff ffd7 	bl	800a594 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a5e6:	4620      	mov	r0, r4
 800a5e8:	f7ff fd8c 	bl	800a104 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a5ec:	bd10      	pop	{r4, pc}
 800a5ee:	bf00      	nop
 800a5f0:	2001774e 	.word	0x2001774e

0800a5f4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a5f4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a5f8:	1a13      	subs	r3, r2, r0
 800a5fa:	4258      	negs	r0, r3
 800a5fc:	4158      	adcs	r0, r3
 800a5fe:	4770      	bx	lr

0800a600 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a600:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a604:	1a9b      	subs	r3, r3, r2
 800a606:	2b00      	cmp	r3, #0
 800a608:	bfdc      	itt	le
 800a60a:	6882      	ldrle	r2, [r0, #8]
 800a60c:	189b      	addle	r3, r3, r2
 800a60e:	2b01      	cmp	r3, #1
 800a610:	bfcc      	ite	gt
 800a612:	2000      	movgt	r0, #0
 800a614:	2001      	movle	r0, #1
 800a616:	4770      	bx	lr

0800a618 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a618:	6902      	ldr	r2, [r0, #16]
 800a61a:	6843      	ldr	r3, [r0, #4]
 800a61c:	2024      	movs	r0, #36	; 0x24
 800a61e:	fb00 3002 	mla	r0, r0, r2, r3
 800a622:	4770      	bx	lr

0800a624 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a624:	6803      	ldr	r3, [r0, #0]
 800a626:	691b      	ldr	r3, [r3, #16]
 800a628:	4718      	bx	r3

0800a62a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a62a:	b570      	push	{r4, r5, r6, lr}
 800a62c:	2301      	movs	r3, #1
 800a62e:	7203      	strb	r3, [r0, #8]
 800a630:	4604      	mov	r4, r0
 800a632:	6840      	ldr	r0, [r0, #4]
 800a634:	6803      	ldr	r3, [r0, #0]
 800a636:	699b      	ldr	r3, [r3, #24]
 800a638:	4798      	blx	r3
 800a63a:	6803      	ldr	r3, [r0, #0]
 800a63c:	2b40      	cmp	r3, #64	; 0x40
 800a63e:	4605      	mov	r5, r0
 800a640:	d00c      	beq.n	800a65c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a642:	d810      	bhi.n	800a666 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a644:	2b04      	cmp	r3, #4
 800a646:	d01d      	beq.n	800a684 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800a648:	d804      	bhi.n	800a654 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800a64a:	2b01      	cmp	r3, #1
 800a64c:	d006      	beq.n	800a65c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a64e:	2b02      	cmp	r3, #2
 800a650:	d02c      	beq.n	800a6ac <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a652:	bd70      	pop	{r4, r5, r6, pc}
 800a654:	2b08      	cmp	r3, #8
 800a656:	d01d      	beq.n	800a694 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800a658:	2b20      	cmp	r3, #32
 800a65a:	d1fa      	bne.n	800a652 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800a65c:	6823      	ldr	r3, [r4, #0]
 800a65e:	4620      	mov	r0, r4
 800a660:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a662:	4798      	blx	r3
 800a664:	e013      	b.n	800a68e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a666:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a66a:	d0f7      	beq.n	800a65c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a66c:	d804      	bhi.n	800a678 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800a66e:	2b80      	cmp	r3, #128	; 0x80
 800a670:	d0f4      	beq.n	800a65c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a672:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a676:	e7f0      	b.n	800a65a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800a678:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a67c:	d0ee      	beq.n	800a65c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a67e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a682:	e7e5      	b.n	800a650 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a684:	6823      	ldr	r3, [r4, #0]
 800a686:	7f01      	ldrb	r1, [r0, #28]
 800a688:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a68a:	4620      	mov	r0, r4
 800a68c:	4798      	blx	r3
 800a68e:	6823      	ldr	r3, [r4, #0]
 800a690:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a692:	e006      	b.n	800a6a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a694:	6823      	ldr	r3, [r4, #0]
 800a696:	7f01      	ldrb	r1, [r0, #28]
 800a698:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a69a:	4620      	mov	r0, r4
 800a69c:	4798      	blx	r3
 800a69e:	6823      	ldr	r3, [r4, #0]
 800a6a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a6a2:	4629      	mov	r1, r5
 800a6a4:	4620      	mov	r0, r4
 800a6a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6aa:	4718      	bx	r3
 800a6ac:	6823      	ldr	r3, [r4, #0]
 800a6ae:	4620      	mov	r0, r4
 800a6b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a6b2:	4798      	blx	r3
 800a6b4:	e7f3      	b.n	800a69e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800a6b6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a6b6:	4770      	bx	lr

0800a6b8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a6b8:	4770      	bx	lr

0800a6ba <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a6ba:	4770      	bx	lr

0800a6bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a6bc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a6c0:	1ad2      	subs	r2, r2, r3
 800a6c2:	2a00      	cmp	r2, #0
 800a6c4:	b510      	push	{r4, lr}
 800a6c6:	bfdc      	itt	le
 800a6c8:	6884      	ldrle	r4, [r0, #8]
 800a6ca:	1912      	addle	r2, r2, r4
 800a6cc:	2a01      	cmp	r2, #1
 800a6ce:	dd16      	ble.n	800a6fe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800a6d0:	6842      	ldr	r2, [r0, #4]
 800a6d2:	2424      	movs	r4, #36	; 0x24
 800a6d4:	fb04 2303 	mla	r3, r4, r3, r2
 800a6d8:	f101 0220 	add.w	r2, r1, #32
 800a6dc:	f851 4b04 	ldr.w	r4, [r1], #4
 800a6e0:	f843 4b04 	str.w	r4, [r3], #4
 800a6e4:	4291      	cmp	r1, r2
 800a6e6:	d1f9      	bne.n	800a6dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a6e8:	780a      	ldrb	r2, [r1, #0]
 800a6ea:	701a      	strb	r2, [r3, #0]
 800a6ec:	68c3      	ldr	r3, [r0, #12]
 800a6ee:	6882      	ldr	r2, [r0, #8]
 800a6f0:	f3bf 8f5b 	dmb	ish
 800a6f4:	3301      	adds	r3, #1
 800a6f6:	429a      	cmp	r2, r3
 800a6f8:	bfd8      	it	le
 800a6fa:	1a9b      	suble	r3, r3, r2
 800a6fc:	60c3      	str	r3, [r0, #12]
 800a6fe:	bd10      	pop	{r4, pc}

0800a700 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a700:	6903      	ldr	r3, [r0, #16]
 800a702:	6882      	ldr	r2, [r0, #8]
 800a704:	f3bf 8f5b 	dmb	ish
 800a708:	3301      	adds	r3, #1
 800a70a:	429a      	cmp	r2, r3
 800a70c:	bfd8      	it	le
 800a70e:	1a9b      	suble	r3, r3, r2
 800a710:	6103      	str	r3, [r0, #16]
 800a712:	4770      	bx	lr

0800a714 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a714:	b570      	push	{r4, r5, r6, lr}
 800a716:	4604      	mov	r4, r0
 800a718:	460e      	mov	r6, r1
 800a71a:	6860      	ldr	r0, [r4, #4]
 800a71c:	6803      	ldr	r3, [r0, #0]
 800a71e:	685b      	ldr	r3, [r3, #4]
 800a720:	4798      	blx	r3
 800a722:	2800      	cmp	r0, #0
 800a724:	d1f9      	bne.n	800a71a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a726:	4d0d      	ldr	r5, [pc, #52]	; (800a75c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a728:	6828      	ldr	r0, [r5, #0]
 800a72a:	6803      	ldr	r3, [r0, #0]
 800a72c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a72e:	4798      	blx	r3
 800a730:	f7f6 f9ba 	bl	8000aa8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a734:	6828      	ldr	r0, [r5, #0]
 800a736:	2101      	movs	r1, #1
 800a738:	f7ff ff2c 	bl	800a594 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a73c:	6860      	ldr	r0, [r4, #4]
 800a73e:	6803      	ldr	r3, [r0, #0]
 800a740:	4631      	mov	r1, r6
 800a742:	689b      	ldr	r3, [r3, #8]
 800a744:	4798      	blx	r3
 800a746:	6823      	ldr	r3, [r4, #0]
 800a748:	4620      	mov	r0, r4
 800a74a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a74c:	4798      	blx	r3
 800a74e:	6828      	ldr	r0, [r5, #0]
 800a750:	6803      	ldr	r3, [r0, #0]
 800a752:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a756:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a758:	4718      	bx	r3
 800a75a:	bf00      	nop
 800a75c:	20017750 	.word	0x20017750

0800a760 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a760:	b508      	push	{r3, lr}
 800a762:	f7f6 f993 	bl	8000a8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a766:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a76a:	f7f6 b997 	b.w	8000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a76e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a76e:	b510      	push	{r4, lr}
 800a770:	2114      	movs	r1, #20
 800a772:	4604      	mov	r4, r0
 800a774:	f011 f976 	bl	801ba64 <_ZdlPvj>
 800a778:	4620      	mov	r0, r4
 800a77a:	bd10      	pop	{r4, pc}

0800a77c <_ZN8touchgfx13DMA_Interface5startEv>:
 800a77c:	b510      	push	{r4, lr}
 800a77e:	4604      	mov	r4, r0
 800a780:	6840      	ldr	r0, [r0, #4]
 800a782:	6803      	ldr	r3, [r0, #0]
 800a784:	681b      	ldr	r3, [r3, #0]
 800a786:	4798      	blx	r3
 800a788:	b948      	cbnz	r0, 800a79e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a78a:	7a63      	ldrb	r3, [r4, #9]
 800a78c:	b13b      	cbz	r3, 800a79e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a78e:	7a23      	ldrb	r3, [r4, #8]
 800a790:	b92b      	cbnz	r3, 800a79e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a792:	6823      	ldr	r3, [r4, #0]
 800a794:	4620      	mov	r0, r4
 800a796:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a798:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a79c:	4718      	bx	r3
 800a79e:	bd10      	pop	{r4, pc}

0800a7a0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a7a0:	b570      	push	{r4, r5, r6, lr}
 800a7a2:	4604      	mov	r4, r0
 800a7a4:	6840      	ldr	r0, [r0, #4]
 800a7a6:	6803      	ldr	r3, [r0, #0]
 800a7a8:	681b      	ldr	r3, [r3, #0]
 800a7aa:	4798      	blx	r3
 800a7ac:	4605      	mov	r5, r0
 800a7ae:	b930      	cbnz	r0, 800a7be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a7b0:	7a23      	ldrb	r3, [r4, #8]
 800a7b2:	b123      	cbz	r3, 800a7be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a7b4:	6860      	ldr	r0, [r4, #4]
 800a7b6:	6803      	ldr	r3, [r0, #0]
 800a7b8:	695b      	ldr	r3, [r3, #20]
 800a7ba:	4798      	blx	r3
 800a7bc:	7225      	strb	r5, [r4, #8]
 800a7be:	6860      	ldr	r0, [r4, #4]
 800a7c0:	6803      	ldr	r3, [r0, #0]
 800a7c2:	681b      	ldr	r3, [r3, #0]
 800a7c4:	4798      	blx	r3
 800a7c6:	b928      	cbnz	r0, 800a7d4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a7c8:	6823      	ldr	r3, [r4, #0]
 800a7ca:	4620      	mov	r0, r4
 800a7cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7d2:	4718      	bx	r3
 800a7d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7d8:	f7f6 b96e 	b.w	8000ab8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a7dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a7dc:	b510      	push	{r4, lr}
 800a7de:	4c04      	ldr	r4, [pc, #16]	; (800a7f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a7e0:	6082      	str	r2, [r0, #8]
 800a7e2:	2200      	movs	r2, #0
 800a7e4:	e9c0 4100 	strd	r4, r1, [r0]
 800a7e8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a7ec:	bd10      	pop	{r4, pc}
 800a7ee:	bf00      	nop
 800a7f0:	0801f338 	.word	0x0801f338

0800a7f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a7f4:	6840      	ldr	r0, [r0, #4]
 800a7f6:	6803      	ldr	r3, [r0, #0]
 800a7f8:	681b      	ldr	r3, [r3, #0]
 800a7fa:	4718      	bx	r3

0800a7fc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800a7fc:	4b07      	ldr	r3, [pc, #28]	; (800a81c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800a7fe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a800:	881b      	ldrh	r3, [r3, #0]
 800a802:	4293      	cmp	r3, r2
 800a804:	bf81      	itttt	hi
 800a806:	4b06      	ldrhi	r3, [pc, #24]	; (800a820 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800a808:	681b      	ldrhi	r3, [r3, #0]
 800a80a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800a80e:	7858      	ldrbhi	r0, [r3, #1]
 800a810:	bf8c      	ite	hi
 800a812:	f000 0003 	andhi.w	r0, r0, #3
 800a816:	2000      	movls	r0, #0
 800a818:	4770      	bx	lr
 800a81a:	bf00      	nop
 800a81c:	200177a4 	.word	0x200177a4
 800a820:	200177a0 	.word	0x200177a0

0800a824 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800a824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a828:	4b10      	ldr	r3, [pc, #64]	; (800a86c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800a82a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a82c:	881b      	ldrh	r3, [r3, #0]
 800a82e:	428b      	cmp	r3, r1
 800a830:	4604      	mov	r4, r0
 800a832:	d918      	bls.n	800a866 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800a834:	6803      	ldr	r3, [r0, #0]
 800a836:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800a838:	4b0d      	ldr	r3, [pc, #52]	; (800a870 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800a83a:	6818      	ldr	r0, [r3, #0]
 800a83c:	f7f8 f90a 	bl	8002a54 <_ZNK8touchgfx5Texts7getTextEt>
 800a840:	6823      	ldr	r3, [r4, #0]
 800a842:	4606      	mov	r6, r0
 800a844:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a846:	4620      	mov	r0, r4
 800a848:	4798      	blx	r3
 800a84a:	6823      	ldr	r3, [r4, #0]
 800a84c:	4607      	mov	r7, r0
 800a84e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a852:	4620      	mov	r0, r4
 800a854:	4798      	blx	r3
 800a856:	463a      	mov	r2, r7
 800a858:	4603      	mov	r3, r0
 800a85a:	4631      	mov	r1, r6
 800a85c:	4620      	mov	r0, r4
 800a85e:	46ac      	mov	ip, r5
 800a860:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a864:	4760      	bx	ip
 800a866:	2000      	movs	r0, #0
 800a868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a86c:	200177a4 	.word	0x200177a4
 800a870:	200177ac 	.word	0x200177ac

0800a874 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a874:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a878:	4b17      	ldr	r3, [pc, #92]	; (800a8d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a87a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a87c:	881b      	ldrh	r3, [r3, #0]
 800a87e:	428b      	cmp	r3, r1
 800a880:	4604      	mov	r4, r0
 800a882:	d926      	bls.n	800a8d2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800a884:	4b15      	ldr	r3, [pc, #84]	; (800a8dc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a886:	681b      	ldr	r3, [r3, #0]
 800a888:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a88c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a890:	4b13      	ldr	r3, [pc, #76]	; (800a8e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a892:	7855      	ldrb	r5, [r2, #1]
 800a894:	681b      	ldr	r3, [r3, #0]
 800a896:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800a89a:	6833      	ldr	r3, [r6, #0]
 800a89c:	69df      	ldr	r7, [r3, #28]
 800a89e:	4b11      	ldr	r3, [pc, #68]	; (800a8e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a8a0:	6818      	ldr	r0, [r3, #0]
 800a8a2:	f7f8 f8d7 	bl	8002a54 <_ZNK8touchgfx5Texts7getTextEt>
 800a8a6:	6823      	ldr	r3, [r4, #0]
 800a8a8:	4680      	mov	r8, r0
 800a8aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a8ac:	4620      	mov	r0, r4
 800a8ae:	4798      	blx	r3
 800a8b0:	6823      	ldr	r3, [r4, #0]
 800a8b2:	4681      	mov	r9, r0
 800a8b4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a8b8:	4620      	mov	r0, r4
 800a8ba:	4798      	blx	r3
 800a8bc:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800a8c0:	9000      	str	r0, [sp, #0]
 800a8c2:	464b      	mov	r3, r9
 800a8c4:	4642      	mov	r2, r8
 800a8c6:	4629      	mov	r1, r5
 800a8c8:	4630      	mov	r0, r6
 800a8ca:	47b8      	blx	r7
 800a8cc:	b003      	add	sp, #12
 800a8ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a8d2:	2000      	movs	r0, #0
 800a8d4:	e7fa      	b.n	800a8cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800a8d6:	bf00      	nop
 800a8d8:	200177a4 	.word	0x200177a4
 800a8dc:	200177a0 	.word	0x200177a0
 800a8e0:	200177a8 	.word	0x200177a8
 800a8e4:	200177ac 	.word	0x200177ac

0800a8e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a8e8:	b40e      	push	{r1, r2, r3}
 800a8ea:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a8ee:	4b2f      	ldr	r3, [pc, #188]	; (800a9ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800a8f0:	881a      	ldrh	r2, [r3, #0]
 800a8f2:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a8f4:	429a      	cmp	r2, r3
 800a8f6:	b09d      	sub	sp, #116	; 0x74
 800a8f8:	4604      	mov	r4, r0
 800a8fa:	d954      	bls.n	800a9a6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800a8fc:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800a9b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a900:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800a9b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800a904:	aa26      	add	r2, sp, #152	; 0x98
 800a906:	9202      	str	r2, [sp, #8]
 800a908:	f8d9 2000 	ldr.w	r2, [r9]
 800a90c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a910:	f8d8 3000 	ldr.w	r3, [r8]
 800a914:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a918:	682b      	ldr	r3, [r5, #0]
 800a91a:	4628      	mov	r0, r5
 800a91c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a91e:	4798      	blx	r3
 800a920:	b207      	sxth	r7, r0
 800a922:	4606      	mov	r6, r0
 800a924:	a803      	add	r0, sp, #12
 800a926:	f003 ff13 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800a92a:	682b      	ldr	r3, [r5, #0]
 800a92c:	4628      	mov	r0, r5
 800a92e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a930:	4798      	blx	r3
 800a932:	682b      	ldr	r3, [r5, #0]
 800a934:	4682      	mov	sl, r0
 800a936:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a938:	4628      	mov	r0, r5
 800a93a:	4798      	blx	r3
 800a93c:	4653      	mov	r3, sl
 800a93e:	9000      	str	r0, [sp, #0]
 800a940:	9a02      	ldr	r2, [sp, #8]
 800a942:	9925      	ldr	r1, [sp, #148]	; 0x94
 800a944:	a803      	add	r0, sp, #12
 800a946:	f003 ff5e 	bl	800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a94a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a94c:	f8d9 3000 	ldr.w	r3, [r9]
 800a950:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800a954:	8925      	ldrh	r5, [r4, #8]
 800a956:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a95a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800a95e:	eba5 050c 	sub.w	r5, r5, ip
 800a962:	784a      	ldrb	r2, [r1, #1]
 800a964:	f8d8 3000 	ldr.w	r3, [r8]
 800a968:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a96c:	b22d      	sxth	r5, r5
 800a96e:	9500      	str	r5, [sp, #0]
 800a970:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a974:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a978:	a803      	add	r0, sp, #12
 800a97a:	f001 fcf1 	bl	800c360 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a97e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a982:	18b9      	adds	r1, r7, r2
 800a984:	2900      	cmp	r1, #0
 800a986:	b203      	sxth	r3, r0
 800a988:	dd0b      	ble.n	800a9a2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800a98a:	3b01      	subs	r3, #1
 800a98c:	fb13 f302 	smulbb	r3, r3, r2
 800a990:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a994:	b21f      	sxth	r7, r3
 800a996:	4638      	mov	r0, r7
 800a998:	b01d      	add	sp, #116	; 0x74
 800a99a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a99e:	b003      	add	sp, #12
 800a9a0:	4770      	bx	lr
 800a9a2:	2b00      	cmp	r3, #0
 800a9a4:	dcf7      	bgt.n	800a996 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800a9a6:	2700      	movs	r7, #0
 800a9a8:	e7f5      	b.n	800a996 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800a9aa:	bf00      	nop
 800a9ac:	200177a4 	.word	0x200177a4
 800a9b0:	200177a0 	.word	0x200177a0
 800a9b4:	200177a8 	.word	0x200177a8

0800a9b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800a9b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a9bc:	4bbc      	ldr	r3, [pc, #752]	; (800acb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800a9be:	460c      	mov	r4, r1
 800a9c0:	881b      	ldrh	r3, [r3, #0]
 800a9c2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800a9c4:	428b      	cmp	r3, r1
 800a9c6:	b0a9      	sub	sp, #164	; 0xa4
 800a9c8:	4680      	mov	r8, r0
 800a9ca:	d809      	bhi.n	800a9e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800a9cc:	2300      	movs	r3, #0
 800a9ce:	f04f 32ff 	mov.w	r2, #4294967295
 800a9d2:	e9c0 3200 	strd	r3, r2, [r0]
 800a9d6:	6083      	str	r3, [r0, #8]
 800a9d8:	4640      	mov	r0, r8
 800a9da:	b029      	add	sp, #164	; 0xa4
 800a9dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9e0:	4eb4      	ldr	r6, [pc, #720]	; (800acb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800a9e2:	6833      	ldr	r3, [r6, #0]
 800a9e4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800a9e8:	4bb3      	ldr	r3, [pc, #716]	; (800acb8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800a9ea:	681b      	ldr	r3, [r3, #0]
 800a9ec:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a9f0:	4bb2      	ldr	r3, [pc, #712]	; (800acbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800a9f2:	6818      	ldr	r0, [r3, #0]
 800a9f4:	f7f8 f82e 	bl	8002a54 <_ZNK8touchgfx5Texts7getTextEt>
 800a9f8:	682b      	ldr	r3, [r5, #0]
 800a9fa:	4681      	mov	r9, r0
 800a9fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9fe:	4628      	mov	r0, r5
 800aa00:	4798      	blx	r3
 800aa02:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800aa04:	b203      	sxth	r3, r0
 800aa06:	4407      	add	r7, r0
 800aa08:	9304      	str	r3, [sp, #16]
 800aa0a:	b2bb      	uxth	r3, r7
 800aa0c:	9303      	str	r3, [sp, #12]
 800aa0e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800aa12:	4682      	mov	sl, r0
 800aa14:	a80f      	add	r0, sp, #60	; 0x3c
 800aa16:	2b00      	cmp	r3, #0
 800aa18:	f040 80a6 	bne.w	800ab68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800aa1c:	f003 fe98 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800aa20:	682b      	ldr	r3, [r5, #0]
 800aa22:	4628      	mov	r0, r5
 800aa24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800aa26:	4798      	blx	r3
 800aa28:	682b      	ldr	r3, [r5, #0]
 800aa2a:	4606      	mov	r6, r0
 800aa2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800aa2e:	4628      	mov	r0, r5
 800aa30:	4798      	blx	r3
 800aa32:	6823      	ldr	r3, [r4, #0]
 800aa34:	4607      	mov	r7, r0
 800aa36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800aa38:	4620      	mov	r0, r4
 800aa3a:	4798      	blx	r3
 800aa3c:	6823      	ldr	r3, [r4, #0]
 800aa3e:	4683      	mov	fp, r0
 800aa40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800aa44:	4620      	mov	r0, r4
 800aa46:	4798      	blx	r3
 800aa48:	463b      	mov	r3, r7
 800aa4a:	e9cd b000 	strd	fp, r0, [sp]
 800aa4e:	4649      	mov	r1, r9
 800aa50:	4632      	mov	r2, r6
 800aa52:	a80f      	add	r0, sp, #60	; 0x3c
 800aa54:	f003 feec 	bl	800e830 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800aa58:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800aa5c:	f8df b254 	ldr.w	fp, [pc, #596]	; 800acb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800aa60:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800aa64:	f04f 0600 	mov.w	r6, #0
 800aa68:	bf0c      	ite	eq
 800aa6a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800aa6e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800aa72:	4637      	mov	r7, r6
 800aa74:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800aa76:	f8db 3000 	ldr.w	r3, [fp]
 800aa7a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800aa7e:	4629      	mov	r1, r5
 800aa80:	785b      	ldrb	r3, [r3, #1]
 800aa82:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800aa86:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800aa8a:	a80f      	add	r0, sp, #60	; 0x3c
 800aa8c:	f001 f983 	bl	800bd96 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800aa90:	9b03      	ldr	r3, [sp, #12]
 800aa92:	4286      	cmp	r6, r0
 800aa94:	bfb8      	it	lt
 800aa96:	4606      	movlt	r6, r0
 800aa98:	3701      	adds	r7, #1
 800aa9a:	eba9 0903 	sub.w	r9, r9, r3
 800aa9e:	a80f      	add	r0, sp, #60	; 0x3c
 800aaa0:	b236      	sxth	r6, r6
 800aaa2:	b2bf      	uxth	r7, r7
 800aaa4:	fa0f f989 	sxth.w	r9, r9
 800aaa8:	f003 fe79 	bl	800e79e <_ZN8touchgfx12TextProvider11endOfStringEv>
 800aaac:	b918      	cbnz	r0, 800aab6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800aaae:	7a2b      	ldrb	r3, [r5, #8]
 800aab0:	444b      	add	r3, r9
 800aab2:	2b00      	cmp	r3, #0
 800aab4:	dcde      	bgt.n	800aa74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800aab6:	9b03      	ldr	r3, [sp, #12]
 800aab8:	9a04      	ldr	r2, [sp, #16]
 800aaba:	f895 9009 	ldrb.w	r9, [r5, #9]
 800aabe:	fb13 f707 	smulbb	r7, r3, r7
 800aac2:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800aac4:	1aff      	subs	r7, r7, r3
 800aac6:	b2bf      	uxth	r7, r7
 800aac8:	b23b      	sxth	r3, r7
 800aaca:	429a      	cmp	r2, r3
 800aacc:	bfa8      	it	ge
 800aace:	4657      	movge	r7, sl
 800aad0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800aad4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800aad8:	6823      	ldr	r3, [r4, #0]
 800aada:	bf08      	it	eq
 800aadc:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800aae0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800aae2:	bf18      	it	ne
 800aae4:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800aae8:	4620      	mov	r0, r4
 800aaea:	4798      	blx	r3
 800aaec:	444f      	add	r7, r9
 800aaee:	fa1f f987 	uxth.w	r9, r7
 800aaf2:	2801      	cmp	r0, #1
 800aaf4:	fa0f f789 	sxth.w	r7, r9
 800aaf8:	b2b3      	uxth	r3, r6
 800aafa:	f000 80e1 	beq.w	800acc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800aafe:	2802      	cmp	r0, #2
 800ab00:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800ab04:	f000 80e2 	beq.w	800accc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800ab08:	7aea      	ldrb	r2, [r5, #11]
 800ab0a:	7b2d      	ldrb	r5, [r5, #12]
 800ab0c:	b236      	sxth	r6, r6
 800ab0e:	1ab6      	subs	r6, r6, r2
 800ab10:	442a      	add	r2, r5
 800ab12:	4413      	add	r3, r2
 800ab14:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800ab18:	fa1f fa86 	uxth.w	sl, r6
 800ab1c:	b29b      	uxth	r3, r3
 800ab1e:	2a02      	cmp	r2, #2
 800ab20:	fa0f fb8a 	sxth.w	fp, sl
 800ab24:	b21e      	sxth	r6, r3
 800ab26:	f000 80d5 	beq.w	800acd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800ab2a:	2a03      	cmp	r2, #3
 800ab2c:	f000 80dd 	beq.w	800acea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800ab30:	2a01      	cmp	r2, #1
 800ab32:	f040 80e5 	bne.w	800ad00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800ab36:	8925      	ldrh	r5, [r4, #8]
 800ab38:	4633      	mov	r3, r6
 800ab3a:	eba5 0909 	sub.w	r9, r5, r9
 800ab3e:	463e      	mov	r6, r7
 800ab40:	465d      	mov	r5, fp
 800ab42:	461f      	mov	r7, r3
 800ab44:	fa0f fb89 	sxth.w	fp, r9
 800ab48:	4b5c      	ldr	r3, [pc, #368]	; (800acbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800ab4a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ab4c:	6818      	ldr	r0, [r3, #0]
 800ab4e:	f7f7 ff81 	bl	8002a54 <_ZNK8touchgfx5Texts7getTextEt>
 800ab52:	f8a8 b000 	strh.w	fp, [r8]
 800ab56:	f8a8 5002 	strh.w	r5, [r8, #2]
 800ab5a:	f8a8 6004 	strh.w	r6, [r8, #4]
 800ab5e:	f8a8 7006 	strh.w	r7, [r8, #6]
 800ab62:	f8c8 0008 	str.w	r0, [r8, #8]
 800ab66:	e737      	b.n	800a9d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800ab68:	f003 fdf2 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800ab6c:	682b      	ldr	r3, [r5, #0]
 800ab6e:	4628      	mov	r0, r5
 800ab70:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ab72:	4798      	blx	r3
 800ab74:	682b      	ldr	r3, [r5, #0]
 800ab76:	4607      	mov	r7, r0
 800ab78:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ab7a:	4628      	mov	r0, r5
 800ab7c:	4798      	blx	r3
 800ab7e:	6823      	ldr	r3, [r4, #0]
 800ab80:	4683      	mov	fp, r0
 800ab82:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ab84:	4620      	mov	r0, r4
 800ab86:	4798      	blx	r3
 800ab88:	6822      	ldr	r2, [r4, #0]
 800ab8a:	9005      	str	r0, [sp, #20]
 800ab8c:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800ab90:	4620      	mov	r0, r4
 800ab92:	4790      	blx	r2
 800ab94:	9b05      	ldr	r3, [sp, #20]
 800ab96:	9001      	str	r0, [sp, #4]
 800ab98:	463a      	mov	r2, r7
 800ab9a:	4649      	mov	r1, r9
 800ab9c:	9300      	str	r3, [sp, #0]
 800ab9e:	a80f      	add	r0, sp, #60	; 0x3c
 800aba0:	465b      	mov	r3, fp
 800aba2:	f003 fe45 	bl	800e830 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800aba6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800abaa:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800abae:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800abb0:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800abb4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800abb8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800abbc:	bf0a      	itet	eq
 800abbe:	464a      	moveq	r2, r9
 800abc0:	461a      	movne	r2, r3
 800abc2:	4699      	moveq	r9, r3
 800abc4:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800abc8:	1ad2      	subs	r2, r2, r3
 800abca:	6833      	ldr	r3, [r6, #0]
 800abcc:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800abd0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800abd4:	af0f      	add	r7, sp, #60	; 0x3c
 800abd6:	7859      	ldrb	r1, [r3, #1]
 800abd8:	9707      	str	r7, [sp, #28]
 800abda:	2300      	movs	r3, #0
 800abdc:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800abe0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800abe4:	f88d 1020 	strb.w	r1, [sp, #32]
 800abe8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800abec:	9509      	str	r5, [sp, #36]	; 0x24
 800abee:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800abf2:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800abf6:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800abfa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800abfe:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800ac02:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800ac06:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800ac0a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ac0e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800ac12:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800ac16:	b350      	cbz	r0, 800ac6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800ac18:	682b      	ldr	r3, [r5, #0]
 800ac1a:	4628      	mov	r0, r5
 800ac1c:	695b      	ldr	r3, [r3, #20]
 800ac1e:	4798      	blx	r3
 800ac20:	4607      	mov	r7, r0
 800ac22:	b320      	cbz	r0, 800ac6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800ac24:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ac26:	6803      	ldr	r3, [r0, #0]
 800ac28:	4639      	mov	r1, r7
 800ac2a:	68db      	ldr	r3, [r3, #12]
 800ac2c:	4798      	blx	r3
 800ac2e:	4606      	mov	r6, r0
 800ac30:	b1e8      	cbz	r0, 800ac6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800ac32:	7b43      	ldrb	r3, [r0, #13]
 800ac34:	7a82      	ldrb	r2, [r0, #10]
 800ac36:	005b      	lsls	r3, r3, #1
 800ac38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ac3c:	4313      	orrs	r3, r2
 800ac3e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800ac42:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800ac46:	2b06      	cmp	r3, #6
 800ac48:	d111      	bne.n	800ac6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800ac4a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ac4c:	6803      	ldr	r3, [r0, #0]
 800ac4e:	4632      	mov	r2, r6
 800ac50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ac52:	4639      	mov	r1, r7
 800ac54:	4798      	blx	r3
 800ac56:	7b73      	ldrb	r3, [r6, #13]
 800ac58:	005b      	lsls	r3, r3, #1
 800ac5a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ac5e:	7ab3      	ldrb	r3, [r6, #10]
 800ac60:	4313      	orrs	r3, r2
 800ac62:	4418      	add	r0, r3
 800ac64:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ac68:	4418      	add	r0, r3
 800ac6a:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800ac6e:	2600      	movs	r6, #0
 800ac70:	4637      	mov	r7, r6
 800ac72:	a806      	add	r0, sp, #24
 800ac74:	f001 fa70 	bl	800c158 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800ac78:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800ac7c:	9b03      	ldr	r3, [sp, #12]
 800ac7e:	4286      	cmp	r6, r0
 800ac80:	eba9 0903 	sub.w	r9, r9, r3
 800ac84:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800ac88:	bfb8      	it	lt
 800ac8a:	4606      	movlt	r6, r0
 800ac8c:	3701      	adds	r7, #1
 800ac8e:	b236      	sxth	r6, r6
 800ac90:	b2bf      	uxth	r7, r7
 800ac92:	fa0f f989 	sxth.w	r9, r9
 800ac96:	2b00      	cmp	r3, #0
 800ac98:	f43f af0d 	beq.w	800aab6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800ac9c:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800aca0:	2b00      	cmp	r3, #0
 800aca2:	f47f af08 	bne.w	800aab6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800aca6:	7a2b      	ldrb	r3, [r5, #8]
 800aca8:	444b      	add	r3, r9
 800acaa:	2b00      	cmp	r3, #0
 800acac:	dce1      	bgt.n	800ac72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800acae:	e702      	b.n	800aab6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800acb0:	200177a4 	.word	0x200177a4
 800acb4:	200177a0 	.word	0x200177a0
 800acb8:	200177a8 	.word	0x200177a8
 800acbc:	200177ac 	.word	0x200177ac
 800acc0:	ebaa 0606 	sub.w	r6, sl, r6
 800acc4:	2002      	movs	r0, #2
 800acc6:	fb96 f6f0 	sdiv	r6, r6, r0
 800acca:	e71d      	b.n	800ab08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800accc:	441e      	add	r6, r3
 800acce:	ebaa 0606 	sub.w	r6, sl, r6
 800acd2:	e719      	b.n	800ab08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800acd4:	8925      	ldrh	r5, [r4, #8]
 800acd6:	1aed      	subs	r5, r5, r3
 800acd8:	eba5 050a 	sub.w	r5, r5, sl
 800acdc:	fa0f fb85 	sxth.w	fp, r5
 800ace0:	8965      	ldrh	r5, [r4, #10]
 800ace2:	eba5 0509 	sub.w	r5, r5, r9
 800ace6:	b22d      	sxth	r5, r5
 800ace8:	e72e      	b.n	800ab48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800acea:	8965      	ldrh	r5, [r4, #10]
 800acec:	1aed      	subs	r5, r5, r3
 800acee:	eba5 050a 	sub.w	r5, r5, sl
 800acf2:	4633      	mov	r3, r6
 800acf4:	b22d      	sxth	r5, r5
 800acf6:	463e      	mov	r6, r7
 800acf8:	f04f 0b00 	mov.w	fp, #0
 800acfc:	461f      	mov	r7, r3
 800acfe:	e723      	b.n	800ab48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800ad00:	2500      	movs	r5, #0
 800ad02:	e721      	b.n	800ab48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800ad04 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800ad04:	b513      	push	{r0, r1, r4, lr}
 800ad06:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800ad0a:	4604      	mov	r4, r0
 800ad0c:	b1fb      	cbz	r3, 800ad4e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ad0e:	4b16      	ldr	r3, [pc, #88]	; (800ad68 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800ad10:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ad12:	881b      	ldrh	r3, [r3, #0]
 800ad14:	428b      	cmp	r3, r1
 800ad16:	d91a      	bls.n	800ad4e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ad18:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ad1c:	2b00      	cmp	r3, #0
 800ad1e:	dd16      	ble.n	800ad4e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ad20:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ad24:	2b00      	cmp	r3, #0
 800ad26:	dd12      	ble.n	800ad4e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ad28:	4b10      	ldr	r3, [pc, #64]	; (800ad6c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800ad2a:	6818      	ldr	r0, [r3, #0]
 800ad2c:	f7f7 fe92 	bl	8002a54 <_ZNK8touchgfx5Texts7getTextEt>
 800ad30:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800ad34:	6822      	ldr	r2, [r4, #0]
 800ad36:	2b00      	cmp	r3, #0
 800ad38:	db06      	blt.n	800ad48 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800ad3a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ad3e:	2b00      	cmp	r3, #0
 800ad40:	db02      	blt.n	800ad48 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800ad42:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ad44:	4298      	cmp	r0, r3
 800ad46:	d004      	beq.n	800ad52 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800ad48:	6953      	ldr	r3, [r2, #20]
 800ad4a:	4620      	mov	r0, r4
 800ad4c:	4798      	blx	r3
 800ad4e:	b002      	add	sp, #8
 800ad50:	bd10      	pop	{r4, pc}
 800ad52:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800ad56:	c903      	ldmia	r1, {r0, r1}
 800ad58:	466b      	mov	r3, sp
 800ad5a:	e883 0003 	stmia.w	r3, {r0, r1}
 800ad5e:	6912      	ldr	r2, [r2, #16]
 800ad60:	4619      	mov	r1, r3
 800ad62:	4620      	mov	r0, r4
 800ad64:	4790      	blx	r2
 800ad66:	e7f2      	b.n	800ad4e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ad68:	200177a4 	.word	0x200177a4
 800ad6c:	200177ac 	.word	0x200177ac

0800ad70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800ad70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad74:	4b44      	ldr	r3, [pc, #272]	; (800ae88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800ad76:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ad78:	881b      	ldrh	r3, [r3, #0]
 800ad7a:	4293      	cmp	r3, r2
 800ad7c:	b08e      	sub	sp, #56	; 0x38
 800ad7e:	4604      	mov	r4, r0
 800ad80:	d97e      	bls.n	800ae80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ad82:	6808      	ldr	r0, [r1, #0]
 800ad84:	4d41      	ldr	r5, [pc, #260]	; (800ae8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800ad86:	6849      	ldr	r1, [r1, #4]
 800ad88:	ab05      	add	r3, sp, #20
 800ad8a:	c303      	stmia	r3!, {r0, r1}
 800ad8c:	4611      	mov	r1, r2
 800ad8e:	6828      	ldr	r0, [r5, #0]
 800ad90:	f7f7 fe60 	bl	8002a54 <_ZNK8touchgfx5Texts7getTextEt>
 800ad94:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800ad98:	2b00      	cmp	r3, #0
 800ad9a:	db11      	blt.n	800adc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800ad9c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ada0:	2b00      	cmp	r3, #0
 800ada2:	db0d      	blt.n	800adc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800ada4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ada6:	4298      	cmp	r0, r3
 800ada8:	d10a      	bne.n	800adc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800adaa:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800adae:	e892 0003 	ldmia.w	r2, {r0, r1}
 800adb2:	ab09      	add	r3, sp, #36	; 0x24
 800adb4:	e883 0003 	stmia.w	r3, {r0, r1}
 800adb8:	4619      	mov	r1, r3
 800adba:	a805      	add	r0, sp, #20
 800adbc:	f7fe fd26 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800adc0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800adc4:	2b00      	cmp	r3, #0
 800adc6:	dd5b      	ble.n	800ae80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800adc8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800adcc:	2b00      	cmp	r3, #0
 800adce:	dd57      	ble.n	800ae80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800add0:	4f2f      	ldr	r7, [pc, #188]	; (800ae90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800add2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800add4:	683b      	ldr	r3, [r7, #0]
 800add6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800adda:	4b2e      	ldr	r3, [pc, #184]	; (800ae94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800addc:	681b      	ldr	r3, [r3, #0]
 800adde:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800ade2:	2e00      	cmp	r6, #0
 800ade4:	d04c      	beq.n	800ae80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ade6:	6823      	ldr	r3, [r4, #0]
 800ade8:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800adec:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800adee:	4620      	mov	r0, r4
 800adf0:	4798      	blx	r3
 800adf2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800adf4:	683b      	ldr	r3, [r7, #0]
 800adf6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800adfa:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800adfe:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800ae02:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae04:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ae08:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800ae0c:	785b      	ldrb	r3, [r3, #1]
 800ae0e:	9609      	str	r6, [sp, #36]	; 0x24
 800ae10:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ae14:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ae18:	4b1f      	ldr	r3, [pc, #124]	; (800ae98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800ae1a:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800ae1e:	681b      	ldr	r3, [r3, #0]
 800ae20:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800ae24:	910b      	str	r1, [sp, #44]	; 0x2c
 800ae26:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800ae2a:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800ae2e:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800ae32:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800ae36:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ae3a:	b10a      	cbz	r2, 800ae40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800ae3c:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800ae3e:	b906      	cbnz	r6, 800ae42 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800ae40:	689e      	ldr	r6, [r3, #8]
 800ae42:	af07      	add	r7, sp, #28
 800ae44:	4621      	mov	r1, r4
 800ae46:	4638      	mov	r0, r7
 800ae48:	f003 f826 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae4c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ae4e:	6828      	ldr	r0, [r5, #0]
 800ae50:	f7f7 fe00 	bl	8002a54 <_ZNK8touchgfx5Texts7getTextEt>
 800ae54:	6823      	ldr	r3, [r4, #0]
 800ae56:	4605      	mov	r5, r0
 800ae58:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ae5a:	4620      	mov	r0, r4
 800ae5c:	4798      	blx	r3
 800ae5e:	6823      	ldr	r3, [r4, #0]
 800ae60:	4680      	mov	r8, r0
 800ae62:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ae66:	4620      	mov	r0, r4
 800ae68:	4798      	blx	r3
 800ae6a:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800ae6e:	ab09      	add	r3, sp, #36	; 0x24
 800ae70:	9300      	str	r3, [sp, #0]
 800ae72:	9501      	str	r5, [sp, #4]
 800ae74:	ab05      	add	r3, sp, #20
 800ae76:	e897 0006 	ldmia.w	r7, {r1, r2}
 800ae7a:	4630      	mov	r0, r6
 800ae7c:	f7f7 fd9c 	bl	80029b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ae80:	b00e      	add	sp, #56	; 0x38
 800ae82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae86:	bf00      	nop
 800ae88:	200177a4 	.word	0x200177a4
 800ae8c:	200177ac 	.word	0x200177ac
 800ae90:	200177a0 	.word	0x200177a0
 800ae94:	200177a8 	.word	0x200177a8
 800ae98:	20017750 	.word	0x20017750

0800ae9c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800ae9c:	b570      	push	{r4, r5, r6, lr}
 800ae9e:	6803      	ldr	r3, [r0, #0]
 800aea0:	4604      	mov	r4, r0
 800aea2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aea4:	4615      	mov	r5, r2
 800aea6:	4798      	blx	r3
 800aea8:	6823      	ldr	r3, [r4, #0]
 800aeaa:	4629      	mov	r1, r5
 800aeac:	4620      	mov	r0, r4
 800aeae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aeb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aeb4:	4718      	bx	r3
	...

0800aeb8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800aeb8:	b538      	push	{r3, r4, r5, lr}
 800aeba:	4b0e      	ldr	r3, [pc, #56]	; (800aef4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800aebc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800aebe:	881b      	ldrh	r3, [r3, #0]
 800aec0:	429a      	cmp	r2, r3
 800aec2:	4604      	mov	r4, r0
 800aec4:	d214      	bcs.n	800aef0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800aec6:	6803      	ldr	r3, [r0, #0]
 800aec8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800aeca:	4798      	blx	r3
 800aecc:	6823      	ldr	r3, [r4, #0]
 800aece:	4605      	mov	r5, r0
 800aed0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800aed2:	4620      	mov	r0, r4
 800aed4:	4798      	blx	r3
 800aed6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800aeda:	b22d      	sxth	r5, r5
 800aedc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800aee0:	4601      	mov	r1, r0
 800aee2:	bf06      	itte	eq
 800aee4:	4602      	moveq	r2, r0
 800aee6:	4629      	moveq	r1, r5
 800aee8:	462a      	movne	r2, r5
 800aeea:	4620      	mov	r0, r4
 800aeec:	f7ff ffd6 	bl	800ae9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aef0:	bd38      	pop	{r3, r4, r5, pc}
 800aef2:	bf00      	nop
 800aef4:	200177a4 	.word	0x200177a4

0800aef8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800aef8:	b530      	push	{r4, r5, lr}
 800aefa:	888b      	ldrh	r3, [r1, #4]
 800aefc:	8583      	strh	r3, [r0, #44]	; 0x2c
 800aefe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800af02:	b085      	sub	sp, #20
 800af04:	4604      	mov	r4, r0
 800af06:	b923      	cbnz	r3, 800af12 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800af08:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800af0c:	b90b      	cbnz	r3, 800af12 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800af0e:	f7ff ffd3 	bl	800aeb8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800af12:	6823      	ldr	r3, [r4, #0]
 800af14:	466d      	mov	r5, sp
 800af16:	4621      	mov	r1, r4
 800af18:	4628      	mov	r0, r5
 800af1a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af1e:	4798      	blx	r3
 800af20:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800af24:	343c      	adds	r4, #60	; 0x3c
 800af26:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800af2a:	b005      	add	sp, #20
 800af2c:	bd30      	pop	{r4, r5, pc}

0800af2e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800af2e:	2300      	movs	r3, #0
 800af30:	8083      	strh	r3, [r0, #4]
 800af32:	80c3      	strh	r3, [r0, #6]
 800af34:	8003      	strh	r3, [r0, #0]
 800af36:	8043      	strh	r3, [r0, #2]
 800af38:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800af3c:	2bff      	cmp	r3, #255	; 0xff
 800af3e:	bf01      	itttt	eq
 800af40:	890b      	ldrheq	r3, [r1, #8]
 800af42:	8083      	strheq	r3, [r0, #4]
 800af44:	894b      	ldrheq	r3, [r1, #10]
 800af46:	80c3      	strheq	r3, [r0, #6]
 800af48:	4770      	bx	lr
	...

0800af4c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800af4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af4e:	4604      	mov	r4, r0
 800af50:	6808      	ldr	r0, [r1, #0]
 800af52:	6849      	ldr	r1, [r1, #4]
 800af54:	466b      	mov	r3, sp
 800af56:	c303      	stmia	r3!, {r0, r1}
 800af58:	6823      	ldr	r3, [r4, #0]
 800af5a:	4669      	mov	r1, sp
 800af5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af5e:	4620      	mov	r0, r4
 800af60:	4798      	blx	r3
 800af62:	4b08      	ldr	r3, [pc, #32]	; (800af84 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800af64:	681b      	ldr	r3, [r3, #0]
 800af66:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800af6a:	b10a      	cbz	r2, 800af70 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800af6c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800af6e:	b900      	cbnz	r0, 800af72 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800af70:	6898      	ldr	r0, [r3, #8]
 800af72:	6803      	ldr	r3, [r0, #0]
 800af74:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800af76:	6a1d      	ldr	r5, [r3, #32]
 800af78:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800af7c:	4669      	mov	r1, sp
 800af7e:	47a8      	blx	r5
 800af80:	b003      	add	sp, #12
 800af82:	bd30      	pop	{r4, r5, pc}
 800af84:	20017750 	.word	0x20017750

0800af88 <_ZN8touchgfx3BoxD1Ev>:
 800af88:	4770      	bx	lr

0800af8a <_ZN8touchgfx3BoxD0Ev>:
 800af8a:	b510      	push	{r4, lr}
 800af8c:	212c      	movs	r1, #44	; 0x2c
 800af8e:	4604      	mov	r4, r0
 800af90:	f010 fd68 	bl	801ba64 <_ZdlPvj>
 800af94:	4620      	mov	r0, r4
 800af96:	bd10      	pop	{r4, pc}

0800af98 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800af98:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800af9c:	b12a      	cbz	r2, 800afaa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800af9e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800afa2:	b112      	cbz	r2, 800afaa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800afa4:	6803      	ldr	r3, [r0, #0]
 800afa6:	695b      	ldr	r3, [r3, #20]
 800afa8:	4718      	bx	r3
 800afaa:	4770      	bx	lr

0800afac <_ZN8touchgfx6ButtonD1Ev>:
 800afac:	4770      	bx	lr

0800afae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800afae:	b570      	push	{r4, r5, r6, lr}
 800afb0:	880b      	ldrh	r3, [r1, #0]
 800afb2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800afb4:	4605      	mov	r5, r0
 800afb6:	8813      	ldrh	r3, [r2, #0]
 800afb8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800afbc:	4604      	mov	r4, r0
 800afbe:	4628      	mov	r0, r5
 800afc0:	f004 ff58 	bl	800fe74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800afc4:	4606      	mov	r6, r0
 800afc6:	4628      	mov	r0, r5
 800afc8:	f004 ff88 	bl	800fedc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800afcc:	6823      	ldr	r3, [r4, #0]
 800afce:	4605      	mov	r5, r0
 800afd0:	4631      	mov	r1, r6
 800afd2:	4620      	mov	r0, r4
 800afd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800afd6:	4798      	blx	r3
 800afd8:	6823      	ldr	r3, [r4, #0]
 800afda:	4629      	mov	r1, r5
 800afdc:	4620      	mov	r0, r4
 800afde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800afe0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800afe4:	4718      	bx	r3

0800afe6 <_ZN8touchgfx6ButtonD0Ev>:
 800afe6:	b510      	push	{r4, lr}
 800afe8:	2134      	movs	r1, #52	; 0x34
 800afea:	4604      	mov	r4, r0
 800afec:	f010 fd3a 	bl	801ba64 <_ZdlPvj>
 800aff0:	4620      	mov	r0, r4
 800aff2:	bd10      	pop	{r4, pc}

0800aff4 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800aff4:	b510      	push	{r4, lr}
 800aff6:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800affa:	2bff      	cmp	r3, #255	; 0xff
 800affc:	4604      	mov	r4, r0
 800affe:	d006      	beq.n	800b00e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800b000:	2300      	movs	r3, #0
 800b002:	8003      	strh	r3, [r0, #0]
 800b004:	8043      	strh	r3, [r0, #2]
 800b006:	8083      	strh	r3, [r0, #4]
 800b008:	80c3      	strh	r3, [r0, #6]
 800b00a:	4620      	mov	r0, r4
 800b00c:	bd10      	pop	{r4, pc}
 800b00e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800b012:	b11b      	cbz	r3, 800b01c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800b014:	3130      	adds	r1, #48	; 0x30
 800b016:	f004 ff95 	bl	800ff44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b01a:	e7f6      	b.n	800b00a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800b01c:	312e      	adds	r1, #46	; 0x2e
 800b01e:	e7fa      	b.n	800b016 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800b020 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800b020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b024:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b028:	b08a      	sub	sp, #40	; 0x28
 800b02a:	4604      	mov	r4, r0
 800b02c:	4688      	mov	r8, r1
 800b02e:	2b00      	cmp	r3, #0
 800b030:	d066      	beq.n	800b100 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800b032:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800b034:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b038:	a805      	add	r0, sp, #20
 800b03a:	f004 ff1b 	bl	800fe74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b03e:	4607      	mov	r7, r0
 800b040:	a805      	add	r0, sp, #20
 800b042:	f004 ff4b 	bl	800fedc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b046:	f9b8 6000 	ldrsh.w	r6, [r8]
 800b04a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800b04e:	4432      	add	r2, r6
 800b050:	b292      	uxth	r2, r2
 800b052:	2300      	movs	r3, #0
 800b054:	fa0f fc82 	sxth.w	ip, r2
 800b058:	459c      	cmp	ip, r3
 800b05a:	9306      	str	r3, [sp, #24]
 800b05c:	dd52      	ble.n	800b104 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b05e:	42b7      	cmp	r7, r6
 800b060:	dd50      	ble.n	800b104 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b062:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800b066:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800b06a:	442b      	add	r3, r5
 800b06c:	b29b      	uxth	r3, r3
 800b06e:	b219      	sxth	r1, r3
 800b070:	2900      	cmp	r1, #0
 800b072:	dd47      	ble.n	800b104 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b074:	42a8      	cmp	r0, r5
 800b076:	dd45      	ble.n	800b104 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b078:	4567      	cmp	r7, ip
 800b07a:	bfb8      	it	lt
 800b07c:	b2ba      	uxthlt	r2, r7
 800b07e:	4288      	cmp	r0, r1
 800b080:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800b084:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800b088:	bfb8      	it	lt
 800b08a:	b283      	uxthlt	r3, r0
 800b08c:	1b92      	subs	r2, r2, r6
 800b08e:	1b5b      	subs	r3, r3, r5
 800b090:	f8ad 201c 	strh.w	r2, [sp, #28]
 800b094:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b098:	f8ad 6018 	strh.w	r6, [sp, #24]
 800b09c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800b0a0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b0a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b0a8:	429a      	cmp	r2, r3
 800b0aa:	d026      	beq.n	800b0fa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b0ac:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b0b0:	2b00      	cmp	r3, #0
 800b0b2:	dd22      	ble.n	800b0fa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b0b4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b0b8:	2b00      	cmp	r3, #0
 800b0ba:	dd1e      	ble.n	800b0fa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b0bc:	2300      	movs	r3, #0
 800b0be:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800b0c2:	6823      	ldr	r3, [r4, #0]
 800b0c4:	a908      	add	r1, sp, #32
 800b0c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0c8:	4620      	mov	r0, r4
 800b0ca:	4798      	blx	r3
 800b0cc:	4b0f      	ldr	r3, [pc, #60]	; (800b10c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800b0ce:	681b      	ldr	r3, [r3, #0]
 800b0d0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b0d4:	b10a      	cbz	r2, 800b0da <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800b0d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b0d8:	b900      	cbnz	r0, 800b0dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800b0da:	6898      	ldr	r0, [r3, #8]
 800b0dc:	6801      	ldr	r1, [r0, #0]
 800b0de:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800b0e2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800b0e6:	2501      	movs	r5, #1
 800b0e8:	9502      	str	r5, [sp, #8]
 800b0ea:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800b0ee:	9401      	str	r4, [sp, #4]
 800b0f0:	ac06      	add	r4, sp, #24
 800b0f2:	9400      	str	r4, [sp, #0]
 800b0f4:	688c      	ldr	r4, [r1, #8]
 800b0f6:	a905      	add	r1, sp, #20
 800b0f8:	47a0      	blx	r4
 800b0fa:	b00a      	add	sp, #40	; 0x28
 800b0fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b100:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800b102:	e797      	b.n	800b034 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800b104:	2300      	movs	r3, #0
 800b106:	9307      	str	r3, [sp, #28]
 800b108:	e7ca      	b.n	800b0a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800b10a:	bf00      	nop
 800b10c:	20017750 	.word	0x20017750

0800b110 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800b110:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800b114:	b12a      	cbz	r2, 800b122 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b116:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800b11a:	b112      	cbz	r2, 800b122 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b11c:	6803      	ldr	r3, [r0, #0]
 800b11e:	695b      	ldr	r3, [r3, #20]
 800b120:	4718      	bx	r3
 800b122:	4770      	bx	lr

0800b124 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800b124:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b128:	4b2f      	ldr	r3, [pc, #188]	; (800b1e8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800b12a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800b12c:	881b      	ldrh	r3, [r3, #0]
 800b12e:	4293      	cmp	r3, r2
 800b130:	b08d      	sub	sp, #52	; 0x34
 800b132:	4604      	mov	r4, r0
 800b134:	460f      	mov	r7, r1
 800b136:	d954      	bls.n	800b1e2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800b138:	4b2c      	ldr	r3, [pc, #176]	; (800b1ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800b13a:	6819      	ldr	r1, [r3, #0]
 800b13c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800b140:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800b144:	4a2a      	ldr	r2, [pc, #168]	; (800b1f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800b146:	6812      	ldr	r2, [r2, #0]
 800b148:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800b14c:	2900      	cmp	r1, #0
 800b14e:	d048      	beq.n	800b1e2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800b150:	785a      	ldrb	r2, [r3, #1]
 800b152:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800b156:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800b15a:	4b26      	ldr	r3, [pc, #152]	; (800b1f4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800b15c:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800b160:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800b164:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800b168:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800b16a:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800b16e:	9107      	str	r1, [sp, #28]
 800b170:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800b174:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800b178:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800b17c:	681a      	ldr	r2, [r3, #0]
 800b17e:	f88d 8020 	strb.w	r8, [sp, #32]
 800b182:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800b186:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800b18a:	9609      	str	r6, [sp, #36]	; 0x24
 800b18c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800b190:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800b194:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800b198:	b10b      	cbz	r3, 800b19e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800b19a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800b19c:	b905      	cbnz	r5, 800b1a0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800b19e:	6895      	ldr	r5, [r2, #8]
 800b1a0:	ae05      	add	r6, sp, #20
 800b1a2:	4621      	mov	r1, r4
 800b1a4:	4630      	mov	r0, r6
 800b1a6:	f002 fe77 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b1aa:	4b13      	ldr	r3, [pc, #76]	; (800b1f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800b1ac:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800b1ae:	6818      	ldr	r0, [r3, #0]
 800b1b0:	f7f7 fc50 	bl	8002a54 <_ZNK8touchgfx5Texts7getTextEt>
 800b1b4:	6823      	ldr	r3, [r4, #0]
 800b1b6:	4680      	mov	r8, r0
 800b1b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b1ba:	4620      	mov	r0, r4
 800b1bc:	4798      	blx	r3
 800b1be:	6823      	ldr	r3, [r4, #0]
 800b1c0:	4681      	mov	r9, r0
 800b1c2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800b1c6:	4620      	mov	r0, r4
 800b1c8:	4798      	blx	r3
 800b1ca:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800b1ce:	ab07      	add	r3, sp, #28
 800b1d0:	9300      	str	r3, [sp, #0]
 800b1d2:	f8cd 8004 	str.w	r8, [sp, #4]
 800b1d6:	463b      	mov	r3, r7
 800b1d8:	e896 0006 	ldmia.w	r6, {r1, r2}
 800b1dc:	4628      	mov	r0, r5
 800b1de:	f7f7 fbeb 	bl	80029b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b1e2:	b00d      	add	sp, #52	; 0x34
 800b1e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b1e8:	200177a4 	.word	0x200177a4
 800b1ec:	200177a0 	.word	0x200177a0
 800b1f0:	200177a8 	.word	0x200177a8
 800b1f4:	20017750 	.word	0x20017750
 800b1f8:	200177ac 	.word	0x200177ac

0800b1fc <_ZN8touchgfx5ImageD1Ev>:
 800b1fc:	4770      	bx	lr

0800b1fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800b1fe:	b570      	push	{r4, r5, r6, lr}
 800b200:	880b      	ldrh	r3, [r1, #0]
 800b202:	84c3      	strh	r3, [r0, #38]	; 0x26
 800b204:	4604      	mov	r4, r0
 800b206:	4608      	mov	r0, r1
 800b208:	460d      	mov	r5, r1
 800b20a:	f004 fe33 	bl	800fe74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b20e:	4606      	mov	r6, r0
 800b210:	4628      	mov	r0, r5
 800b212:	f004 fe63 	bl	800fedc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b216:	6823      	ldr	r3, [r4, #0]
 800b218:	4605      	mov	r5, r0
 800b21a:	4631      	mov	r1, r6
 800b21c:	4620      	mov	r0, r4
 800b21e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b220:	4798      	blx	r3
 800b222:	6823      	ldr	r3, [r4, #0]
 800b224:	4629      	mov	r1, r5
 800b226:	4620      	mov	r0, r4
 800b228:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b22a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b22e:	4718      	bx	r3

0800b230 <_ZN8touchgfx5ImageD0Ev>:
 800b230:	b510      	push	{r4, lr}
 800b232:	212c      	movs	r1, #44	; 0x2c
 800b234:	4604      	mov	r4, r0
 800b236:	f010 fc15 	bl	801ba64 <_ZdlPvj>
 800b23a:	4620      	mov	r0, r4
 800b23c:	bd10      	pop	{r4, pc}

0800b23e <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b23e:	b510      	push	{r4, lr}
 800b240:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b244:	2bff      	cmp	r3, #255	; 0xff
 800b246:	4604      	mov	r4, r0
 800b248:	d006      	beq.n	800b258 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b24a:	2300      	movs	r3, #0
 800b24c:	8003      	strh	r3, [r0, #0]
 800b24e:	8043      	strh	r3, [r0, #2]
 800b250:	8083      	strh	r3, [r0, #4]
 800b252:	80c3      	strh	r3, [r0, #6]
 800b254:	4620      	mov	r0, r4
 800b256:	bd10      	pop	{r4, pc}
 800b258:	3126      	adds	r1, #38	; 0x26
 800b25a:	f004 fe73 	bl	800ff44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b25e:	e7f9      	b.n	800b254 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b260 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b264:	4604      	mov	r4, r0
 800b266:	b088      	sub	sp, #32
 800b268:	f854 3b26 	ldr.w	r3, [r4], #38
 800b26c:	2500      	movs	r5, #0
 800b26e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b270:	460f      	mov	r7, r1
 800b272:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b276:	a904      	add	r1, sp, #16
 800b278:	4606      	mov	r6, r0
 800b27a:	4798      	blx	r3
 800b27c:	4620      	mov	r0, r4
 800b27e:	f004 fdf9 	bl	800fe74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b282:	4680      	mov	r8, r0
 800b284:	4620      	mov	r0, r4
 800b286:	f004 fe29 	bl	800fedc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b28a:	9506      	str	r5, [sp, #24]
 800b28c:	ad06      	add	r5, sp, #24
 800b28e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b292:	4639      	mov	r1, r7
 800b294:	4628      	mov	r0, r5
 800b296:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b29a:	f7fe fab7 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800b29e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b2a2:	2b00      	cmp	r3, #0
 800b2a4:	dd19      	ble.n	800b2da <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b2a6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b2aa:	2b00      	cmp	r3, #0
 800b2ac:	dd15      	ble.n	800b2da <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b2ae:	4b0c      	ldr	r3, [pc, #48]	; (800b2e0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b2b0:	681b      	ldr	r3, [r3, #0]
 800b2b2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b2b6:	b10a      	cbz	r2, 800b2bc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b2b8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b2ba:	b900      	cbnz	r0, 800b2be <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b2bc:	6898      	ldr	r0, [r3, #8]
 800b2be:	6801      	ldr	r1, [r0, #0]
 800b2c0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b2c4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b2c8:	2701      	movs	r7, #1
 800b2ca:	9702      	str	r7, [sp, #8]
 800b2cc:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800b2d0:	e9cd 5600 	strd	r5, r6, [sp]
 800b2d4:	688d      	ldr	r5, [r1, #8]
 800b2d6:	4621      	mov	r1, r4
 800b2d8:	47a8      	blx	r5
 800b2da:	b008      	add	sp, #32
 800b2dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b2e0:	20017750 	.word	0x20017750

0800b2e4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b2e4:	b510      	push	{r4, lr}
 800b2e6:	6803      	ldr	r3, [r0, #0]
 800b2e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b2ea:	460c      	mov	r4, r1
 800b2ec:	4798      	blx	r3
 800b2ee:	1b03      	subs	r3, r0, r4
 800b2f0:	4258      	negs	r0, r3
 800b2f2:	4158      	adcs	r0, r3
 800b2f4:	bd10      	pop	{r4, pc}
	...

0800b2f8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b2f8:	4b01      	ldr	r3, [pc, #4]	; (800b300 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b2fa:	6019      	str	r1, [r3, #0]
 800b2fc:	4770      	bx	lr
 800b2fe:	bf00      	nop
 800b300:	20017758 	.word	0x20017758

0800b304 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b308:	4696      	mov	lr, r2
 800b30a:	4605      	mov	r5, r0
 800b30c:	4614      	mov	r4, r2
 800b30e:	460e      	mov	r6, r1
 800b310:	461f      	mov	r7, r3
 800b312:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b316:	b097      	sub	sp, #92	; 0x5c
 800b318:	f10d 0c1c 	add.w	ip, sp, #28
 800b31c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b320:	f8de 3000 	ldr.w	r3, [lr]
 800b324:	f8cc 3000 	str.w	r3, [ip]
 800b328:	f104 0e14 	add.w	lr, r4, #20
 800b32c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b330:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b334:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b338:	f8de 3000 	ldr.w	r3, [lr]
 800b33c:	f8cc 3000 	str.w	r3, [ip]
 800b340:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b344:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b348:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b34c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b350:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800b354:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800b358:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800b35c:	f8de 3000 	ldr.w	r3, [lr]
 800b360:	f8cc 3000 	str.w	r3, [ip]
 800b364:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b366:	682b      	ldr	r3, [r5, #0]
 800b368:	9201      	str	r2, [sp, #4]
 800b36a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b36e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b370:	9200      	str	r2, [sp, #0]
 800b372:	f8cd 8008 	str.w	r8, [sp, #8]
 800b376:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800b37a:	aa07      	add	r2, sp, #28
 800b37c:	463b      	mov	r3, r7
 800b37e:	4631      	mov	r1, r6
 800b380:	4628      	mov	r0, r5
 800b382:	47d8      	blx	fp
 800b384:	46a6      	mov	lr, r4
 800b386:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b38a:	f10d 0c1c 	add.w	ip, sp, #28
 800b38e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b392:	f8de 3000 	ldr.w	r3, [lr]
 800b396:	f8cc 3000 	str.w	r3, [ip]
 800b39a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b39e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b3a2:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b3a6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b3aa:	343c      	adds	r4, #60	; 0x3c
 800b3ac:	f8de 3000 	ldr.w	r3, [lr]
 800b3b0:	f8cc 3000 	str.w	r3, [ip]
 800b3b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b3b6:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b3ba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b3be:	6823      	ldr	r3, [r4, #0]
 800b3c0:	f8cc 3000 	str.w	r3, [ip]
 800b3c4:	682b      	ldr	r3, [r5, #0]
 800b3c6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b3ca:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b3cc:	9201      	str	r2, [sp, #4]
 800b3ce:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b3d0:	9200      	str	r2, [sp, #0]
 800b3d2:	f8cd 8008 	str.w	r8, [sp, #8]
 800b3d6:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800b3d8:	aa07      	add	r2, sp, #28
 800b3da:	463b      	mov	r3, r7
 800b3dc:	4631      	mov	r1, r6
 800b3de:	4628      	mov	r0, r5
 800b3e0:	47a0      	blx	r4
 800b3e2:	b017      	add	sp, #92	; 0x5c
 800b3e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b3e8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b3e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3ec:	b08d      	sub	sp, #52	; 0x34
 800b3ee:	4688      	mov	r8, r1
 800b3f0:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b3f2:	f8d3 c000 	ldr.w	ip, [r3]
 800b3f6:	680f      	ldr	r7, [r1, #0]
 800b3f8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b3fc:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b400:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b404:	edd3 6a07 	vldr	s13, [r3, #28]
 800b408:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b40a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b40e:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b412:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b416:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b41a:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b41e:	eba7 070c 	sub.w	r7, r7, ip
 800b422:	42bc      	cmp	r4, r7
 800b424:	bfa8      	it	ge
 800b426:	463c      	movge	r4, r7
 800b428:	ee07 4a90 	vmov	s15, r4
 800b42c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b430:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b434:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b438:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b43c:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b440:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b444:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b448:	eb09 0e0c 	add.w	lr, r9, ip
 800b44c:	4571      	cmp	r1, lr
 800b44e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b452:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b456:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b45a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b45e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b462:	f340 808d 	ble.w	800b580 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b466:	eba1 060e 	sub.w	r6, r1, lr
 800b46a:	fb96 f5f4 	sdiv	r5, r6, r4
 800b46e:	ee07 5a10 	vmov	s14, r5
 800b472:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b476:	2d00      	cmp	r5, #0
 800b478:	fb04 6615 	mls	r6, r4, r5, r6
 800b47c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b480:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b484:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b488:	dd13      	ble.n	800b4b2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b48a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b48e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b492:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b49a:	bf18      	it	ne
 800b49c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b4a0:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b4a4:	bf08      	it	eq
 800b4a6:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b4aa:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b4ae:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b4b2:	fb05 f204 	mul.w	r2, r5, r4
 800b4b6:	1abf      	subs	r7, r7, r2
 800b4b8:	4494      	add	ip, r2
 800b4ba:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b4be:	4411      	add	r1, r2
 800b4c0:	eb09 020c 	add.w	r2, r9, ip
 800b4c4:	443a      	add	r2, r7
 800b4c6:	b209      	sxth	r1, r1
 800b4c8:	428a      	cmp	r2, r1
 800b4ca:	bfc4      	itt	gt
 800b4cc:	eba1 0209 	subgt.w	r2, r1, r9
 800b4d0:	eba2 070c 	subgt.w	r7, r2, ip
 800b4d4:	2f00      	cmp	r7, #0
 800b4d6:	dd50      	ble.n	800b57a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b4d8:	fb97 f1f4 	sdiv	r1, r7, r4
 800b4dc:	fb04 7211 	mls	r2, r4, r1, r7
 800b4e0:	b90a      	cbnz	r2, 800b4e6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b4e2:	3901      	subs	r1, #1
 800b4e4:	4622      	mov	r2, r4
 800b4e6:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b4ea:	6840      	ldr	r0, [r0, #4]
 800b4ec:	900b      	str	r0, [sp, #44]	; 0x2c
 800b4ee:	f8d0 a000 	ldr.w	sl, [r0]
 800b4f2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b4f4:	9008      	str	r0, [sp, #32]
 800b4f6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b4fa:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b4fc:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b500:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b504:	695b      	ldr	r3, [r3, #20]
 800b506:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b508:	445b      	add	r3, fp
 800b50a:	eef0 6a42 	vmov.f32	s13, s4
 800b50e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b512:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b516:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b51a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b51e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b522:	9307      	str	r3, [sp, #28]
 800b524:	ee17 7a90 	vmov	r7, s15
 800b528:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b52c:	eeb0 7a61 	vmov.f32	s14, s3
 800b530:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b534:	ee16 3a90 	vmov	r3, s13
 800b538:	fb97 f7f4 	sdiv	r7, r7, r4
 800b53c:	ee17 ca90 	vmov	ip, s15
 800b540:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b544:	fb9c fcf4 	sdiv	ip, ip, r4
 800b548:	fb0c 3306 	mla	r3, ip, r6, r3
 800b54c:	9302      	str	r3, [sp, #8]
 800b54e:	ee17 3a10 	vmov	r3, s14
 800b552:	44b6      	add	lr, r6
 800b554:	fb04 e505 	mla	r5, r4, r5, lr
 800b558:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b55c:	fb07 3706 	mla	r7, r7, r6, r3
 800b560:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b564:	e9cd 4700 	strd	r4, r7, [sp]
 800b568:	2900      	cmp	r1, #0
 800b56a:	bfcc      	ite	gt
 800b56c:	46a1      	movgt	r9, r4
 800b56e:	4691      	movle	r9, r2
 800b570:	eba9 0306 	sub.w	r3, r9, r6
 800b574:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b578:	47a0      	blx	r4
 800b57a:	b00d      	add	sp, #52	; 0x34
 800b57c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b580:	2500      	movs	r5, #0
 800b582:	462e      	mov	r6, r5
 800b584:	e799      	b.n	800b4ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b58c:	b0db      	sub	sp, #364	; 0x16c
 800b58e:	461d      	mov	r5, r3
 800b590:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b594:	930a      	str	r3, [sp, #40]	; 0x28
 800b596:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b59a:	930b      	str	r3, [sp, #44]	; 0x2c
 800b59c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b5a0:	9310      	str	r3, [sp, #64]	; 0x40
 800b5a2:	6803      	ldr	r3, [r0, #0]
 800b5a4:	910f      	str	r1, [sp, #60]	; 0x3c
 800b5a6:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800b5a8:	9009      	str	r0, [sp, #36]	; 0x24
 800b5aa:	4614      	mov	r4, r2
 800b5ac:	4629      	mov	r1, r5
 800b5ae:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b5b2:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b5b6:	47b8      	blx	r7
 800b5b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5ba:	6058      	str	r0, [r3, #4]
 800b5bc:	2800      	cmp	r0, #0
 800b5be:	f000 83a1 	beq.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5c2:	682b      	ldr	r3, [r5, #0]
 800b5c4:	9314      	str	r3, [sp, #80]	; 0x50
 800b5c6:	686b      	ldr	r3, [r5, #4]
 800b5c8:	9315      	str	r3, [sp, #84]	; 0x54
 800b5ca:	4bc4      	ldr	r3, [pc, #784]	; (800b8dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b5cc:	ed94 7a02 	vldr	s14, [r4, #8]
 800b5d0:	7819      	ldrb	r1, [r3, #0]
 800b5d2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b5d6:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b5da:	2900      	cmp	r1, #0
 800b5dc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b5e0:	bf16      	itet	ne
 800b5e2:	4619      	movne	r1, r3
 800b5e4:	4611      	moveq	r1, r2
 800b5e6:	4613      	movne	r3, r2
 800b5e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5ec:	9116      	str	r1, [sp, #88]	; 0x58
 800b5ee:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b5f2:	f240 8387 	bls.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5f6:	ed94 7a07 	vldr	s14, [r4, #28]
 800b5fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b5fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b602:	f240 837f 	bls.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b606:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b60a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b60e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b612:	f240 8377 	bls.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b616:	6822      	ldr	r2, [r4, #0]
 800b618:	4bb1      	ldr	r3, [pc, #708]	; (800b8e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b61a:	429a      	cmp	r2, r3
 800b61c:	f2c0 8372 	blt.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b620:	49b0      	ldr	r1, [pc, #704]	; (800b8e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b622:	6963      	ldr	r3, [r4, #20]
 800b624:	428a      	cmp	r2, r1
 800b626:	f300 836d 	bgt.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b62a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b62e:	48ae      	ldr	r0, [pc, #696]	; (800b8e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b630:	33ff      	adds	r3, #255	; 0xff
 800b632:	4283      	cmp	r3, r0
 800b634:	f200 8366 	bhi.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b638:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b63a:	4dac      	ldr	r5, [pc, #688]	; (800b8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b63c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b640:	33ff      	adds	r3, #255	; 0xff
 800b642:	42ab      	cmp	r3, r5
 800b644:	f200 835e 	bhi.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b648:	6862      	ldr	r2, [r4, #4]
 800b64a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b64e:	33ff      	adds	r3, #255	; 0xff
 800b650:	4283      	cmp	r3, r0
 800b652:	f200 8357 	bhi.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b656:	69a1      	ldr	r1, [r4, #24]
 800b658:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b65c:	33ff      	adds	r3, #255	; 0xff
 800b65e:	4283      	cmp	r3, r0
 800b660:	f200 8350 	bhi.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b664:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b666:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b66a:	30ff      	adds	r0, #255	; 0xff
 800b66c:	42a8      	cmp	r0, r5
 800b66e:	f200 8349 	bhi.w	800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b672:	428a      	cmp	r2, r1
 800b674:	f280 8110 	bge.w	800b898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b678:	429a      	cmp	r2, r3
 800b67a:	f300 8119 	bgt.w	800b8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b67e:	4299      	cmp	r1, r3
 800b680:	f280 811d 	bge.w	800b8be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b684:	2502      	movs	r5, #2
 800b686:	2701      	movs	r7, #1
 800b688:	46a9      	mov	r9, r5
 800b68a:	46b8      	mov	r8, r7
 800b68c:	f04f 0a00 	mov.w	sl, #0
 800b690:	4621      	mov	r1, r4
 800b692:	a849      	add	r0, sp, #292	; 0x124
 800b694:	f003 fda4 	bl	800f1e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b698:	4622      	mov	r2, r4
 800b69a:	4653      	mov	r3, sl
 800b69c:	a949      	add	r1, sp, #292	; 0x124
 800b69e:	f8cd 9000 	str.w	r9, [sp]
 800b6a2:	a819      	add	r0, sp, #100	; 0x64
 800b6a4:	f003 fecc 	bl	800f440 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b6a8:	4622      	mov	r2, r4
 800b6aa:	4653      	mov	r3, sl
 800b6ac:	a949      	add	r1, sp, #292	; 0x124
 800b6ae:	f8cd 8000 	str.w	r8, [sp]
 800b6b2:	a829      	add	r0, sp, #164	; 0xa4
 800b6b4:	f003 fec4 	bl	800f440 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b6b8:	4643      	mov	r3, r8
 800b6ba:	4622      	mov	r2, r4
 800b6bc:	a949      	add	r1, sp, #292	; 0x124
 800b6be:	f8cd 9000 	str.w	r9, [sp]
 800b6c2:	a839      	add	r0, sp, #228	; 0xe4
 800b6c4:	f003 febc 	bl	800f440 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b6c8:	42af      	cmp	r7, r5
 800b6ca:	bfb5      	itete	lt
 800b6cc:	2300      	movlt	r3, #0
 800b6ce:	2301      	movge	r3, #1
 800b6d0:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b6d2:	930e      	strge	r3, [sp, #56]	; 0x38
 800b6d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b6d6:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b6da:	af12      	add	r7, sp, #72	; 0x48
 800b6dc:	bfb9      	ittee	lt
 800b6de:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b6e0:	ac19      	addlt	r4, sp, #100	; 0x64
 800b6e2:	ad19      	addge	r5, sp, #100	; 0x64
 800b6e4:	ac29      	addge	r4, sp, #164	; 0xa4
 800b6e6:	e887 0003 	stmia.w	r7, {r0, r1}
 800b6ea:	b928      	cbnz	r0, 800b6f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b6ec:	4b80      	ldr	r3, [pc, #512]	; (800b8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b6ee:	6818      	ldr	r0, [r3, #0]
 800b6f0:	6803      	ldr	r3, [r0, #0]
 800b6f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6f4:	4798      	blx	r3
 800b6f6:	6038      	str	r0, [r7, #0]
 800b6f8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b6fa:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b6fe:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b702:	930c      	str	r3, [sp, #48]	; 0x30
 800b704:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b706:	6963      	ldr	r3, [r4, #20]
 800b708:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b70a:	440b      	add	r3, r1
 800b70c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b710:	4408      	add	r0, r1
 800b712:	b200      	sxth	r0, r0
 800b714:	4283      	cmp	r3, r0
 800b716:	900d      	str	r0, [sp, #52]	; 0x34
 800b718:	f280 80dd 	bge.w	800b8d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b71c:	428b      	cmp	r3, r1
 800b71e:	da08      	bge.n	800b732 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b720:	2a00      	cmp	r2, #0
 800b722:	dd06      	ble.n	800b732 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b724:	1acb      	subs	r3, r1, r3
 800b726:	429a      	cmp	r2, r3
 800b728:	f2c0 80e4 	blt.w	800b8f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b72c:	2b00      	cmp	r3, #0
 800b72e:	f300 80e2 	bgt.w	800b8f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b732:	6967      	ldr	r7, [r4, #20]
 800b734:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b736:	443b      	add	r3, r7
 800b738:	461f      	mov	r7, r3
 800b73a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b73c:	1bdf      	subs	r7, r3, r7
 800b73e:	4297      	cmp	r7, r2
 800b740:	bfa8      	it	ge
 800b742:	4617      	movge	r7, r2
 800b744:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b748:	2f00      	cmp	r7, #0
 800b74a:	f340 8166 	ble.w	800ba1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b74e:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b750:	6829      	ldr	r1, [r5, #0]
 800b752:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b756:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b75a:	6820      	ldr	r0, [r4, #0]
 800b75c:	4411      	add	r1, r2
 800b75e:	4299      	cmp	r1, r3
 800b760:	dd1a      	ble.n	800b798 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b762:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b766:	440b      	add	r3, r1
 800b768:	4402      	add	r2, r0
 800b76a:	b21b      	sxth	r3, r3
 800b76c:	429a      	cmp	r2, r3
 800b76e:	dc13      	bgt.n	800b798 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b770:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b772:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b774:	681b      	ldr	r3, [r3, #0]
 800b776:	9206      	str	r2, [sp, #24]
 800b778:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b77a:	9205      	str	r2, [sp, #20]
 800b77c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b77e:	9500      	str	r5, [sp, #0]
 800b780:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b784:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b786:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b788:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b78c:	a912      	add	r1, sp, #72	; 0x48
 800b78e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800b792:	aa49      	add	r2, sp, #292	; 0x124
 800b794:	4623      	mov	r3, r4
 800b796:	47c8      	blx	r9
 800b798:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b79c:	441a      	add	r2, r3
 800b79e:	6963      	ldr	r3, [r4, #20]
 800b7a0:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b7a4:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b7a8:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b7ac:	68a1      	ldr	r1, [r4, #8]
 800b7ae:	ed94 6a08 	vldr	s12, [r4, #32]
 800b7b2:	6022      	str	r2, [r4, #0]
 800b7b4:	3301      	adds	r3, #1
 800b7b6:	6163      	str	r3, [r4, #20]
 800b7b8:	69a3      	ldr	r3, [r4, #24]
 800b7ba:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b7be:	3b01      	subs	r3, #1
 800b7c0:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b7c4:	61a3      	str	r3, [r4, #24]
 800b7c6:	6923      	ldr	r3, [r4, #16]
 800b7c8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b7cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b7d0:	edd4 6a07 	vldr	s13, [r4, #28]
 800b7d4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b7d8:	440b      	add	r3, r1
 800b7da:	68e1      	ldr	r1, [r4, #12]
 800b7dc:	6123      	str	r3, [r4, #16]
 800b7de:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b7e2:	428b      	cmp	r3, r1
 800b7e4:	edc4 6a07 	vstr	s13, [r4, #28]
 800b7e8:	db15      	blt.n	800b816 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b7ea:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b7ee:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b7f2:	3201      	adds	r2, #1
 800b7f4:	edc4 6a07 	vstr	s13, [r4, #28]
 800b7f8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b7fc:	6022      	str	r2, [r4, #0]
 800b7fe:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b802:	1a5b      	subs	r3, r3, r1
 800b804:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b808:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b80c:	6123      	str	r3, [r4, #16]
 800b80e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b812:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b816:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b81a:	441a      	add	r2, r3
 800b81c:	696b      	ldr	r3, [r5, #20]
 800b81e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b822:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b826:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b82a:	68a9      	ldr	r1, [r5, #8]
 800b82c:	ed95 6a08 	vldr	s12, [r5, #32]
 800b830:	602a      	str	r2, [r5, #0]
 800b832:	3301      	adds	r3, #1
 800b834:	616b      	str	r3, [r5, #20]
 800b836:	69ab      	ldr	r3, [r5, #24]
 800b838:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b83c:	3b01      	subs	r3, #1
 800b83e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b842:	61ab      	str	r3, [r5, #24]
 800b844:	692b      	ldr	r3, [r5, #16]
 800b846:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b84a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b84e:	edd5 6a07 	vldr	s13, [r5, #28]
 800b852:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b856:	440b      	add	r3, r1
 800b858:	68e9      	ldr	r1, [r5, #12]
 800b85a:	612b      	str	r3, [r5, #16]
 800b85c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b860:	428b      	cmp	r3, r1
 800b862:	edc5 6a07 	vstr	s13, [r5, #28]
 800b866:	db15      	blt.n	800b894 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b868:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b86c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b870:	3201      	adds	r2, #1
 800b872:	edc5 6a07 	vstr	s13, [r5, #28]
 800b876:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b87a:	602a      	str	r2, [r5, #0]
 800b87c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b880:	1a5b      	subs	r3, r3, r1
 800b882:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b886:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b88a:	612b      	str	r3, [r5, #16]
 800b88c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b890:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b894:	3f01      	subs	r7, #1
 800b896:	e757      	b.n	800b748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b898:	4299      	cmp	r1, r3
 800b89a:	dc13      	bgt.n	800b8c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b89c:	429a      	cmp	r2, r3
 800b89e:	da14      	bge.n	800b8ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b8a0:	2502      	movs	r5, #2
 800b8a2:	2703      	movs	r7, #3
 800b8a4:	46a9      	mov	r9, r5
 800b8a6:	f04f 0800 	mov.w	r8, #0
 800b8aa:	f04f 0a01 	mov.w	sl, #1
 800b8ae:	e6ef      	b.n	800b690 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b8b0:	2501      	movs	r5, #1
 800b8b2:	2700      	movs	r7, #0
 800b8b4:	46a9      	mov	r9, r5
 800b8b6:	46b8      	mov	r8, r7
 800b8b8:	f04f 0a02 	mov.w	sl, #2
 800b8bc:	e6e8      	b.n	800b690 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b8be:	2501      	movs	r5, #1
 800b8c0:	2702      	movs	r7, #2
 800b8c2:	e6e1      	b.n	800b688 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b8c4:	2500      	movs	r5, #0
 800b8c6:	2701      	movs	r7, #1
 800b8c8:	e7f4      	b.n	800b8b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b8ca:	2702      	movs	r7, #2
 800b8cc:	2503      	movs	r5, #3
 800b8ce:	f04f 0900 	mov.w	r9, #0
 800b8d2:	46b8      	mov	r8, r7
 800b8d4:	e7e9      	b.n	800b8aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b8d6:	4613      	mov	r3, r2
 800b8d8:	e728      	b.n	800b72c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b8da:	bf00      	nop
 800b8dc:	20017748 	.word	0x20017748
 800b8e0:	fffd8f01 	.word	0xfffd8f01
 800b8e4:	00027100 	.word	0x00027100
 800b8e8:	0004e1ff 	.word	0x0004e1ff
 800b8ec:	0004e1fe 	.word	0x0004e1fe
 800b8f0:	20017750 	.word	0x20017750
 800b8f4:	4613      	mov	r3, r2
 800b8f6:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b8f8:	9111      	str	r1, [sp, #68]	; 0x44
 800b8fa:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b8fe:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b902:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b904:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b908:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b90c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b910:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b914:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b918:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b91c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b920:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b924:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b928:	469e      	mov	lr, r3
 800b92a:	469c      	mov	ip, r3
 800b92c:	f04f 0900 	mov.w	r9, #0
 800b930:	f1bc 0f00 	cmp.w	ip, #0
 800b934:	d147      	bne.n	800b9c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b936:	eb03 0c07 	add.w	ip, r3, r7
 800b93a:	1ad7      	subs	r7, r2, r3
 800b93c:	f1b9 0f00 	cmp.w	r9, #0
 800b940:	d009      	beq.n	800b956 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b942:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b946:	9029      	str	r0, [sp, #164]	; 0xa4
 800b948:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b94c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b950:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b954:	912d      	str	r1, [sp, #180]	; 0xb4
 800b956:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b958:	9111      	str	r1, [sp, #68]	; 0x44
 800b95a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b95e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b962:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b966:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b96a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b96e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b972:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b976:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b97a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b97e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b982:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b986:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b98a:	f04f 0800 	mov.w	r8, #0
 800b98e:	f1be 0f00 	cmp.w	lr, #0
 800b992:	d031      	beq.n	800b9f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b994:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b996:	4431      	add	r1, r6
 800b998:	4549      	cmp	r1, r9
 800b99a:	4450      	add	r0, sl
 800b99c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b9a0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b9a4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b9a8:	db08      	blt.n	800b9bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b9aa:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b9ae:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b9b2:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b9b6:	3001      	adds	r0, #1
 800b9b8:	eba1 0109 	sub.w	r1, r1, r9
 800b9bc:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b9c0:	f04f 0801 	mov.w	r8, #1
 800b9c4:	e7e3      	b.n	800b98e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b9c6:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b9c8:	4431      	add	r1, r6
 800b9ca:	4541      	cmp	r1, r8
 800b9cc:	4450      	add	r0, sl
 800b9ce:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b9d2:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b9d6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b9da:	db08      	blt.n	800b9ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b9dc:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b9e0:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b9e4:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b9e8:	3001      	adds	r0, #1
 800b9ea:	eba1 0108 	sub.w	r1, r1, r8
 800b9ee:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b9f2:	f04f 0901 	mov.w	r9, #1
 800b9f6:	e79b      	b.n	800b930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b9f8:	449c      	add	ip, r3
 800b9fa:	1aff      	subs	r7, r7, r3
 800b9fc:	f1b8 0f00 	cmp.w	r8, #0
 800ba00:	d009      	beq.n	800ba16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ba02:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ba06:	9019      	str	r0, [sp, #100]	; 0x64
 800ba08:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ba0c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ba10:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ba14:	911d      	str	r1, [sp, #116]	; 0x74
 800ba16:	1ad2      	subs	r2, r2, r3
 800ba18:	e68b      	b.n	800b732 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ba1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ba1c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800ba1e:	2b00      	cmp	r3, #0
 800ba20:	f000 80d1 	beq.w	800bbc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ba24:	ad19      	add	r5, sp, #100	; 0x64
 800ba26:	ac39      	add	r4, sp, #228	; 0xe4
 800ba28:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ba2a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ba2e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ba32:	930c      	str	r3, [sp, #48]	; 0x30
 800ba34:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ba36:	6963      	ldr	r3, [r4, #20]
 800ba38:	440b      	add	r3, r1
 800ba3a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ba3e:	4408      	add	r0, r1
 800ba40:	b200      	sxth	r0, r0
 800ba42:	4283      	cmp	r3, r0
 800ba44:	900d      	str	r0, [sp, #52]	; 0x34
 800ba46:	f280 80c1 	bge.w	800bbcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ba4a:	428b      	cmp	r3, r1
 800ba4c:	da08      	bge.n	800ba60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ba4e:	2a00      	cmp	r2, #0
 800ba50:	dd06      	ble.n	800ba60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ba52:	1acb      	subs	r3, r1, r3
 800ba54:	429a      	cmp	r2, r3
 800ba56:	f2c0 80bb 	blt.w	800bbd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ba5a:	2b00      	cmp	r3, #0
 800ba5c:	f300 80b9 	bgt.w	800bbd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ba60:	6967      	ldr	r7, [r4, #20]
 800ba62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ba64:	443b      	add	r3, r7
 800ba66:	461f      	mov	r7, r3
 800ba68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ba6a:	1bdf      	subs	r7, r3, r7
 800ba6c:	4297      	cmp	r7, r2
 800ba6e:	bfa8      	it	ge
 800ba70:	4617      	movge	r7, r2
 800ba72:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ba76:	2f00      	cmp	r7, #0
 800ba78:	f340 813c 	ble.w	800bcf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ba7c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ba7e:	6829      	ldr	r1, [r5, #0]
 800ba80:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ba84:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ba88:	6820      	ldr	r0, [r4, #0]
 800ba8a:	4411      	add	r1, r2
 800ba8c:	4299      	cmp	r1, r3
 800ba8e:	dd1a      	ble.n	800bac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ba90:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ba94:	440b      	add	r3, r1
 800ba96:	4402      	add	r2, r0
 800ba98:	b21b      	sxth	r3, r3
 800ba9a:	429a      	cmp	r2, r3
 800ba9c:	dc13      	bgt.n	800bac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ba9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800baa0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800baa2:	681b      	ldr	r3, [r3, #0]
 800baa4:	9206      	str	r2, [sp, #24]
 800baa6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800baa8:	9205      	str	r2, [sp, #20]
 800baaa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800baac:	9500      	str	r5, [sp, #0]
 800baae:	e9cd b203 	strd	fp, r2, [sp, #12]
 800bab2:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800bab4:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bab6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800baba:	a912      	add	r1, sp, #72	; 0x48
 800babc:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800bac0:	aa49      	add	r2, sp, #292	; 0x124
 800bac2:	4623      	mov	r3, r4
 800bac4:	47c8      	blx	r9
 800bac6:	e9d4 2300 	ldrd	r2, r3, [r4]
 800baca:	441a      	add	r2, r3
 800bacc:	6963      	ldr	r3, [r4, #20]
 800bace:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800bad2:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800bad6:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800bada:	68a1      	ldr	r1, [r4, #8]
 800badc:	ed94 6a08 	vldr	s12, [r4, #32]
 800bae0:	6022      	str	r2, [r4, #0]
 800bae2:	3301      	adds	r3, #1
 800bae4:	6163      	str	r3, [r4, #20]
 800bae6:	69a3      	ldr	r3, [r4, #24]
 800bae8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800baec:	3b01      	subs	r3, #1
 800baee:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800baf2:	61a3      	str	r3, [r4, #24]
 800baf4:	6923      	ldr	r3, [r4, #16]
 800baf6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bafa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bafe:	edd4 6a07 	vldr	s13, [r4, #28]
 800bb02:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bb06:	440b      	add	r3, r1
 800bb08:	68e1      	ldr	r1, [r4, #12]
 800bb0a:	6123      	str	r3, [r4, #16]
 800bb0c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bb10:	428b      	cmp	r3, r1
 800bb12:	edc4 6a07 	vstr	s13, [r4, #28]
 800bb16:	db15      	blt.n	800bb44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800bb18:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800bb1c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bb20:	3201      	adds	r2, #1
 800bb22:	edc4 6a07 	vstr	s13, [r4, #28]
 800bb26:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800bb2a:	6022      	str	r2, [r4, #0]
 800bb2c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bb30:	1a5b      	subs	r3, r3, r1
 800bb32:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bb36:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800bb3a:	6123      	str	r3, [r4, #16]
 800bb3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bb40:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bb44:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bb48:	441a      	add	r2, r3
 800bb4a:	696b      	ldr	r3, [r5, #20]
 800bb4c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800bb50:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800bb54:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800bb58:	68a9      	ldr	r1, [r5, #8]
 800bb5a:	ed95 6a08 	vldr	s12, [r5, #32]
 800bb5e:	602a      	str	r2, [r5, #0]
 800bb60:	3301      	adds	r3, #1
 800bb62:	616b      	str	r3, [r5, #20]
 800bb64:	69ab      	ldr	r3, [r5, #24]
 800bb66:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bb6a:	3b01      	subs	r3, #1
 800bb6c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800bb70:	61ab      	str	r3, [r5, #24]
 800bb72:	692b      	ldr	r3, [r5, #16]
 800bb74:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bb78:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bb7c:	edd5 6a07 	vldr	s13, [r5, #28]
 800bb80:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bb84:	440b      	add	r3, r1
 800bb86:	68e9      	ldr	r1, [r5, #12]
 800bb88:	612b      	str	r3, [r5, #16]
 800bb8a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bb8e:	428b      	cmp	r3, r1
 800bb90:	edc5 6a07 	vstr	s13, [r5, #28]
 800bb94:	db15      	blt.n	800bbc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800bb96:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800bb9a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bb9e:	3201      	adds	r2, #1
 800bba0:	edc5 6a07 	vstr	s13, [r5, #28]
 800bba4:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800bba8:	602a      	str	r2, [r5, #0]
 800bbaa:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bbae:	1a5b      	subs	r3, r3, r1
 800bbb0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bbb4:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800bbb8:	612b      	str	r3, [r5, #16]
 800bbba:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bbbe:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bbc2:	3f01      	subs	r7, #1
 800bbc4:	e757      	b.n	800ba76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800bbc6:	ad39      	add	r5, sp, #228	; 0xe4
 800bbc8:	ac19      	add	r4, sp, #100	; 0x64
 800bbca:	e72d      	b.n	800ba28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800bbcc:	4613      	mov	r3, r2
 800bbce:	e744      	b.n	800ba5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800bbd0:	4613      	mov	r3, r2
 800bbd2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800bbd6:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800bbd8:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800bbdc:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800bbe0:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800bbe4:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800bbe8:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800bbec:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800bbf0:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800bbf4:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800bbf6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800bbfa:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800bbfe:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800bc02:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800bc06:	960e      	str	r6, [sp, #56]	; 0x38
 800bc08:	469e      	mov	lr, r3
 800bc0a:	461f      	mov	r7, r3
 800bc0c:	f04f 0900 	mov.w	r9, #0
 800bc10:	2f00      	cmp	r7, #0
 800bc12:	d146      	bne.n	800bca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800bc14:	449c      	add	ip, r3
 800bc16:	1ad7      	subs	r7, r2, r3
 800bc18:	f1b9 0f00 	cmp.w	r9, #0
 800bc1c:	d009      	beq.n	800bc32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800bc1e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800bc22:	9039      	str	r0, [sp, #228]	; 0xe4
 800bc24:	913d      	str	r1, [sp, #244]	; 0xf4
 800bc26:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800bc2a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800bc2e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800bc32:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800bc34:	910e      	str	r1, [sp, #56]	; 0x38
 800bc36:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800bc3a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800bc3e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800bc42:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800bc46:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800bc4a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800bc4e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800bc52:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800bc56:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800bc5a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800bc5e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800bc62:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800bc66:	f04f 0800 	mov.w	r8, #0
 800bc6a:	f1be 0f00 	cmp.w	lr, #0
 800bc6e:	d030      	beq.n	800bcd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800bc70:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bc72:	4431      	add	r1, r6
 800bc74:	4549      	cmp	r1, r9
 800bc76:	4450      	add	r0, sl
 800bc78:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bc7c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bc80:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bc84:	db08      	blt.n	800bc98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800bc86:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bc8a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bc8e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bc92:	3001      	adds	r0, #1
 800bc94:	eba1 0109 	sub.w	r1, r1, r9
 800bc98:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bc9c:	f04f 0801 	mov.w	r8, #1
 800bca0:	e7e3      	b.n	800bc6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800bca2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bca4:	4431      	add	r1, r6
 800bca6:	4541      	cmp	r1, r8
 800bca8:	4450      	add	r0, sl
 800bcaa:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bcae:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bcb2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bcb6:	db08      	blt.n	800bcca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800bcb8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bcbc:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bcc0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bcc4:	3001      	adds	r0, #1
 800bcc6:	eba1 0108 	sub.w	r1, r1, r8
 800bcca:	3f01      	subs	r7, #1
 800bccc:	f04f 0901 	mov.w	r9, #1
 800bcd0:	e79e      	b.n	800bc10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800bcd2:	449c      	add	ip, r3
 800bcd4:	1aff      	subs	r7, r7, r3
 800bcd6:	f1b8 0f00 	cmp.w	r8, #0
 800bcda:	d009      	beq.n	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800bcdc:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800bce0:	9019      	str	r0, [sp, #100]	; 0x64
 800bce2:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800bce6:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800bcea:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800bcee:	911d      	str	r1, [sp, #116]	; 0x74
 800bcf0:	1ad2      	subs	r2, r2, r3
 800bcf2:	e6b5      	b.n	800ba60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bcf4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bcf6:	681b      	ldr	r3, [r3, #0]
 800bcf8:	b923      	cbnz	r3, 800bd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bcfa:	4b04      	ldr	r3, [pc, #16]	; (800bd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800bcfc:	6818      	ldr	r0, [r3, #0]
 800bcfe:	6803      	ldr	r3, [r0, #0]
 800bd00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bd02:	4798      	blx	r3
 800bd04:	b05b      	add	sp, #364	; 0x16c
 800bd06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd0a:	bf00      	nop
 800bd0c:	20017750 	.word	0x20017750

0800bd10 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800bd10:	b570      	push	{r4, r5, r6, lr}
 800bd12:	4604      	mov	r4, r0
 800bd14:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800bd18:	9805      	ldr	r0, [sp, #20]
 800bd1a:	6061      	str	r1, [r4, #4]
 800bd1c:	2500      	movs	r5, #0
 800bd1e:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800bd22:	8263      	strh	r3, [r4, #18]
 800bd24:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bd28:	8025      	strh	r5, [r4, #0]
 800bd2a:	7221      	strb	r1, [r4, #8]
 800bd2c:	7266      	strb	r6, [r4, #9]
 800bd2e:	60e0      	str	r0, [r4, #12]
 800bd30:	8222      	strh	r2, [r4, #16]
 800bd32:	82a3      	strh	r3, [r4, #20]
 800bd34:	82e5      	strh	r5, [r4, #22]
 800bd36:	8325      	strh	r5, [r4, #24]
 800bd38:	8365      	strh	r5, [r4, #26]
 800bd3a:	83a5      	strh	r5, [r4, #28]
 800bd3c:	83e5      	strh	r5, [r4, #30]
 800bd3e:	8425      	strh	r5, [r4, #32]
 800bd40:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800bd44:	b32e      	cbz	r6, 800bd92 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd46:	6803      	ldr	r3, [r0, #0]
 800bd48:	695b      	ldr	r3, [r3, #20]
 800bd4a:	4798      	blx	r3
 800bd4c:	4606      	mov	r6, r0
 800bd4e:	b300      	cbz	r0, 800bd92 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd50:	68e0      	ldr	r0, [r4, #12]
 800bd52:	6803      	ldr	r3, [r0, #0]
 800bd54:	4631      	mov	r1, r6
 800bd56:	68db      	ldr	r3, [r3, #12]
 800bd58:	4798      	blx	r3
 800bd5a:	4605      	mov	r5, r0
 800bd5c:	b1c8      	cbz	r0, 800bd92 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd5e:	7b43      	ldrb	r3, [r0, #13]
 800bd60:	7a82      	ldrb	r2, [r0, #10]
 800bd62:	005b      	lsls	r3, r3, #1
 800bd64:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bd68:	4313      	orrs	r3, r2
 800bd6a:	8423      	strh	r3, [r4, #32]
 800bd6c:	7a63      	ldrb	r3, [r4, #9]
 800bd6e:	2b06      	cmp	r3, #6
 800bd70:	d10f      	bne.n	800bd92 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd72:	68e0      	ldr	r0, [r4, #12]
 800bd74:	6803      	ldr	r3, [r0, #0]
 800bd76:	462a      	mov	r2, r5
 800bd78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd7a:	4631      	mov	r1, r6
 800bd7c:	4798      	blx	r3
 800bd7e:	7b6b      	ldrb	r3, [r5, #13]
 800bd80:	005b      	lsls	r3, r3, #1
 800bd82:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bd86:	7aab      	ldrb	r3, [r5, #10]
 800bd88:	4313      	orrs	r3, r2
 800bd8a:	4418      	add	r0, r3
 800bd8c:	8c23      	ldrh	r3, [r4, #32]
 800bd8e:	4418      	add	r0, r3
 800bd90:	8420      	strh	r0, [r4, #32]
 800bd92:	4620      	mov	r0, r4
 800bd94:	bd70      	pop	{r4, r5, r6, pc}

0800bd96 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800bd96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd9a:	2400      	movs	r4, #0
 800bd9c:	b085      	sub	sp, #20
 800bd9e:	4681      	mov	r9, r0
 800bda0:	4688      	mov	r8, r1
 800bda2:	4692      	mov	sl, r2
 800bda4:	469b      	mov	fp, r3
 800bda6:	4627      	mov	r7, r4
 800bda8:	4625      	mov	r5, r4
 800bdaa:	4626      	mov	r6, r4
 800bdac:	4554      	cmp	r4, sl
 800bdae:	da2a      	bge.n	800be06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bdb0:	2300      	movs	r3, #0
 800bdb2:	9303      	str	r3, [sp, #12]
 800bdb4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bdb8:	429d      	cmp	r5, r3
 800bdba:	d004      	beq.n	800bdc6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800bdbc:	f242 030b 	movw	r3, #8203	; 0x200b
 800bdc0:	429d      	cmp	r5, r3
 800bdc2:	bf18      	it	ne
 800bdc4:	462f      	movne	r7, r5
 800bdc6:	ab03      	add	r3, sp, #12
 800bdc8:	4642      	mov	r2, r8
 800bdca:	4659      	mov	r1, fp
 800bdcc:	4648      	mov	r0, r9
 800bdce:	f003 f81d 	bl	800ee0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bdd2:	4605      	mov	r5, r0
 800bdd4:	b1b8      	cbz	r0, 800be06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bdd6:	280a      	cmp	r0, #10
 800bdd8:	d015      	beq.n	800be06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bdda:	9a03      	ldr	r2, [sp, #12]
 800bddc:	b18a      	cbz	r2, 800be02 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800bdde:	7b50      	ldrb	r0, [r2, #13]
 800bde0:	7a93      	ldrb	r3, [r2, #10]
 800bde2:	8895      	ldrh	r5, [r2, #4]
 800bde4:	0040      	lsls	r0, r0, #1
 800bde6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800bdea:	4303      	orrs	r3, r0
 800bdec:	9301      	str	r3, [sp, #4]
 800bdee:	f8d8 3000 	ldr.w	r3, [r8]
 800bdf2:	4639      	mov	r1, r7
 800bdf4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bdf6:	4640      	mov	r0, r8
 800bdf8:	4798      	blx	r3
 800bdfa:	9b01      	ldr	r3, [sp, #4]
 800bdfc:	4418      	add	r0, r3
 800bdfe:	4406      	add	r6, r0
 800be00:	b2b6      	uxth	r6, r6
 800be02:	3401      	adds	r4, #1
 800be04:	e7d2      	b.n	800bdac <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800be06:	4630      	mov	r0, r6
 800be08:	b005      	add	sp, #20
 800be0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800be0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800be0e:	2a02      	cmp	r2, #2
 800be10:	b530      	push	{r4, r5, lr}
 800be12:	d011      	beq.n	800be38 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800be14:	2a03      	cmp	r2, #3
 800be16:	d01c      	beq.n	800be52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800be18:	2a01      	cmp	r2, #1
 800be1a:	d10c      	bne.n	800be36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800be1c:	888b      	ldrh	r3, [r1, #4]
 800be1e:	8801      	ldrh	r1, [r0, #0]
 800be20:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800be24:	8844      	ldrh	r4, [r0, #2]
 800be26:	8004      	strh	r4, [r0, #0]
 800be28:	1a5b      	subs	r3, r3, r1
 800be2a:	1a9b      	subs	r3, r3, r2
 800be2c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800be30:	8043      	strh	r3, [r0, #2]
 800be32:	8081      	strh	r1, [r0, #4]
 800be34:	80c2      	strh	r2, [r0, #6]
 800be36:	bd30      	pop	{r4, r5, pc}
 800be38:	88cb      	ldrh	r3, [r1, #6]
 800be3a:	8842      	ldrh	r2, [r0, #2]
 800be3c:	1a9b      	subs	r3, r3, r2
 800be3e:	88c2      	ldrh	r2, [r0, #6]
 800be40:	1a9b      	subs	r3, r3, r2
 800be42:	888a      	ldrh	r2, [r1, #4]
 800be44:	8801      	ldrh	r1, [r0, #0]
 800be46:	8043      	strh	r3, [r0, #2]
 800be48:	1a52      	subs	r2, r2, r1
 800be4a:	8881      	ldrh	r1, [r0, #4]
 800be4c:	1a52      	subs	r2, r2, r1
 800be4e:	8002      	strh	r2, [r0, #0]
 800be50:	e7f1      	b.n	800be36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800be52:	88cb      	ldrh	r3, [r1, #6]
 800be54:	8841      	ldrh	r1, [r0, #2]
 800be56:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800be5a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800be5e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800be62:	8045      	strh	r5, [r0, #2]
 800be64:	1a5b      	subs	r3, r3, r1
 800be66:	1a9b      	subs	r3, r3, r2
 800be68:	8003      	strh	r3, [r0, #0]
 800be6a:	8082      	strh	r2, [r0, #4]
 800be6c:	80c4      	strh	r4, [r0, #6]
 800be6e:	e7e2      	b.n	800be36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800be70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800be70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be74:	b09f      	sub	sp, #124	; 0x7c
 800be76:	9116      	str	r1, [sp, #88]	; 0x58
 800be78:	9317      	str	r3, [sp, #92]	; 0x5c
 800be7a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800be7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800be7e:	8809      	ldrh	r1, [r1, #0]
 800be80:	889b      	ldrh	r3, [r3, #4]
 800be82:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800be86:	9212      	str	r2, [sp, #72]	; 0x48
 800be88:	440b      	add	r3, r1
 800be8a:	b21b      	sxth	r3, r3
 800be8c:	9310      	str	r3, [sp, #64]	; 0x40
 800be8e:	f8d8 3000 	ldr.w	r3, [r8]
 800be92:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800be96:	7b19      	ldrb	r1, [r3, #12]
 800be98:	7adb      	ldrb	r3, [r3, #11]
 800be9a:	9011      	str	r0, [sp, #68]	; 0x44
 800be9c:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800bea0:	9114      	str	r1, [sp, #80]	; 0x50
 800bea2:	9315      	str	r3, [sp, #84]	; 0x54
 800bea4:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800bea8:	2a00      	cmp	r2, #0
 800beaa:	d06a      	beq.n	800bf82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800beac:	f898 3010 	ldrb.w	r3, [r8, #16]
 800beb0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800beb2:	2b06      	cmp	r3, #6
 800beb4:	bf14      	ite	ne
 800beb6:	2301      	movne	r3, #1
 800beb8:	2302      	moveq	r3, #2
 800beba:	4413      	add	r3, r2
 800bebc:	f04f 0900 	mov.w	r9, #0
 800bec0:	930f      	str	r3, [sp, #60]	; 0x3c
 800bec2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800bec6:	464c      	mov	r4, r9
 800bec8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800becc:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800bed0:	4293      	cmp	r3, r2
 800bed2:	f280 808f 	bge.w	800bff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800bed6:	2300      	movs	r3, #0
 800bed8:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800bedc:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800bee0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bee4:	429c      	cmp	r4, r3
 800bee6:	d006      	beq.n	800bef6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800bee8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800beea:	f242 020b 	movw	r2, #8203	; 0x200b
 800beee:	4294      	cmp	r4, r2
 800bef0:	bf18      	it	ne
 800bef2:	4623      	movne	r3, r4
 800bef4:	930d      	str	r3, [sp, #52]	; 0x34
 800bef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bef8:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800befa:	f8d8 2000 	ldr.w	r2, [r8]
 800befe:	428b      	cmp	r3, r1
 800bf00:	db41      	blt.n	800bf86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800bf02:	6813      	ldr	r3, [r2, #0]
 800bf04:	4610      	mov	r0, r2
 800bf06:	695b      	ldr	r3, [r3, #20]
 800bf08:	4798      	blx	r3
 800bf0a:	4604      	mov	r4, r0
 800bf0c:	f8d8 0000 	ldr.w	r0, [r8]
 800bf10:	6803      	ldr	r3, [r0, #0]
 800bf12:	aa1d      	add	r2, sp, #116	; 0x74
 800bf14:	689d      	ldr	r5, [r3, #8]
 800bf16:	4621      	mov	r1, r4
 800bf18:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bf1c:	47a8      	blx	r5
 800bf1e:	901c      	str	r0, [sp, #112]	; 0x70
 800bf20:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bf24:	429c      	cmp	r4, r3
 800bf26:	f000 80eb 	beq.w	800c100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bf2a:	f242 030b 	movw	r3, #8203	; 0x200b
 800bf2e:	429c      	cmp	r4, r3
 800bf30:	f000 80e6 	beq.w	800c100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bf34:	2c00      	cmp	r4, #0
 800bf36:	f000 80f8 	beq.w	800c12a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800bf3a:	2c0a      	cmp	r4, #10
 800bf3c:	d060      	beq.n	800c000 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800bf3e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bf40:	b36a      	cbz	r2, 800bf9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800bf42:	8894      	ldrh	r4, [r2, #4]
 800bf44:	f1bb 0f00 	cmp.w	fp, #0
 800bf48:	d03b      	beq.n	800bfc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800bf4a:	f892 900d 	ldrb.w	r9, [r2, #13]
 800bf4e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800bf52:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800bf56:	f892 900a 	ldrb.w	r9, [r2, #10]
 800bf5a:	f1bb 0f01 	cmp.w	fp, #1
 800bf5e:	ea49 0903 	orr.w	r9, r9, r3
 800bf62:	d134      	bne.n	800bfce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800bf64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bf66:	eba6 0609 	sub.w	r6, r6, r9
 800bf6a:	2b00      	cmp	r3, #0
 800bf6c:	d14f      	bne.n	800c00e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800bf6e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bf70:	eb09 0306 	add.w	r3, r9, r6
 800bf74:	4413      	add	r3, r2
 800bf76:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800bf78:	f9b2 2000 	ldrsh.w	r2, [r2]
 800bf7c:	4293      	cmp	r3, r2
 800bf7e:	da51      	bge.n	800c024 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800bf80:	e038      	b.n	800bff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800bf82:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bf84:	e79a      	b.n	800bebc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800bf86:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bf8a:	9301      	str	r3, [sp, #4]
 800bf8c:	ab1d      	add	r3, sp, #116	; 0x74
 800bf8e:	9300      	str	r3, [sp, #0]
 800bf90:	4659      	mov	r1, fp
 800bf92:	ab1c      	add	r3, sp, #112	; 0x70
 800bf94:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bf96:	f002 ff82 	bl	800ee9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800bf9a:	4604      	mov	r4, r0
 800bf9c:	e7c0      	b.n	800bf20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800bf9e:	f8d8 0000 	ldr.w	r0, [r8]
 800bfa2:	6803      	ldr	r3, [r0, #0]
 800bfa4:	691b      	ldr	r3, [r3, #16]
 800bfa6:	4798      	blx	r3
 800bfa8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bfac:	4298      	cmp	r0, r3
 800bfae:	f000 80a7 	beq.w	800c100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bfb2:	f242 030b 	movw	r3, #8203	; 0x200b
 800bfb6:	4298      	cmp	r0, r3
 800bfb8:	f000 80a2 	beq.w	800c100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bfbc:	f1bb 0f00 	cmp.w	fp, #0
 800bfc0:	d100      	bne.n	800bfc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800bfc2:	444e      	add	r6, r9
 800bfc4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bfc6:	2a00      	cmp	r2, #0
 800bfc8:	d1bf      	bne.n	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800bfca:	4691      	mov	r9, r2
 800bfcc:	e098      	b.n	800c100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bfce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bfd0:	2b00      	cmp	r3, #0
 800bfd2:	f000 80ac 	beq.w	800c12e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 800bfd6:	f1bb 0f00 	cmp.w	fp, #0
 800bfda:	d118      	bne.n	800c00e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800bfdc:	f8d8 0000 	ldr.w	r0, [r8]
 800bfe0:	990d      	ldr	r1, [sp, #52]	; 0x34
 800bfe2:	6803      	ldr	r3, [r0, #0]
 800bfe4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bfe6:	4798      	blx	r3
 800bfe8:	4406      	add	r6, r0
 800bfea:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bfec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bfee:	1af3      	subs	r3, r6, r3
 800bff0:	4293      	cmp	r3, r2
 800bff2:	dd17      	ble.n	800c024 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800bff4:	2c00      	cmp	r4, #0
 800bff6:	f000 8098 	beq.w	800c12a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800bffa:	2c0a      	cmp	r4, #10
 800bffc:	f040 8086 	bne.w	800c10c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800c000:	240a      	movs	r4, #10
 800c002:	fab4 f084 	clz	r0, r4
 800c006:	0940      	lsrs	r0, r0, #5
 800c008:	b01f      	add	sp, #124	; 0x7c
 800c00a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c00e:	f8d8 0000 	ldr.w	r0, [r8]
 800c012:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c014:	6803      	ldr	r3, [r0, #0]
 800c016:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c018:	4798      	blx	r3
 800c01a:	f1bb 0f01 	cmp.w	fp, #1
 800c01e:	eba6 0600 	sub.w	r6, r6, r0
 800c022:	d0a4      	beq.n	800bf6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800c024:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c026:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c028:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c02c:	f9b3 7000 	ldrsh.w	r7, [r3]
 800c030:	7b43      	ldrb	r3, [r0, #13]
 800c032:	015b      	lsls	r3, r3, #5
 800c034:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c038:	7983      	ldrb	r3, [r0, #6]
 800c03a:	4431      	add	r1, r6
 800c03c:	4313      	orrs	r3, r2
 800c03e:	440b      	add	r3, r1
 800c040:	42bb      	cmp	r3, r7
 800c042:	db5d      	blt.n	800c100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c044:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c046:	4299      	cmp	r1, r3
 800c048:	da5a      	bge.n	800c100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c04a:	f8d8 0000 	ldr.w	r0, [r8]
 800c04e:	6803      	ldr	r3, [r0, #0]
 800c050:	42b7      	cmp	r7, r6
 800c052:	bfc8      	it	gt
 800c054:	1bbf      	subgt	r7, r7, r6
 800c056:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c058:	bfcc      	ite	gt
 800c05a:	b2bf      	uxthgt	r7, r7
 800c05c:	2700      	movle	r7, #0
 800c05e:	4798      	blx	r3
 800c060:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c062:	7b5a      	ldrb	r2, [r3, #13]
 800c064:	00d1      	lsls	r1, r2, #3
 800c066:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800c06a:	7a19      	ldrb	r1, [r3, #8]
 800c06c:	4329      	orrs	r1, r5
 800c06e:	0655      	lsls	r5, r2, #25
 800c070:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800c072:	bf44      	itt	mi
 800c074:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800c078:	b209      	sxthmi	r1, r1
 800c07a:	1945      	adds	r5, r0, r5
 800c07c:	1a6d      	subs	r5, r5, r1
 800c07e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c080:	b2ad      	uxth	r5, r5
 800c082:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c086:	fa0f fa85 	sxth.w	sl, r5
 800c08a:	4551      	cmp	r1, sl
 800c08c:	dd3c      	ble.n	800c108 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800c08e:	0112      	lsls	r2, r2, #4
 800c090:	79d8      	ldrb	r0, [r3, #7]
 800c092:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c096:	4302      	orrs	r2, r0
 800c098:	4492      	add	sl, r2
 800c09a:	4551      	cmp	r1, sl
 800c09c:	dc30      	bgt.n	800c100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c09e:	1b4d      	subs	r5, r1, r5
 800c0a0:	b22d      	sxth	r5, r5
 800c0a2:	468a      	mov	sl, r1
 800c0a4:	9319      	str	r3, [sp, #100]	; 0x64
 800c0a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c0a8:	f8d8 0000 	ldr.w	r0, [r8]
 800c0ac:	681a      	ldr	r2, [r3, #0]
 800c0ae:	6801      	ldr	r1, [r0, #0]
 800c0b0:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800c0b2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800c0b4:	9313      	str	r3, [sp, #76]	; 0x4c
 800c0b6:	9218      	str	r2, [sp, #96]	; 0x60
 800c0b8:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800c0ba:	4788      	blx	r1
 800c0bc:	f898 1006 	ldrb.w	r1, [r8, #6]
 800c0c0:	910b      	str	r1, [sp, #44]	; 0x2c
 800c0c2:	f898 100e 	ldrb.w	r1, [r8, #14]
 800c0c6:	910a      	str	r1, [sp, #40]	; 0x28
 800c0c8:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800c0cc:	9109      	str	r1, [sp, #36]	; 0x24
 800c0ce:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800c0d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c0d4:	9305      	str	r3, [sp, #20]
 800c0d6:	b2ad      	uxth	r5, r5
 800c0d8:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c0dc:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800c0e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c0e2:	9304      	str	r3, [sp, #16]
 800c0e4:	4437      	add	r7, r6
 800c0e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c0e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c0ea:	9206      	str	r2, [sp, #24]
 800c0ec:	b23f      	sxth	r7, r7
 800c0ee:	f8cd a004 	str.w	sl, [sp, #4]
 800c0f2:	9700      	str	r7, [sp, #0]
 800c0f4:	681a      	ldr	r2, [r3, #0]
 800c0f6:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c0f8:	685b      	ldr	r3, [r3, #4]
 800c0fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 800c0fc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800c0fe:	47a8      	blx	r5
 800c100:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c102:	3301      	adds	r3, #1
 800c104:	930e      	str	r3, [sp, #56]	; 0x38
 800c106:	e6e1      	b.n	800becc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800c108:	2500      	movs	r5, #0
 800c10a:	e7cb      	b.n	800c0a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800c10c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800c10e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c110:	3501      	adds	r5, #1
 800c112:	429d      	cmp	r5, r3
 800c114:	f6bf af75 	bge.w	800c002 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800c118:	4659      	mov	r1, fp
 800c11a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c11c:	f7f6 fc08 	bl	8002930 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c120:	4604      	mov	r4, r0
 800c122:	b110      	cbz	r0, 800c12a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800c124:	280a      	cmp	r0, #10
 800c126:	d1f2      	bne.n	800c10e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800c128:	e76a      	b.n	800c000 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800c12a:	2400      	movs	r4, #0
 800c12c:	e769      	b.n	800c002 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800c12e:	f1bb 0f00 	cmp.w	fp, #0
 800c132:	f43f af5a 	beq.w	800bfea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800c136:	e775      	b.n	800c024 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800c138 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c138:	b530      	push	{r4, r5, lr}
 800c13a:	8ac4      	ldrh	r4, [r0, #22]
 800c13c:	8b45      	ldrh	r5, [r0, #26]
 800c13e:	8343      	strh	r3, [r0, #26]
 800c140:	442c      	add	r4, r5
 800c142:	1ae4      	subs	r4, r4, r3
 800c144:	82c4      	strh	r4, [r0, #22]
 800c146:	8b83      	ldrh	r3, [r0, #28]
 800c148:	8b04      	ldrh	r4, [r0, #24]
 800c14a:	4422      	add	r2, r4
 800c14c:	440c      	add	r4, r1
 800c14e:	1a59      	subs	r1, r3, r1
 800c150:	83c2      	strh	r2, [r0, #30]
 800c152:	8304      	strh	r4, [r0, #24]
 800c154:	8381      	strh	r1, [r0, #28]
 800c156:	bd30      	pop	{r4, r5, pc}

0800c158 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800c158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c15c:	4604      	mov	r4, r0
 800c15e:	8a47      	ldrh	r7, [r0, #18]
 800c160:	68c0      	ldr	r0, [r0, #12]
 800c162:	6803      	ldr	r3, [r0, #0]
 800c164:	b085      	sub	sp, #20
 800c166:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c168:	4798      	blx	r3
 800c16a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800c16e:	7a63      	ldrb	r3, [r4, #9]
 800c170:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800c174:	42b7      	cmp	r7, r6
 800c176:	f103 33ff 	add.w	r3, r3, #4294967295
 800c17a:	bfac      	ite	ge
 800c17c:	f04f 0900 	movge.w	r9, #0
 800c180:	f04f 0901 	movlt.w	r9, #1
 800c184:	2b05      	cmp	r3, #5
 800c186:	d804      	bhi.n	800c192 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800c188:	e8df f003 	tbb	[pc, r3]
 800c18c:	470e0854 	.word	0x470e0854
 800c190:	4c4c      	.short	0x4c4c
 800c192:	2500      	movs	r5, #0
 800c194:	46a9      	mov	r9, r5
 800c196:	462e      	mov	r6, r5
 800c198:	462f      	mov	r7, r5
 800c19a:	e00d      	b.n	800c1b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c19c:	42b7      	cmp	r7, r6
 800c19e:	bfb4      	ite	lt
 800c1a0:	2600      	movlt	r6, #0
 800c1a2:	2601      	movge	r6, #1
 800c1a4:	2500      	movs	r5, #0
 800c1a6:	e7f7      	b.n	800c198 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c1a8:	42b7      	cmp	r7, r6
 800c1aa:	464d      	mov	r5, r9
 800c1ac:	f04f 0900 	mov.w	r9, #0
 800c1b0:	bfb4      	ite	lt
 800c1b2:	2600      	movlt	r6, #0
 800c1b4:	2601      	movge	r6, #1
 800c1b6:	464f      	mov	r7, r9
 800c1b8:	f04f 0800 	mov.w	r8, #0
 800c1bc:	f8a4 8016 	strh.w	r8, [r4, #22]
 800c1c0:	f8a4 8018 	strh.w	r8, [r4, #24]
 800c1c4:	f8cd 8004 	str.w	r8, [sp, #4]
 800c1c8:	2300      	movs	r3, #0
 800c1ca:	9303      	str	r3, [sp, #12]
 800c1cc:	8823      	ldrh	r3, [r4, #0]
 800c1ce:	2b20      	cmp	r3, #32
 800c1d0:	d034      	beq.n	800c23c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800c1d2:	f242 010b 	movw	r1, #8203	; 0x200b
 800c1d6:	1a5a      	subs	r2, r3, r1
 800c1d8:	f1d2 0a00 	rsbs	sl, r2, #0
 800c1dc:	eb4a 0a02 	adc.w	sl, sl, r2
 800c1e0:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c1e4:	4293      	cmp	r3, r2
 800c1e6:	d009      	beq.n	800c1fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c1e8:	428b      	cmp	r3, r1
 800c1ea:	9a01      	ldr	r2, [sp, #4]
 800c1ec:	bf18      	it	ne
 800c1ee:	461a      	movne	r2, r3
 800c1f0:	9201      	str	r2, [sp, #4]
 800c1f2:	bf0c      	ite	eq
 800c1f4:	f04f 0a01 	moveq.w	sl, #1
 800c1f8:	f04f 0a00 	movne.w	sl, #0
 800c1fc:	ab03      	add	r3, sp, #12
 800c1fe:	68e2      	ldr	r2, [r4, #12]
 800c200:	7a21      	ldrb	r1, [r4, #8]
 800c202:	6860      	ldr	r0, [r4, #4]
 800c204:	f002 fe02 	bl	800ee0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c208:	8020      	strh	r0, [r4, #0]
 800c20a:	b9d8      	cbnz	r0, 800c244 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800c20c:	8ba2      	ldrh	r2, [r4, #28]
 800c20e:	2300      	movs	r3, #0
 800c210:	4611      	mov	r1, r2
 800c212:	4620      	mov	r0, r4
 800c214:	f7ff ff90 	bl	800c138 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c218:	e06e      	b.n	800c2f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c21a:	2500      	movs	r5, #0
 800c21c:	46a9      	mov	r9, r5
 800c21e:	462e      	mov	r6, r5
 800c220:	2701      	movs	r7, #1
 800c222:	e7c9      	b.n	800c1b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c224:	42b7      	cmp	r7, r6
 800c226:	f04f 0500 	mov.w	r5, #0
 800c22a:	bfb4      	ite	lt
 800c22c:	2700      	movlt	r7, #0
 800c22e:	2701      	movge	r7, #1
 800c230:	462e      	mov	r6, r5
 800c232:	e7c1      	b.n	800c1b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c234:	2500      	movs	r5, #0
 800c236:	46a9      	mov	r9, r5
 800c238:	2601      	movs	r6, #1
 800c23a:	e7ad      	b.n	800c198 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c23c:	9301      	str	r3, [sp, #4]
 800c23e:	f04f 0a01 	mov.w	sl, #1
 800c242:	e7db      	b.n	800c1fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c244:	8b63      	ldrh	r3, [r4, #26]
 800c246:	280a      	cmp	r0, #10
 800c248:	f103 0301 	add.w	r3, r3, #1
 800c24c:	8363      	strh	r3, [r4, #26]
 800c24e:	d0dd      	beq.n	800c20c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800c250:	9a03      	ldr	r2, [sp, #12]
 800c252:	bb62      	cbnz	r2, 800c2ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800c254:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c258:	4298      	cmp	r0, r3
 800c25a:	d003      	beq.n	800c264 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c25c:	f242 030b 	movw	r3, #8203	; 0x200b
 800c260:	4298      	cmp	r0, r3
 800c262:	d1b1      	bne.n	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c264:	8823      	ldrh	r3, [r4, #0]
 800c266:	8ba1      	ldrh	r1, [r4, #28]
 800c268:	2b20      	cmp	r3, #32
 800c26a:	d003      	beq.n	800c274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800c26c:	f242 000b 	movw	r0, #8203	; 0x200b
 800c270:	4283      	cmp	r3, r0
 800c272:	d131      	bne.n	800c2d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800c274:	f1ba 0f00 	cmp.w	sl, #0
 800c278:	bf0a      	itet	eq
 800c27a:	4688      	moveq	r8, r1
 800c27c:	4650      	movne	r0, sl
 800c27e:	2001      	moveq	r0, #1
 800c280:	440a      	add	r2, r1
 800c282:	8b23      	ldrh	r3, [r4, #24]
 800c284:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c288:	b292      	uxth	r2, r2
 800c28a:	83a2      	strh	r2, [r4, #28]
 800c28c:	4413      	add	r3, r2
 800c28e:	f1b9 0f00 	cmp.w	r9, #0
 800c292:	d102      	bne.n	800c29a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800c294:	2d00      	cmp	r5, #0
 800c296:	d042      	beq.n	800c31e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800c298:	b300      	cbz	r0, 800c2dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800c29a:	8c21      	ldrh	r1, [r4, #32]
 800c29c:	4419      	add	r1, r3
 800c29e:	458c      	cmp	ip, r1
 800c2a0:	da37      	bge.n	800c312 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c2a2:	8ae1      	ldrh	r1, [r4, #22]
 800c2a4:	2900      	cmp	r1, #0
 800c2a6:	d034      	beq.n	800c312 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c2a8:	4563      	cmp	r3, ip
 800c2aa:	dd8d      	ble.n	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c2ac:	e01d      	b.n	800c2ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800c2ae:	8893      	ldrh	r3, [r2, #4]
 800c2b0:	8023      	strh	r3, [r4, #0]
 800c2b2:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800c2b6:	9901      	ldr	r1, [sp, #4]
 800c2b8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800c2bc:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 800c2c0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800c2c4:	ea4b 0b00 	orr.w	fp, fp, r0
 800c2c8:	68e0      	ldr	r0, [r4, #12]
 800c2ca:	6803      	ldr	r3, [r0, #0]
 800c2cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c2ce:	4798      	blx	r3
 800c2d0:	eb0b 0200 	add.w	r2, fp, r0
 800c2d4:	b292      	uxth	r2, r2
 800c2d6:	e7c5      	b.n	800c264 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c2d8:	2000      	movs	r0, #0
 800c2da:	e7d1      	b.n	800c280 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800c2dc:	4563      	cmp	r3, ip
 800c2de:	f77f af73 	ble.w	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c2e2:	8ae3      	ldrh	r3, [r4, #22]
 800c2e4:	2b00      	cmp	r3, #0
 800c2e6:	f43f af6f 	beq.w	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c2ea:	2301      	movs	r3, #1
 800c2ec:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800c2f0:	8c22      	ldrh	r2, [r4, #32]
 800c2f2:	8be3      	ldrh	r3, [r4, #30]
 800c2f4:	4413      	add	r3, r2
 800c2f6:	83e3      	strh	r3, [r4, #30]
 800c2f8:	68e0      	ldr	r0, [r4, #12]
 800c2fa:	6803      	ldr	r3, [r0, #0]
 800c2fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c2fe:	4798      	blx	r3
 800c300:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800c304:	4418      	add	r0, r3
 800c306:	8a63      	ldrh	r3, [r4, #18]
 800c308:	1a18      	subs	r0, r3, r0
 800c30a:	8260      	strh	r0, [r4, #18]
 800c30c:	b005      	add	sp, #20
 800c30e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c312:	2300      	movs	r3, #0
 800c314:	4611      	mov	r1, r2
 800c316:	4620      	mov	r0, r4
 800c318:	f7ff ff0e 	bl	800c138 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c31c:	e754      	b.n	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c31e:	4563      	cmp	r3, ip
 800c320:	dd14      	ble.n	800c34c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800c322:	b117      	cbz	r7, 800c32a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800c324:	2301      	movs	r3, #1
 800c326:	460a      	mov	r2, r1
 800c328:	e772      	b.n	800c210 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800c32a:	2e00      	cmp	r6, #0
 800c32c:	f43f af4c 	beq.w	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c330:	2800      	cmp	r0, #0
 800c332:	f47f af49 	bne.w	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c336:	f1ba 0f00 	cmp.w	sl, #0
 800c33a:	d002      	beq.n	800c342 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800c33c:	2301      	movs	r3, #1
 800c33e:	4642      	mov	r2, r8
 800c340:	e767      	b.n	800c212 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800c342:	8ae3      	ldrh	r3, [r4, #22]
 800c344:	2b00      	cmp	r3, #0
 800c346:	f43f af3f 	beq.w	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c34a:	e7d5      	b.n	800c2f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c34c:	2800      	cmp	r0, #0
 800c34e:	f47f af3b 	bne.w	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c352:	f1ba 0f00 	cmp.w	sl, #0
 800c356:	f43f af37 	beq.w	800c1c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c35a:	2301      	movs	r3, #1
 800c35c:	4642      	mov	r2, r8
 800c35e:	e7da      	b.n	800c316 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800c360 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c360:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c362:	4605      	mov	r5, r0
 800c364:	b08f      	sub	sp, #60	; 0x3c
 800c366:	4617      	mov	r7, r2
 800c368:	461c      	mov	r4, r3
 800c36a:	460e      	mov	r6, r1
 800c36c:	b1d1      	cbz	r1, 800c3a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c36e:	681b      	ldr	r3, [r3, #0]
 800c370:	4620      	mov	r0, r4
 800c372:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c374:	4798      	blx	r3
 800c376:	4240      	negs	r0, r0
 800c378:	b200      	sxth	r0, r0
 800c37a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800c37e:	9603      	str	r6, [sp, #12]
 800c380:	9700      	str	r7, [sp, #0]
 800c382:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c386:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800c38a:	4629      	mov	r1, r5
 800c38c:	a805      	add	r0, sp, #20
 800c38e:	f7ff fcbf 	bl	800bd10 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c392:	2401      	movs	r4, #1
 800c394:	a805      	add	r0, sp, #20
 800c396:	f7ff fedf 	bl	800c158 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c39a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c39e:	b163      	cbz	r3, 800c3ba <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800c3a0:	3401      	adds	r4, #1
 800c3a2:	e7f7      	b.n	800c394 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c3a4:	f002 fe00 	bl	800efa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c3a8:	2401      	movs	r4, #1
 800c3aa:	280a      	cmp	r0, #10
 800c3ac:	4628      	mov	r0, r5
 800c3ae:	bf08      	it	eq
 800c3b0:	3401      	addeq	r4, #1
 800c3b2:	f002 fdf9 	bl	800efa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c3b6:	2800      	cmp	r0, #0
 800c3b8:	d1f7      	bne.n	800c3aa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800c3ba:	b2a0      	uxth	r0, r4
 800c3bc:	b00f      	add	sp, #60	; 0x3c
 800c3be:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c3c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c3c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3c4:	b0e3      	sub	sp, #396	; 0x18c
 800c3c6:	461c      	mov	r4, r3
 800c3c8:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 800c3ca:	4683      	mov	fp, r0
 800c3cc:	4688      	mov	r8, r1
 800c3ce:	2b00      	cmp	r3, #0
 800c3d0:	f000 810f 	beq.w	800c5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c3d4:	6823      	ldr	r3, [r4, #0]
 800c3d6:	2b00      	cmp	r3, #0
 800c3d8:	f000 810b 	beq.w	800c5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c3dc:	7ba3      	ldrb	r3, [r4, #14]
 800c3de:	2b00      	cmp	r3, #0
 800c3e0:	f000 8107 	beq.w	800c5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c3e4:	6810      	ldr	r0, [r2, #0]
 800c3e6:	6851      	ldr	r1, [r2, #4]
 800c3e8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800c3ec:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c3f0:	ad0a      	add	r5, sp, #40	; 0x28
 800c3f2:	462b      	mov	r3, r5
 800c3f4:	c303      	stmia	r3!, {r0, r1}
 800c3f6:	2100      	movs	r1, #0
 800c3f8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800c3fc:	910c      	str	r1, [sp, #48]	; 0x30
 800c3fe:	79a2      	ldrb	r2, [r4, #6]
 800c400:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c404:	a90c      	add	r1, sp, #48	; 0x30
 800c406:	4628      	mov	r0, r5
 800c408:	f7ff fd01 	bl	800be0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c40c:	a90c      	add	r1, sp, #48	; 0x30
 800c40e:	4608      	mov	r0, r1
 800c410:	79a2      	ldrb	r2, [r4, #6]
 800c412:	f7ff fcfc 	bl	800be0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c416:	a817      	add	r0, sp, #92	; 0x5c
 800c418:	f002 f99a 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800c41c:	6820      	ldr	r0, [r4, #0]
 800c41e:	6803      	ldr	r3, [r0, #0]
 800c420:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c422:	4798      	blx	r3
 800c424:	4606      	mov	r6, r0
 800c426:	6820      	ldr	r0, [r4, #0]
 800c428:	6803      	ldr	r3, [r0, #0]
 800c42a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c42c:	4798      	blx	r3
 800c42e:	4633      	mov	r3, r6
 800c430:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800c432:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800c434:	9000      	str	r0, [sp, #0]
 800c436:	a817      	add	r0, sp, #92	; 0x5c
 800c438:	f002 f9e5 	bl	800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c43c:	6820      	ldr	r0, [r4, #0]
 800c43e:	f894 a004 	ldrb.w	sl, [r4, #4]
 800c442:	6803      	ldr	r3, [r0, #0]
 800c444:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c446:	4798      	blx	r3
 800c448:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800c44c:	6823      	ldr	r3, [r4, #0]
 800c44e:	4607      	mov	r7, r0
 800c450:	4406      	add	r6, r0
 800c452:	a830      	add	r0, sp, #192	; 0xc0
 800c454:	f893 9009 	ldrb.w	r9, [r3, #9]
 800c458:	f002 f97a 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800c45c:	7c23      	ldrb	r3, [r4, #16]
 800c45e:	b17b      	cbz	r3, 800c480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800c460:	6820      	ldr	r0, [r4, #0]
 800c462:	6803      	ldr	r3, [r0, #0]
 800c464:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c466:	4798      	blx	r3
 800c468:	9009      	str	r0, [sp, #36]	; 0x24
 800c46a:	6820      	ldr	r0, [r4, #0]
 800c46c:	6802      	ldr	r2, [r0, #0]
 800c46e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800c470:	4790      	blx	r2
 800c472:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c474:	9000      	str	r0, [sp, #0]
 800c476:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800c478:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800c47a:	a830      	add	r0, sp, #192	; 0xc0
 800c47c:	f002 f9c3 	bl	800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c480:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800c484:	7be2      	ldrb	r2, [r4, #15]
 800c486:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800c48a:	1a8a      	subs	r2, r1, r2
 800c48c:	7c21      	ldrb	r1, [r4, #16]
 800c48e:	9103      	str	r1, [sp, #12]
 800c490:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800c494:	9102      	str	r1, [sp, #8]
 800c496:	6821      	ldr	r1, [r4, #0]
 800c498:	9101      	str	r1, [sp, #4]
 800c49a:	7961      	ldrb	r1, [r4, #5]
 800c49c:	9100      	str	r1, [sp, #0]
 800c49e:	b292      	uxth	r2, r2
 800c4a0:	a930      	add	r1, sp, #192	; 0xc0
 800c4a2:	a80e      	add	r0, sp, #56	; 0x38
 800c4a4:	f7ff fc34 	bl	800bd10 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c4a8:	2e00      	cmp	r6, #0
 800c4aa:	dc5b      	bgt.n	800c564 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800c4ac:	af17      	add	r7, sp, #92	; 0x5c
 800c4ae:	f04f 0900 	mov.w	r9, #0
 800c4b2:	7c23      	ldrb	r3, [r4, #16]
 800c4b4:	2b00      	cmp	r3, #0
 800c4b6:	f000 80ae 	beq.w	800c616 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c4ba:	a80e      	add	r0, sp, #56	; 0x38
 800c4bc:	f7ff fe4c 	bl	800c158 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c4c0:	f1ba 0f00 	cmp.w	sl, #0
 800c4c4:	f000 80a2 	beq.w	800c60c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 800c4c8:	7c23      	ldrb	r3, [r4, #16]
 800c4ca:	9309      	str	r3, [sp, #36]	; 0x24
 800c4cc:	2264      	movs	r2, #100	; 0x64
 800c4ce:	4639      	mov	r1, r7
 800c4d0:	a849      	add	r0, sp, #292	; 0x124
 800c4d2:	f010 f915 	bl	801c700 <memcpy>
 800c4d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4d8:	2b00      	cmp	r3, #0
 800c4da:	f000 80a4 	beq.w	800c626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 800c4de:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800c4e2:	7922      	ldrb	r2, [r4, #4]
 800c4e4:	2a01      	cmp	r2, #1
 800c4e6:	f040 8087 	bne.w	800c5f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c4ea:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 800c4ee:	1ac0      	subs	r0, r0, r3
 800c4f0:	2302      	movs	r3, #2
 800c4f2:	fb90 f0f3 	sdiv	r0, r0, r3
 800c4f6:	b200      	sxth	r0, r0
 800c4f8:	7c23      	ldrb	r3, [r4, #16]
 800c4fa:	2b00      	cmp	r3, #0
 800c4fc:	f000 8088 	beq.w	800c610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x250>
 800c500:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 800c504:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 800c508:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c50c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c510:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 800c514:	4410      	add	r0, r2
 800c516:	b200      	sxth	r0, r0
 800c518:	9000      	str	r0, [sp, #0]
 800c51a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800c51e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c522:	4642      	mov	r2, r8
 800c524:	2100      	movs	r1, #0
 800c526:	4658      	mov	r0, fp
 800c528:	f7ff fca2 	bl	800be70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c52c:	2800      	cmp	r0, #0
 800c52e:	d160      	bne.n	800c5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c530:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800c534:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800c538:	b2b2      	uxth	r2, r6
 800c53a:	4413      	add	r3, r2
 800c53c:	1a8a      	subs	r2, r1, r2
 800c53e:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 800c542:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 800c546:	b21b      	sxth	r3, r3
 800c548:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800c54c:	2a00      	cmp	r2, #0
 800c54e:	d150      	bne.n	800c5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c550:	6822      	ldr	r2, [r4, #0]
 800c552:	8869      	ldrh	r1, [r5, #2]
 800c554:	7a12      	ldrb	r2, [r2, #8]
 800c556:	1a9b      	subs	r3, r3, r2
 800c558:	88ea      	ldrh	r2, [r5, #6]
 800c55a:	440a      	add	r2, r1
 800c55c:	b212      	sxth	r2, r2
 800c55e:	4293      	cmp	r3, r2
 800c560:	dda7      	ble.n	800c4b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800c562:	e046      	b.n	800c5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c564:	7c23      	ldrb	r3, [r4, #16]
 800c566:	444f      	add	r7, r9
 800c568:	b1c3      	cbz	r3, 800c59c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800c56a:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800c56e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c572:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c576:	443b      	add	r3, r7
 800c578:	4293      	cmp	r3, r2
 800c57a:	da97      	bge.n	800c4ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c57c:	a80e      	add	r0, sp, #56	; 0x38
 800c57e:	f7ff fdeb 	bl	800c158 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c582:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800c586:	3b01      	subs	r3, #1
 800c588:	b29b      	uxth	r3, r3
 800c58a:	454b      	cmp	r3, r9
 800c58c:	9309      	str	r3, [sp, #36]	; 0x24
 800c58e:	d021      	beq.n	800c5d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800c590:	7961      	ldrb	r1, [r4, #5]
 800c592:	a817      	add	r0, sp, #92	; 0x5c
 800c594:	f7f6 f9cc 	bl	8002930 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c598:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c59a:	e7f4      	b.n	800c586 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800c59c:	fa1f f986 	uxth.w	r9, r6
 800c5a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c5a4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c5a8:	443b      	add	r3, r7
 800c5aa:	4293      	cmp	r3, r2
 800c5ac:	f6bf af7e 	bge.w	800c4ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c5b0:	a817      	add	r0, sp, #92	; 0x5c
 800c5b2:	f002 fcf9 	bl	800efa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c5b6:	b1e0      	cbz	r0, 800c5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c5b8:	280a      	cmp	r0, #10
 800c5ba:	d1f1      	bne.n	800c5a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c5bc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800c5c0:	444b      	add	r3, r9
 800c5c2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800c5c6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800c5ca:	eba3 0309 	sub.w	r3, r3, r9
 800c5ce:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c5d2:	e7e5      	b.n	800c5a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c5d4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 800c5d8:	b2b3      	uxth	r3, r6
 800c5da:	441a      	add	r2, r3
 800c5dc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800c5e0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 800c5e4:	1ad3      	subs	r3, r2, r3
 800c5e6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c5ea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c5ee:	2b00      	cmp	r3, #0
 800c5f0:	d1bd      	bne.n	800c56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800c5f2:	b063      	add	sp, #396	; 0x18c
 800c5f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5f8:	2a02      	cmp	r2, #2
 800c5fa:	d105      	bne.n	800c608 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800c5fc:	7be2      	ldrb	r2, [r4, #15]
 800c5fe:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800c602:	1a80      	subs	r0, r0, r2
 800c604:	1ac0      	subs	r0, r0, r3
 800c606:	e776      	b.n	800c4f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800c608:	2000      	movs	r0, #0
 800c60a:	e775      	b.n	800c4f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c60c:	7be0      	ldrb	r0, [r4, #15]
 800c60e:	e773      	b.n	800c4f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c610:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c614:	e776      	b.n	800c504 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800c616:	f1ba 0f00 	cmp.w	sl, #0
 800c61a:	d0f7      	beq.n	800c60c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 800c61c:	2264      	movs	r2, #100	; 0x64
 800c61e:	4639      	mov	r1, r7
 800c620:	a849      	add	r0, sp, #292	; 0x124
 800c622:	f010 f86d 	bl	801c700 <memcpy>
 800c626:	2300      	movs	r3, #0
 800c628:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c62c:	6821      	ldr	r1, [r4, #0]
 800c62e:	a849      	add	r0, sp, #292	; 0x124
 800c630:	f7ff fbb1 	bl	800bd96 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c634:	b203      	sxth	r3, r0
 800c636:	e754      	b.n	800c4e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800c638 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c638:	2b03      	cmp	r3, #3
 800c63a:	d818      	bhi.n	800c66e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800c63c:	e8df f003 	tbb	[pc, r3]
 800c640:	130d0602 	.word	0x130d0602
 800c644:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c648:	1850      	adds	r0, r2, r1
 800c64a:	4770      	bx	lr
 800c64c:	8803      	ldrh	r3, [r0, #0]
 800c64e:	8880      	ldrh	r0, [r0, #4]
 800c650:	4418      	add	r0, r3
 800c652:	b200      	sxth	r0, r0
 800c654:	1a80      	subs	r0, r0, r2
 800c656:	3801      	subs	r0, #1
 800c658:	4770      	bx	lr
 800c65a:	8803      	ldrh	r3, [r0, #0]
 800c65c:	8880      	ldrh	r0, [r0, #4]
 800c65e:	4418      	add	r0, r3
 800c660:	b200      	sxth	r0, r0
 800c662:	1a40      	subs	r0, r0, r1
 800c664:	e7f7      	b.n	800c656 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c666:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c66a:	4410      	add	r0, r2
 800c66c:	4770      	bx	lr
 800c66e:	2000      	movs	r0, #0
 800c670:	4770      	bx	lr

0800c672 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c672:	2b03      	cmp	r3, #3
 800c674:	d817      	bhi.n	800c6a6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800c676:	e8df f003 	tbb	[pc, r3]
 800c67a:	0602      	.short	0x0602
 800c67c:	1009      	.short	0x1009
 800c67e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c682:	1850      	adds	r0, r2, r1
 800c684:	4770      	bx	lr
 800c686:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c68a:	e7fa      	b.n	800c682 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800c68c:	8843      	ldrh	r3, [r0, #2]
 800c68e:	88c0      	ldrh	r0, [r0, #6]
 800c690:	4418      	add	r0, r3
 800c692:	b200      	sxth	r0, r0
 800c694:	1a80      	subs	r0, r0, r2
 800c696:	3801      	subs	r0, #1
 800c698:	4770      	bx	lr
 800c69a:	8843      	ldrh	r3, [r0, #2]
 800c69c:	88c0      	ldrh	r0, [r0, #6]
 800c69e:	4418      	add	r0, r3
 800c6a0:	b200      	sxth	r0, r0
 800c6a2:	1a40      	subs	r0, r0, r1
 800c6a4:	e7f7      	b.n	800c696 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c6a6:	2000      	movs	r0, #0
 800c6a8:	4770      	bx	lr
	...

0800c6ac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c6ac:	4b01      	ldr	r3, [pc, #4]	; (800c6b4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c6ae:	2200      	movs	r2, #0
 800c6b0:	601a      	str	r2, [r3, #0]
 800c6b2:	4770      	bx	lr
 800c6b4:	20017758 	.word	0x20017758

0800c6b8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c6b8:	4603      	mov	r3, r0
 800c6ba:	b1c8      	cbz	r0, 800c6f0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c6bc:	0c02      	lsrs	r2, r0, #16
 800c6be:	0412      	lsls	r2, r2, #16
 800c6c0:	b9a2      	cbnz	r2, 800c6ec <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c6c2:	0403      	lsls	r3, r0, #16
 800c6c4:	2010      	movs	r0, #16
 800c6c6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c6ca:	bf04      	itt	eq
 800c6cc:	021b      	lsleq	r3, r3, #8
 800c6ce:	3008      	addeq	r0, #8
 800c6d0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c6d4:	bf04      	itt	eq
 800c6d6:	011b      	lsleq	r3, r3, #4
 800c6d8:	3004      	addeq	r0, #4
 800c6da:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c6de:	bf04      	itt	eq
 800c6e0:	009b      	lsleq	r3, r3, #2
 800c6e2:	3002      	addeq	r0, #2
 800c6e4:	2b00      	cmp	r3, #0
 800c6e6:	db04      	blt.n	800c6f2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c6e8:	3001      	adds	r0, #1
 800c6ea:	4770      	bx	lr
 800c6ec:	2000      	movs	r0, #0
 800c6ee:	e7ea      	b.n	800c6c6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c6f0:	2020      	movs	r0, #32
 800c6f2:	4770      	bx	lr

0800c6f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6f8:	b087      	sub	sp, #28
 800c6fa:	4681      	mov	r9, r0
 800c6fc:	4698      	mov	r8, r3
 800c6fe:	4610      	mov	r0, r2
 800c700:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c704:	460d      	mov	r5, r1
 800c706:	b981      	cbnz	r1, 800c72a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800c708:	b14b      	cbz	r3, 800c71e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800c70a:	460b      	mov	r3, r1
 800c70c:	e9cd 4700 	strd	r4, r7, [sp]
 800c710:	464a      	mov	r2, r9
 800c712:	4641      	mov	r1, r8
 800c714:	f7ff ffee 	bl	800c6f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c718:	b007      	add	sp, #28
 800c71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c71e:	f04f 33ff 	mov.w	r3, #4294967295
 800c722:	603b      	str	r3, [r7, #0]
 800c724:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c728:	e7f6      	b.n	800c718 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c72a:	fa32 fa01 	lsrs.w	sl, r2, r1
 800c72e:	d107      	bne.n	800c740 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800c730:	fb09 f602 	mul.w	r6, r9, r2
 800c734:	fbb6 f0f4 	udiv	r0, r6, r4
 800c738:	fb04 6610 	mls	r6, r4, r0, r6
 800c73c:	603e      	str	r6, [r7, #0]
 800c73e:	e7eb      	b.n	800c718 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c740:	2601      	movs	r6, #1
 800c742:	408e      	lsls	r6, r1
 800c744:	3e01      	subs	r6, #1
 800c746:	4016      	ands	r6, r2
 800c748:	fa09 fb01 	lsl.w	fp, r9, r1
 800c74c:	4630      	mov	r0, r6
 800c74e:	fbbb f3f4 	udiv	r3, fp, r4
 800c752:	9302      	str	r3, [sp, #8]
 800c754:	fb0a f303 	mul.w	r3, sl, r3
 800c758:	9303      	str	r3, [sp, #12]
 800c75a:	f7ff ffad 	bl	800c6b8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c75e:	464a      	mov	r2, r9
 800c760:	460b      	mov	r3, r1
 800c762:	e9cd 4700 	strd	r4, r7, [sp]
 800c766:	4601      	mov	r1, r0
 800c768:	4630      	mov	r0, r6
 800c76a:	f7ff ffc3 	bl	800c6f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c76e:	9b02      	ldr	r3, [sp, #8]
 800c770:	fb04 bb13 	mls	fp, r4, r3, fp
 800c774:	4606      	mov	r6, r0
 800c776:	4658      	mov	r0, fp
 800c778:	eb05 0108 	add.w	r1, r5, r8
 800c77c:	f7ff ff9c 	bl	800c6b8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c780:	ab05      	add	r3, sp, #20
 800c782:	e9cd 4300 	strd	r4, r3, [sp]
 800c786:	465a      	mov	r2, fp
 800c788:	4603      	mov	r3, r0
 800c78a:	4650      	mov	r0, sl
 800c78c:	f7ff ffb2 	bl	800c6f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c790:	6839      	ldr	r1, [r7, #0]
 800c792:	9a05      	ldr	r2, [sp, #20]
 800c794:	9b03      	ldr	r3, [sp, #12]
 800c796:	4411      	add	r1, r2
 800c798:	fbb1 f2f4 	udiv	r2, r1, r4
 800c79c:	18d3      	adds	r3, r2, r3
 800c79e:	441e      	add	r6, r3
 800c7a0:	fb04 1412 	mls	r4, r4, r2, r1
 800c7a4:	4430      	add	r0, r6
 800c7a6:	603c      	str	r4, [r7, #0]
 800c7a8:	e7b6      	b.n	800c718 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c7aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c7aa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c7ae:	b085      	sub	sp, #20
 800c7b0:	f1b0 0900 	subs.w	r9, r0, #0
 800c7b4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c7b6:	461d      	mov	r5, r3
 800c7b8:	bfbf      	itttt	lt
 800c7ba:	6823      	ldrlt	r3, [r4, #0]
 800c7bc:	425b      	neglt	r3, r3
 800c7be:	f1c9 0900 	rsblt	r9, r9, #0
 800c7c2:	6023      	strlt	r3, [r4, #0]
 800c7c4:	bfb4      	ite	lt
 800c7c6:	f04f 36ff 	movlt.w	r6, #4294967295
 800c7ca:	2601      	movge	r6, #1
 800c7cc:	2a00      	cmp	r2, #0
 800c7ce:	4617      	mov	r7, r2
 800c7d0:	da04      	bge.n	800c7dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c7d2:	6823      	ldr	r3, [r4, #0]
 800c7d4:	425b      	negs	r3, r3
 800c7d6:	4257      	negs	r7, r2
 800c7d8:	4276      	negs	r6, r6
 800c7da:	6023      	str	r3, [r4, #0]
 800c7dc:	2d00      	cmp	r5, #0
 800c7de:	4638      	mov	r0, r7
 800c7e0:	bfba      	itte	lt
 800c7e2:	426d      	neglt	r5, r5
 800c7e4:	f04f 38ff 	movlt.w	r8, #4294967295
 800c7e8:	f04f 0801 	movge.w	r8, #1
 800c7ec:	f7ff ff64 	bl	800c6b8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c7f0:	ab03      	add	r3, sp, #12
 800c7f2:	e9cd 5300 	strd	r5, r3, [sp]
 800c7f6:	463a      	mov	r2, r7
 800c7f8:	4603      	mov	r3, r0
 800c7fa:	4648      	mov	r0, r9
 800c7fc:	f7ff ff7a 	bl	800c6f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c800:	6823      	ldr	r3, [r4, #0]
 800c802:	9a03      	ldr	r2, [sp, #12]
 800c804:	4546      	cmp	r6, r8
 800c806:	441a      	add	r2, r3
 800c808:	fb92 f3f5 	sdiv	r3, r2, r5
 800c80c:	4418      	add	r0, r3
 800c80e:	bf18      	it	ne
 800c810:	4240      	negne	r0, r0
 800c812:	fb05 2313 	mls	r3, r5, r3, r2
 800c816:	1c72      	adds	r2, r6, #1
 800c818:	6023      	str	r3, [r4, #0]
 800c81a:	d105      	bne.n	800c828 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c81c:	2b00      	cmp	r3, #0
 800c81e:	f1c3 0200 	rsb	r2, r3, #0
 800c822:	db0b      	blt.n	800c83c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c824:	6022      	str	r2, [r4, #0]
 800c826:	e006      	b.n	800c836 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c828:	2e01      	cmp	r6, #1
 800c82a:	d104      	bne.n	800c836 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c82c:	2b00      	cmp	r3, #0
 800c82e:	da02      	bge.n	800c836 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c830:	442b      	add	r3, r5
 800c832:	3801      	subs	r0, #1
 800c834:	6023      	str	r3, [r4, #0]
 800c836:	b005      	add	sp, #20
 800c838:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c83c:	3801      	subs	r0, #1
 800c83e:	1b52      	subs	r2, r2, r5
 800c840:	e7f0      	b.n	800c824 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c844 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c844:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c848:	4c1c      	ldr	r4, [pc, #112]	; (800c8bc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c84a:	6807      	ldr	r7, [r0, #0]
 800c84c:	69a3      	ldr	r3, [r4, #24]
 800c84e:	4605      	mov	r5, r0
 800c850:	b92b      	cbnz	r3, 800c85e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c852:	6840      	ldr	r0, [r0, #4]
 800c854:	e9c5 7000 	strd	r7, r0, [r5]
 800c858:	b004      	add	sp, #16
 800c85a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c85e:	68a2      	ldr	r2, [r4, #8]
 800c860:	6820      	ldr	r0, [r4, #0]
 800c862:	ae04      	add	r6, sp, #16
 800c864:	f04f 0802 	mov.w	r8, #2
 800c868:	fb93 f1f8 	sdiv	r1, r3, r8
 800c86c:	440a      	add	r2, r1
 800c86e:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c872:	69e1      	ldr	r1, [r4, #28]
 800c874:	9600      	str	r6, [sp, #0]
 800c876:	463a      	mov	r2, r7
 800c878:	f7ff ff97 	bl	800c7aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c87c:	69a3      	ldr	r3, [r4, #24]
 800c87e:	686a      	ldr	r2, [r5, #4]
 800c880:	6a21      	ldr	r1, [r4, #32]
 800c882:	9600      	str	r6, [sp, #0]
 800c884:	4607      	mov	r7, r0
 800c886:	6860      	ldr	r0, [r4, #4]
 800c888:	f7ff ff8f 	bl	800c7aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c88c:	6962      	ldr	r2, [r4, #20]
 800c88e:	69a3      	ldr	r3, [r4, #24]
 800c890:	fb93 f8f8 	sdiv	r8, r3, r8
 800c894:	4442      	add	r2, r8
 800c896:	9203      	str	r2, [sp, #12]
 800c898:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c89a:	682a      	ldr	r2, [r5, #0]
 800c89c:	9600      	str	r6, [sp, #0]
 800c89e:	4407      	add	r7, r0
 800c8a0:	68e0      	ldr	r0, [r4, #12]
 800c8a2:	f7ff ff82 	bl	800c7aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c8a6:	9600      	str	r6, [sp, #0]
 800c8a8:	4680      	mov	r8, r0
 800c8aa:	69a3      	ldr	r3, [r4, #24]
 800c8ac:	686a      	ldr	r2, [r5, #4]
 800c8ae:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c8b0:	6920      	ldr	r0, [r4, #16]
 800c8b2:	f7ff ff7a 	bl	800c7aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c8b6:	4440      	add	r0, r8
 800c8b8:	e7cc      	b.n	800c854 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c8ba:	bf00      	nop
 800c8bc:	2001775c 	.word	0x2001775c

0800c8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c8c0:	4b07      	ldr	r3, [pc, #28]	; (800c8e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800c8c2:	781b      	ldrb	r3, [r3, #0]
 800c8c4:	2b01      	cmp	r3, #1
 800c8c6:	d109      	bne.n	800c8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800c8c8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c8cc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c8d0:	8003      	strh	r3, [r0, #0]
 800c8d2:	4b04      	ldr	r3, [pc, #16]	; (800c8e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c8d4:	881b      	ldrh	r3, [r3, #0]
 800c8d6:	3b01      	subs	r3, #1
 800c8d8:	1a9b      	subs	r3, r3, r2
 800c8da:	800b      	strh	r3, [r1, #0]
 800c8dc:	4770      	bx	lr
 800c8de:	bf00      	nop
 800c8e0:	20017748 	.word	0x20017748
 800c8e4:	20017744 	.word	0x20017744

0800c8e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c8e8:	b510      	push	{r4, lr}
 800c8ea:	4b07      	ldr	r3, [pc, #28]	; (800c908 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c8ec:	781b      	ldrb	r3, [r3, #0]
 800c8ee:	2b01      	cmp	r3, #1
 800c8f0:	d108      	bne.n	800c904 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c8f2:	4b06      	ldr	r3, [pc, #24]	; (800c90c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c8f4:	880c      	ldrh	r4, [r1, #0]
 800c8f6:	881b      	ldrh	r3, [r3, #0]
 800c8f8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c8fc:	3b01      	subs	r3, #1
 800c8fe:	1b1b      	subs	r3, r3, r4
 800c900:	8003      	strh	r3, [r0, #0]
 800c902:	800a      	strh	r2, [r1, #0]
 800c904:	bd10      	pop	{r4, pc}
 800c906:	bf00      	nop
 800c908:	20017748 	.word	0x20017748
 800c90c:	20017744 	.word	0x20017744

0800c910 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c910:	b510      	push	{r4, lr}
 800c912:	4b0a      	ldr	r3, [pc, #40]	; (800c93c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c914:	781b      	ldrb	r3, [r3, #0]
 800c916:	2b01      	cmp	r3, #1
 800c918:	d10e      	bne.n	800c938 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c91a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c91e:	8843      	ldrh	r3, [r0, #2]
 800c920:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c924:	8044      	strh	r4, [r0, #2]
 800c926:	18ca      	adds	r2, r1, r3
 800c928:	4b05      	ldr	r3, [pc, #20]	; (800c940 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c92a:	881b      	ldrh	r3, [r3, #0]
 800c92c:	1a9b      	subs	r3, r3, r2
 800c92e:	8003      	strh	r3, [r0, #0]
 800c930:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c934:	80c3      	strh	r3, [r0, #6]
 800c936:	8081      	strh	r1, [r0, #4]
 800c938:	bd10      	pop	{r4, pc}
 800c93a:	bf00      	nop
 800c93c:	20017748 	.word	0x20017748
 800c940:	20017744 	.word	0x20017744

0800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c944:	4b08      	ldr	r3, [pc, #32]	; (800c968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800c946:	781b      	ldrb	r3, [r3, #0]
 800c948:	2b01      	cmp	r3, #1
 800c94a:	d10c      	bne.n	800c966 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800c94c:	8803      	ldrh	r3, [r0, #0]
 800c94e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800c952:	8842      	ldrh	r2, [r0, #2]
 800c954:	8002      	strh	r2, [r0, #0]
 800c956:	185a      	adds	r2, r3, r1
 800c958:	4b04      	ldr	r3, [pc, #16]	; (800c96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c95a:	881b      	ldrh	r3, [r3, #0]
 800c95c:	1a9b      	subs	r3, r3, r2
 800c95e:	8043      	strh	r3, [r0, #2]
 800c960:	88c3      	ldrh	r3, [r0, #6]
 800c962:	8083      	strh	r3, [r0, #4]
 800c964:	80c1      	strh	r1, [r0, #6]
 800c966:	4770      	bx	lr
 800c968:	20017748 	.word	0x20017748
 800c96c:	20017744 	.word	0x20017744

0800c970 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c970:	b510      	push	{r4, lr}
 800c972:	4b07      	ldr	r3, [pc, #28]	; (800c990 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c974:	781b      	ldrb	r3, [r3, #0]
 800c976:	2b01      	cmp	r3, #1
 800c978:	d108      	bne.n	800c98c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c97a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c97e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c982:	8003      	strh	r3, [r0, #0]
 800c984:	8893      	ldrh	r3, [r2, #4]
 800c986:	3b01      	subs	r3, #1
 800c988:	1b1b      	subs	r3, r3, r4
 800c98a:	800b      	strh	r3, [r1, #0]
 800c98c:	bd10      	pop	{r4, pc}
 800c98e:	bf00      	nop
 800c990:	20017748 	.word	0x20017748

0800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c994:	b510      	push	{r4, lr}
 800c996:	4b0a      	ldr	r3, [pc, #40]	; (800c9c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c998:	781b      	ldrb	r3, [r3, #0]
 800c99a:	2b01      	cmp	r3, #1
 800c99c:	460a      	mov	r2, r1
 800c99e:	d10d      	bne.n	800c9bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c9a0:	8881      	ldrh	r1, [r0, #4]
 800c9a2:	8803      	ldrh	r3, [r0, #0]
 800c9a4:	440b      	add	r3, r1
 800c9a6:	4601      	mov	r1, r0
 800c9a8:	3b01      	subs	r3, #1
 800c9aa:	f821 3b02 	strh.w	r3, [r1], #2
 800c9ae:	f7ff ffdf 	bl	800c970 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c9b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c9b6:	88c2      	ldrh	r2, [r0, #6]
 800c9b8:	8082      	strh	r2, [r0, #4]
 800c9ba:	80c3      	strh	r3, [r0, #6]
 800c9bc:	bd10      	pop	{r4, pc}
 800c9be:	bf00      	nop
 800c9c0:	20017748 	.word	0x20017748

0800c9c4 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c9c4:	4b06      	ldr	r3, [pc, #24]	; (800c9e0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c9c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c9ca:	4b06      	ldr	r3, [pc, #24]	; (800c9e4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c9cc:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 800c9d0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c9d4:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 800c9d8:	2100      	movs	r1, #0
 800c9da:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 800c9de:	4770      	bx	lr
 800c9e0:	20017744 	.word	0x20017744
 800c9e4:	20017746 	.word	0x20017746

0800c9e8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c9e8:	4b03      	ldr	r3, [pc, #12]	; (800c9f8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c9ea:	6818      	ldr	r0, [r3, #0]
 800c9ec:	b110      	cbz	r0, 800c9f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c9ee:	6803      	ldr	r3, [r0, #0]
 800c9f0:	699b      	ldr	r3, [r3, #24]
 800c9f2:	4718      	bx	r3
 800c9f4:	4770      	bx	lr
 800c9f6:	bf00      	nop
 800c9f8:	2001778c 	.word	0x2001778c

0800c9fc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c9fc:	4770      	bx	lr
	...

0800ca00 <_ZN8touchgfx11Application4drawEv>:
 800ca00:	b507      	push	{r0, r1, r2, lr}
 800ca02:	4b09      	ldr	r3, [pc, #36]	; (800ca28 <_ZN8touchgfx11Application4drawEv+0x28>)
 800ca04:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ca08:	4b08      	ldr	r3, [pc, #32]	; (800ca2c <_ZN8touchgfx11Application4drawEv+0x2c>)
 800ca0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ca0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ca12:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ca16:	6803      	ldr	r3, [r0, #0]
 800ca18:	2100      	movs	r1, #0
 800ca1a:	9100      	str	r1, [sp, #0]
 800ca1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ca1e:	4669      	mov	r1, sp
 800ca20:	4798      	blx	r3
 800ca22:	b003      	add	sp, #12
 800ca24:	f85d fb04 	ldr.w	pc, [sp], #4
 800ca28:	20017744 	.word	0x20017744
 800ca2c:	20017746 	.word	0x20017746

0800ca30 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ca30:	4b03      	ldr	r3, [pc, #12]	; (800ca40 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ca32:	6818      	ldr	r0, [r3, #0]
 800ca34:	b110      	cbz	r0, 800ca3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ca36:	6803      	ldr	r3, [r0, #0]
 800ca38:	69db      	ldr	r3, [r3, #28]
 800ca3a:	4718      	bx	r3
 800ca3c:	4770      	bx	lr
 800ca3e:	bf00      	nop
 800ca40:	2001778c 	.word	0x2001778c

0800ca44 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ca44:	4b03      	ldr	r3, [pc, #12]	; (800ca54 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ca46:	6818      	ldr	r0, [r3, #0]
 800ca48:	b110      	cbz	r0, 800ca50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ca4a:	6803      	ldr	r3, [r0, #0]
 800ca4c:	6a1b      	ldr	r3, [r3, #32]
 800ca4e:	4718      	bx	r3
 800ca50:	4770      	bx	lr
 800ca52:	bf00      	nop
 800ca54:	2001778c 	.word	0x2001778c

0800ca58 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ca58:	2300      	movs	r3, #0
 800ca5a:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 800ca5e:	4770      	bx	lr

0800ca60 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ca60:	4b03      	ldr	r3, [pc, #12]	; (800ca70 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ca62:	6818      	ldr	r0, [r3, #0]
 800ca64:	b110      	cbz	r0, 800ca6c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ca66:	6803      	ldr	r3, [r0, #0]
 800ca68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca6a:	4718      	bx	r3
 800ca6c:	4770      	bx	lr
 800ca6e:	bf00      	nop
 800ca70:	2001778c 	.word	0x2001778c

0800ca74 <_ZN8touchgfx11ApplicationD1Ev>:
 800ca74:	4770      	bx	lr

0800ca76 <_ZN8touchgfx11ApplicationD0Ev>:
 800ca76:	b510      	push	{r4, lr}
 800ca78:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800ca7c:	4604      	mov	r4, r0
 800ca7e:	f00e fff1 	bl	801ba64 <_ZdlPvj>
 800ca82:	4620      	mov	r0, r4
 800ca84:	bd10      	pop	{r4, pc}

0800ca86 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ca86:	b510      	push	{r4, lr}
 800ca88:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ca8c:	888a      	ldrh	r2, [r1, #4]
 800ca8e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ca92:	4422      	add	r2, r4
 800ca94:	b212      	sxth	r2, r2
 800ca96:	4293      	cmp	r3, r2
 800ca98:	da15      	bge.n	800cac6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ca9a:	8882      	ldrh	r2, [r0, #4]
 800ca9c:	4413      	add	r3, r2
 800ca9e:	b21b      	sxth	r3, r3
 800caa0:	429c      	cmp	r4, r3
 800caa2:	da10      	bge.n	800cac6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800caa4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800caa8:	88c9      	ldrh	r1, [r1, #6]
 800caaa:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800caae:	4419      	add	r1, r3
 800cab0:	b209      	sxth	r1, r1
 800cab2:	428a      	cmp	r2, r1
 800cab4:	da07      	bge.n	800cac6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cab6:	88c0      	ldrh	r0, [r0, #6]
 800cab8:	4410      	add	r0, r2
 800caba:	b200      	sxth	r0, r0
 800cabc:	4283      	cmp	r3, r0
 800cabe:	bfac      	ite	ge
 800cac0:	2000      	movge	r0, #0
 800cac2:	2001      	movlt	r0, #1
 800cac4:	bd10      	pop	{r4, pc}
 800cac6:	2000      	movs	r0, #0
 800cac8:	e7fc      	b.n	800cac4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800caca <_ZN8touchgfx4Rect10restrictToEss>:
 800caca:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cace:	2b00      	cmp	r3, #0
 800cad0:	b510      	push	{r4, lr}
 800cad2:	da04      	bge.n	800cade <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cad4:	8884      	ldrh	r4, [r0, #4]
 800cad6:	4423      	add	r3, r4
 800cad8:	8083      	strh	r3, [r0, #4]
 800cada:	2300      	movs	r3, #0
 800cadc:	8003      	strh	r3, [r0, #0]
 800cade:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cae2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cae6:	1b09      	subs	r1, r1, r4
 800cae8:	428b      	cmp	r3, r1
 800caea:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800caee:	bfc8      	it	gt
 800caf0:	8081      	strhgt	r1, [r0, #4]
 800caf2:	2b00      	cmp	r3, #0
 800caf4:	da04      	bge.n	800cb00 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800caf6:	88c1      	ldrh	r1, [r0, #6]
 800caf8:	440b      	add	r3, r1
 800cafa:	80c3      	strh	r3, [r0, #6]
 800cafc:	2300      	movs	r3, #0
 800cafe:	8043      	strh	r3, [r0, #2]
 800cb00:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800cb04:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800cb08:	1a52      	subs	r2, r2, r1
 800cb0a:	4293      	cmp	r3, r2
 800cb0c:	bfc8      	it	gt
 800cb0e:	80c2      	strhgt	r2, [r0, #6]
 800cb10:	bd10      	pop	{r4, pc}
	...

0800cb14 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800cb14:	b510      	push	{r4, lr}
 800cb16:	4b10      	ldr	r3, [pc, #64]	; (800cb58 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800cb18:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb1c:	4b0f      	ldr	r3, [pc, #60]	; (800cb5c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800cb1e:	460c      	mov	r4, r1
 800cb20:	4620      	mov	r0, r4
 800cb22:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cb26:	f7ff ffd0 	bl	800caca <_ZN8touchgfx4Rect10restrictToEss>
 800cb2a:	4b0d      	ldr	r3, [pc, #52]	; (800cb60 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cb2c:	6818      	ldr	r0, [r3, #0]
 800cb2e:	b190      	cbz	r0, 800cb56 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800cb30:	6803      	ldr	r3, [r0, #0]
 800cb32:	4621      	mov	r1, r4
 800cb34:	689b      	ldr	r3, [r3, #8]
 800cb36:	4798      	blx	r3
 800cb38:	4b0a      	ldr	r3, [pc, #40]	; (800cb64 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800cb3a:	6818      	ldr	r0, [r3, #0]
 800cb3c:	b118      	cbz	r0, 800cb46 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800cb3e:	6803      	ldr	r3, [r0, #0]
 800cb40:	4621      	mov	r1, r4
 800cb42:	689b      	ldr	r3, [r3, #8]
 800cb44:	4798      	blx	r3
 800cb46:	4b08      	ldr	r3, [pc, #32]	; (800cb68 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800cb48:	6818      	ldr	r0, [r3, #0]
 800cb4a:	6803      	ldr	r3, [r0, #0]
 800cb4c:	4621      	mov	r1, r4
 800cb4e:	69db      	ldr	r3, [r3, #28]
 800cb50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb54:	4718      	bx	r3
 800cb56:	bd10      	pop	{r4, pc}
 800cb58:	20017746 	.word	0x20017746
 800cb5c:	20017744 	.word	0x20017744
 800cb60:	2001778c 	.word	0x2001778c
 800cb64:	20017788 	.word	0x20017788
 800cb68:	20017750 	.word	0x20017750

0800cb6c <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cb6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb6e:	4606      	mov	r6, r0
 800cb70:	4608      	mov	r0, r1
 800cb72:	460f      	mov	r7, r1
 800cb74:	f7fc fe8d 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cb78:	b9e8      	cbnz	r0, 800cbb6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb7a:	f9b7 5000 	ldrsh.w	r5, [r7]
 800cb7e:	f9b6 4000 	ldrsh.w	r4, [r6]
 800cb82:	42a5      	cmp	r5, r4
 800cb84:	db17      	blt.n	800cbb6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb86:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800cb8a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cb8e:	429a      	cmp	r2, r3
 800cb90:	db11      	blt.n	800cbb6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb92:	88b9      	ldrh	r1, [r7, #4]
 800cb94:	440d      	add	r5, r1
 800cb96:	88b1      	ldrh	r1, [r6, #4]
 800cb98:	440c      	add	r4, r1
 800cb9a:	b22d      	sxth	r5, r5
 800cb9c:	b224      	sxth	r4, r4
 800cb9e:	42a5      	cmp	r5, r4
 800cba0:	dc09      	bgt.n	800cbb6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cba2:	88f8      	ldrh	r0, [r7, #6]
 800cba4:	4410      	add	r0, r2
 800cba6:	88f2      	ldrh	r2, [r6, #6]
 800cba8:	4413      	add	r3, r2
 800cbaa:	b200      	sxth	r0, r0
 800cbac:	b21b      	sxth	r3, r3
 800cbae:	4298      	cmp	r0, r3
 800cbb0:	bfcc      	ite	gt
 800cbb2:	2000      	movgt	r0, #0
 800cbb4:	2001      	movle	r0, #1
 800cbb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cbb8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cbb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cbba:	4604      	mov	r4, r0
 800cbbc:	4608      	mov	r0, r1
 800cbbe:	460d      	mov	r5, r1
 800cbc0:	f7fc fe67 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbc4:	b978      	cbnz	r0, 800cbe6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cbc6:	4620      	mov	r0, r4
 800cbc8:	f7fc fe63 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbcc:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cbd0:	b150      	cbz	r0, 800cbe8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cbd2:	8026      	strh	r6, [r4, #0]
 800cbd4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cbd8:	8063      	strh	r3, [r4, #2]
 800cbda:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cbde:	80a3      	strh	r3, [r4, #4]
 800cbe0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cbe4:	80e3      	strh	r3, [r4, #6]
 800cbe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cbe8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cbec:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cbf0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cbf4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cbf8:	88ed      	ldrh	r5, [r5, #6]
 800cbfa:	42b1      	cmp	r1, r6
 800cbfc:	460f      	mov	r7, r1
 800cbfe:	bfa8      	it	ge
 800cc00:	4637      	movge	r7, r6
 800cc02:	4293      	cmp	r3, r2
 800cc04:	4618      	mov	r0, r3
 800cc06:	4466      	add	r6, ip
 800cc08:	bfa8      	it	ge
 800cc0a:	4610      	movge	r0, r2
 800cc0c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cc10:	8027      	strh	r7, [r4, #0]
 800cc12:	442a      	add	r2, r5
 800cc14:	88e5      	ldrh	r5, [r4, #6]
 800cc16:	8060      	strh	r0, [r4, #2]
 800cc18:	4461      	add	r1, ip
 800cc1a:	442b      	add	r3, r5
 800cc1c:	b236      	sxth	r6, r6
 800cc1e:	b209      	sxth	r1, r1
 800cc20:	b212      	sxth	r2, r2
 800cc22:	b21b      	sxth	r3, r3
 800cc24:	428e      	cmp	r6, r1
 800cc26:	bfac      	ite	ge
 800cc28:	ebc7 0106 	rsbge	r1, r7, r6
 800cc2c:	ebc7 0101 	rsblt	r1, r7, r1
 800cc30:	429a      	cmp	r2, r3
 800cc32:	bfac      	ite	ge
 800cc34:	ebc0 0202 	rsbge	r2, r0, r2
 800cc38:	ebc0 0203 	rsblt	r2, r0, r3
 800cc3c:	80a1      	strh	r1, [r4, #4]
 800cc3e:	80e2      	strh	r2, [r4, #6]
 800cc40:	e7d1      	b.n	800cbe6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800cc44 <_ZN8touchgfx11Application11getInstanceEv>:
 800cc44:	4b01      	ldr	r3, [pc, #4]	; (800cc4c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800cc46:	6818      	ldr	r0, [r3, #0]
 800cc48:	4770      	bx	lr
 800cc4a:	bf00      	nop
 800cc4c:	2001779c 	.word	0x2001779c

0800cc50 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800cc50:	b510      	push	{r4, lr}
 800cc52:	2300      	movs	r3, #0
 800cc54:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 800cc58:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800cc5c:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800cc60:	4604      	mov	r4, r0
 800cc62:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800cc66:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 800cc6a:	429a      	cmp	r2, r3
 800cc6c:	d90e      	bls.n	800cc8c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800cc6e:	18e2      	adds	r2, r4, r3
 800cc70:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 800cc74:	b122      	cbz	r2, 800cc80 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800cc76:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800cc7a:	6803      	ldr	r3, [r0, #0]
 800cc7c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800cc7e:	4798      	blx	r3
 800cc80:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800cc84:	3301      	adds	r3, #1
 800cc86:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800cc8a:	e7ea      	b.n	800cc62 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800cc8c:	bd10      	pop	{r4, pc}

0800cc8e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800cc8e:	b530      	push	{r4, r5, lr}
 800cc90:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 800cc94:	2200      	movs	r2, #0
 800cc96:	b293      	uxth	r3, r2
 800cc98:	429d      	cmp	r5, r3
 800cc9a:	d90e      	bls.n	800ccba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800cc9c:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 800cca0:	428b      	cmp	r3, r1
 800cca2:	d10b      	bne.n	800ccbc <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800cca4:	1884      	adds	r4, r0, r2
 800cca6:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800ccaa:	b13b      	cbz	r3, 800ccbc <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800ccac:	3b01      	subs	r3, #1
 800ccae:	b2db      	uxtb	r3, r3
 800ccb0:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 800ccb4:	b90b      	cbnz	r3, 800ccba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800ccb6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 800ccba:	bd30      	pop	{r4, r5, pc}
 800ccbc:	3201      	adds	r2, #1
 800ccbe:	e7ea      	b.n	800cc96 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0800ccc0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800ccc0:	2300      	movs	r3, #0
 800ccc2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800ccc6:	f100 0284 	add.w	r2, r0, #132	; 0x84
 800ccca:	30a4      	adds	r0, #164	; 0xa4
 800cccc:	f802 3b01 	strb.w	r3, [r2], #1
 800ccd0:	4282      	cmp	r2, r0
 800ccd2:	d1fb      	bne.n	800cccc <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800ccd4:	4770      	bx	lr
	...

0800ccd8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ccd8:	b570      	push	{r4, r5, r6, lr}
 800ccda:	4c0b      	ldr	r4, [pc, #44]	; (800cd08 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800ccdc:	4605      	mov	r5, r0
 800ccde:	6820      	ldr	r0, [r4, #0]
 800cce0:	460e      	mov	r6, r1
 800cce2:	b110      	cbz	r0, 800ccea <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800cce4:	6803      	ldr	r3, [r0, #0]
 800cce6:	695b      	ldr	r3, [r3, #20]
 800cce8:	4798      	blx	r3
 800ccea:	1d28      	adds	r0, r5, #4
 800ccec:	f7ff ffe8 	bl	800ccc0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800ccf0:	6026      	str	r6, [r4, #0]
 800ccf2:	6833      	ldr	r3, [r6, #0]
 800ccf4:	4630      	mov	r0, r6
 800ccf6:	68db      	ldr	r3, [r3, #12]
 800ccf8:	4798      	blx	r3
 800ccfa:	682b      	ldr	r3, [r5, #0]
 800ccfc:	4628      	mov	r0, r5
 800ccfe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cd00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd04:	4718      	bx	r3
 800cd06:	bf00      	nop
 800cd08:	2001778c 	.word	0x2001778c

0800cd0c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800cd0c:	2300      	movs	r3, #0
 800cd0e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 800cd12:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 800cd16:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd18:	461a      	mov	r2, r3
 800cd1a:	461c      	mov	r4, r3
 800cd1c:	461d      	mov	r5, r3
 800cd1e:	459c      	cmp	ip, r3
 800cd20:	dd1a      	ble.n	800cd58 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800cd22:	18c6      	adds	r6, r0, r3
 800cd24:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 800cd28:	b16e      	cbz	r6, 800cd46 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800cd2a:	429a      	cmp	r2, r3
 800cd2c:	d008      	beq.n	800cd40 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800cd2e:	fa1f fe82 	uxth.w	lr, r2
 800cd32:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800cd36:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800cd3a:	1887      	adds	r7, r0, r2
 800cd3c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 800cd40:	3201      	adds	r2, #1
 800cd42:	3301      	adds	r3, #1
 800cd44:	e7eb      	b.n	800cd1e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800cd46:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 800cd4a:	4299      	cmp	r1, r3
 800cd4c:	bfa8      	it	ge
 800cd4e:	3501      	addge	r5, #1
 800cd50:	429e      	cmp	r6, r3
 800cd52:	bfc8      	it	gt
 800cd54:	3401      	addgt	r4, #1
 800cd56:	e7f4      	b.n	800cd42 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800cd58:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 800cd5c:	1b49      	subs	r1, r1, r5
 800cd5e:	1b1b      	subs	r3, r3, r4
 800cd60:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 800cd64:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800cd68:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800cd6c:	4293      	cmp	r3, r2
 800cd6e:	dd03      	ble.n	800cd78 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800cd70:	3b01      	subs	r3, #1
 800cd72:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800cd76:	e7f7      	b.n	800cd68 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800cd78:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800cd7c <_ZN8touchgfx11Application15handleTickEventEv>:
 800cd7c:	b570      	push	{r4, r5, r6, lr}
 800cd7e:	4d16      	ldr	r5, [pc, #88]	; (800cdd8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800cd80:	4604      	mov	r4, r0
 800cd82:	6828      	ldr	r0, [r5, #0]
 800cd84:	b140      	cbz	r0, 800cd98 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cd86:	7a03      	ldrb	r3, [r0, #8]
 800cd88:	b933      	cbnz	r3, 800cd98 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cd8a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800cd8e:	6803      	ldr	r3, [r0, #0]
 800cd90:	689b      	ldr	r3, [r3, #8]
 800cd92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd96:	4718      	bx	r3
 800cd98:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 800cd9c:	4e0f      	ldr	r6, [pc, #60]	; (800cddc <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800cd9e:	b973      	cbnz	r3, 800cdbe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cda0:	b168      	cbz	r0, 800cdbe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cda2:	7a03      	ldrb	r3, [r0, #8]
 800cda4:	b15b      	cbz	r3, 800cdbe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cda6:	6830      	ldr	r0, [r6, #0]
 800cda8:	b110      	cbz	r0, 800cdb0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800cdaa:	6803      	ldr	r3, [r0, #0]
 800cdac:	691b      	ldr	r3, [r3, #16]
 800cdae:	4798      	blx	r3
 800cdb0:	6828      	ldr	r0, [r5, #0]
 800cdb2:	6803      	ldr	r3, [r0, #0]
 800cdb4:	68db      	ldr	r3, [r3, #12]
 800cdb6:	4798      	blx	r3
 800cdb8:	2301      	movs	r3, #1
 800cdba:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800cdbe:	3404      	adds	r4, #4
 800cdc0:	4620      	mov	r0, r4
 800cdc2:	f7ff ff45 	bl	800cc50 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800cdc6:	4620      	mov	r0, r4
 800cdc8:	f7ff ffa0 	bl	800cd0c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800cdcc:	6830      	ldr	r0, [r6, #0]
 800cdce:	b110      	cbz	r0, 800cdd6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800cdd0:	6803      	ldr	r3, [r0, #0]
 800cdd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cdd4:	e7dd      	b.n	800cd92 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800cdd6:	bd70      	pop	{r4, r5, r6, pc}
 800cdd8:	20017790 	.word	0x20017790
 800cddc:	2001778c 	.word	0x2001778c

0800cde0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800cde0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cde2:	2300      	movs	r3, #0
 800cde4:	4604      	mov	r4, r0
 800cde6:	460d      	mov	r5, r1
 800cde8:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 800cdec:	4618      	mov	r0, r3
 800cdee:	b29a      	uxth	r2, r3
 800cdf0:	4291      	cmp	r1, r2
 800cdf2:	d911      	bls.n	800ce18 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 800cdf4:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 800cdf8:	18e6      	adds	r6, r4, r3
 800cdfa:	42af      	cmp	r7, r5
 800cdfc:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 800ce00:	d105      	bne.n	800ce0e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 800ce02:	2aff      	cmp	r2, #255	; 0xff
 800ce04:	d002      	beq.n	800ce0c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800ce06:	3201      	adds	r2, #1
 800ce08:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 800ce0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce0e:	2a00      	cmp	r2, #0
 800ce10:	bf08      	it	eq
 800ce12:	2001      	moveq	r0, #1
 800ce14:	3301      	adds	r3, #1
 800ce16:	e7ea      	b.n	800cdee <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 800ce18:	b120      	cbz	r0, 800ce24 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800ce1a:	2920      	cmp	r1, #32
 800ce1c:	d102      	bne.n	800ce24 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800ce1e:	4620      	mov	r0, r4
 800ce20:	f7ff ff74 	bl	800cd0c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800ce24:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 800ce28:	2b1f      	cmp	r3, #31
 800ce2a:	d8ef      	bhi.n	800ce0c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800ce2c:	18e2      	adds	r2, r4, r3
 800ce2e:	2101      	movs	r1, #1
 800ce30:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 800ce34:	185a      	adds	r2, r3, r1
 800ce36:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 800ce3a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800ce3e:	e7e5      	b.n	800ce0c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0800ce40 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ce40:	4603      	mov	r3, r0
 800ce42:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800ce46:	2200      	movs	r2, #0
 800ce48:	801a      	strh	r2, [r3, #0]
 800ce4a:	805a      	strh	r2, [r3, #2]
 800ce4c:	809a      	strh	r2, [r3, #4]
 800ce4e:	80da      	strh	r2, [r3, #6]
 800ce50:	3308      	adds	r3, #8
 800ce52:	428b      	cmp	r3, r1
 800ce54:	d1f8      	bne.n	800ce48 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ce56:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ce5a:	4770      	bx	lr

0800ce5c <_ZN8touchgfx11ApplicationC1Ev>:
 800ce5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce5e:	4606      	mov	r6, r0
 800ce60:	4b1c      	ldr	r3, [pc, #112]	; (800ced4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ce62:	f846 3b04 	str.w	r3, [r6], #4
 800ce66:	4604      	mov	r4, r0
 800ce68:	2500      	movs	r5, #0
 800ce6a:	22a8      	movs	r2, #168	; 0xa8
 800ce6c:	2100      	movs	r1, #0
 800ce6e:	4630      	mov	r0, r6
 800ce70:	f00f fc54 	bl	801c71c <memset>
 800ce74:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 800ce78:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800ce7c:	f7ff ffe0 	bl	800ce40 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ce80:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800ce84:	f7ff ffdc 	bl	800ce40 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ce88:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ce8c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800ce90:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 800ce94:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 800ce98:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 800ce9c:	490e      	ldr	r1, [pc, #56]	; (800ced8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ce9e:	480f      	ldr	r0, [pc, #60]	; (800cedc <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800cea0:	4f0f      	ldr	r7, [pc, #60]	; (800cee0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800cea2:	f00e fcb7 	bl	801b814 <CRC_Lock>
 800cea6:	4b0f      	ldr	r3, [pc, #60]	; (800cee4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800cea8:	b158      	cbz	r0, 800cec2 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800ceaa:	801d      	strh	r5, [r3, #0]
 800ceac:	4a0e      	ldr	r2, [pc, #56]	; (800cee8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800ceae:	2300      	movs	r3, #0
 800ceb0:	6013      	str	r3, [r2, #0]
 800ceb2:	4a0e      	ldr	r2, [pc, #56]	; (800ceec <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800ceb4:	603b      	str	r3, [r7, #0]
 800ceb6:	4630      	mov	r0, r6
 800ceb8:	6013      	str	r3, [r2, #0]
 800ceba:	f7ff ff01 	bl	800ccc0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800cebe:	4620      	mov	r0, r4
 800cec0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cec2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cec6:	2002      	movs	r0, #2
 800cec8:	801a      	strh	r2, [r3, #0]
 800ceca:	6038      	str	r0, [r7, #0]
 800cecc:	f001 fa14 	bl	800e2f8 <_ZN8touchgfx6Screen4drawEv>
 800ced0:	e7ec      	b.n	800ceac <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800ced2:	bf00      	nop
 800ced4:	0801f4a4 	.word	0x0801f4a4
 800ced8:	b5e8b5cd 	.word	0xb5e8b5cd
 800cedc:	f407a5c2 	.word	0xf407a5c2
 800cee0:	2001778c 	.word	0x2001778c
 800cee4:	20000084 	.word	0x20000084
 800cee8:	2001779c 	.word	0x2001779c
 800ceec:	20017790 	.word	0x20017790

0800cef0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800cef0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800cef4:	3b01      	subs	r3, #1
 800cef6:	b29b      	uxth	r3, r3
 800cef8:	428b      	cmp	r3, r1
 800cefa:	b510      	push	{r4, lr}
 800cefc:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800cf00:	d908      	bls.n	800cf14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800cf02:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800cf06:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800cf0a:	681a      	ldr	r2, [r3, #0]
 800cf0c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800cf10:	685a      	ldr	r2, [r3, #4]
 800cf12:	6062      	str	r2, [r4, #4]
 800cf14:	bd10      	pop	{r4, pc}
	...

0800cf18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800cf18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf1c:	4b8f      	ldr	r3, [pc, #572]	; (800d15c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800cf1e:	b08f      	sub	sp, #60	; 0x3c
 800cf20:	ac0a      	add	r4, sp, #40	; 0x28
 800cf22:	e884 0006 	stmia.w	r4, {r1, r2}
 800cf26:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cf2a:	4b8d      	ldr	r3, [pc, #564]	; (800d160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800cf2c:	4683      	mov	fp, r0
 800cf2e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cf32:	4620      	mov	r0, r4
 800cf34:	f7ff fdc9 	bl	800caca <_ZN8touchgfx4Rect10restrictToEss>
 800cf38:	4620      	mov	r0, r4
 800cf3a:	f7fc fcaa 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf3e:	2800      	cmp	r0, #0
 800cf40:	d16a      	bne.n	800d018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cf42:	9403      	str	r4, [sp, #12]
 800cf44:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 800cf48:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800cf4c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800cf50:	35a4      	adds	r5, #164	; 0xa4
 800cf52:	9301      	str	r3, [sp, #4]
 800cf54:	b15c      	cbz	r4, 800cf6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800cf56:	4629      	mov	r1, r5
 800cf58:	9803      	ldr	r0, [sp, #12]
 800cf5a:	f7ff fe07 	bl	800cb6c <_ZNK8touchgfx4Rect8includesERKS0_>
 800cf5e:	3c01      	subs	r4, #1
 800cf60:	b118      	cbz	r0, 800cf6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800cf62:	b2a1      	uxth	r1, r4
 800cf64:	9801      	ldr	r0, [sp, #4]
 800cf66:	f7ff ffc3 	bl	800cef0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cf6a:	3d08      	subs	r5, #8
 800cf6c:	e7f2      	b.n	800cf54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800cf6e:	f8bb 80ec 	ldrh.w	r8, [fp, #236]	; 0xec
 800cf72:	f8cd 8010 	str.w	r8, [sp, #16]
 800cf76:	f108 33ff 	add.w	r3, r8, #4294967295
 800cf7a:	9302      	str	r3, [sp, #8]
 800cf7c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 800cf80:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 800cf84:	9306      	str	r3, [sp, #24]
 800cf86:	445c      	add	r4, fp
 800cf88:	2500      	movs	r5, #0
 800cf8a:	4626      	mov	r6, r4
 800cf8c:	f8cd 8014 	str.w	r8, [sp, #20]
 800cf90:	462f      	mov	r7, r5
 800cf92:	9b05      	ldr	r3, [sp, #20]
 800cf94:	2b00      	cmp	r3, #0
 800cf96:	d073      	beq.n	800d080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800cf98:	9903      	ldr	r1, [sp, #12]
 800cf9a:	4630      	mov	r0, r6
 800cf9c:	f7ff fd73 	bl	800ca86 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cfa0:	b350      	cbz	r0, 800cff8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800cfa2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800cfa6:	f9b6 c000 	ldrsh.w	ip, [r6]
 800cfaa:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 800cfae:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800cfb2:	45e6      	cmp	lr, ip
 800cfb4:	db33      	blt.n	800d01e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800cfb6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800cfba:	88b3      	ldrh	r3, [r6, #4]
 800cfbc:	4472      	add	r2, lr
 800cfbe:	4463      	add	r3, ip
 800cfc0:	b212      	sxth	r2, r2
 800cfc2:	b21b      	sxth	r3, r3
 800cfc4:	429a      	cmp	r2, r3
 800cfc6:	dc2a      	bgt.n	800d01e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800cfc8:	88f3      	ldrh	r3, [r6, #6]
 800cfca:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800cfce:	fa1f f289 	uxth.w	r2, r9
 800cfd2:	4413      	add	r3, r2
 800cfd4:	b29b      	uxth	r3, r3
 800cfd6:	45ca      	cmp	sl, r9
 800cfd8:	fa0f fe83 	sxth.w	lr, r3
 800cfdc:	fa1f fc8a 	uxth.w	ip, sl
 800cfe0:	db0f      	blt.n	800d002 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800cfe2:	eba3 030c 	sub.w	r3, r3, ip
 800cfe6:	1ac9      	subs	r1, r1, r3
 800cfe8:	b209      	sxth	r1, r1
 800cfea:	2900      	cmp	r1, #0
 800cfec:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800cff0:	dd12      	ble.n	800d018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cff2:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 800cff6:	4605      	mov	r5, r0
 800cff8:	9b05      	ldr	r3, [sp, #20]
 800cffa:	3b01      	subs	r3, #1
 800cffc:	9305      	str	r3, [sp, #20]
 800cffe:	3e08      	subs	r6, #8
 800d000:	e7c7      	b.n	800cf92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d002:	4461      	add	r1, ip
 800d004:	b209      	sxth	r1, r1
 800d006:	4571      	cmp	r1, lr
 800d008:	dc38      	bgt.n	800d07c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d00a:	eba2 020c 	sub.w	r2, r2, ip
 800d00e:	b212      	sxth	r2, r2
 800d010:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800d014:	2a00      	cmp	r2, #0
 800d016:	dcee      	bgt.n	800cff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d018:	b00f      	add	sp, #60	; 0x3c
 800d01a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d01e:	45ca      	cmp	sl, r9
 800d020:	db2c      	blt.n	800d07c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d022:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d026:	449a      	add	sl, r3
 800d028:	88f3      	ldrh	r3, [r6, #6]
 800d02a:	4499      	add	r9, r3
 800d02c:	fa0f fa8a 	sxth.w	sl, sl
 800d030:	fa0f f989 	sxth.w	r9, r9
 800d034:	45ca      	cmp	sl, r9
 800d036:	dc21      	bgt.n	800d07c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d038:	88b3      	ldrh	r3, [r6, #4]
 800d03a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d03e:	fa1f f28c 	uxth.w	r2, ip
 800d042:	4413      	add	r3, r2
 800d044:	b29b      	uxth	r3, r3
 800d046:	45e6      	cmp	lr, ip
 800d048:	fa1f f98e 	uxth.w	r9, lr
 800d04c:	fa0f fa83 	sxth.w	sl, r3
 800d050:	db0a      	blt.n	800d068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d052:	eba3 0309 	sub.w	r3, r3, r9
 800d056:	1ac9      	subs	r1, r1, r3
 800d058:	b209      	sxth	r1, r1
 800d05a:	2900      	cmp	r1, #0
 800d05c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800d060:	ddda      	ble.n	800d018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d062:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800d066:	e7c6      	b.n	800cff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d068:	4449      	add	r1, r9
 800d06a:	b209      	sxth	r1, r1
 800d06c:	4551      	cmp	r1, sl
 800d06e:	dc05      	bgt.n	800d07c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d070:	eba2 0209 	sub.w	r2, r2, r9
 800d074:	b212      	sxth	r2, r2
 800d076:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d07a:	e7cb      	b.n	800d014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d07c:	4607      	mov	r7, r0
 800d07e:	e7bb      	b.n	800cff8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d080:	2d00      	cmp	r5, #0
 800d082:	d181      	bne.n	800cf88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d084:	2f00      	cmp	r7, #0
 800d086:	f000 81dd 	beq.w	800d444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d08a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800d08e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 800d092:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800d096:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 800d09a:	b2b9      	uxth	r1, r7
 800d09c:	b2b3      	uxth	r3, r6
 800d09e:	441a      	add	r2, r3
 800d0a0:	448a      	add	sl, r1
 800d0a2:	b292      	uxth	r2, r2
 800d0a4:	fa1f fa8a 	uxth.w	sl, sl
 800d0a8:	fa0f f882 	sxth.w	r8, r2
 800d0ac:	9105      	str	r1, [sp, #20]
 800d0ae:	fa0f f98a 	sxth.w	r9, sl
 800d0b2:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d0b6:	9b04      	ldr	r3, [sp, #16]
 800d0b8:	2b00      	cmp	r3, #0
 800d0ba:	d053      	beq.n	800d164 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d0bc:	9903      	ldr	r1, [sp, #12]
 800d0be:	4620      	mov	r0, r4
 800d0c0:	f7ff fce1 	bl	800ca86 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d0c4:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d0c8:	b1c0      	cbz	r0, 800d0fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d0ca:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d0ce:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d0d2:	4576      	cmp	r6, lr
 800d0d4:	dc23      	bgt.n	800d11e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d0d6:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d0da:	44f4      	add	ip, lr
 800d0dc:	fa0f fc8c 	sxth.w	ip, ip
 800d0e0:	45e0      	cmp	r8, ip
 800d0e2:	db1c      	blt.n	800d11e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d0e4:	428f      	cmp	r7, r1
 800d0e6:	fa1f fc81 	uxth.w	ip, r1
 800d0ea:	88e1      	ldrh	r1, [r4, #6]
 800d0ec:	dc0d      	bgt.n	800d10a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800d0ee:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d0f2:	eba1 010c 	sub.w	r1, r1, ip
 800d0f6:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d0fa:	80e1      	strh	r1, [r4, #6]
 800d0fc:	4628      	mov	r0, r5
 800d0fe:	9904      	ldr	r1, [sp, #16]
 800d100:	3901      	subs	r1, #1
 800d102:	9104      	str	r1, [sp, #16]
 800d104:	3c08      	subs	r4, #8
 800d106:	4605      	mov	r5, r0
 800d108:	e7d3      	b.n	800d0b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19a>
 800d10a:	4461      	add	r1, ip
 800d10c:	b209      	sxth	r1, r1
 800d10e:	4549      	cmp	r1, r9
 800d110:	dcf5      	bgt.n	800d0fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d112:	9905      	ldr	r1, [sp, #20]
 800d114:	eba1 0c0c 	sub.w	ip, r1, ip
 800d118:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d11c:	e7ee      	b.n	800d0fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d11e:	428f      	cmp	r7, r1
 800d120:	dced      	bgt.n	800d0fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d122:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d126:	4461      	add	r1, ip
 800d128:	b209      	sxth	r1, r1
 800d12a:	4589      	cmp	r9, r1
 800d12c:	dbe7      	blt.n	800d0fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d12e:	4576      	cmp	r6, lr
 800d130:	fa1f fc8e 	uxth.w	ip, lr
 800d134:	88a1      	ldrh	r1, [r4, #4]
 800d136:	dc07      	bgt.n	800d148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d138:	eba2 0c0c 	sub.w	ip, r2, ip
 800d13c:	eba1 010c 	sub.w	r1, r1, ip
 800d140:	f8a4 8000 	strh.w	r8, [r4]
 800d144:	80a1      	strh	r1, [r4, #4]
 800d146:	e7d9      	b.n	800d0fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d148:	4461      	add	r1, ip
 800d14a:	b209      	sxth	r1, r1
 800d14c:	4588      	cmp	r8, r1
 800d14e:	dbd6      	blt.n	800d0fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d150:	eba3 0c0c 	sub.w	ip, r3, ip
 800d154:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d158:	e7d0      	b.n	800d0fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d15a:	bf00      	nop
 800d15c:	20017746 	.word	0x20017746
 800d160:	20017744 	.word	0x20017744
 800d164:	2d00      	cmp	r5, #0
 800d166:	f000 816d 	beq.w	800d444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d16a:	9b06      	ldr	r3, [sp, #24]
 800d16c:	445b      	add	r3, fp
 800d16e:	461c      	mov	r4, r3
 800d170:	9b02      	ldr	r3, [sp, #8]
 800d172:	3301      	adds	r3, #1
 800d174:	f000 8166 	beq.w	800d444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d178:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 800d17c:	4629      	mov	r1, r5
 800d17e:	9803      	ldr	r0, [sp, #12]
 800d180:	f7ff fcf4 	bl	800cb6c <_ZNK8touchgfx4Rect8includesERKS0_>
 800d184:	b120      	cbz	r0, 800d190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d186:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d18a:	9801      	ldr	r0, [sp, #4]
 800d18c:	f7ff feb0 	bl	800cef0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d190:	9903      	ldr	r1, [sp, #12]
 800d192:	4628      	mov	r0, r5
 800d194:	f7ff fc77 	bl	800ca86 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d198:	2800      	cmp	r0, #0
 800d19a:	f000 809c 	beq.w	800d2d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d19e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 800d1a2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800d1a6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800d1aa:	9309      	str	r3, [sp, #36]	; 0x24
 800d1ac:	fa1f f189 	uxth.w	r1, r9
 800d1b0:	eb01 0c03 	add.w	ip, r1, r3
 800d1b4:	fa1f fa8c 	uxth.w	sl, ip
 800d1b8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 800d1bc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 800d1c0:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 800d1c4:	b283      	uxth	r3, r0
 800d1c6:	eb03 050c 	add.w	r5, r3, ip
 800d1ca:	b2ad      	uxth	r5, r5
 800d1cc:	9505      	str	r5, [sp, #20]
 800d1ce:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d1d2:	9504      	str	r5, [sp, #16]
 800d1d4:	4548      	cmp	r0, r9
 800d1d6:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 800d1da:	f340 8099 	ble.w	800d310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d1de:	1a5b      	subs	r3, r3, r1
 800d1e0:	b29b      	uxth	r3, r3
 800d1e2:	4596      	cmp	lr, r2
 800d1e4:	fa0f f08a 	sxth.w	r0, sl
 800d1e8:	b21e      	sxth	r6, r3
 800d1ea:	dd2e      	ble.n	800d24a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d1ec:	9f02      	ldr	r7, [sp, #8]
 800d1ee:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 800d1f2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d1f6:	9f04      	ldr	r7, [sp, #16]
 800d1f8:	1a3f      	subs	r7, r7, r0
 800d1fa:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 800d1fe:	fa1f fe8e 	uxth.w	lr, lr
 800d202:	b292      	uxth	r2, r2
 800d204:	ebae 0102 	sub.w	r1, lr, r2
 800d208:	44a6      	add	lr, r4
 800d20a:	4402      	add	r2, r0
 800d20c:	b289      	uxth	r1, r1
 800d20e:	fa0f fe8e 	sxth.w	lr, lr
 800d212:	b212      	sxth	r2, r2
 800d214:	b20d      	sxth	r5, r1
 800d216:	ebae 0202 	sub.w	r2, lr, r2
 800d21a:	436f      	muls	r7, r5
 800d21c:	4372      	muls	r2, r6
 800d21e:	4297      	cmp	r7, r2
 800d220:	db09      	blt.n	800d236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d222:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 800d226:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 800d22a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800d22e:	449c      	add	ip, r3
 800d230:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800d234:	e686      	b.n	800cf44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d236:	4421      	add	r1, r4
 800d238:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800d23c:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 800d240:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d244:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800d248:	e67c      	b.n	800cf44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d24a:	9f04      	ldr	r7, [sp, #16]
 800d24c:	42b8      	cmp	r0, r7
 800d24e:	da27      	bge.n	800d2a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d250:	9902      	ldr	r1, [sp, #8]
 800d252:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 800d256:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d25a:	eb05 010e 	add.w	r1, r5, lr
 800d25e:	fa1f f881 	uxth.w	r8, r1
 800d262:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 800d266:	4411      	add	r1, r2
 800d268:	eba1 0108 	sub.w	r1, r1, r8
 800d26c:	b289      	uxth	r1, r1
 800d26e:	fa0f f988 	sxth.w	r9, r8
 800d272:	eba2 020e 	sub.w	r2, r2, lr
 800d276:	fa0f f881 	sxth.w	r8, r1
 800d27a:	1a3f      	subs	r7, r7, r0
 800d27c:	4372      	muls	r2, r6
 800d27e:	fb08 f707 	mul.w	r7, r8, r7
 800d282:	42ba      	cmp	r2, r7
 800d284:	dc06      	bgt.n	800d294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d286:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 800d28a:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 800d28e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 800d292:	e7ca      	b.n	800d22a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d294:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 800d298:	4429      	add	r1, r5
 800d29a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d29e:	e651      	b.n	800cf44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d2a0:	9805      	ldr	r0, [sp, #20]
 800d2a2:	ebaa 0000 	sub.w	r0, sl, r0
 800d2a6:	b280      	uxth	r0, r0
 800d2a8:	2d06      	cmp	r5, #6
 800d2aa:	fa0f fe80 	sxth.w	lr, r0
 800d2ae:	d817      	bhi.n	800d2e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d2b0:	9b04      	ldr	r3, [sp, #16]
 800d2b2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800d2b6:	1c6b      	adds	r3, r5, #1
 800d2b8:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 800d2bc:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 800d2c0:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 800d2c4:	9b01      	ldr	r3, [sp, #4]
 800d2c6:	9801      	ldr	r0, [sp, #4]
 800d2c8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d2cc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d2d0:	805a      	strh	r2, [r3, #2]
 800d2d2:	809e      	strh	r6, [r3, #4]
 800d2d4:	80d9      	strh	r1, [r3, #6]
 800d2d6:	9b02      	ldr	r3, [sp, #8]
 800d2d8:	3b01      	subs	r3, #1
 800d2da:	9302      	str	r3, [sp, #8]
 800d2dc:	3c08      	subs	r4, #8
 800d2de:	e747      	b.n	800d170 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d2e0:	9a02      	ldr	r2, [sp, #8]
 800d2e2:	45b6      	cmp	lr, r6
 800d2e4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d2e8:	db0d      	blt.n	800d306 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d2ea:	449c      	add	ip, r3
 800d2ec:	fa1f fc8c 	uxth.w	ip, ip
 800d2f0:	445a      	add	r2, fp
 800d2f2:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800d2f6:	448c      	add	ip, r1
 800d2f8:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800d2fc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 800d300:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 800d304:	e61e      	b.n	800cf44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d306:	445a      	add	r2, fp
 800d308:	4484      	add	ip, r0
 800d30a:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 800d30e:	e78f      	b.n	800d230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d310:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 800d314:	fa1f f18e 	uxth.w	r1, lr
 800d318:	eb01 0806 	add.w	r8, r1, r6
 800d31c:	b293      	uxth	r3, r2
 800d31e:	fa1f f888 	uxth.w	r8, r8
 800d322:	9306      	str	r3, [sp, #24]
 800d324:	fa0f f388 	sxth.w	r3, r8
 800d328:	9307      	str	r3, [sp, #28]
 800d32a:	9f06      	ldr	r7, [sp, #24]
 800d32c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 800d330:	443b      	add	r3, r7
 800d332:	b29b      	uxth	r3, r3
 800d334:	4596      	cmp	lr, r2
 800d336:	9308      	str	r3, [sp, #32]
 800d338:	da24      	bge.n	800d384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d33a:	9905      	ldr	r1, [sp, #20]
 800d33c:	eba3 0308 	sub.w	r3, r3, r8
 800d340:	ebaa 0401 	sub.w	r4, sl, r1
 800d344:	b2a4      	uxth	r4, r4
 800d346:	b29b      	uxth	r3, r3
 800d348:	b225      	sxth	r5, r4
 800d34a:	b219      	sxth	r1, r3
 800d34c:	eba2 020e 	sub.w	r2, r2, lr
 800d350:	eba9 0000 	sub.w	r0, r9, r0
 800d354:	436a      	muls	r2, r5
 800d356:	4348      	muls	r0, r1
 800d358:	4282      	cmp	r2, r0
 800d35a:	9a02      	ldr	r2, [sp, #8]
 800d35c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d360:	445a      	add	r2, fp
 800d362:	dc06      	bgt.n	800d372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d364:	9b07      	ldr	r3, [sp, #28]
 800d366:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 800d36a:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 800d36e:	44a4      	add	ip, r4
 800d370:	e75e      	b.n	800d230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d372:	9904      	ldr	r1, [sp, #16]
 800d374:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 800d378:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 800d37c:	4433      	add	r3, r6
 800d37e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d382:	e5df      	b.n	800cf44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d384:	9f06      	ldr	r7, [sp, #24]
 800d386:	9b04      	ldr	r3, [sp, #16]
 800d388:	1bc9      	subs	r1, r1, r7
 800d38a:	fa0f f78a 	sxth.w	r7, sl
 800d38e:	b289      	uxth	r1, r1
 800d390:	429f      	cmp	r7, r3
 800d392:	fa0f fe81 	sxth.w	lr, r1
 800d396:	dd23      	ble.n	800d3e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800d398:	9a05      	ldr	r2, [sp, #20]
 800d39a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d39e:	9d07      	ldr	r5, [sp, #28]
 800d3a0:	ebaa 0202 	sub.w	r2, sl, r2
 800d3a4:	b292      	uxth	r2, r2
 800d3a6:	eba5 0a03 	sub.w	sl, r5, r3
 800d3aa:	b214      	sxth	r4, r2
 800d3ac:	eba9 0000 	sub.w	r0, r9, r0
 800d3b0:	9b02      	ldr	r3, [sp, #8]
 800d3b2:	fb0e f000 	mul.w	r0, lr, r0
 800d3b6:	fb04 fa0a 	mul.w	sl, r4, sl
 800d3ba:	00db      	lsls	r3, r3, #3
 800d3bc:	4550      	cmp	r0, sl
 800d3be:	445b      	add	r3, fp
 800d3c0:	db03      	blt.n	800d3ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800d3c2:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 800d3c6:	4494      	add	ip, r2
 800d3c8:	e732      	b.n	800d230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d3ca:	9a04      	ldr	r2, [sp, #16]
 800d3cc:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 800d3d0:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 800d3d4:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 800d3d8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800d3dc:	4431      	add	r1, r6
 800d3de:	e75c      	b.n	800d29a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d3e0:	9b08      	ldr	r3, [sp, #32]
 800d3e2:	eba3 0308 	sub.w	r3, r3, r8
 800d3e6:	b29b      	uxth	r3, r3
 800d3e8:	2d06      	cmp	r5, #6
 800d3ea:	b218      	sxth	r0, r3
 800d3ec:	d813      	bhi.n	800d416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800d3ee:	9b07      	ldr	r3, [sp, #28]
 800d3f0:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 800d3f4:	1c6b      	adds	r3, r5, #1
 800d3f6:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 800d3fa:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 800d3fe:	9b01      	ldr	r3, [sp, #4]
 800d400:	9901      	ldr	r1, [sp, #4]
 800d402:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d406:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d40a:	805a      	strh	r2, [r3, #2]
 800d40c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d40e:	809a      	strh	r2, [r3, #4]
 800d410:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d414:	e75f      	b.n	800d2d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d416:	9c02      	ldr	r4, [sp, #8]
 800d418:	4570      	cmp	r0, lr
 800d41a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d41e:	db0d      	blt.n	800d43c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800d420:	4431      	add	r1, r6
 800d422:	9b06      	ldr	r3, [sp, #24]
 800d424:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800d428:	b289      	uxth	r1, r1
 800d42a:	445c      	add	r4, fp
 800d42c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d430:	4419      	add	r1, r3
 800d432:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 800d436:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 800d43a:	e583      	b.n	800cf44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d43c:	445c      	add	r4, fp
 800d43e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 800d442:	e79b      	b.n	800d37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d444:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 800d448:	2e07      	cmp	r6, #7
 800d44a:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d44e:	d812      	bhi.n	800d476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x55e>
 800d450:	1c75      	adds	r5, r6, #1
 800d452:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 800d456:	9d01      	ldr	r5, [sp, #4]
 800d458:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800d45c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800d460:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 800d464:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 800d468:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d46c:	442c      	add	r4, r5
 800d46e:	8061      	strh	r1, [r4, #2]
 800d470:	80a2      	strh	r2, [r4, #4]
 800d472:	80e3      	strh	r3, [r4, #6]
 800d474:	e5d0      	b.n	800d018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d476:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800d47a:	3e01      	subs	r6, #1
 800d47c:	445c      	add	r4, fp
 800d47e:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d482:	f04f 37ff 	mov.w	r7, #4294967295
 800d486:	2500      	movs	r5, #0
 800d488:	9305      	str	r3, [sp, #20]
 800d48a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800d48e:	9302      	str	r3, [sp, #8]
 800d490:	1e72      	subs	r2, r6, #1
 800d492:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 800d496:	9304      	str	r3, [sp, #16]
 800d498:	4691      	mov	r9, r2
 800d49a:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 800d49e:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d4a2:	bf14      	ite	ne
 800d4a4:	9905      	ldrne	r1, [sp, #20]
 800d4a6:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d4aa:	6818      	ldr	r0, [r3, #0]
 800d4ac:	9207      	str	r2, [sp, #28]
 800d4ae:	bf18      	it	ne
 800d4b0:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d4b4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800d4b8:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d4bc:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d4c0:	9306      	str	r3, [sp, #24]
 800d4c2:	fb18 f801 	smulbb	r8, r8, r1
 800d4c6:	6859      	ldr	r1, [r3, #4]
 800d4c8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d4cc:	4671      	mov	r1, lr
 800d4ce:	a80c      	add	r0, sp, #48	; 0x30
 800d4d0:	f7ff fb72 	bl	800cbb8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d4d4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800d4d8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800d4dc:	9b04      	ldr	r3, [sp, #16]
 800d4de:	9a02      	ldr	r2, [sp, #8]
 800d4e0:	fb10 f001 	smulbb	r0, r0, r1
 800d4e4:	fb02 8803 	mla	r8, r2, r3, r8
 800d4e8:	eba0 0108 	sub.w	r1, r0, r8
 800d4ec:	f04f 0c08 	mov.w	ip, #8
 800d4f0:	fb90 f0fc 	sdiv	r0, r0, ip
 800d4f4:	4288      	cmp	r0, r1
 800d4f6:	dc20      	bgt.n	800d53a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 800d4f8:	4551      	cmp	r1, sl
 800d4fa:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d4fe:	da03      	bge.n	800d508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f0>
 800d500:	b1d9      	cbz	r1, 800d53a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 800d502:	468a      	mov	sl, r1
 800d504:	464f      	mov	r7, r9
 800d506:	4635      	mov	r5, r6
 800d508:	f109 39ff 	add.w	r9, r9, #4294967295
 800d50c:	f119 0f02 	cmn.w	r9, #2
 800d510:	d1c5      	bne.n	800d49e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800d512:	4616      	mov	r6, r2
 800d514:	3201      	adds	r2, #1
 800d516:	f1a4 0408 	sub.w	r4, r4, #8
 800d51a:	d1b6      	bne.n	800d48a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x572>
 800d51c:	9b01      	ldr	r3, [sp, #4]
 800d51e:	b2ac      	uxth	r4, r5
 800d520:	00ed      	lsls	r5, r5, #3
 800d522:	1958      	adds	r0, r3, r5
 800d524:	1c7b      	adds	r3, r7, #1
 800d526:	d10b      	bne.n	800d540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x628>
 800d528:	4601      	mov	r1, r0
 800d52a:	9803      	ldr	r0, [sp, #12]
 800d52c:	f7ff fb44 	bl	800cbb8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d530:	4621      	mov	r1, r4
 800d532:	9801      	ldr	r0, [sp, #4]
 800d534:	f7ff fcdc 	bl	800cef0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d538:	e504      	b.n	800cf44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d53a:	464f      	mov	r7, r9
 800d53c:	4635      	mov	r5, r6
 800d53e:	e7ed      	b.n	800d51c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800d540:	9b01      	ldr	r3, [sp, #4]
 800d542:	00ff      	lsls	r7, r7, #3
 800d544:	19d9      	adds	r1, r3, r7
 800d546:	f7ff fb37 	bl	800cbb8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d54a:	9b03      	ldr	r3, [sp, #12]
 800d54c:	cb03      	ldmia	r3!, {r0, r1}
 800d54e:	445f      	add	r7, fp
 800d550:	445d      	add	r5, fp
 800d552:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 800d556:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 800d55a:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d55e:	9b03      	ldr	r3, [sp, #12]
 800d560:	6869      	ldr	r1, [r5, #4]
 800d562:	c303      	stmia	r3!, {r0, r1}
 800d564:	e7e4      	b.n	800d530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800d566:	bf00      	nop

0800d568 <_ZN8touchgfx11Application10invalidateEv>:
 800d568:	4b09      	ldr	r3, [pc, #36]	; (800d590 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800d56a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d56e:	4b09      	ldr	r3, [pc, #36]	; (800d594 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800d570:	b082      	sub	sp, #8
 800d572:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d576:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d57a:	2100      	movs	r1, #0
 800d57c:	9100      	str	r1, [sp, #0]
 800d57e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d582:	ab02      	add	r3, sp, #8
 800d584:	e913 0006 	ldmdb	r3, {r1, r2}
 800d588:	b002      	add	sp, #8
 800d58a:	f7ff bcc5 	b.w	800cf18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d58e:	bf00      	nop
 800d590:	20017744 	.word	0x20017744
 800d594:	20017746 	.word	0x20017746

0800d598 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d59c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 800d5a0:	b09b      	sub	sp, #108	; 0x6c
 800d5a2:	4604      	mov	r4, r0
 800d5a4:	4630      	mov	r0, r6
 800d5a6:	f7fc f974 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d5aa:	4605      	mov	r5, r0
 800d5ac:	b940      	cbnz	r0, 800d5c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800d5ae:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d5b2:	4620      	mov	r0, r4
 800d5b4:	f7ff fcb0 	bl	800cf18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d5b8:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d5bc:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800d5c0:	4bc9      	ldr	r3, [pc, #804]	; (800d8e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800d5c2:	681b      	ldr	r3, [r3, #0]
 800d5c4:	2b00      	cmp	r3, #0
 800d5c6:	d03e      	beq.n	800d646 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800d5c8:	4dc8      	ldr	r5, [pc, #800]	; (800d8ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800d5ca:	4628      	mov	r0, r5
 800d5cc:	f7fc f961 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d5d0:	4606      	mov	r6, r0
 800d5d2:	2800      	cmp	r0, #0
 800d5d4:	d137      	bne.n	800d646 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800d5d6:	4628      	mov	r0, r5
 800d5d8:	f7ff f99a 	bl	800c910 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d5dc:	6829      	ldr	r1, [r5, #0]
 800d5de:	686a      	ldr	r2, [r5, #4]
 800d5e0:	4620      	mov	r0, r4
 800d5e2:	f7ff fc99 	bl	800cf18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d5e6:	802e      	strh	r6, [r5, #0]
 800d5e8:	806e      	strh	r6, [r5, #2]
 800d5ea:	80ae      	strh	r6, [r5, #4]
 800d5ec:	80ee      	strh	r6, [r5, #6]
 800d5ee:	ae09      	add	r6, sp, #36	; 0x24
 800d5f0:	4630      	mov	r0, r6
 800d5f2:	f7ff fc25 	bl	800ce40 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d5f6:	4abe      	ldr	r2, [pc, #760]	; (800d8f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800d5f8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 800d5fc:	8815      	ldrh	r5, [r2, #0]
 800d5fe:	9202      	str	r2, [sp, #8]
 800d600:	462b      	mov	r3, r5
 800d602:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800d606:	429f      	cmp	r7, r3
 800d608:	d924      	bls.n	800d654 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 800d60a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 800d60e:	2907      	cmp	r1, #7
 800d610:	d816      	bhi.n	800d640 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 800d612:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800d616:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 800d61a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 800d61e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800d622:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800d626:	1c4a      	adds	r2, r1, #1
 800d628:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 800d62c:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 800d630:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 800d634:	f8a2 9002 	strh.w	r9, [r2, #2]
 800d638:	f8a2 e004 	strh.w	lr, [r2, #4]
 800d63c:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d640:	3301      	adds	r3, #1
 800d642:	b29b      	uxth	r3, r3
 800d644:	e7df      	b.n	800d606 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 800d646:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800d64a:	2b00      	cmp	r3, #0
 800d64c:	d1cf      	bne.n	800d5ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 800d64e:	b01b      	add	sp, #108	; 0x6c
 800d650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d654:	462f      	mov	r7, r5
 800d656:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 800d65a:	42bb      	cmp	r3, r7
 800d65c:	d90b      	bls.n	800d676 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 800d65e:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800d662:	4620      	mov	r0, r4
 800d664:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 800d668:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 800d66c:	3701      	adds	r7, #1
 800d66e:	f7ff fc53 	bl	800cf18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d672:	b2bf      	uxth	r7, r7
 800d674:	e7ef      	b.n	800d656 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 800d676:	4a9f      	ldr	r2, [pc, #636]	; (800d8f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800d678:	6813      	ldr	r3, [r2, #0]
 800d67a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d67e:	2b01      	cmp	r3, #1
 800d680:	4690      	mov	r8, r2
 800d682:	f040 80e6 	bne.w	800d852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 800d686:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d68a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 800d68e:	4629      	mov	r1, r5
 800d690:	33ae      	adds	r3, #174	; 0xae
 800d692:	2500      	movs	r5, #0
 800d694:	428f      	cmp	r7, r1
 800d696:	f103 0308 	add.w	r3, r3, #8
 800d69a:	dd0a      	ble.n	800d6b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 800d69c:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d6a0:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800d6a4:	4402      	add	r2, r0
 800d6a6:	b212      	sxth	r2, r2
 800d6a8:	4295      	cmp	r5, r2
 800d6aa:	bfb8      	it	lt
 800d6ac:	4615      	movlt	r5, r2
 800d6ae:	3101      	adds	r1, #1
 800d6b0:	e7f0      	b.n	800d694 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 800d6b2:	4b91      	ldr	r3, [pc, #580]	; (800d8f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800d6b4:	f8df b23c 	ldr.w	fp, [pc, #572]	; 800d8f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 800d6b8:	881b      	ldrh	r3, [r3, #0]
 800d6ba:	2b0f      	cmp	r3, #15
 800d6bc:	bf88      	it	hi
 800d6be:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 800d6c2:	f04f 0300 	mov.w	r3, #0
 800d6c6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d6ca:	bf98      	it	ls
 800d6cc:	f04f 0a01 	movls.w	sl, #1
 800d6d0:	46d8      	mov	r8, fp
 800d6d2:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 800d6d6:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800d6da:	4438      	add	r0, r7
 800d6dc:	b207      	sxth	r7, r0
 800d6de:	f8db 0000 	ldr.w	r0, [fp]
 800d6e2:	42bd      	cmp	r5, r7
 800d6e4:	6803      	ldr	r3, [r0, #0]
 800d6e6:	f340 8084 	ble.w	800d7f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800d6ea:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800d6ee:	4798      	blx	r3
 800d6f0:	eb07 030a 	add.w	r3, r7, sl
 800d6f4:	4298      	cmp	r0, r3
 800d6f6:	da07      	bge.n	800d708 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 800d6f8:	4285      	cmp	r5, r0
 800d6fa:	dd05      	ble.n	800d708 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 800d6fc:	4287      	cmp	r7, r0
 800d6fe:	dd6d      	ble.n	800d7dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800d700:	2f00      	cmp	r7, #0
 800d702:	dd6b      	ble.n	800d7dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800d704:	4628      	mov	r0, r5
 800d706:	e004      	b.n	800d712 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 800d708:	4287      	cmp	r7, r0
 800d70a:	dcfb      	bgt.n	800d704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 800d70c:	42a8      	cmp	r0, r5
 800d70e:	bfa8      	it	ge
 800d710:	4628      	movge	r0, r5
 800d712:	4b7a      	ldr	r3, [pc, #488]	; (800d8fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 800d714:	f8ad 7016 	strh.w	r7, [sp, #22]
 800d718:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d71c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d720:	9b02      	ldr	r3, [sp, #8]
 800d722:	1bc0      	subs	r0, r0, r7
 800d724:	2200      	movs	r2, #0
 800d726:	881f      	ldrh	r7, [r3, #0]
 800d728:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d72c:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d730:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800d734:	42bb      	cmp	r3, r7
 800d736:	d9cc      	bls.n	800d6d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800d738:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800d73c:	ab07      	add	r3, sp, #28
 800d73e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800d742:	6851      	ldr	r1, [r2, #4]
 800d744:	c303      	stmia	r3!, {r0, r1}
 800d746:	a905      	add	r1, sp, #20
 800d748:	a807      	add	r0, sp, #28
 800d74a:	f7ff f99c 	bl	800ca86 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d74e:	2800      	cmp	r0, #0
 800d750:	d04c      	beq.n	800d7ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800d752:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800d756:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800d75a:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 800d75e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800d762:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d766:	9303      	str	r3, [sp, #12]
 800d768:	4686      	mov	lr, r0
 800d76a:	4290      	cmp	r0, r2
 800d76c:	4448      	add	r0, r9
 800d76e:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 800d772:	bfb8      	it	lt
 800d774:	4696      	movlt	lr, r2
 800d776:	444a      	add	r2, r9
 800d778:	4299      	cmp	r1, r3
 800d77a:	b280      	uxth	r0, r0
 800d77c:	b292      	uxth	r2, r2
 800d77e:	468c      	mov	ip, r1
 800d780:	fa0f f982 	sxth.w	r9, r2
 800d784:	bfb8      	it	lt
 800d786:	469c      	movlt	ip, r3
 800d788:	b203      	sxth	r3, r0
 800d78a:	454b      	cmp	r3, r9
 800d78c:	bfb8      	it	lt
 800d78e:	4602      	movlt	r2, r0
 800d790:	eba2 020e 	sub.w	r2, r2, lr
 800d794:	f8ad 2020 	strh.w	r2, [sp, #32]
 800d798:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800d79c:	9b03      	ldr	r3, [sp, #12]
 800d79e:	f8ad e01c 	strh.w	lr, [sp, #28]
 800d7a2:	4411      	add	r1, r2
 800d7a4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d7a8:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d7ac:	4413      	add	r3, r2
 800d7ae:	b289      	uxth	r1, r1
 800d7b0:	b29b      	uxth	r3, r3
 800d7b2:	b208      	sxth	r0, r1
 800d7b4:	b21a      	sxth	r2, r3
 800d7b6:	4290      	cmp	r0, r2
 800d7b8:	bfb8      	it	lt
 800d7ba:	460b      	movlt	r3, r1
 800d7bc:	eba3 030c 	sub.w	r3, r3, ip
 800d7c0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d7c4:	a807      	add	r0, sp, #28
 800d7c6:	f7fc f864 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d7ca:	b920      	cbnz	r0, 800d7d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800d7cc:	6823      	ldr	r3, [r4, #0]
 800d7ce:	a907      	add	r1, sp, #28
 800d7d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d7d2:	4620      	mov	r0, r4
 800d7d4:	4798      	blx	r3
 800d7d6:	3701      	adds	r7, #1
 800d7d8:	b2bf      	uxth	r7, r7
 800d7da:	e7a9      	b.n	800d730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800d7dc:	f8d8 0000 	ldr.w	r0, [r8]
 800d7e0:	6803      	ldr	r3, [r0, #0]
 800d7e2:	2101      	movs	r1, #1
 800d7e4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800d7e8:	4798      	blx	r3
 800d7ea:	e772      	b.n	800d6d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800d7ec:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800d7f0:	e7e8      	b.n	800d7c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800d7f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d7f4:	4798      	blx	r3
 800d7f6:	4b42      	ldr	r3, [pc, #264]	; (800d900 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 800d7f8:	781b      	ldrb	r3, [r3, #0]
 800d7fa:	2b00      	cmp	r3, #0
 800d7fc:	f43f af27 	beq.w	800d64e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 800d800:	2300      	movs	r3, #0
 800d802:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 800d806:	9b02      	ldr	r3, [sp, #8]
 800d808:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 800d80c:	881b      	ldrh	r3, [r3, #0]
 800d80e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800d812:	429d      	cmp	r5, r3
 800d814:	f67f af1b 	bls.w	800d64e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 800d818:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 800d81c:	2907      	cmp	r1, #7
 800d81e:	d815      	bhi.n	800d84c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 800d820:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800d824:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 800d828:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 800d82c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 800d830:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 800d834:	1c4a      	adds	r2, r1, #1
 800d836:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 800d83a:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800d83e:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 800d842:	f8a2 e002 	strh.w	lr, [r2, #2]
 800d846:	f8a2 c004 	strh.w	ip, [r2, #4]
 800d84a:	80d7      	strh	r7, [r2, #6]
 800d84c:	3301      	adds	r3, #1
 800d84e:	b29b      	uxth	r3, r3
 800d850:	e7df      	b.n	800d812 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 800d852:	2b02      	cmp	r3, #2
 800d854:	f040 8136 	bne.w	800dac4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 800d858:	4b2a      	ldr	r3, [pc, #168]	; (800d904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 800d85a:	781b      	ldrb	r3, [r3, #0]
 800d85c:	2b01      	cmp	r3, #1
 800d85e:	f104 09ac 	add.w	r9, r4, #172	; 0xac
 800d862:	f000 809c 	beq.w	800d99e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800d866:	9b02      	ldr	r3, [sp, #8]
 800d868:	f8b4 20ec 	ldrh.w	r2, [r4, #236]	; 0xec
 800d86c:	f8b3 b000 	ldrh.w	fp, [r3]
 800d870:	f10b 0b01 	add.w	fp, fp, #1
 800d874:	fa1f fb8b 	uxth.w	fp, fp
 800d878:	2a00      	cmp	r2, #0
 800d87a:	d0bc      	beq.n	800d7f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d87c:	f8b4 50ae 	ldrh.w	r5, [r4, #174]	; 0xae
 800d880:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 800d884:	441d      	add	r5, r3
 800d886:	b22d      	sxth	r5, r5
 800d888:	4659      	mov	r1, fp
 800d88a:	f04f 0800 	mov.w	r8, #0
 800d88e:	b28b      	uxth	r3, r1
 800d890:	429a      	cmp	r2, r3
 800d892:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800d896:	f240 80c1 	bls.w	800da1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 800d89a:	4427      	add	r7, r4
 800d89c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 800d8a0:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 800d8a4:	f9be c0ae 	ldrsh.w	ip, [lr, #174]	; 0xae
 800d8a8:	4563      	cmp	r3, ip
 800d8aa:	4608      	mov	r0, r1
 800d8ac:	f340 80a3 	ble.w	800d9f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 800d8b0:	f8be 50b2 	ldrh.w	r5, [lr, #178]	; 0xb2
 800d8b4:	4465      	add	r5, ip
 800d8b6:	b22d      	sxth	r5, r5
 800d8b8:	429d      	cmp	r5, r3
 800d8ba:	bfa8      	it	ge
 800d8bc:	461d      	movge	r5, r3
 800d8be:	3101      	adds	r1, #1
 800d8c0:	4680      	mov	r8, r0
 800d8c2:	e7e4      	b.n	800d88e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 800d8c4:	d10b      	bne.n	800d8de <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 800d8c6:	f9b5 c0b2 	ldrsh.w	ip, [r5, #178]	; 0xb2
 800d8ca:	f9ba 10b2 	ldrsh.w	r1, [sl, #178]	; 0xb2
 800d8ce:	458c      	cmp	ip, r1
 800d8d0:	bfb4      	ite	lt
 800d8d2:	469c      	movlt	ip, r3
 800d8d4:	46bc      	movge	ip, r7
 800d8d6:	4572      	cmp	r2, lr
 800d8d8:	bfb8      	it	lt
 800d8da:	4672      	movlt	r2, lr
 800d8dc:	e088      	b.n	800d9f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 800d8de:	428a      	cmp	r2, r1
 800d8e0:	bfb8      	it	lt
 800d8e2:	460a      	movlt	r2, r1
 800d8e4:	46bc      	mov	ip, r7
 800d8e6:	e083      	b.n	800d9f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 800d8e8:	20017788 	.word	0x20017788
 800d8ec:	20017794 	.word	0x20017794
 800d8f0:	20000084 	.word	0x20000084
 800d8f4:	20017750 	.word	0x20017750
 800d8f8:	20017746 	.word	0x20017746
 800d8fc:	20017744 	.word	0x20017744
 800d900:	2001774e 	.word	0x2001774e
 800d904:	20017748 	.word	0x20017748
 800d908:	1961      	adds	r1, r4, r5
 800d90a:	ab07      	add	r3, sp, #28
 800d90c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800d910:	6849      	ldr	r1, [r1, #4]
 800d912:	c303      	stmia	r3!, {r0, r1}
 800d914:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d918:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d91c:	2b13      	cmp	r3, #19
 800d91e:	bfd8      	it	le
 800d920:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d924:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d928:	440b      	add	r3, r1
 800d92a:	1a9b      	subs	r3, r3, r2
 800d92c:	a807      	add	r0, sp, #28
 800d92e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d932:	f7ff f807 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d936:	a807      	add	r0, sp, #28
 800d938:	f7fb ffab 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d93c:	bb78      	cbnz	r0, 800d99e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800d93e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d942:	f8d8 0000 	ldr.w	r0, [r8]
 800d946:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d94a:	f8d0 e000 	ldr.w	lr, [r0]
 800d94e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d952:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d956:	f1bc 0f14 	cmp.w	ip, #20
 800d95a:	bfa8      	it	ge
 800d95c:	f04f 0c14 	movge.w	ip, #20
 800d960:	fa1f fc8c 	uxth.w	ip, ip
 800d964:	f8cd c000 	str.w	ip, [sp]
 800d968:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800d96c:	47d0      	blx	sl
 800d96e:	4682      	mov	sl, r0
 800d970:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d974:	a807      	add	r0, sp, #28
 800d976:	f7fe ffcb 	bl	800c910 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d97a:	6823      	ldr	r3, [r4, #0]
 800d97c:	4425      	add	r5, r4
 800d97e:	4620      	mov	r0, r4
 800d980:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d982:	a907      	add	r1, sp, #28
 800d984:	4798      	blx	r3
 800d986:	f8b5 00b0 	ldrh.w	r0, [r5, #176]	; 0xb0
 800d98a:	eba0 000a 	sub.w	r0, r0, sl
 800d98e:	b200      	sxth	r0, r0
 800d990:	f8a5 00b0 	strh.w	r0, [r5, #176]	; 0xb0
 800d994:	b918      	cbnz	r0, 800d99e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800d996:	b2b9      	uxth	r1, r7
 800d998:	4648      	mov	r0, r9
 800d99a:	f7ff faa9 	bl	800cef0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d99e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 800d9a2:	f1bb 0f00 	cmp.w	fp, #0
 800d9a6:	f43f af26 	beq.w	800d7f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d9aa:	9b02      	ldr	r3, [sp, #8]
 800d9ac:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 800d9b0:	881b      	ldrh	r3, [r3, #0]
 800d9b2:	3301      	adds	r3, #1
 800d9b4:	b29b      	uxth	r3, r3
 800d9b6:	2700      	movs	r7, #0
 800d9b8:	b299      	uxth	r1, r3
 800d9ba:	458b      	cmp	fp, r1
 800d9bc:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 800d9c0:	d9a2      	bls.n	800d908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 800d9c2:	4425      	add	r5, r4
 800d9c4:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d9c8:	f8b5 10b0 	ldrh.w	r1, [r5, #176]	; 0xb0
 800d9cc:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d9d0:	f9ba e0ac 	ldrsh.w	lr, [sl, #172]	; 0xac
 800d9d4:	4408      	add	r0, r1
 800d9d6:	f8ba 10b0 	ldrh.w	r1, [sl, #176]	; 0xb0
 800d9da:	4471      	add	r1, lr
 800d9dc:	b200      	sxth	r0, r0
 800d9de:	b209      	sxth	r1, r1
 800d9e0:	4288      	cmp	r0, r1
 800d9e2:	469c      	mov	ip, r3
 800d9e4:	f6bf af6e 	bge.w	800d8c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 800d9e8:	4586      	cmp	lr, r0
 800d9ea:	4672      	mov	r2, lr
 800d9ec:	bfb8      	it	lt
 800d9ee:	4602      	movlt	r2, r0
 800d9f0:	3301      	adds	r3, #1
 800d9f2:	4667      	mov	r7, ip
 800d9f4:	e7e0      	b.n	800d9b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 800d9f6:	d10c      	bne.n	800da12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 800d9f8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 800d9fc:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 800da00:	4287      	cmp	r7, r0
 800da02:	bfb4      	ite	lt
 800da04:	4608      	movlt	r0, r1
 800da06:	4640      	movge	r0, r8
 800da08:	f8be 70b2 	ldrh.w	r7, [lr, #178]	; 0xb2
 800da0c:	443b      	add	r3, r7
 800da0e:	b21b      	sxth	r3, r3
 800da10:	e752      	b.n	800d8b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800da12:	4565      	cmp	r5, ip
 800da14:	bfa8      	it	ge
 800da16:	4665      	movge	r5, ip
 800da18:	4640      	mov	r0, r8
 800da1a:	e750      	b.n	800d8be <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 800da1c:	eb09 0007 	add.w	r0, r9, r7
 800da20:	4427      	add	r7, r4
 800da22:	9203      	str	r2, [sp, #12]
 800da24:	f9b7 a0b2 	ldrsh.w	sl, [r7, #178]	; 0xb2
 800da28:	f1ba 0f13 	cmp.w	sl, #19
 800da2c:	bfde      	ittt	le
 800da2e:	f8b7 50ae 	ldrhle.w	r5, [r7, #174]	; 0xae
 800da32:	4455      	addle	r5, sl
 800da34:	b22d      	sxthle	r5, r5
 800da36:	f7fb ff2c 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800da3a:	9a03      	ldr	r2, [sp, #12]
 800da3c:	2800      	cmp	r0, #0
 800da3e:	f47f af1b 	bne.w	800d878 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 800da42:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 800da46:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800da4a:	482a      	ldr	r0, [pc, #168]	; (800daf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 800da4c:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 800da50:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 800da54:	6800      	ldr	r0, [r0, #0]
 800da56:	f8ad 101c 	strh.w	r1, [sp, #28]
 800da5a:	1aad      	subs	r5, r5, r2
 800da5c:	2d14      	cmp	r5, #20
 800da5e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800da62:	f8ad 3020 	strh.w	r3, [sp, #32]
 800da66:	bfa8      	it	ge
 800da68:	2514      	movge	r5, #20
 800da6a:	f8d0 c000 	ldr.w	ip, [r0]
 800da6e:	b2ad      	uxth	r5, r5
 800da70:	fa1f fa8a 	uxth.w	sl, sl
 800da74:	4555      	cmp	r5, sl
 800da76:	bf94      	ite	ls
 800da78:	9500      	strls	r5, [sp, #0]
 800da7a:	f8cd a000 	strhi.w	sl, [sp]
 800da7e:	b292      	uxth	r2, r2
 800da80:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 800da84:	b29b      	uxth	r3, r3
 800da86:	b289      	uxth	r1, r1
 800da88:	47a8      	blx	r5
 800da8a:	6823      	ldr	r3, [r4, #0]
 800da8c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800da90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800da92:	a907      	add	r1, sp, #28
 800da94:	4620      	mov	r0, r4
 800da96:	4798      	blx	r3
 800da98:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800da9c:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 800daa0:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 800daa4:	1a5b      	subs	r3, r3, r1
 800daa6:	440a      	add	r2, r1
 800daa8:	b21b      	sxth	r3, r3
 800daaa:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 800daae:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 800dab2:	2b00      	cmp	r3, #0
 800dab4:	f47f aed7 	bne.w	800d866 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 800dab8:	fa1f f188 	uxth.w	r1, r8
 800dabc:	4648      	mov	r0, r9
 800dabe:	f7ff fa17 	bl	800cef0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dac2:	e6d0      	b.n	800d866 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 800dac4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800dac8:	42ab      	cmp	r3, r5
 800daca:	f67f ae94 	bls.w	800d7f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dace:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800dad2:	ab07      	add	r3, sp, #28
 800dad4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800dad8:	6851      	ldr	r1, [r2, #4]
 800dada:	c303      	stmia	r3!, {r0, r1}
 800dadc:	a807      	add	r0, sp, #28
 800dade:	f7fb fed8 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dae2:	b920      	cbnz	r0, 800daee <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 800dae4:	6823      	ldr	r3, [r4, #0]
 800dae6:	a907      	add	r1, sp, #28
 800dae8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800daea:	4620      	mov	r0, r4
 800daec:	4798      	blx	r3
 800daee:	3501      	adds	r5, #1
 800daf0:	b2ad      	uxth	r5, r5
 800daf2:	e7e7      	b.n	800dac4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 800daf4:	20017750 	.word	0x20017750

0800daf8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800daf8:	4b03      	ldr	r3, [pc, #12]	; (800db08 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800dafa:	2200      	movs	r2, #0
 800dafc:	801a      	strh	r2, [r3, #0]
 800dafe:	805a      	strh	r2, [r3, #2]
 800db00:	809a      	strh	r2, [r3, #4]
 800db02:	80da      	strh	r2, [r3, #6]
 800db04:	4770      	bx	lr
 800db06:	bf00      	nop
 800db08:	20017794 	.word	0x20017794

0800db0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800db0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db10:	4606      	mov	r6, r0
 800db12:	b09d      	sub	sp, #116	; 0x74
 800db14:	a803      	add	r0, sp, #12
 800db16:	4614      	mov	r4, r2
 800db18:	468a      	mov	sl, r1
 800db1a:	461d      	mov	r5, r3
 800db1c:	f000 fe18 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800db20:	6833      	ldr	r3, [r6, #0]
 800db22:	4630      	mov	r0, r6
 800db24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800db26:	4798      	blx	r3
 800db28:	6833      	ldr	r3, [r6, #0]
 800db2a:	4607      	mov	r7, r0
 800db2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800db2e:	4630      	mov	r0, r6
 800db30:	4798      	blx	r3
 800db32:	462a      	mov	r2, r5
 800db34:	9000      	str	r0, [sp, #0]
 800db36:	4621      	mov	r1, r4
 800db38:	463b      	mov	r3, r7
 800db3a:	a803      	add	r0, sp, #12
 800db3c:	f000 fe63 	bl	800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800db40:	2500      	movs	r5, #0
 800db42:	462c      	mov	r4, r5
 800db44:	46a9      	mov	r9, r5
 800db46:	46a8      	mov	r8, r5
 800db48:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800db4c:	2300      	movs	r3, #0
 800db4e:	9302      	str	r3, [sp, #8]
 800db50:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800db54:	429c      	cmp	r4, r3
 800db56:	d002      	beq.n	800db5e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800db58:	455c      	cmp	r4, fp
 800db5a:	bf18      	it	ne
 800db5c:	4625      	movne	r5, r4
 800db5e:	ab02      	add	r3, sp, #8
 800db60:	4632      	mov	r2, r6
 800db62:	4651      	mov	r1, sl
 800db64:	a803      	add	r0, sp, #12
 800db66:	f001 f951 	bl	800ee0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800db6a:	4604      	mov	r4, r0
 800db6c:	b108      	cbz	r0, 800db72 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800db6e:	280a      	cmp	r0, #10
 800db70:	d10a      	bne.n	800db88 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800db72:	45c1      	cmp	r9, r8
 800db74:	bf38      	it	cc
 800db76:	46c1      	movcc	r9, r8
 800db78:	f04f 0800 	mov.w	r8, #0
 800db7c:	2c00      	cmp	r4, #0
 800db7e:	d1e5      	bne.n	800db4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800db80:	4648      	mov	r0, r9
 800db82:	b01d      	add	sp, #116	; 0x74
 800db84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db88:	9a02      	ldr	r2, [sp, #8]
 800db8a:	2a00      	cmp	r2, #0
 800db8c:	d0de      	beq.n	800db4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800db8e:	7b57      	ldrb	r7, [r2, #13]
 800db90:	6833      	ldr	r3, [r6, #0]
 800db92:	8894      	ldrh	r4, [r2, #4]
 800db94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db96:	007f      	lsls	r7, r7, #1
 800db98:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800db9c:	7a97      	ldrb	r7, [r2, #10]
 800db9e:	4629      	mov	r1, r5
 800dba0:	4307      	orrs	r7, r0
 800dba2:	4630      	mov	r0, r6
 800dba4:	4798      	blx	r3
 800dba6:	4438      	add	r0, r7
 800dba8:	4480      	add	r8, r0
 800dbaa:	fa1f f888 	uxth.w	r8, r8
 800dbae:	e7e5      	b.n	800db7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800dbb0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800dbb0:	b508      	push	{r3, lr}
 800dbb2:	6803      	ldr	r3, [r0, #0]
 800dbb4:	68db      	ldr	r3, [r3, #12]
 800dbb6:	4798      	blx	r3
 800dbb8:	b128      	cbz	r0, 800dbc6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800dbba:	7b43      	ldrb	r3, [r0, #13]
 800dbbc:	7a80      	ldrb	r0, [r0, #10]
 800dbbe:	005b      	lsls	r3, r3, #1
 800dbc0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dbc4:	4318      	orrs	r0, r3
 800dbc6:	bd08      	pop	{r3, pc}

0800dbc8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dbc8:	b40e      	push	{r1, r2, r3}
 800dbca:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dbcc:	b09e      	sub	sp, #120	; 0x78
 800dbce:	ab23      	add	r3, sp, #140	; 0x8c
 800dbd0:	4605      	mov	r5, r0
 800dbd2:	f853 4b04 	ldr.w	r4, [r3], #4
 800dbd6:	9303      	str	r3, [sp, #12]
 800dbd8:	a805      	add	r0, sp, #20
 800dbda:	f000 fdb9 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800dbde:	682b      	ldr	r3, [r5, #0]
 800dbe0:	4628      	mov	r0, r5
 800dbe2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dbe4:	4798      	blx	r3
 800dbe6:	682b      	ldr	r3, [r5, #0]
 800dbe8:	4606      	mov	r6, r0
 800dbea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dbec:	4628      	mov	r0, r5
 800dbee:	4798      	blx	r3
 800dbf0:	4633      	mov	r3, r6
 800dbf2:	ae1e      	add	r6, sp, #120	; 0x78
 800dbf4:	4621      	mov	r1, r4
 800dbf6:	9000      	str	r0, [sp, #0]
 800dbf8:	9a03      	ldr	r2, [sp, #12]
 800dbfa:	2400      	movs	r4, #0
 800dbfc:	a805      	add	r0, sp, #20
 800dbfe:	f000 fe02 	bl	800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dc02:	f846 4d68 	str.w	r4, [r6, #-104]!
 800dc06:	462a      	mov	r2, r5
 800dc08:	4633      	mov	r3, r6
 800dc0a:	4621      	mov	r1, r4
 800dc0c:	a805      	add	r0, sp, #20
 800dc0e:	f001 f8fd 	bl	800ee0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dc12:	b1f0      	cbz	r0, 800dc52 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800dc14:	280a      	cmp	r0, #10
 800dc16:	d018      	beq.n	800dc4a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dc18:	9f04      	ldr	r7, [sp, #16]
 800dc1a:	b1b7      	cbz	r7, 800dc4a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dc1c:	7b78      	ldrb	r0, [r7, #13]
 800dc1e:	7a3b      	ldrb	r3, [r7, #8]
 800dc20:	88ea      	ldrh	r2, [r5, #6]
 800dc22:	00c1      	lsls	r1, r0, #3
 800dc24:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800dc28:	4319      	orrs	r1, r3
 800dc2a:	0643      	lsls	r3, r0, #25
 800dc2c:	bf44      	itt	mi
 800dc2e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800dc32:	b219      	sxthmi	r1, r3
 800dc34:	0100      	lsls	r0, r0, #4
 800dc36:	79fb      	ldrb	r3, [r7, #7]
 800dc38:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800dc3c:	4303      	orrs	r3, r0
 800dc3e:	4413      	add	r3, r2
 800dc40:	1a5b      	subs	r3, r3, r1
 800dc42:	b21b      	sxth	r3, r3
 800dc44:	429c      	cmp	r4, r3
 800dc46:	bfb8      	it	lt
 800dc48:	461c      	movlt	r4, r3
 800dc4a:	4633      	mov	r3, r6
 800dc4c:	462a      	mov	r2, r5
 800dc4e:	2100      	movs	r1, #0
 800dc50:	e7dc      	b.n	800dc0c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800dc52:	b2a0      	uxth	r0, r4
 800dc54:	b01e      	add	sp, #120	; 0x78
 800dc56:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dc5a:	b003      	add	sp, #12
 800dc5c:	4770      	bx	lr

0800dc5e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800dc5e:	7a43      	ldrb	r3, [r0, #9]
 800dc60:	8880      	ldrh	r0, [r0, #4]
 800dc62:	4418      	add	r0, r3
 800dc64:	b280      	uxth	r0, r0
 800dc66:	4770      	bx	lr

0800dc68 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800dc68:	6803      	ldr	r3, [r0, #0]
 800dc6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dc6c:	4718      	bx	r3

0800dc6e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800dc6e:	b40e      	push	{r1, r2, r3}
 800dc70:	b570      	push	{r4, r5, r6, lr}
 800dc72:	b09d      	sub	sp, #116	; 0x74
 800dc74:	ab21      	add	r3, sp, #132	; 0x84
 800dc76:	4604      	mov	r4, r0
 800dc78:	f853 5b04 	ldr.w	r5, [r3], #4
 800dc7c:	9302      	str	r3, [sp, #8]
 800dc7e:	a803      	add	r0, sp, #12
 800dc80:	f000 fd66 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800dc84:	6823      	ldr	r3, [r4, #0]
 800dc86:	4620      	mov	r0, r4
 800dc88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dc8a:	4798      	blx	r3
 800dc8c:	6823      	ldr	r3, [r4, #0]
 800dc8e:	4606      	mov	r6, r0
 800dc90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dc92:	4620      	mov	r0, r4
 800dc94:	4798      	blx	r3
 800dc96:	4633      	mov	r3, r6
 800dc98:	9000      	str	r0, [sp, #0]
 800dc9a:	9a02      	ldr	r2, [sp, #8]
 800dc9c:	4629      	mov	r1, r5
 800dc9e:	a803      	add	r0, sp, #12
 800dca0:	f000 fdb1 	bl	800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dca4:	a803      	add	r0, sp, #12
 800dca6:	f001 f97f 	bl	800efa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dcaa:	2401      	movs	r4, #1
 800dcac:	b2a3      	uxth	r3, r4
 800dcae:	b140      	cbz	r0, 800dcc2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800dcb0:	280a      	cmp	r0, #10
 800dcb2:	bf08      	it	eq
 800dcb4:	3301      	addeq	r3, #1
 800dcb6:	a803      	add	r0, sp, #12
 800dcb8:	bf08      	it	eq
 800dcba:	b21c      	sxtheq	r4, r3
 800dcbc:	f001 f974 	bl	800efa8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dcc0:	e7f4      	b.n	800dcac <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800dcc2:	4618      	mov	r0, r3
 800dcc4:	b01d      	add	sp, #116	; 0x74
 800dcc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dcca:	b003      	add	sp, #12
 800dccc:	4770      	bx	lr

0800dcce <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800dcce:	b40e      	push	{r1, r2, r3}
 800dcd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dcd2:	b09e      	sub	sp, #120	; 0x78
 800dcd4:	ab23      	add	r3, sp, #140	; 0x8c
 800dcd6:	4604      	mov	r4, r0
 800dcd8:	f853 5b04 	ldr.w	r5, [r3], #4
 800dcdc:	9303      	str	r3, [sp, #12]
 800dcde:	a805      	add	r0, sp, #20
 800dce0:	f000 fd36 	bl	800e750 <_ZN8touchgfx12TextProviderC1Ev>
 800dce4:	6823      	ldr	r3, [r4, #0]
 800dce6:	4620      	mov	r0, r4
 800dce8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dcea:	4798      	blx	r3
 800dcec:	6823      	ldr	r3, [r4, #0]
 800dcee:	4606      	mov	r6, r0
 800dcf0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dcf2:	4620      	mov	r0, r4
 800dcf4:	4798      	blx	r3
 800dcf6:	4633      	mov	r3, r6
 800dcf8:	4629      	mov	r1, r5
 800dcfa:	9000      	str	r0, [sp, #0]
 800dcfc:	9a03      	ldr	r2, [sp, #12]
 800dcfe:	a805      	add	r0, sp, #20
 800dd00:	ad1e      	add	r5, sp, #120	; 0x78
 800dd02:	f000 fd80 	bl	800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dd06:	2100      	movs	r1, #0
 800dd08:	f845 1d68 	str.w	r1, [r5, #-104]!
 800dd0c:	4622      	mov	r2, r4
 800dd0e:	462b      	mov	r3, r5
 800dd10:	a805      	add	r0, sp, #20
 800dd12:	f001 f87b 	bl	800ee0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dd16:	f647 76ff 	movw	r6, #32767	; 0x7fff
 800dd1a:	b1d8      	cbz	r0, 800dd54 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800dd1c:	280a      	cmp	r0, #10
 800dd1e:	d012      	beq.n	800dd46 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800dd20:	9804      	ldr	r0, [sp, #16]
 800dd22:	b180      	cbz	r0, 800dd46 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800dd24:	7b47      	ldrb	r7, [r0, #13]
 800dd26:	88e2      	ldrh	r2, [r4, #6]
 800dd28:	00fb      	lsls	r3, r7, #3
 800dd2a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800dd2e:	7a03      	ldrb	r3, [r0, #8]
 800dd30:	430b      	orrs	r3, r1
 800dd32:	0679      	lsls	r1, r7, #25
 800dd34:	bf44      	itt	mi
 800dd36:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dd3a:	b21b      	sxthmi	r3, r3
 800dd3c:	1ad3      	subs	r3, r2, r3
 800dd3e:	b21b      	sxth	r3, r3
 800dd40:	429e      	cmp	r6, r3
 800dd42:	bfa8      	it	ge
 800dd44:	461e      	movge	r6, r3
 800dd46:	462b      	mov	r3, r5
 800dd48:	4622      	mov	r2, r4
 800dd4a:	2100      	movs	r1, #0
 800dd4c:	a805      	add	r0, sp, #20
 800dd4e:	f001 f85d 	bl	800ee0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dd52:	e7e2      	b.n	800dd1a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800dd54:	4630      	mov	r0, r6
 800dd56:	b01e      	add	sp, #120	; 0x78
 800dd58:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dd5c:	b003      	add	sp, #12
 800dd5e:	4770      	bx	lr

0800dd60 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800dd60:	b513      	push	{r0, r1, r4, lr}
 800dd62:	6803      	ldr	r3, [r0, #0]
 800dd64:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dd68:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dd6c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dd70:	2400      	movs	r4, #0
 800dd72:	9400      	str	r4, [sp, #0]
 800dd74:	f8ad 2006 	strh.w	r2, [sp, #6]
 800dd78:	691b      	ldr	r3, [r3, #16]
 800dd7a:	4669      	mov	r1, sp
 800dd7c:	4798      	blx	r3
 800dd7e:	b002      	add	sp, #8
 800dd80:	bd10      	pop	{r4, pc}

0800dd82 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800dd82:	b538      	push	{r3, r4, r5, lr}
 800dd84:	680b      	ldr	r3, [r1, #0]
 800dd86:	460c      	mov	r4, r1
 800dd88:	68db      	ldr	r3, [r3, #12]
 800dd8a:	4605      	mov	r5, r0
 800dd8c:	4798      	blx	r3
 800dd8e:	6823      	ldr	r3, [r4, #0]
 800dd90:	4620      	mov	r0, r4
 800dd92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd94:	4629      	mov	r1, r5
 800dd96:	4798      	blx	r3
 800dd98:	4628      	mov	r0, r5
 800dd9a:	bd38      	pop	{r3, r4, r5, pc}

0800dd9c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800dd9c:	b410      	push	{r4}
 800dd9e:	880a      	ldrh	r2, [r1, #0]
 800dda0:	8884      	ldrh	r4, [r0, #4]
 800dda2:	4422      	add	r2, r4
 800dda4:	800a      	strh	r2, [r1, #0]
 800dda6:	88c4      	ldrh	r4, [r0, #6]
 800dda8:	884a      	ldrh	r2, [r1, #2]
 800ddaa:	4422      	add	r2, r4
 800ddac:	804a      	strh	r2, [r1, #2]
 800ddae:	6940      	ldr	r0, [r0, #20]
 800ddb0:	b120      	cbz	r0, 800ddbc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800ddb2:	6803      	ldr	r3, [r0, #0]
 800ddb4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ddb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ddba:	4718      	bx	r3
 800ddbc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ddc0:	4770      	bx	lr

0800ddc2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800ddc2:	b570      	push	{r4, r5, r6, lr}
 800ddc4:	8882      	ldrh	r2, [r0, #4]
 800ddc6:	880b      	ldrh	r3, [r1, #0]
 800ddc8:	4413      	add	r3, r2
 800ddca:	800b      	strh	r3, [r1, #0]
 800ddcc:	88c2      	ldrh	r2, [r0, #6]
 800ddce:	884b      	ldrh	r3, [r1, #2]
 800ddd0:	460c      	mov	r4, r1
 800ddd2:	4413      	add	r3, r2
 800ddd4:	804b      	strh	r3, [r1, #2]
 800ddd6:	4605      	mov	r5, r0
 800ddd8:	1d01      	adds	r1, r0, #4
 800ddda:	4620      	mov	r0, r4
 800dddc:	f7fb fd16 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800dde0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800dde4:	2b00      	cmp	r3, #0
 800dde6:	dd0b      	ble.n	800de00 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800dde8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ddec:	2b00      	cmp	r3, #0
 800ddee:	dd07      	ble.n	800de00 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ddf0:	6968      	ldr	r0, [r5, #20]
 800ddf2:	b128      	cbz	r0, 800de00 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ddf4:	6803      	ldr	r3, [r0, #0]
 800ddf6:	4621      	mov	r1, r4
 800ddf8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ddfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ddfe:	4718      	bx	r3
 800de00:	bd70      	pop	{r4, r5, r6, pc}
	...

0800de04 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800de04:	b570      	push	{r4, r5, r6, lr}
 800de06:	8882      	ldrh	r2, [r0, #4]
 800de08:	880b      	ldrh	r3, [r1, #0]
 800de0a:	4413      	add	r3, r2
 800de0c:	800b      	strh	r3, [r1, #0]
 800de0e:	88c2      	ldrh	r2, [r0, #6]
 800de10:	884b      	ldrh	r3, [r1, #2]
 800de12:	460c      	mov	r4, r1
 800de14:	4413      	add	r3, r2
 800de16:	804b      	strh	r3, [r1, #2]
 800de18:	4605      	mov	r5, r0
 800de1a:	1d01      	adds	r1, r0, #4
 800de1c:	4620      	mov	r0, r4
 800de1e:	f7fb fcf5 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800de22:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800de26:	2b00      	cmp	r3, #0
 800de28:	dd18      	ble.n	800de5c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800de2a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800de2e:	2b00      	cmp	r3, #0
 800de30:	dd14      	ble.n	800de5c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800de32:	6968      	ldr	r0, [r5, #20]
 800de34:	b128      	cbz	r0, 800de42 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800de36:	6803      	ldr	r3, [r0, #0]
 800de38:	4621      	mov	r1, r4
 800de3a:	691b      	ldr	r3, [r3, #16]
 800de3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de40:	4718      	bx	r3
 800de42:	4b07      	ldr	r3, [pc, #28]	; (800de60 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800de44:	681b      	ldr	r3, [r3, #0]
 800de46:	3304      	adds	r3, #4
 800de48:	429d      	cmp	r5, r3
 800de4a:	d107      	bne.n	800de5c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800de4c:	f7fe fefa 	bl	800cc44 <_ZN8touchgfx11Application11getInstanceEv>
 800de50:	6821      	ldr	r1, [r4, #0]
 800de52:	6862      	ldr	r2, [r4, #4]
 800de54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de58:	f7ff b85e 	b.w	800cf18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800de5c:	bd70      	pop	{r4, r5, r6, pc}
 800de5e:	bf00      	nop
 800de60:	2001778c 	.word	0x2001778c

0800de64 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800de64:	b570      	push	{r4, r5, r6, lr}
 800de66:	4604      	mov	r4, r0
 800de68:	4616      	mov	r6, r2
 800de6a:	460d      	mov	r5, r1
 800de6c:	b901      	cbnz	r1, 800de70 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800de6e:	b192      	cbz	r2, 800de96 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800de70:	6823      	ldr	r3, [r4, #0]
 800de72:	4620      	mov	r0, r4
 800de74:	699b      	ldr	r3, [r3, #24]
 800de76:	4798      	blx	r3
 800de78:	88e2      	ldrh	r2, [r4, #6]
 800de7a:	88a1      	ldrh	r1, [r4, #4]
 800de7c:	4432      	add	r2, r6
 800de7e:	4429      	add	r1, r5
 800de80:	4620      	mov	r0, r4
 800de82:	b212      	sxth	r2, r2
 800de84:	b209      	sxth	r1, r1
 800de86:	f7f4 fb76 	bl	8002576 <_ZN8touchgfx8Drawable5setXYEss>
 800de8a:	6823      	ldr	r3, [r4, #0]
 800de8c:	4620      	mov	r0, r4
 800de8e:	699b      	ldr	r3, [r3, #24]
 800de90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de94:	4718      	bx	r3
 800de96:	bd70      	pop	{r4, r5, r6, pc}

0800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800de98:	b510      	push	{r4, lr}
 800de9a:	4604      	mov	r4, r0
 800de9c:	4608      	mov	r0, r1
 800de9e:	2300      	movs	r3, #0
 800dea0:	8023      	strh	r3, [r4, #0]
 800dea2:	8063      	strh	r3, [r4, #2]
 800dea4:	6803      	ldr	r3, [r0, #0]
 800dea6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800deaa:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800deae:	80a1      	strh	r1, [r4, #4]
 800deb0:	80e2      	strh	r2, [r4, #6]
 800deb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800deb4:	4621      	mov	r1, r4
 800deb6:	4798      	blx	r3
 800deb8:	4620      	mov	r0, r4
 800deba:	bd10      	pop	{r4, pc}

0800debc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800debc:	b530      	push	{r4, r5, lr}
 800debe:	8083      	strh	r3, [r0, #4]
 800dec0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800dec4:	80c3      	strh	r3, [r0, #6]
 800dec6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800deca:	7203      	strb	r3, [r0, #8]
 800decc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ded0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800ded4:	7243      	strb	r3, [r0, #9]
 800ded6:	7a83      	ldrb	r3, [r0, #10]
 800ded8:	6141      	str	r1, [r0, #20]
 800deda:	f365 0306 	bfi	r3, r5, #0, #7
 800dede:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800dee2:	8302      	strh	r2, [r0, #24]
 800dee4:	f365 13c7 	bfi	r3, r5, #7, #1
 800dee8:	7283      	strb	r3, [r0, #10]
 800deea:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800deee:	72c3      	strb	r3, [r0, #11]
 800def0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 800def4:	7303      	strb	r3, [r0, #12]
 800def6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800defa:	81c3      	strh	r3, [r0, #14]
 800defc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800df00:	8203      	strh	r3, [r0, #16]
 800df02:	4b01      	ldr	r3, [pc, #4]	; (800df08 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800df04:	6003      	str	r3, [r0, #0]
 800df06:	bd30      	pop	{r4, r5, pc}
 800df08:	0801f558 	.word	0x0801f558

0800df0c <_ZNK8touchgfx9ConstFont4findEt>:
 800df0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df0e:	6944      	ldr	r4, [r0, #20]
 800df10:	b3bc      	cbz	r4, 800df82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df12:	88a3      	ldrh	r3, [r4, #4]
 800df14:	8b02      	ldrh	r2, [r0, #24]
 800df16:	1acb      	subs	r3, r1, r3
 800df18:	f102 32ff 	add.w	r2, r2, #4294967295
 800df1c:	d431      	bmi.n	800df82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df1e:	4293      	cmp	r3, r2
 800df20:	dd0c      	ble.n	800df3c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800df22:	230e      	movs	r3, #14
 800df24:	fb03 4302 	mla	r3, r3, r2, r4
 800df28:	889b      	ldrh	r3, [r3, #4]
 800df2a:	1a5b      	subs	r3, r3, r1
 800df2c:	1ad3      	subs	r3, r2, r3
 800df2e:	429a      	cmp	r2, r3
 800df30:	db27      	blt.n	800df82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df32:	2b00      	cmp	r3, #0
 800df34:	bfbc      	itt	lt
 800df36:	2302      	movlt	r3, #2
 800df38:	fb92 f3f3 	sdivlt	r3, r2, r3
 800df3c:	2500      	movs	r5, #0
 800df3e:	260e      	movs	r6, #14
 800df40:	4295      	cmp	r5, r2
 800df42:	dc1e      	bgt.n	800df82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df44:	fb06 4003 	mla	r0, r6, r3, r4
 800df48:	8887      	ldrh	r7, [r0, #4]
 800df4a:	42b9      	cmp	r1, r7
 800df4c:	d01a      	beq.n	800df84 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800df4e:	d20d      	bcs.n	800df6c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800df50:	1e5a      	subs	r2, r3, #1
 800df52:	4295      	cmp	r5, r2
 800df54:	dc15      	bgt.n	800df82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df56:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800df5a:	1a5b      	subs	r3, r3, r1
 800df5c:	1ad3      	subs	r3, r2, r3
 800df5e:	429a      	cmp	r2, r3
 800df60:	db0f      	blt.n	800df82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df62:	429d      	cmp	r5, r3
 800df64:	ddec      	ble.n	800df40 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800df66:	1953      	adds	r3, r2, r5
 800df68:	105b      	asrs	r3, r3, #1
 800df6a:	e7e9      	b.n	800df40 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800df6c:	1c5d      	adds	r5, r3, #1
 800df6e:	42aa      	cmp	r2, r5
 800df70:	db07      	blt.n	800df82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df72:	8a43      	ldrh	r3, [r0, #18]
 800df74:	1acb      	subs	r3, r1, r3
 800df76:	442b      	add	r3, r5
 800df78:	429d      	cmp	r5, r3
 800df7a:	dc02      	bgt.n	800df82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df7c:	429a      	cmp	r2, r3
 800df7e:	dadf      	bge.n	800df40 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800df80:	e7f1      	b.n	800df66 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800df82:	2000      	movs	r0, #0
 800df84:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800df86 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800df86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df88:	4604      	mov	r4, r0
 800df8a:	4617      	mov	r7, r2
 800df8c:	461e      	mov	r6, r3
 800df8e:	b911      	cbnz	r1, 800df96 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800df90:	2500      	movs	r5, #0
 800df92:	4628      	mov	r0, r5
 800df94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800df96:	290a      	cmp	r1, #10
 800df98:	d0fa      	beq.n	800df90 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800df9a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800df9e:	4291      	cmp	r1, r2
 800dfa0:	d0f6      	beq.n	800df90 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dfa2:	f242 020b 	movw	r2, #8203	; 0x200b
 800dfa6:	4291      	cmp	r1, r2
 800dfa8:	d0f2      	beq.n	800df90 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dfaa:	f7ff ffaf 	bl	800df0c <_ZNK8touchgfx9ConstFont4findEt>
 800dfae:	4605      	mov	r5, r0
 800dfb0:	b950      	cbnz	r0, 800dfc8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800dfb2:	6823      	ldr	r3, [r4, #0]
 800dfb4:	4620      	mov	r0, r4
 800dfb6:	691b      	ldr	r3, [r3, #16]
 800dfb8:	4798      	blx	r3
 800dfba:	4601      	mov	r1, r0
 800dfbc:	4620      	mov	r0, r4
 800dfbe:	f7ff ffa5 	bl	800df0c <_ZNK8touchgfx9ConstFont4findEt>
 800dfc2:	4605      	mov	r5, r0
 800dfc4:	2800      	cmp	r0, #0
 800dfc6:	d0e3      	beq.n	800df90 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dfc8:	6823      	ldr	r3, [r4, #0]
 800dfca:	4629      	mov	r1, r5
 800dfcc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800dfce:	4620      	mov	r0, r4
 800dfd0:	4798      	blx	r3
 800dfd2:	6038      	str	r0, [r7, #0]
 800dfd4:	6823      	ldr	r3, [r4, #0]
 800dfd6:	4620      	mov	r0, r4
 800dfd8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dfda:	4798      	blx	r3
 800dfdc:	7030      	strb	r0, [r6, #0]
 800dfde:	e7d8      	b.n	800df92 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800dfe0 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800dfe0:	2002      	movs	r0, #2
 800dfe2:	4770      	bx	lr

0800dfe4 <_ZN8touchgfx6ScreenD1Ev>:
 800dfe4:	4770      	bx	lr

0800dfe6 <_ZN8touchgfx12GestureEventD1Ev>:
 800dfe6:	4770      	bx	lr

0800dfe8 <_ZN8touchgfx12GestureEventD0Ev>:
 800dfe8:	b510      	push	{r4, lr}
 800dfea:	210c      	movs	r1, #12
 800dfec:	4604      	mov	r4, r0
 800dfee:	f00d fd39 	bl	801ba64 <_ZdlPvj>
 800dff2:	4620      	mov	r0, r4
 800dff4:	bd10      	pop	{r4, pc}

0800dff6 <_ZN8touchgfx6ScreenD0Ev>:
 800dff6:	b510      	push	{r4, lr}
 800dff8:	213c      	movs	r1, #60	; 0x3c
 800dffa:	4604      	mov	r4, r0
 800dffc:	f00d fd32 	bl	801ba64 <_ZdlPvj>
 800e000:	4620      	mov	r0, r4
 800e002:	bd10      	pop	{r4, pc}

0800e004 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e004:	b530      	push	{r4, r5, lr}
 800e006:	460d      	mov	r5, r1
 800e008:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e00a:	b087      	sub	sp, #28
 800e00c:	4604      	mov	r4, r0
 800e00e:	b301      	cbz	r1, 800e052 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e010:	a801      	add	r0, sp, #4
 800e012:	f7ff ff41 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e016:	892a      	ldrh	r2, [r5, #8]
 800e018:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e01c:	7928      	ldrb	r0, [r5, #4]
 800e01e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e022:	f88d 0010 	strb.w	r0, [sp, #16]
 800e026:	1ad2      	subs	r2, r2, r3
 800e028:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e02a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e02c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e030:	441a      	add	r2, r3
 800e032:	896b      	ldrh	r3, [r5, #10]
 800e034:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e038:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e03c:	1b5b      	subs	r3, r3, r5
 800e03e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800e040:	442b      	add	r3, r5
 800e042:	4d05      	ldr	r5, [pc, #20]	; (800e058 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e044:	9503      	str	r5, [sp, #12]
 800e046:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e04a:	6803      	ldr	r3, [r0, #0]
 800e04c:	a903      	add	r1, sp, #12
 800e04e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e050:	4798      	blx	r3
 800e052:	b007      	add	sp, #28
 800e054:	bd30      	pop	{r4, r5, pc}
 800e056:	bf00      	nop
 800e058:	0801f5b8 	.word	0x0801f5b8

0800e05c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e05c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e060:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800e062:	b08a      	sub	sp, #40	; 0x28
 800e064:	4604      	mov	r4, r0
 800e066:	460d      	mov	r5, r1
 800e068:	b113      	cbz	r3, 800e070 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800e06a:	790b      	ldrb	r3, [r1, #4]
 800e06c:	2b00      	cmp	r3, #0
 800e06e:	d044      	beq.n	800e0fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e070:	f104 0804 	add.w	r8, r4, #4
 800e074:	4641      	mov	r1, r8
 800e076:	a803      	add	r0, sp, #12
 800e078:	f7ff ff0e 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e07c:	792b      	ldrb	r3, [r5, #4]
 800e07e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800e082:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800e086:	b983      	cbnz	r3, 800e0aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800e088:	892a      	ldrh	r2, [r5, #8]
 800e08a:	88e9      	ldrh	r1, [r5, #6]
 800e08c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800e090:	1b92      	subs	r2, r2, r6
 800e092:	1bc9      	subs	r1, r1, r7
 800e094:	9301      	str	r3, [sp, #4]
 800e096:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800e09a:	9300      	str	r3, [sp, #0]
 800e09c:	b212      	sxth	r2, r2
 800e09e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e0a2:	b209      	sxth	r1, r1
 800e0a4:	4640      	mov	r0, r8
 800e0a6:	f7fb facd 	bl	8009644 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800e0aa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e0ac:	b329      	cbz	r1, 800e0fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e0ae:	a805      	add	r0, sp, #20
 800e0b0:	f7ff fef2 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e0b4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e0b8:	792b      	ldrb	r3, [r5, #4]
 800e0ba:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e0bc:	f88d 3020 	strb.w	r3, [sp, #32]
 800e0c0:	1abf      	subs	r7, r7, r2
 800e0c2:	88ea      	ldrh	r2, [r5, #6]
 800e0c4:	4417      	add	r7, r2
 800e0c6:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800e0c8:	4417      	add	r7, r2
 800e0ca:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e0ce:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e0d2:	1ab6      	subs	r6, r6, r2
 800e0d4:	892a      	ldrh	r2, [r5, #8]
 800e0d6:	4416      	add	r6, r2
 800e0d8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e0da:	4416      	add	r6, r2
 800e0dc:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800e0e0:	4a07      	ldr	r2, [pc, #28]	; (800e100 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800e0e2:	9207      	str	r2, [sp, #28]
 800e0e4:	2600      	movs	r6, #0
 800e0e6:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800e0ea:	6803      	ldr	r3, [r0, #0]
 800e0ec:	a907      	add	r1, sp, #28
 800e0ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e0f0:	4798      	blx	r3
 800e0f2:	792b      	ldrb	r3, [r5, #4]
 800e0f4:	b10b      	cbz	r3, 800e0fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e0f6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e0fa:	b00a      	add	sp, #40	; 0x28
 800e0fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e100:	0801e890 	.word	0x0801e890

0800e104 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e108:	460c      	mov	r4, r1
 800e10a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e10c:	b088      	sub	sp, #32
 800e10e:	4605      	mov	r5, r0
 800e110:	2900      	cmp	r1, #0
 800e112:	d06d      	beq.n	800e1f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800e114:	4668      	mov	r0, sp
 800e116:	f7ff febf 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e11a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800e11c:	88e3      	ldrh	r3, [r4, #6]
 800e11e:	f9bd 8000 	ldrsh.w	r8, [sp]
 800e122:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800e126:	440b      	add	r3, r1
 800e128:	b21b      	sxth	r3, r3
 800e12a:	4543      	cmp	r3, r8
 800e12c:	db31      	blt.n	800e192 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e12e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800e132:	44c4      	add	ip, r8
 800e134:	fa0f fc8c 	sxth.w	ip, ip
 800e138:	4563      	cmp	r3, ip
 800e13a:	da2a      	bge.n	800e192 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e13c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800e13e:	8926      	ldrh	r6, [r4, #8]
 800e140:	4416      	add	r6, r2
 800e142:	b236      	sxth	r6, r6
 800e144:	42be      	cmp	r6, r7
 800e146:	db24      	blt.n	800e192 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e148:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e14c:	4438      	add	r0, r7
 800e14e:	b200      	sxth	r0, r0
 800e150:	4286      	cmp	r6, r0
 800e152:	da1e      	bge.n	800e192 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e154:	8963      	ldrh	r3, [r4, #10]
 800e156:	4419      	add	r1, r3
 800e158:	b209      	sxth	r1, r1
 800e15a:	4541      	cmp	r1, r8
 800e15c:	db08      	blt.n	800e170 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e15e:	4561      	cmp	r1, ip
 800e160:	da06      	bge.n	800e170 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e162:	89a3      	ldrh	r3, [r4, #12]
 800e164:	441a      	add	r2, r3
 800e166:	b212      	sxth	r2, r2
 800e168:	42ba      	cmp	r2, r7
 800e16a:	db01      	blt.n	800e170 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e16c:	4282      	cmp	r2, r0
 800e16e:	db10      	blt.n	800e192 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e170:	4b21      	ldr	r3, [pc, #132]	; (800e1f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800e172:	9304      	str	r3, [sp, #16]
 800e174:	2302      	movs	r3, #2
 800e176:	f88d 3014 	strb.w	r3, [sp, #20]
 800e17a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e17c:	2300      	movs	r3, #0
 800e17e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e182:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e186:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e18a:	6803      	ldr	r3, [r0, #0]
 800e18c:	a904      	add	r1, sp, #16
 800e18e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e190:	4798      	blx	r3
 800e192:	1d29      	adds	r1, r5, #4
 800e194:	a802      	add	r0, sp, #8
 800e196:	f7ff fe7f 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e19a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e19e:	88e0      	ldrh	r0, [r4, #6]
 800e1a0:	7921      	ldrb	r1, [r4, #4]
 800e1a2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e1a6:	8922      	ldrh	r2, [r4, #8]
 800e1a8:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e1aa:	f88d 1014 	strb.w	r1, [sp, #20]
 800e1ae:	eba3 0808 	sub.w	r8, r3, r8
 800e1b2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e1b6:	1bdf      	subs	r7, r3, r7
 800e1b8:	b2bb      	uxth	r3, r7
 800e1ba:	fa1f f888 	uxth.w	r8, r8
 800e1be:	8967      	ldrh	r7, [r4, #10]
 800e1c0:	89a4      	ldrh	r4, [r4, #12]
 800e1c2:	4440      	add	r0, r8
 800e1c4:	4460      	add	r0, ip
 800e1c6:	441a      	add	r2, r3
 800e1c8:	44b8      	add	r8, r7
 800e1ca:	4423      	add	r3, r4
 800e1cc:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e1d0:	4433      	add	r3, r6
 800e1d2:	4432      	add	r2, r6
 800e1d4:	44e0      	add	r8, ip
 800e1d6:	4c09      	ldr	r4, [pc, #36]	; (800e1fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800e1d8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e1da:	9404      	str	r4, [sp, #16]
 800e1dc:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e1e0:	f8ad 801a 	strh.w	r8, [sp, #26]
 800e1e4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e1e8:	6803      	ldr	r3, [r0, #0]
 800e1ea:	a904      	add	r1, sp, #16
 800e1ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e1ee:	4798      	blx	r3
 800e1f0:	b008      	add	sp, #32
 800e1f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1f6:	bf00      	nop
 800e1f8:	0801e890 	.word	0x0801e890
 800e1fc:	0801e8a4 	.word	0x0801e8a4

0800e200 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e200:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e202:	4604      	mov	r4, r0
 800e204:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e208:	3201      	adds	r2, #1
 800e20a:	d112      	bne.n	800e232 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e20c:	6803      	ldr	r3, [r0, #0]
 800e20e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e212:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e216:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e21a:	2500      	movs	r5, #0
 800e21c:	9500      	str	r5, [sp, #0]
 800e21e:	466d      	mov	r5, sp
 800e220:	4629      	mov	r1, r5
 800e222:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e226:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e228:	4798      	blx	r3
 800e22a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e22e:	e884 0003 	stmia.w	r4, {r0, r1}
 800e232:	4620      	mov	r0, r4
 800e234:	b003      	add	sp, #12
 800e236:	bd30      	pop	{r4, r5, pc}

0800e238 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e238:	b513      	push	{r0, r1, r4, lr}
 800e23a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e23e:	3301      	adds	r3, #1
 800e240:	4604      	mov	r4, r0
 800e242:	d109      	bne.n	800e258 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e244:	4601      	mov	r1, r0
 800e246:	4668      	mov	r0, sp
 800e248:	f7ff fe26 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e24c:	f8bd 3000 	ldrh.w	r3, [sp]
 800e250:	8423      	strh	r3, [r4, #32]
 800e252:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e256:	8463      	strh	r3, [r4, #34]	; 0x22
 800e258:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e25c:	b002      	add	sp, #8
 800e25e:	bd10      	pop	{r4, pc}

0800e260 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e260:	b513      	push	{r0, r1, r4, lr}
 800e262:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e266:	3301      	adds	r3, #1
 800e268:	4604      	mov	r4, r0
 800e26a:	d109      	bne.n	800e280 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e26c:	4601      	mov	r1, r0
 800e26e:	4668      	mov	r0, sp
 800e270:	f7ff fe12 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e274:	f8bd 3000 	ldrh.w	r3, [sp]
 800e278:	8423      	strh	r3, [r4, #32]
 800e27a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e27e:	8463      	strh	r3, [r4, #34]	; 0x22
 800e280:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e284:	b002      	add	sp, #8
 800e286:	bd10      	pop	{r4, pc}

0800e288 <_ZN8touchgfx6ScreenC1Ev>:
 800e288:	b570      	push	{r4, r5, r6, lr}
 800e28a:	4605      	mov	r5, r0
 800e28c:	4b16      	ldr	r3, [pc, #88]	; (800e2e8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800e28e:	f845 3b04 	str.w	r3, [r5], #4
 800e292:	2300      	movs	r3, #0
 800e294:	8103      	strh	r3, [r0, #8]
 800e296:	8143      	strh	r3, [r0, #10]
 800e298:	8183      	strh	r3, [r0, #12]
 800e29a:	81c3      	strh	r3, [r0, #14]
 800e29c:	8203      	strh	r3, [r0, #16]
 800e29e:	8243      	strh	r3, [r0, #18]
 800e2a0:	8283      	strh	r3, [r0, #20]
 800e2a2:	82c3      	strh	r3, [r0, #22]
 800e2a4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e2a8:	6203      	str	r3, [r0, #32]
 800e2aa:	8483      	strh	r3, [r0, #36]	; 0x24
 800e2ac:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e2ae:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800e2b2:	4a0e      	ldr	r2, [pc, #56]	; (800e2ec <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e2b4:	6343      	str	r3, [r0, #52]	; 0x34
 800e2b6:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800e2ba:	4b0d      	ldr	r3, [pc, #52]	; (800e2f0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e2bc:	6042      	str	r2, [r0, #4]
 800e2be:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e2c2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800e2c4:	4a0b      	ldr	r2, [pc, #44]	; (800e2f4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e2c6:	4604      	mov	r4, r0
 800e2c8:	2101      	movs	r1, #1
 800e2ca:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800e2ce:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800e2d2:	f9b2 1000 	ldrsh.w	r1, [r2]
 800e2d6:	4628      	mov	r0, r5
 800e2d8:	4798      	blx	r3
 800e2da:	6863      	ldr	r3, [r4, #4]
 800e2dc:	4628      	mov	r0, r5
 800e2de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e2e0:	4631      	mov	r1, r6
 800e2e2:	4798      	blx	r3
 800e2e4:	4620      	mov	r0, r4
 800e2e6:	bd70      	pop	{r4, r5, r6, pc}
 800e2e8:	0801f5cc 	.word	0x0801f5cc
 800e2ec:	0801f29c 	.word	0x0801f29c
 800e2f0:	20017746 	.word	0x20017746
 800e2f4:	20017744 	.word	0x20017744

0800e2f8 <_ZN8touchgfx6Screen4drawEv>:
 800e2f8:	b507      	push	{r0, r1, r2, lr}
 800e2fa:	4b09      	ldr	r3, [pc, #36]	; (800e320 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e2fc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e300:	4b08      	ldr	r3, [pc, #32]	; (800e324 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e302:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e306:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e30a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e30e:	6803      	ldr	r3, [r0, #0]
 800e310:	2100      	movs	r1, #0
 800e312:	9100      	str	r1, [sp, #0]
 800e314:	689b      	ldr	r3, [r3, #8]
 800e316:	4669      	mov	r1, sp
 800e318:	4798      	blx	r3
 800e31a:	b003      	add	sp, #12
 800e31c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e320:	20017744 	.word	0x20017744
 800e324:	20017746 	.word	0x20017746

0800e328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e32c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e330:	2b00      	cmp	r3, #0
 800e332:	b089      	sub	sp, #36	; 0x24
 800e334:	4680      	mov	r8, r0
 800e336:	460c      	mov	r4, r1
 800e338:	4615      	mov	r5, r2
 800e33a:	dd0e      	ble.n	800e35a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e33c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e340:	2b00      	cmp	r3, #0
 800e342:	dd0a      	ble.n	800e35a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e344:	4628      	mov	r0, r5
 800e346:	f7ff ff5b 	bl	800e200 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e34a:	4621      	mov	r1, r4
 800e34c:	f7fe fb9b 	bl	800ca86 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e350:	69eb      	ldr	r3, [r5, #28]
 800e352:	b928      	cbnz	r0, 800e360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800e354:	461d      	mov	r5, r3
 800e356:	2b00      	cmp	r3, #0
 800e358:	d1f4      	bne.n	800e344 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800e35a:	b009      	add	sp, #36	; 0x24
 800e35c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e360:	ae04      	add	r6, sp, #16
 800e362:	2b00      	cmp	r3, #0
 800e364:	f000 80b5 	beq.w	800e4d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e368:	682b      	ldr	r3, [r5, #0]
 800e36a:	4629      	mov	r1, r5
 800e36c:	68db      	ldr	r3, [r3, #12]
 800e36e:	a802      	add	r0, sp, #8
 800e370:	4798      	blx	r3
 800e372:	4628      	mov	r0, r5
 800e374:	f7ff ff60 	bl	800e238 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e378:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e37c:	4407      	add	r7, r0
 800e37e:	4628      	mov	r0, r5
 800e380:	f7ff ff6e 	bl	800e260 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e384:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e388:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e38c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e390:	4418      	add	r0, r3
 800e392:	4621      	mov	r1, r4
 800e394:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e398:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e39c:	b23f      	sxth	r7, r7
 800e39e:	4630      	mov	r0, r6
 800e3a0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e3a4:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e3a8:	f7fb fa30 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800e3ac:	4628      	mov	r0, r5
 800e3ae:	f7ff ff27 	bl	800e200 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e3b2:	4602      	mov	r2, r0
 800e3b4:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e3b8:	ab06      	add	r3, sp, #24
 800e3ba:	e883 0003 	stmia.w	r3, {r0, r1}
 800e3be:	4611      	mov	r1, r2
 800e3c0:	4618      	mov	r0, r3
 800e3c2:	f7fb fa23 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800e3c6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e3ca:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e3ce:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e3d2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e3d6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e3da:	4299      	cmp	r1, r3
 800e3dc:	d10b      	bne.n	800e3f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e3de:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e3e2:	4552      	cmp	r2, sl
 800e3e4:	d107      	bne.n	800e3f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e3e6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e3ea:	455a      	cmp	r2, fp
 800e3ec:	d103      	bne.n	800e3f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e3ee:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e3f2:	454a      	cmp	r2, r9
 800e3f4:	d06d      	beq.n	800e4d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e3f6:	f1bb 0f00 	cmp.w	fp, #0
 800e3fa:	dd65      	ble.n	800e4c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e3fc:	f1b9 0f00 	cmp.w	r9, #0
 800e400:	dd62      	ble.n	800e4c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e402:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e406:	fa1f f08a 	uxth.w	r0, sl
 800e40a:	4552      	cmp	r2, sl
 800e40c:	9000      	str	r0, [sp, #0]
 800e40e:	da12      	bge.n	800e436 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e410:	9301      	str	r3, [sp, #4]
 800e412:	9b00      	ldr	r3, [sp, #0]
 800e414:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e418:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e41c:	1a9a      	subs	r2, r3, r2
 800e41e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e422:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e426:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e42a:	69ea      	ldr	r2, [r5, #28]
 800e42c:	4631      	mov	r1, r6
 800e42e:	4640      	mov	r0, r8
 800e430:	f7ff ff7a 	bl	800e328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e434:	9b01      	ldr	r3, [sp, #4]
 800e436:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e43a:	429a      	cmp	r2, r3
 800e43c:	b29f      	uxth	r7, r3
 800e43e:	da0d      	bge.n	800e45c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e440:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e444:	1aba      	subs	r2, r7, r2
 800e446:	f8ad a012 	strh.w	sl, [sp, #18]
 800e44a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e44e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e452:	69ea      	ldr	r2, [r5, #28]
 800e454:	4631      	mov	r1, r6
 800e456:	4640      	mov	r0, r8
 800e458:	f7ff ff66 	bl	800e328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e45c:	8822      	ldrh	r2, [r4, #0]
 800e45e:	88a3      	ldrh	r3, [r4, #4]
 800e460:	445f      	add	r7, fp
 800e462:	4413      	add	r3, r2
 800e464:	b29b      	uxth	r3, r3
 800e466:	b2bf      	uxth	r7, r7
 800e468:	b23a      	sxth	r2, r7
 800e46a:	b219      	sxth	r1, r3
 800e46c:	4291      	cmp	r1, r2
 800e46e:	dd0d      	ble.n	800e48c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e470:	1bdb      	subs	r3, r3, r7
 800e472:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e476:	f8ad a012 	strh.w	sl, [sp, #18]
 800e47a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e47e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e482:	69ea      	ldr	r2, [r5, #28]
 800e484:	4631      	mov	r1, r6
 800e486:	4640      	mov	r0, r8
 800e488:	f7ff ff4e 	bl	800e328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e48c:	88e2      	ldrh	r2, [r4, #6]
 800e48e:	8863      	ldrh	r3, [r4, #2]
 800e490:	4413      	add	r3, r2
 800e492:	9a00      	ldr	r2, [sp, #0]
 800e494:	444a      	add	r2, r9
 800e496:	b29b      	uxth	r3, r3
 800e498:	fa1f f982 	uxth.w	r9, r2
 800e49c:	fa0f f289 	sxth.w	r2, r9
 800e4a0:	b219      	sxth	r1, r3
 800e4a2:	428a      	cmp	r2, r1
 800e4a4:	da15      	bge.n	800e4d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e4a6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e4aa:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e4ae:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e4b2:	eba3 0309 	sub.w	r3, r3, r9
 800e4b6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e4ba:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e4be:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e4c2:	69ea      	ldr	r2, [r5, #28]
 800e4c4:	4631      	mov	r1, r6
 800e4c6:	e001      	b.n	800e4cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e4c8:	69ea      	ldr	r2, [r5, #28]
 800e4ca:	4621      	mov	r1, r4
 800e4cc:	4640      	mov	r0, r8
 800e4ce:	f7ff ff2b 	bl	800e328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e4d2:	4628      	mov	r0, r5
 800e4d4:	f7ff fe94 	bl	800e200 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e4d8:	6861      	ldr	r1, [r4, #4]
 800e4da:	4602      	mov	r2, r0
 800e4dc:	6820      	ldr	r0, [r4, #0]
 800e4de:	4633      	mov	r3, r6
 800e4e0:	c303      	stmia	r3!, {r0, r1}
 800e4e2:	4611      	mov	r1, r2
 800e4e4:	4630      	mov	r0, r6
 800e4e6:	f7fb f991 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800e4ea:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e4ee:	2b00      	cmp	r3, #0
 800e4f0:	f77f af33 	ble.w	800e35a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e4f4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e4f8:	2b00      	cmp	r3, #0
 800e4fa:	f77f af2e 	ble.w	800e35a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e4fe:	4628      	mov	r0, r5
 800e500:	f7ff fe9a 	bl	800e238 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e504:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e508:	1a18      	subs	r0, r3, r0
 800e50a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e50e:	4628      	mov	r0, r5
 800e510:	f7ff fea6 	bl	800e260 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e514:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e518:	1a18      	subs	r0, r3, r0
 800e51a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e51e:	682b      	ldr	r3, [r5, #0]
 800e520:	4631      	mov	r1, r6
 800e522:	689b      	ldr	r3, [r3, #8]
 800e524:	4628      	mov	r0, r5
 800e526:	4798      	blx	r3
 800e528:	e717      	b.n	800e35a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e52a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e52a:	b570      	push	{r4, r5, r6, lr}
 800e52c:	460c      	mov	r4, r1
 800e52e:	b086      	sub	sp, #24
 800e530:	1d06      	adds	r6, r0, #4
 800e532:	2300      	movs	r3, #0
 800e534:	4631      	mov	r1, r6
 800e536:	4605      	mov	r5, r0
 800e538:	a802      	add	r0, sp, #8
 800e53a:	9301      	str	r3, [sp, #4]
 800e53c:	f7ff fcac 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e540:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e544:	8822      	ldrh	r2, [r4, #0]
 800e546:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e54a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e54e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e552:	1ad2      	subs	r2, r2, r3
 800e554:	8863      	ldrh	r3, [r4, #2]
 800e556:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e55a:	1a5b      	subs	r3, r3, r1
 800e55c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e560:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e564:	aa01      	add	r2, sp, #4
 800e566:	a904      	add	r1, sp, #16
 800e568:	4630      	mov	r0, r6
 800e56a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e56e:	f7fb fa25 	bl	80099bc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e572:	9a01      	ldr	r2, [sp, #4]
 800e574:	b11a      	cbz	r2, 800e57e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e576:	4621      	mov	r1, r4
 800e578:	4628      	mov	r0, r5
 800e57a:	f7ff fed5 	bl	800e328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e57e:	b006      	add	sp, #24
 800e580:	bd70      	pop	{r4, r5, r6, pc}

0800e582 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e582:	b530      	push	{r4, r5, lr}
 800e584:	4602      	mov	r2, r0
 800e586:	4604      	mov	r4, r0
 800e588:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e58c:	b085      	sub	sp, #20
 800e58e:	460d      	mov	r5, r1
 800e590:	6851      	ldr	r1, [r2, #4]
 800e592:	466b      	mov	r3, sp
 800e594:	c303      	stmia	r3!, {r0, r1}
 800e596:	4629      	mov	r1, r5
 800e598:	4668      	mov	r0, sp
 800e59a:	f7fb f937 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 800e59e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e5a2:	b12b      	cbz	r3, 800e5b0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e5a4:	4669      	mov	r1, sp
 800e5a6:	4620      	mov	r0, r4
 800e5a8:	f7ff ffbf 	bl	800e52a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e5ac:	b005      	add	sp, #20
 800e5ae:	bd30      	pop	{r4, r5, pc}
 800e5b0:	3404      	adds	r4, #4
 800e5b2:	4621      	mov	r1, r4
 800e5b4:	a802      	add	r0, sp, #8
 800e5b6:	f7ff fc6f 	bl	800de98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e5ba:	f8bd 3000 	ldrh.w	r3, [sp]
 800e5be:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e5c2:	1a9b      	subs	r3, r3, r2
 800e5c4:	f8ad 3000 	strh.w	r3, [sp]
 800e5c8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e5cc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e5d0:	4669      	mov	r1, sp
 800e5d2:	1a9b      	subs	r3, r3, r2
 800e5d4:	4620      	mov	r0, r4
 800e5d6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e5da:	f7fb f9b6 	bl	800994a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e5de:	e7e5      	b.n	800e5ac <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e5e0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e5e0:	680a      	ldr	r2, [r1, #0]
 800e5e2:	460b      	mov	r3, r1
 800e5e4:	6992      	ldr	r2, [r2, #24]
 800e5e6:	1d01      	adds	r1, r0, #4
 800e5e8:	4618      	mov	r0, r3
 800e5ea:	4710      	bx	r2

0800e5ec <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 800e5ec:	4298      	cmp	r0, r3
 800e5ee:	d200      	bcs.n	800e5f2 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 800e5f0:	b913      	cbnz	r3, 800e5f8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 800e5f2:	440a      	add	r2, r1
 800e5f4:	b210      	sxth	r0, r2
 800e5f6:	4770      	bx	lr
 800e5f8:	ee07 0a90 	vmov	s15, r0
 800e5fc:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e600:	ee07 3a90 	vmov	s15, r3
 800e604:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e608:	eddf 4a15 	vldr	s9, [pc, #84]	; 800e660 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 800e60c:	eddf 5a15 	vldr	s11, [pc, #84]	; 800e664 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 800e610:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e614:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e618:	ee37 7a66 	vsub.f32	s14, s14, s13
 800e61c:	ee07 2a90 	vmov	s15, r2
 800e620:	eee7 5a24 	vfma.f32	s11, s14, s9
 800e624:	ee27 5a07 	vmul.f32	s10, s14, s14
 800e628:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800e62c:	eee5 6a25 	vfma.f32	s13, s10, s11
 800e630:	ee07 1a90 	vmov	s15, r1
 800e634:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e638:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e63c:	eee6 7a26 	vfma.f32	s15, s12, s13
 800e640:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e648:	bfcc      	ite	gt
 800e64a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800e64e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800e652:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e656:	ee17 3a90 	vmov	r3, s15
 800e65a:	b218      	sxth	r0, r3
 800e65c:	4770      	bx	lr
 800e65e:	bf00      	nop
 800e660:	402ce6b0 	.word	0x402ce6b0
 800e664:	3fd9cd60 	.word	0x3fd9cd60

0800e668 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst>:
 800e668:	4298      	cmp	r0, r3
 800e66a:	d200      	bcs.n	800e66e <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0x6>
 800e66c:	b913      	cbnz	r3, 800e674 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0xc>
 800e66e:	440a      	add	r2, r1
 800e670:	b210      	sxth	r0, r2
 800e672:	4770      	bx	lr
 800e674:	ee07 0a90 	vmov	s15, r0
 800e678:	ee07 3a10 	vmov	s14, r3
 800e67c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e680:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e684:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800e688:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 800e68c:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800e690:	ee07 2a90 	vmov	s15, r2
 800e694:	eef4 6ae5 	vcmpe.f32	s13, s11
 800e698:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e69c:	bf5c      	itt	pl
 800e69e:	eef0 5a00 	vmovpl.f32	s11, #0	; 0x40000000  2.0
 800e6a2:	ee76 6ae5 	vsubpl.f32	s13, s13, s11
 800e6a6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800e6aa:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800e6ae:	ee27 7a06 	vmul.f32	s14, s14, s12
 800e6b2:	bf56      	itet	pl
 800e6b4:	ee26 5aa6 	vmulpl.f32	s10, s13, s13
 800e6b8:	ee26 7a87 	vmulmi.f32	s14, s13, s14
 800e6bc:	eee5 5a26 	vfmapl.f32	s11, s10, s13
 800e6c0:	ee07 1a90 	vmov	s15, r1
 800e6c4:	bf48      	it	mi
 800e6c6:	ee27 7a26 	vmulmi.f32	s14, s14, s13
 800e6ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6ce:	bf4c      	ite	mi
 800e6d0:	eee7 7a26 	vfmami.f32	s15, s14, s13
 800e6d4:	eee5 7a87 	vfmapl.f32	s15, s11, s14
 800e6d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e6e0:	bfcc      	ite	gt
 800e6e2:	ee77 7a86 	vaddgt.f32	s15, s15, s12
 800e6e6:	ee77 7ac6 	vsuble.f32	s15, s15, s12
 800e6ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e6ee:	ee17 3a90 	vmov	r3, s15
 800e6f2:	b218      	sxth	r0, r3
 800e6f4:	4770      	bx	lr

0800e6f6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 800e6f6:	4298      	cmp	r0, r3
 800e6f8:	d200      	bcs.n	800e6fc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 800e6fa:	b913      	cbnz	r3, 800e702 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 800e6fc:	440a      	add	r2, r1
 800e6fe:	b210      	sxth	r0, r2
 800e700:	4770      	bx	lr
 800e702:	ee07 2a90 	vmov	s15, r2
 800e706:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800e70a:	ee07 0a90 	vmov	s15, r0
 800e70e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e712:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e716:	ee07 3a10 	vmov	s14, r3
 800e71a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e71e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e722:	ee07 1a90 	vmov	s15, r1
 800e726:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e72a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e72e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e732:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e73a:	bfcc      	ite	gt
 800e73c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800e740:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800e744:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e748:	ee17 3a90 	vmov	r3, s15
 800e74c:	b218      	sxth	r0, r3
 800e74e:	4770      	bx	lr

0800e750 <_ZN8touchgfx12TextProviderC1Ev>:
 800e750:	b538      	push	{r3, r4, r5, lr}
 800e752:	2500      	movs	r5, #0
 800e754:	2302      	movs	r3, #2
 800e756:	4604      	mov	r4, r0
 800e758:	e9c0 5500 	strd	r5, r5, [r0]
 800e75c:	7403      	strb	r3, [r0, #16]
 800e75e:	6145      	str	r5, [r0, #20]
 800e760:	7605      	strb	r5, [r0, #24]
 800e762:	83c5      	strh	r5, [r0, #30]
 800e764:	8405      	strh	r5, [r0, #32]
 800e766:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e768:	8705      	strh	r5, [r0, #56]	; 0x38
 800e76a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800e76c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800e770:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800e774:	220e      	movs	r2, #14
 800e776:	4629      	mov	r1, r5
 800e778:	304c      	adds	r0, #76	; 0x4c
 800e77a:	f00d ffcf 	bl	801c71c <memset>
 800e77e:	2301      	movs	r3, #1
 800e780:	4620      	mov	r0, r4
 800e782:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800e786:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e78a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800e78e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800e792:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800e796:	f7f4 f90d 	bl	80029b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e79a:	4620      	mov	r0, r4
 800e79c:	bd38      	pop	{r3, r4, r5, pc}

0800e79e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800e79e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e7a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800e7a4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800e7a6:	fab0 f080 	clz	r0, r0
 800e7aa:	0940      	lsrs	r0, r0, #5
 800e7ac:	4770      	bx	lr

0800e7ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e7ae:	b530      	push	{r4, r5, lr}
 800e7b0:	2500      	movs	r5, #0
 800e7b2:	2401      	movs	r4, #1
 800e7b4:	6843      	ldr	r3, [r0, #4]
 800e7b6:	b913      	cbnz	r3, 800e7be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e7b8:	6803      	ldr	r3, [r0, #0]
 800e7ba:	b313      	cbz	r3, 800e802 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e7bc:	6043      	str	r3, [r0, #4]
 800e7be:	7e03      	ldrb	r3, [r0, #24]
 800e7c0:	b143      	cbz	r3, 800e7d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e7c2:	6943      	ldr	r3, [r0, #20]
 800e7c4:	b12b      	cbz	r3, 800e7d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e7c6:	881a      	ldrh	r2, [r3, #0]
 800e7c8:	b11a      	cbz	r2, 800e7d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e7ca:	1c9a      	adds	r2, r3, #2
 800e7cc:	6142      	str	r2, [r0, #20]
 800e7ce:	8818      	ldrh	r0, [r3, #0]
 800e7d0:	bd30      	pop	{r4, r5, pc}
 800e7d2:	7605      	strb	r5, [r0, #24]
 800e7d4:	6843      	ldr	r3, [r0, #4]
 800e7d6:	8819      	ldrh	r1, [r3, #0]
 800e7d8:	b199      	cbz	r1, 800e802 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e7da:	1c9a      	adds	r2, r3, #2
 800e7dc:	2902      	cmp	r1, #2
 800e7de:	6042      	str	r2, [r0, #4]
 800e7e0:	d1f5      	bne.n	800e7ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e7e2:	7c03      	ldrb	r3, [r0, #16]
 800e7e4:	2b01      	cmp	r3, #1
 800e7e6:	d8e5      	bhi.n	800e7b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e7e8:	1c5a      	adds	r2, r3, #1
 800e7ea:	3302      	adds	r3, #2
 800e7ec:	7402      	strb	r2, [r0, #16]
 800e7ee:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e7f2:	6143      	str	r3, [r0, #20]
 800e7f4:	2b00      	cmp	r3, #0
 800e7f6:	d0dd      	beq.n	800e7b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e7f8:	881b      	ldrh	r3, [r3, #0]
 800e7fa:	2b00      	cmp	r3, #0
 800e7fc:	d0da      	beq.n	800e7b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e7fe:	7604      	strb	r4, [r0, #24]
 800e800:	e7d8      	b.n	800e7b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e802:	2000      	movs	r0, #0
 800e804:	e7e4      	b.n	800e7d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e806:	b430      	push	{r4, r5}
 800e808:	6001      	str	r1, [r0, #0]
 800e80a:	2100      	movs	r1, #0
 800e80c:	6041      	str	r1, [r0, #4]
 800e80e:	6815      	ldr	r5, [r2, #0]
 800e810:	6085      	str	r5, [r0, #8]
 800e812:	6852      	ldr	r2, [r2, #4]
 800e814:	6443      	str	r3, [r0, #68]	; 0x44
 800e816:	9b02      	ldr	r3, [sp, #8]
 800e818:	60c2      	str	r2, [r0, #12]
 800e81a:	7401      	strb	r1, [r0, #16]
 800e81c:	6141      	str	r1, [r0, #20]
 800e81e:	7601      	strb	r1, [r0, #24]
 800e820:	8701      	strh	r1, [r0, #56]	; 0x38
 800e822:	8401      	strh	r1, [r0, #32]
 800e824:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e828:	6483      	str	r3, [r0, #72]	; 0x48
 800e82a:	bc30      	pop	{r4, r5}
 800e82c:	f7f4 b8c2 	b.w	80029b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e830 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800e830:	b408      	push	{r3}
 800e832:	b510      	push	{r4, lr}
 800e834:	b085      	sub	sp, #20
 800e836:	ac07      	add	r4, sp, #28
 800e838:	f854 3b04 	ldr.w	r3, [r4], #4
 800e83c:	9300      	str	r3, [sp, #0]
 800e83e:	4613      	mov	r3, r2
 800e840:	4622      	mov	r2, r4
 800e842:	9403      	str	r4, [sp, #12]
 800e844:	f7ff ffdf 	bl	800e806 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e848:	b005      	add	sp, #20
 800e84a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e84e:	b001      	add	sp, #4
 800e850:	4770      	bx	lr

0800e852 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e852:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e854:	4605      	mov	r5, r0
 800e856:	4608      	mov	r0, r1
 800e858:	b1e9      	cbz	r1, 800e896 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e85a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800e85e:	460b      	mov	r3, r1
 800e860:	f101 0708 	add.w	r7, r1, #8
 800e864:	4622      	mov	r2, r4
 800e866:	6818      	ldr	r0, [r3, #0]
 800e868:	6859      	ldr	r1, [r3, #4]
 800e86a:	4626      	mov	r6, r4
 800e86c:	c603      	stmia	r6!, {r0, r1}
 800e86e:	3308      	adds	r3, #8
 800e870:	42bb      	cmp	r3, r7
 800e872:	4634      	mov	r4, r6
 800e874:	d1f7      	bne.n	800e866 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e876:	6818      	ldr	r0, [r3, #0]
 800e878:	6030      	str	r0, [r6, #0]
 800e87a:	889b      	ldrh	r3, [r3, #4]
 800e87c:	80b3      	strh	r3, [r6, #4]
 800e87e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800e882:	015b      	lsls	r3, r3, #5
 800e884:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e888:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800e88c:	430b      	orrs	r3, r1
 800e88e:	425b      	negs	r3, r3
 800e890:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800e894:	4610      	mov	r0, r2
 800e896:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e898 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e898:	b538      	push	{r3, r4, r5, lr}
 800e89a:	460c      	mov	r4, r1
 800e89c:	6811      	ldr	r1, [r2, #0]
 800e89e:	4610      	mov	r0, r2
 800e8a0:	68cd      	ldr	r5, [r1, #12]
 800e8a2:	4619      	mov	r1, r3
 800e8a4:	47a8      	blx	r5
 800e8a6:	2800      	cmp	r0, #0
 800e8a8:	bf08      	it	eq
 800e8aa:	4620      	moveq	r0, r4
 800e8ac:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e8b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e8b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e8b2:	4604      	mov	r4, r0
 800e8b4:	4615      	mov	r5, r2
 800e8b6:	4608      	mov	r0, r1
 800e8b8:	b93a      	cbnz	r2, 800e8ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e8ba:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e8be:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800e8c2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e8c6:	4628      	mov	r0, r5
 800e8c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e8ca:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e8ce:	8893      	ldrh	r3, [r2, #4]
 800e8d0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e8d4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e8d8:	79ee      	ldrb	r6, [r5, #7]
 800e8da:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 800e8de:	4316      	orrs	r6, r2
 800e8e0:	19da      	adds	r2, r3, r7
 800e8e2:	b291      	uxth	r1, r2
 800e8e4:	291d      	cmp	r1, #29
 800e8e6:	b2b7      	uxth	r7, r6
 800e8e8:	d87a      	bhi.n	800e9e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800e8ea:	2201      	movs	r2, #1
 800e8ec:	408a      	lsls	r2, r1
 800e8ee:	4975      	ldr	r1, [pc, #468]	; (800eac4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800e8f0:	420a      	tst	r2, r1
 800e8f2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e8f6:	d12d      	bne.n	800e954 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800e8f8:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e8fc:	d070      	beq.n	800e9e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800e8fe:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800e902:	462b      	mov	r3, r5
 800e904:	f105 0e08 	add.w	lr, r5, #8
 800e908:	4615      	mov	r5, r2
 800e90a:	6818      	ldr	r0, [r3, #0]
 800e90c:	6859      	ldr	r1, [r3, #4]
 800e90e:	4694      	mov	ip, r2
 800e910:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e914:	3308      	adds	r3, #8
 800e916:	4573      	cmp	r3, lr
 800e918:	4662      	mov	r2, ip
 800e91a:	d1f6      	bne.n	800e90a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 800e91c:	6818      	ldr	r0, [r3, #0]
 800e91e:	f8cc 0000 	str.w	r0, [ip]
 800e922:	889b      	ldrh	r3, [r3, #4]
 800e924:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e928:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800e92c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800e930:	b2b3      	uxth	r3, r6
 800e932:	1aca      	subs	r2, r1, r3
 800e934:	b292      	uxth	r2, r2
 800e936:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800e93a:	10d2      	asrs	r2, r2, #3
 800e93c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e940:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e944:	4302      	orrs	r2, r0
 800e946:	1bcf      	subs	r7, r1, r7
 800e948:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800e94c:	1afb      	subs	r3, r7, r3
 800e94e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800e952:	e7b8      	b.n	800e8c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e954:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e956:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e95a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e95c:	f640 6333 	movw	r3, #3635	; 0xe33
 800e960:	4299      	cmp	r1, r3
 800e962:	d110      	bne.n	800e986 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800e964:	6803      	ldr	r3, [r0, #0]
 800e966:	68db      	ldr	r3, [r3, #12]
 800e968:	4798      	blx	r3
 800e96a:	7b41      	ldrb	r1, [r0, #13]
 800e96c:	00cb      	lsls	r3, r1, #3
 800e96e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e972:	7a03      	ldrb	r3, [r0, #8]
 800e974:	0648      	lsls	r0, r1, #25
 800e976:	ea43 0302 	orr.w	r3, r3, r2
 800e97a:	bf44      	itt	mi
 800e97c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e980:	b21b      	sxthmi	r3, r3
 800e982:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e986:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800e98a:	443b      	add	r3, r7
 800e98c:	4433      	add	r3, r6
 800e98e:	b29b      	uxth	r3, r3
 800e990:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800e994:	462a      	mov	r2, r5
 800e996:	f105 0c08 	add.w	ip, r5, #8
 800e99a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e99e:	4635      	mov	r5, r6
 800e9a0:	6810      	ldr	r0, [r2, #0]
 800e9a2:	6851      	ldr	r1, [r2, #4]
 800e9a4:	4637      	mov	r7, r6
 800e9a6:	c703      	stmia	r7!, {r0, r1}
 800e9a8:	3208      	adds	r2, #8
 800e9aa:	4562      	cmp	r2, ip
 800e9ac:	463e      	mov	r6, r7
 800e9ae:	d1f7      	bne.n	800e9a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800e9b0:	6810      	ldr	r0, [r2, #0]
 800e9b2:	6038      	str	r0, [r7, #0]
 800e9b4:	8892      	ldrh	r2, [r2, #4]
 800e9b6:	80ba      	strh	r2, [r7, #4]
 800e9b8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e9bc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e9c0:	10db      	asrs	r3, r3, #3
 800e9c2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e9c6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e9ca:	4313      	orrs	r3, r2
 800e9cc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e9d0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800e9d4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800e9d8:	1a9b      	subs	r3, r3, r2
 800e9da:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800e9de:	e772      	b.n	800e8c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e9e0:	f023 0204 	bic.w	r2, r3, #4
 800e9e4:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e9e8:	428a      	cmp	r2, r1
 800e9ea:	d003      	beq.n	800e9f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 800e9ec:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e9f0:	4293      	cmp	r3, r2
 800e9f2:	d120      	bne.n	800ea36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 800e9f4:	3b01      	subs	r3, #1
 800e9f6:	4602      	mov	r2, r0
 800e9f8:	b29b      	uxth	r3, r3
 800e9fa:	4629      	mov	r1, r5
 800e9fc:	4620      	mov	r0, r4
 800e9fe:	f7ff ff4b 	bl	800e898 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ea02:	7b41      	ldrb	r1, [r0, #13]
 800ea04:	00cb      	lsls	r3, r1, #3
 800ea06:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ea0a:	7a03      	ldrb	r3, [r0, #8]
 800ea0c:	0649      	lsls	r1, r1, #25
 800ea0e:	ea43 0302 	orr.w	r3, r3, r2
 800ea12:	bf44      	itt	mi
 800ea14:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ea18:	b21b      	sxthmi	r3, r3
 800ea1a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ea1e:	7b6b      	ldrb	r3, [r5, #13]
 800ea20:	7aaa      	ldrb	r2, [r5, #10]
 800ea22:	005b      	lsls	r3, r3, #1
 800ea24:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ea28:	4313      	orrs	r3, r2
 800ea2a:	115a      	asrs	r2, r3, #5
 800ea2c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800ea30:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800ea34:	e036      	b.n	800eaa4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800ea36:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800ea3a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800ea3e:	7a2a      	ldrb	r2, [r5, #8]
 800ea40:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ea44:	ea42 0201 	orr.w	r2, r2, r1
 800ea48:	bf1c      	itt	ne
 800ea4a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800ea4e:	b212      	sxthne	r2, r2
 800ea50:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800ea54:	f640 6109 	movw	r1, #3593	; 0xe09
 800ea58:	f023 0210 	bic.w	r2, r3, #16
 800ea5c:	428a      	cmp	r2, r1
 800ea5e:	d003      	beq.n	800ea68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 800ea60:	f640 6213 	movw	r2, #3603	; 0xe13
 800ea64:	4293      	cmp	r3, r2
 800ea66:	d12a      	bne.n	800eabe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800ea68:	7b6e      	ldrb	r6, [r5, #13]
 800ea6a:	0076      	lsls	r6, r6, #1
 800ea6c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800ea70:	7aae      	ldrb	r6, [r5, #10]
 800ea72:	4316      	orrs	r6, r2
 800ea74:	f640 6213 	movw	r2, #3603	; 0xe13
 800ea78:	4293      	cmp	r3, r2
 800ea7a:	bf18      	it	ne
 800ea7c:	f103 33ff 	addne.w	r3, r3, #4294967295
 800ea80:	4602      	mov	r2, r0
 800ea82:	bf14      	ite	ne
 800ea84:	b29b      	uxthne	r3, r3
 800ea86:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800ea8a:	4629      	mov	r1, r5
 800ea8c:	4620      	mov	r0, r4
 800ea8e:	f7ff ff03 	bl	800e898 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ea92:	7b43      	ldrb	r3, [r0, #13]
 800ea94:	7a82      	ldrb	r2, [r0, #10]
 800ea96:	005b      	lsls	r3, r3, #1
 800ea98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ea9c:	4313      	orrs	r3, r2
 800ea9e:	1af6      	subs	r6, r6, r3
 800eaa0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800eaa4:	7b69      	ldrb	r1, [r5, #13]
 800eaa6:	00cb      	lsls	r3, r1, #3
 800eaa8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eaac:	7a2b      	ldrb	r3, [r5, #8]
 800eaae:	4313      	orrs	r3, r2
 800eab0:	064a      	lsls	r2, r1, #25
 800eab2:	bf44      	itt	mi
 800eab4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eab8:	b21b      	sxthmi	r3, r3
 800eaba:	1bdb      	subs	r3, r3, r7
 800eabc:	e747      	b.n	800e94e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800eabe:	2300      	movs	r3, #0
 800eac0:	e7b6      	b.n	800ea30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 800eac2:	bf00      	nop
 800eac4:	3fc00079 	.word	0x3fc00079

0800eac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800eac8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eacc:	4604      	mov	r4, r0
 800eace:	b942      	cbnz	r2, 800eae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800ead0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ead4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800ead8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800eadc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800eae0:	e047      	b.n	800eb72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800eae2:	7b51      	ldrb	r1, [r2, #13]
 800eae4:	8893      	ldrh	r3, [r2, #4]
 800eae6:	010d      	lsls	r5, r1, #4
 800eae8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 800eaec:	79d5      	ldrb	r5, [r2, #7]
 800eaee:	4305      	orrs	r5, r0
 800eaf0:	2d04      	cmp	r5, #4
 800eaf2:	bfcc      	ite	gt
 800eaf4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800eaf8:	f04f 0e01 	movle.w	lr, #1
 800eafc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800eb00:	f200 80ab 	bhi.w	800ec5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800eb04:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800eb08:	4283      	cmp	r3, r0
 800eb0a:	d216      	bcs.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eb0c:	f240 605b 	movw	r0, #1627	; 0x65b
 800eb10:	4283      	cmp	r3, r0
 800eb12:	d859      	bhi.n	800ebc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800eb14:	f240 6057 	movw	r0, #1623	; 0x657
 800eb18:	4283      	cmp	r3, r0
 800eb1a:	d20e      	bcs.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eb1c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800eb20:	d24a      	bcs.n	800ebb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800eb22:	f240 604e 	movw	r0, #1614	; 0x64e
 800eb26:	4283      	cmp	r3, r0
 800eb28:	d207      	bcs.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eb2a:	f240 601a 	movw	r0, #1562	; 0x61a
 800eb2e:	4283      	cmp	r3, r0
 800eb30:	d02a      	beq.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eb32:	d821      	bhi.n	800eb78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800eb34:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800eb38:	d35b      	bcc.n	800ebf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800eb3a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800eb3e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800eb42:	f040 80d0 	bne.w	800ece6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800eb46:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800eb4a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800eb4e:	f040 80ca 	bne.w	800ece6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800eb52:	00cb      	lsls	r3, r1, #3
 800eb54:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800eb58:	7a13      	ldrb	r3, [r2, #8]
 800eb5a:	0649      	lsls	r1, r1, #25
 800eb5c:	ea43 0300 	orr.w	r3, r3, r0
 800eb60:	bf44      	itt	mi
 800eb62:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eb66:	b21b      	sxthmi	r3, r3
 800eb68:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eb6c:	1b5d      	subs	r5, r3, r5
 800eb6e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800eb72:	4610      	mov	r0, r2
 800eb74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb78:	f240 604b 	movw	r0, #1611	; 0x64b
 800eb7c:	4283      	cmp	r3, r0
 800eb7e:	d338      	bcc.n	800ebf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800eb80:	f240 604c 	movw	r0, #1612	; 0x64c
 800eb84:	4283      	cmp	r3, r0
 800eb86:	d9d8      	bls.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eb88:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800eb8c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800eb90:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800eb94:	f040 80f2 	bne.w	800ed7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800eb98:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800eb9c:	f040 80ee 	bne.w	800ed7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800eba0:	00cb      	lsls	r3, r1, #3
 800eba2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800eba6:	7a13      	ldrb	r3, [r2, #8]
 800eba8:	064e      	lsls	r6, r1, #25
 800ebaa:	ea43 0300 	orr.w	r3, r3, r0
 800ebae:	bf44      	itt	mi
 800ebb0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ebb4:	b21b      	sxthmi	r3, r3
 800ebb6:	e7d9      	b.n	800eb6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800ebb8:	f240 6054 	movw	r0, #1620	; 0x654
 800ebbc:	4283      	cmp	r3, r0
 800ebbe:	d8e3      	bhi.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ebc0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ebc4:	d9e0      	bls.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ebc6:	e7b8      	b.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ebc8:	f240 6074 	movw	r0, #1652	; 0x674
 800ebcc:	4283      	cmp	r3, r0
 800ebce:	d0b4      	beq.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ebd0:	d82d      	bhi.n	800ec2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800ebd2:	f240 605e 	movw	r0, #1630	; 0x65e
 800ebd6:	4283      	cmp	r3, r0
 800ebd8:	d804      	bhi.n	800ebe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800ebda:	f240 605d 	movw	r0, #1629	; 0x65d
 800ebde:	4283      	cmp	r3, r0
 800ebe0:	d3d2      	bcc.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ebe2:	e7aa      	b.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ebe4:	f240 605f 	movw	r0, #1631	; 0x65f
 800ebe8:	4283      	cmp	r3, r0
 800ebea:	d0cd      	beq.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ebec:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800ebf0:	d0a3      	beq.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ebf2:	00cb      	lsls	r3, r1, #3
 800ebf4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ebf8:	7a13      	ldrb	r3, [r2, #8]
 800ebfa:	0649      	lsls	r1, r1, #25
 800ebfc:	ea43 0300 	orr.w	r3, r3, r0
 800ec00:	bf44      	itt	mi
 800ec02:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ec06:	b21b      	sxthmi	r3, r3
 800ec08:	1b5d      	subs	r5, r3, r5
 800ec0a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ec0e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ec12:	7b53      	ldrb	r3, [r2, #13]
 800ec14:	015b      	lsls	r3, r3, #5
 800ec16:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ec1a:	7993      	ldrb	r3, [r2, #6]
 800ec1c:	430b      	orrs	r3, r1
 800ec1e:	005b      	lsls	r3, r3, #1
 800ec20:	2105      	movs	r1, #5
 800ec22:	fb93 f3f1 	sdiv	r3, r3, r1
 800ec26:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800ec2a:	440b      	add	r3, r1
 800ec2c:	e756      	b.n	800eadc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800ec2e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800ec32:	4283      	cmp	r3, r0
 800ec34:	d809      	bhi.n	800ec4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800ec36:	f240 60df 	movw	r0, #1759	; 0x6df
 800ec3a:	4283      	cmp	r3, r0
 800ec3c:	f4bf af7d 	bcs.w	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec40:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800ec44:	2b05      	cmp	r3, #5
 800ec46:	d8d4      	bhi.n	800ebf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ec48:	e777      	b.n	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec4a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800ec4e:	4283      	cmp	r3, r0
 800ec50:	d09a      	beq.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ec52:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800ec56:	4283      	cmp	r3, r0
 800ec58:	e7ca      	b.n	800ebf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ec5a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800ec5e:	d22b      	bcs.n	800ecb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800ec60:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800ec64:	4283      	cmp	r3, r0
 800ec66:	d28f      	bcs.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ec68:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800ec6c:	4283      	cmp	r3, r0
 800ec6e:	d816      	bhi.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800ec70:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800ec74:	4283      	cmp	r3, r0
 800ec76:	f4bf af60 	bcs.w	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec7a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800ec7e:	4283      	cmp	r3, r0
 800ec80:	d80a      	bhi.n	800ec98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800ec82:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800ec86:	4283      	cmp	r3, r0
 800ec88:	f4bf af57 	bcs.w	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec8c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800ec90:	4283      	cmp	r3, r0
 800ec92:	f43f af79 	beq.w	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ec96:	e7ac      	b.n	800ebf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ec98:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800ec9c:	e7f8      	b.n	800ec90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800ec9e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800eca2:	4283      	cmp	r3, r0
 800eca4:	d802      	bhi.n	800ecac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800eca6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800ecaa:	e798      	b.n	800ebde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800ecac:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800ecb0:	4283      	cmp	r3, r0
 800ecb2:	f47f af42 	bne.w	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ecb6:	e767      	b.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ecb8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800ecbc:	4283      	cmp	r3, r0
 800ecbe:	f43f af63 	beq.w	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ecc2:	d802      	bhi.n	800ecca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800ecc4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800ecc8:	e7f2      	b.n	800ecb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800ecca:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800ecce:	4283      	cmp	r3, r0
 800ecd0:	d805      	bhi.n	800ecde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800ecd2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800ecd6:	4283      	cmp	r3, r0
 800ecd8:	f4ff af2f 	bcc.w	800eb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ecdc:	e754      	b.n	800eb88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ecde:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800ece2:	4283      	cmp	r3, r0
 800ece4:	e7af      	b.n	800ec46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800ece6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800ecea:	4617      	mov	r7, r2
 800ecec:	f102 0808 	add.w	r8, r2, #8
 800ecf0:	4666      	mov	r6, ip
 800ecf2:	6838      	ldr	r0, [r7, #0]
 800ecf4:	6879      	ldr	r1, [r7, #4]
 800ecf6:	46e6      	mov	lr, ip
 800ecf8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800ecfc:	3708      	adds	r7, #8
 800ecfe:	4547      	cmp	r7, r8
 800ed00:	46f4      	mov	ip, lr
 800ed02:	d1f6      	bne.n	800ecf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800ed04:	6838      	ldr	r0, [r7, #0]
 800ed06:	f8ce 0000 	str.w	r0, [lr]
 800ed0a:	88b9      	ldrh	r1, [r7, #4]
 800ed0c:	f8ae 1004 	strh.w	r1, [lr, #4]
 800ed10:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800ed14:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ed18:	d009      	beq.n	800ed2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800ed1a:	7b51      	ldrb	r1, [r2, #13]
 800ed1c:	7992      	ldrb	r2, [r2, #6]
 800ed1e:	0149      	lsls	r1, r1, #5
 800ed20:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ed24:	4311      	orrs	r1, r2
 800ed26:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ed2a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800ed2e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ed32:	b2ad      	uxth	r5, r5
 800ed34:	d00d      	beq.n	800ed52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800ed36:	442b      	add	r3, r5
 800ed38:	b29b      	uxth	r3, r3
 800ed3a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800ed3e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800ed42:	10db      	asrs	r3, r3, #3
 800ed44:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ed48:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ed4c:	4313      	orrs	r3, r2
 800ed4e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ed52:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800ed56:	00cb      	lsls	r3, r1, #3
 800ed58:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ed5c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800ed60:	064f      	lsls	r7, r1, #25
 800ed62:	ea43 0302 	orr.w	r3, r3, r2
 800ed66:	bf44      	itt	mi
 800ed68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ed6c:	b21b      	sxthmi	r3, r3
 800ed6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ed72:	1b5b      	subs	r3, r3, r5
 800ed74:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800ed78:	4632      	mov	r2, r6
 800ed7a:	e6fa      	b.n	800eb72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800ed7c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800ed80:	4617      	mov	r7, r2
 800ed82:	f102 0908 	add.w	r9, r2, #8
 800ed86:	4666      	mov	r6, ip
 800ed88:	6838      	ldr	r0, [r7, #0]
 800ed8a:	6879      	ldr	r1, [r7, #4]
 800ed8c:	46e0      	mov	r8, ip
 800ed8e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800ed92:	3708      	adds	r7, #8
 800ed94:	454f      	cmp	r7, r9
 800ed96:	46c4      	mov	ip, r8
 800ed98:	d1f6      	bne.n	800ed88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800ed9a:	6838      	ldr	r0, [r7, #0]
 800ed9c:	f8c8 0000 	str.w	r0, [r8]
 800eda0:	88b9      	ldrh	r1, [r7, #4]
 800eda2:	f8a8 1004 	strh.w	r1, [r8, #4]
 800eda6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800edaa:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800edae:	d009      	beq.n	800edc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800edb0:	7b51      	ldrb	r1, [r2, #13]
 800edb2:	7992      	ldrb	r2, [r2, #6]
 800edb4:	0149      	lsls	r1, r1, #5
 800edb6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800edba:	4311      	orrs	r1, r2
 800edbc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800edc0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800edc4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800edc8:	d00e      	beq.n	800ede8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800edca:	eba3 030e 	sub.w	r3, r3, lr
 800edce:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800edd2:	b29b      	uxth	r3, r3
 800edd4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800edd8:	10db      	asrs	r3, r3, #3
 800edda:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800edde:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ede2:	4313      	orrs	r3, r2
 800ede4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ede8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800edec:	00cb      	lsls	r3, r1, #3
 800edee:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800edf2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800edf6:	0648      	lsls	r0, r1, #25
 800edf8:	ea43 0302 	orr.w	r3, r3, r2
 800edfc:	bf44      	itt	mi
 800edfe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ee02:	b21b      	sxthmi	r3, r3
 800ee04:	1b5d      	subs	r5, r3, r5
 800ee06:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ee0a:	e7b5      	b.n	800ed78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800ee0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ee0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ee10:	461e      	mov	r6, r3
 800ee12:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ee14:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ee18:	4604      	mov	r4, r0
 800ee1a:	4617      	mov	r7, r2
 800ee1c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ee20:	f7f3 fd86 	bl	8002930 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ee24:	4605      	mov	r5, r0
 800ee26:	b918      	cbnz	r0, 800ee30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800ee28:	6030      	str	r0, [r6, #0]
 800ee2a:	4628      	mov	r0, r5
 800ee2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ee30:	683b      	ldr	r3, [r7, #0]
 800ee32:	4601      	mov	r1, r0
 800ee34:	68db      	ldr	r3, [r3, #12]
 800ee36:	4638      	mov	r0, r7
 800ee38:	4798      	blx	r3
 800ee3a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ee3e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ee42:	4602      	mov	r2, r0
 800ee44:	6030      	str	r0, [r6, #0]
 800ee46:	d213      	bcs.n	800ee70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800ee48:	4643      	mov	r3, r8
 800ee4a:	4639      	mov	r1, r7
 800ee4c:	4620      	mov	r0, r4
 800ee4e:	f7ff fe3b 	bl	800eac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ee52:	6030      	str	r0, [r6, #0]
 800ee54:	6833      	ldr	r3, [r6, #0]
 800ee56:	b143      	cbz	r3, 800ee6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800ee58:	7b5a      	ldrb	r2, [r3, #13]
 800ee5a:	7a9b      	ldrb	r3, [r3, #10]
 800ee5c:	0052      	lsls	r2, r2, #1
 800ee5e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ee62:	4313      	orrs	r3, r2
 800ee64:	bf0c      	ite	eq
 800ee66:	2301      	moveq	r3, #1
 800ee68:	2300      	movne	r3, #0
 800ee6a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800ee6e:	e7dc      	b.n	800ee2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800ee70:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ee74:	b29b      	uxth	r3, r3
 800ee76:	2b7f      	cmp	r3, #127	; 0x7f
 800ee78:	d804      	bhi.n	800ee84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800ee7a:	4639      	mov	r1, r7
 800ee7c:	4620      	mov	r0, r4
 800ee7e:	f7ff fd17 	bl	800e8b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ee82:	e7e6      	b.n	800ee52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800ee84:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800ee88:	2b00      	cmp	r3, #0
 800ee8a:	d0e3      	beq.n	800ee54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800ee8c:	f640 1302 	movw	r3, #2306	; 0x902
 800ee90:	429d      	cmp	r5, r3
 800ee92:	d1df      	bne.n	800ee54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800ee94:	4601      	mov	r1, r0
 800ee96:	4620      	mov	r0, r4
 800ee98:	f7ff fcdb 	bl	800e852 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ee9c:	e7d9      	b.n	800ee52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800ee9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800ee9e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eea2:	461e      	mov	r6, r3
 800eea4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800eea6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800eeaa:	4604      	mov	r4, r0
 800eeac:	4617      	mov	r7, r2
 800eeae:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800eeb2:	f7f3 fd3d 	bl	8002930 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800eeb6:	4605      	mov	r5, r0
 800eeb8:	b918      	cbnz	r0, 800eec2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 800eeba:	6030      	str	r0, [r6, #0]
 800eebc:	4628      	mov	r0, r5
 800eebe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800eec2:	683b      	ldr	r3, [r7, #0]
 800eec4:	4601      	mov	r1, r0
 800eec6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800eeca:	4638      	mov	r0, r7
 800eecc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800eed0:	47c8      	blx	r9
 800eed2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800eed6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800eeda:	4602      	mov	r2, r0
 800eedc:	6030      	str	r0, [r6, #0]
 800eede:	d213      	bcs.n	800ef08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 800eee0:	4643      	mov	r3, r8
 800eee2:	4639      	mov	r1, r7
 800eee4:	4620      	mov	r0, r4
 800eee6:	f7ff fdef 	bl	800eac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800eeea:	6030      	str	r0, [r6, #0]
 800eeec:	6833      	ldr	r3, [r6, #0]
 800eeee:	b143      	cbz	r3, 800ef02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 800eef0:	7b5a      	ldrb	r2, [r3, #13]
 800eef2:	7a9b      	ldrb	r3, [r3, #10]
 800eef4:	0052      	lsls	r2, r2, #1
 800eef6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800eefa:	4313      	orrs	r3, r2
 800eefc:	bf0c      	ite	eq
 800eefe:	2301      	moveq	r3, #1
 800ef00:	2300      	movne	r3, #0
 800ef02:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800ef06:	e7d9      	b.n	800eebc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 800ef08:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ef0c:	b29b      	uxth	r3, r3
 800ef0e:	2b7f      	cmp	r3, #127	; 0x7f
 800ef10:	d804      	bhi.n	800ef1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 800ef12:	4639      	mov	r1, r7
 800ef14:	4620      	mov	r0, r4
 800ef16:	f7ff fccb 	bl	800e8b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ef1a:	e7e6      	b.n	800eeea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 800ef1c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800ef20:	2b00      	cmp	r3, #0
 800ef22:	d0e3      	beq.n	800eeec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800ef24:	f640 1302 	movw	r3, #2306	; 0x902
 800ef28:	429d      	cmp	r5, r3
 800ef2a:	d1df      	bne.n	800eeec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800ef2c:	4601      	mov	r1, r0
 800ef2e:	4620      	mov	r0, r4
 800ef30:	f7ff fc8f 	bl	800e852 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ef34:	e7d9      	b.n	800eeea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0800ef36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800ef36:	b510      	push	{r4, lr}
 800ef38:	4604      	mov	r4, r0
 800ef3a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800ef3e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ef40:	b1f1      	cbz	r1, 800ef80 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800ef42:	2b0a      	cmp	r3, #10
 800ef44:	d02f      	beq.n	800efa6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800ef46:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800ef48:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800ef4c:	3901      	subs	r1, #1
 800ef4e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800ef50:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800ef54:	1c51      	adds	r1, r2, #1
 800ef56:	b289      	uxth	r1, r1
 800ef58:	2901      	cmp	r1, #1
 800ef5a:	bf84      	itt	hi
 800ef5c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800ef60:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800ef62:	f103 0201 	add.w	r2, r3, #1
 800ef66:	8722      	strh	r2, [r4, #56]	; 0x38
 800ef68:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ef6a:	bf98      	it	ls
 800ef6c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800ef6e:	4413      	add	r3, r2
 800ef70:	b29b      	uxth	r3, r3
 800ef72:	2b09      	cmp	r3, #9
 800ef74:	bf88      	it	hi
 800ef76:	3b0a      	subhi	r3, #10
 800ef78:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ef7c:	8458      	strh	r0, [r3, #34]	; 0x22
 800ef7e:	e7dc      	b.n	800ef3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ef80:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ef82:	2b0a      	cmp	r3, #10
 800ef84:	d00f      	beq.n	800efa6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800ef86:	4620      	mov	r0, r4
 800ef88:	f7ff fc11 	bl	800e7ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800ef8c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ef8e:	1c5a      	adds	r2, r3, #1
 800ef90:	8722      	strh	r2, [r4, #56]	; 0x38
 800ef92:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ef94:	4413      	add	r3, r2
 800ef96:	b29b      	uxth	r3, r3
 800ef98:	2b09      	cmp	r3, #9
 800ef9a:	bf88      	it	hi
 800ef9c:	3b0a      	subhi	r3, #10
 800ef9e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800efa2:	8458      	strh	r0, [r3, #34]	; 0x22
 800efa4:	e7ec      	b.n	800ef80 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800efa6:	bd10      	pop	{r4, pc}

0800efa8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800efa8:	b538      	push	{r3, r4, r5, lr}
 800efaa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800efac:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800efb0:	4604      	mov	r4, r0
 800efb2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 800efb4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800efb6:	3a01      	subs	r2, #1
 800efb8:	8702      	strh	r2, [r0, #56]	; 0x38
 800efba:	1c5a      	adds	r2, r3, #1
 800efbc:	b292      	uxth	r2, r2
 800efbe:	2a09      	cmp	r2, #9
 800efc0:	bf86      	itte	hi
 800efc2:	3b09      	subhi	r3, #9
 800efc4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800efc6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800efc8:	f7ff ffb5 	bl	800ef36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800efcc:	8c23      	ldrh	r3, [r4, #32]
 800efce:	2b01      	cmp	r3, #1
 800efd0:	bf9c      	itt	ls
 800efd2:	3301      	addls	r3, #1
 800efd4:	8423      	strhls	r3, [r4, #32]
 800efd6:	8be3      	ldrh	r3, [r4, #30]
 800efd8:	b90b      	cbnz	r3, 800efde <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800efda:	2302      	movs	r3, #2
 800efdc:	83e3      	strh	r3, [r4, #30]
 800efde:	8be3      	ldrh	r3, [r4, #30]
 800efe0:	3b01      	subs	r3, #1
 800efe2:	b29b      	uxth	r3, r3
 800efe4:	83e3      	strh	r3, [r4, #30]
 800efe6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800efea:	4628      	mov	r0, r5
 800efec:	8365      	strh	r5, [r4, #26]
 800efee:	bd38      	pop	{r3, r4, r5, pc}

0800eff0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800eff0:	428a      	cmp	r2, r1
 800eff2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eff6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 800eff8:	d931      	bls.n	800f05e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800effa:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 800effc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 800f000:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 800f004:	19ee      	adds	r6, r5, r7
 800f006:	1a54      	subs	r4, r2, r1
 800f008:	3e01      	subs	r6, #1
 800f00a:	fa1f fe84 	uxth.w	lr, r4
 800f00e:	b2b4      	uxth	r4, r6
 800f010:	eba4 090e 	sub.w	r9, r4, lr
 800f014:	fa1f f989 	uxth.w	r9, r9
 800f018:	2c09      	cmp	r4, #9
 800f01a:	4626      	mov	r6, r4
 800f01c:	bf88      	it	hi
 800f01e:	f1a4 060a 	subhi.w	r6, r4, #10
 800f022:	f1bc 0f00 	cmp.w	ip, #0
 800f026:	bf08      	it	eq
 800f028:	f04f 0c02 	moveq.w	ip, #2
 800f02c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800f030:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f034:	fa1f fc8c 	uxth.w	ip, ip
 800f038:	3c01      	subs	r4, #1
 800f03a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 800f03e:	b2a4      	uxth	r4, r4
 800f040:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800f044:	454c      	cmp	r4, r9
 800f046:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 800f04a:	d1e5      	bne.n	800f018 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800f04c:	eba5 050e 	sub.w	r5, r5, lr
 800f050:	eb0e 0408 	add.w	r4, lr, r8
 800f054:	8705      	strh	r5, [r0, #56]	; 0x38
 800f056:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 800f05a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 800f05e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800f060:	1a64      	subs	r4, r4, r1
 800f062:	4439      	add	r1, r7
 800f064:	b289      	uxth	r1, r1
 800f066:	2909      	cmp	r1, #9
 800f068:	bf88      	it	hi
 800f06a:	390a      	subhi	r1, #10
 800f06c:	8704      	strh	r4, [r0, #56]	; 0x38
 800f06e:	86c1      	strh	r1, [r0, #54]	; 0x36
 800f070:	250a      	movs	r5, #10
 800f072:	b18a      	cbz	r2, 800f098 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800f074:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800f076:	3a01      	subs	r2, #1
 800f078:	b292      	uxth	r2, r2
 800f07a:	3101      	adds	r1, #1
 800f07c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f080:	8701      	strh	r1, [r0, #56]	; 0x38
 800f082:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800f084:	b901      	cbnz	r1, 800f088 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800f086:	86c5      	strh	r5, [r0, #54]	; 0x36
 800f088:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800f08a:	3901      	subs	r1, #1
 800f08c:	b289      	uxth	r1, r1
 800f08e:	86c1      	strh	r1, [r0, #54]	; 0x36
 800f090:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f094:	844c      	strh	r4, [r1, #34]	; 0x22
 800f096:	e7ec      	b.n	800f072 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800f098:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f09c:	f7ff bf4b 	b.w	800ef36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800f0a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f0a0:	b570      	push	{r4, r5, r6, lr}
 800f0a2:	2500      	movs	r5, #0
 800f0a4:	4295      	cmp	r5, r2
 800f0a6:	d011      	beq.n	800f0cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800f0a8:	8bc4      	ldrh	r4, [r0, #30]
 800f0aa:	f831 6b02 	ldrh.w	r6, [r1], #2
 800f0ae:	4414      	add	r4, r2
 800f0b0:	3c01      	subs	r4, #1
 800f0b2:	1b64      	subs	r4, r4, r5
 800f0b4:	b2a4      	uxth	r4, r4
 800f0b6:	2c01      	cmp	r4, #1
 800f0b8:	bf88      	it	hi
 800f0ba:	3c02      	subhi	r4, #2
 800f0bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f0c0:	8b64      	ldrh	r4, [r4, #26]
 800f0c2:	42b4      	cmp	r4, r6
 800f0c4:	d117      	bne.n	800f0f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800f0c6:	3501      	adds	r5, #1
 800f0c8:	b2ad      	uxth	r5, r5
 800f0ca:	e7eb      	b.n	800f0a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800f0cc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f0d0:	2400      	movs	r4, #0
 800f0d2:	4413      	add	r3, r2
 800f0d4:	b2a2      	uxth	r2, r4
 800f0d6:	429a      	cmp	r2, r3
 800f0d8:	da0f      	bge.n	800f0fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800f0da:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800f0dc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f0e0:	4432      	add	r2, r6
 800f0e2:	b292      	uxth	r2, r2
 800f0e4:	2a09      	cmp	r2, #9
 800f0e6:	bf88      	it	hi
 800f0e8:	3a0a      	subhi	r2, #10
 800f0ea:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f0ee:	3401      	adds	r4, #1
 800f0f0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800f0f2:	42aa      	cmp	r2, r5
 800f0f4:	d0ee      	beq.n	800f0d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800f0f6:	2000      	movs	r0, #0
 800f0f8:	bd70      	pop	{r4, r5, r6, pc}
 800f0fa:	2001      	movs	r0, #1
 800f0fc:	e7fc      	b.n	800f0f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800f0fe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f0fe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f102:	4605      	mov	r5, r0
 800f104:	4616      	mov	r6, r2
 800f106:	1c8c      	adds	r4, r1, #2
 800f108:	8809      	ldrh	r1, [r1, #0]
 800f10a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f10e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f112:	42b3      	cmp	r3, r6
 800f114:	d124      	bne.n	800f160 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f116:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f11a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f11e:	f001 070f 	and.w	r7, r1, #15
 800f122:	f8cd 8000 	str.w	r8, [sp]
 800f126:	464b      	mov	r3, r9
 800f128:	4652      	mov	r2, sl
 800f12a:	4621      	mov	r1, r4
 800f12c:	4628      	mov	r0, r5
 800f12e:	f7ff ffb7 	bl	800f0a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f132:	4683      	mov	fp, r0
 800f134:	b168      	cbz	r0, 800f152 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f136:	eb0a 0109 	add.w	r1, sl, r9
 800f13a:	4441      	add	r1, r8
 800f13c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f140:	463a      	mov	r2, r7
 800f142:	4649      	mov	r1, r9
 800f144:	4628      	mov	r0, r5
 800f146:	f7ff ff53 	bl	800eff0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f14a:	4658      	mov	r0, fp
 800f14c:	b003      	add	sp, #12
 800f14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f152:	eb07 010a 	add.w	r1, r7, sl
 800f156:	4449      	add	r1, r9
 800f158:	4441      	add	r1, r8
 800f15a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f15e:	e7d2      	b.n	800f106 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f160:	f04f 0b00 	mov.w	fp, #0
 800f164:	e7f1      	b.n	800f14a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f166 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f166:	b570      	push	{r4, r5, r6, lr}
 800f168:	8810      	ldrh	r0, [r2, #0]
 800f16a:	4298      	cmp	r0, r3
 800f16c:	d817      	bhi.n	800f19e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f16e:	1e48      	subs	r0, r1, #1
 800f170:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f174:	4298      	cmp	r0, r3
 800f176:	d312      	bcc.n	800f19e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f178:	2400      	movs	r4, #0
 800f17a:	428c      	cmp	r4, r1
 800f17c:	d20f      	bcs.n	800f19e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f17e:	1860      	adds	r0, r4, r1
 800f180:	1040      	asrs	r0, r0, #1
 800f182:	0085      	lsls	r5, r0, #2
 800f184:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f188:	42b3      	cmp	r3, r6
 800f18a:	d902      	bls.n	800f192 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f18c:	3001      	adds	r0, #1
 800f18e:	b284      	uxth	r4, r0
 800f190:	e7f3      	b.n	800f17a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f192:	d201      	bcs.n	800f198 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f194:	b281      	uxth	r1, r0
 800f196:	e7f0      	b.n	800f17a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f198:	442a      	add	r2, r5
 800f19a:	8850      	ldrh	r0, [r2, #2]
 800f19c:	bd70      	pop	{r4, r5, r6, pc}
 800f19e:	2000      	movs	r0, #0
 800f1a0:	e7fc      	b.n	800f19c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f1a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f1a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1a6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800f1a8:	886f      	ldrh	r7, [r5, #2]
 800f1aa:	4604      	mov	r4, r0
 800f1ac:	087f      	lsrs	r7, r7, #1
 800f1ae:	260b      	movs	r6, #11
 800f1b0:	3e01      	subs	r6, #1
 800f1b2:	d013      	beq.n	800f1dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f1b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800f1b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f1ba:	462a      	mov	r2, r5
 800f1bc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800f1c0:	4639      	mov	r1, r7
 800f1c2:	4643      	mov	r3, r8
 800f1c4:	4620      	mov	r0, r4
 800f1c6:	f7ff ffce 	bl	800f166 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f1ca:	b138      	cbz	r0, 800f1dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f1cc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f1d0:	4642      	mov	r2, r8
 800f1d2:	4620      	mov	r0, r4
 800f1d4:	f7ff ff93 	bl	800f0fe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f1d8:	2800      	cmp	r0, #0
 800f1da:	d1e9      	bne.n	800f1b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f1dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f1e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f1e0:	b570      	push	{r4, r5, r6, lr}
 800f1e2:	694a      	ldr	r2, [r1, #20]
 800f1e4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f1e6:	684b      	ldr	r3, [r1, #4]
 800f1e8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800f1ea:	1b54      	subs	r4, r2, r5
 800f1ec:	f000 8106 	beq.w	800f3fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800f1f0:	1b9b      	subs	r3, r3, r6
 800f1f2:	d003      	beq.n	800f1fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f1f4:	4363      	muls	r3, r4
 800f1f6:	2210      	movs	r2, #16
 800f1f8:	fb93 f3f2 	sdiv	r3, r3, r2
 800f1fc:	680c      	ldr	r4, [r1, #0]
 800f1fe:	698a      	ldr	r2, [r1, #24]
 800f200:	1b65      	subs	r5, r4, r5
 800f202:	f000 80fd 	beq.w	800f400 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800f206:	1b92      	subs	r2, r2, r6
 800f208:	d003      	beq.n	800f212 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f20a:	436a      	muls	r2, r5
 800f20c:	2410      	movs	r4, #16
 800f20e:	fb92 f2f4 	sdiv	r2, r2, r4
 800f212:	1a9b      	subs	r3, r3, r2
 800f214:	ee07 3a90 	vmov	s15, r3
 800f218:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800f43c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800f21c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f220:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f224:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f228:	460a      	mov	r2, r1
 800f22a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f22e:	4603      	mov	r3, r0
 800f230:	f100 040c 	add.w	r4, r0, #12
 800f234:	eeb1 6a43 	vneg.f32	s12, s6
 800f238:	edd2 7a02 	vldr	s15, [r2, #8]
 800f23c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800f240:	3214      	adds	r2, #20
 800f242:	ece3 6a01 	vstmia	r3!, {s13}
 800f246:	ed52 7a02 	vldr	s15, [r2, #-8]
 800f24a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f24e:	429c      	cmp	r4, r3
 800f250:	edc3 7a02 	vstr	s15, [r3, #8]
 800f254:	ed52 7a01 	vldr	s15, [r2, #-4]
 800f258:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f25c:	edc3 7a05 	vstr	s15, [r3, #20]
 800f260:	d1ea      	bne.n	800f238 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800f262:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f264:	698b      	ldr	r3, [r1, #24]
 800f266:	edd0 4a02 	vldr	s9, [r0, #8]
 800f26a:	edd0 3a00 	vldr	s7, [r0]
 800f26e:	edd0 6a01 	vldr	s13, [r0, #4]
 800f272:	ed90 5a05 	vldr	s10, [r0, #20]
 800f276:	ed90 2a03 	vldr	s4, [r0, #12]
 800f27a:	edd0 5a04 	vldr	s11, [r0, #16]
 800f27e:	ed90 1a07 	vldr	s2, [r0, #28]
 800f282:	edd0 2a06 	vldr	s5, [r0, #24]
 800f286:	1a9b      	subs	r3, r3, r2
 800f288:	ee07 3a90 	vmov	s15, r3
 800f28c:	684b      	ldr	r3, [r1, #4]
 800f28e:	1a9b      	subs	r3, r3, r2
 800f290:	ee07 3a10 	vmov	s14, r3
 800f294:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f298:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800f29c:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f2a0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800f2a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f2a8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800f2ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f2b0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800f2b4:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f2b8:	ee32 5a45 	vsub.f32	s10, s4, s10
 800f2bc:	ee67 7a83 	vmul.f32	s15, s15, s6
 800f2c0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800f2c4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f2c6:	694a      	ldr	r2, [r1, #20]
 800f2c8:	1b13      	subs	r3, r2, r4
 800f2ca:	ee07 3a10 	vmov	s14, r3
 800f2ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f2d2:	680b      	ldr	r3, [r1, #0]
 800f2d4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f2d8:	1b1b      	subs	r3, r3, r4
 800f2da:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800f2de:	ee07 3a10 	vmov	s14, r3
 800f2e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f2e6:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f2ea:	eee6 4a87 	vfma.f32	s9, s13, s14
 800f2ee:	ee64 4a86 	vmul.f32	s9, s9, s12
 800f2f2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800f2f6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f2f8:	698b      	ldr	r3, [r1, #24]
 800f2fa:	1a9b      	subs	r3, r3, r2
 800f2fc:	ee06 3a90 	vmov	s13, r3
 800f300:	684b      	ldr	r3, [r1, #4]
 800f302:	1a9b      	subs	r3, r3, r2
 800f304:	ee07 3a10 	vmov	s14, r3
 800f308:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f30c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f310:	ee66 6a84 	vmul.f32	s13, s13, s8
 800f314:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f318:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800f31c:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f320:	ee66 6a83 	vmul.f32	s13, s13, s6
 800f324:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800f328:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f32a:	694a      	ldr	r2, [r1, #20]
 800f32c:	1b13      	subs	r3, r2, r4
 800f32e:	ee07 3a10 	vmov	s14, r3
 800f332:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f336:	680b      	ldr	r3, [r1, #0]
 800f338:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f33c:	1b1b      	subs	r3, r3, r4
 800f33e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800f342:	ee07 3a10 	vmov	s14, r3
 800f346:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f34a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f34e:	eea5 5a87 	vfma.f32	s10, s11, s14
 800f352:	edd0 5a08 	vldr	s11, [r0, #32]
 800f356:	ee25 5a06 	vmul.f32	s10, s10, s12
 800f35a:	ee31 1a65 	vsub.f32	s2, s2, s11
 800f35e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800f362:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f364:	698b      	ldr	r3, [r1, #24]
 800f366:	1a9b      	subs	r3, r3, r2
 800f368:	ee07 3a10 	vmov	s14, r3
 800f36c:	684b      	ldr	r3, [r1, #4]
 800f36e:	1a9b      	subs	r3, r3, r2
 800f370:	ee01 3a90 	vmov	s3, r3
 800f374:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f378:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800f37c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f380:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800f384:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800f388:	ee61 1a84 	vmul.f32	s3, s3, s8
 800f38c:	eea1 7a21 	vfma.f32	s14, s2, s3
 800f390:	ee27 7a03 	vmul.f32	s14, s14, s6
 800f394:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f398:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f39a:	694a      	ldr	r2, [r1, #20]
 800f39c:	1b13      	subs	r3, r2, r4
 800f39e:	ee03 3a10 	vmov	s6, r3
 800f3a2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f3a6:	680b      	ldr	r3, [r1, #0]
 800f3a8:	ee23 3a04 	vmul.f32	s6, s6, s8
 800f3ac:	1b1b      	subs	r3, r3, r4
 800f3ae:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800f3b2:	ee03 3a10 	vmov	s6, r3
 800f3b6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f3ba:	ee23 4a04 	vmul.f32	s8, s6, s8
 800f3be:	eee1 5a04 	vfma.f32	s11, s2, s8
 800f3c2:	ee25 6a86 	vmul.f32	s12, s11, s12
 800f3c6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800f3ca:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800f3ce:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800f3d2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800f3d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3da:	dd13      	ble.n	800f404 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800f3dc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f3e0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800f3e4:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f3e6:	eee3 7a87 	vfma.f32	s15, s7, s14
 800f3ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f3ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3f2:	dd15      	ble.n	800f420 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800f3f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f3f8:	6403      	str	r3, [r0, #64]	; 0x40
 800f3fa:	bd70      	pop	{r4, r5, r6, pc}
 800f3fc:	4623      	mov	r3, r4
 800f3fe:	e6fd      	b.n	800f1fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f400:	462a      	mov	r2, r5
 800f402:	e706      	b.n	800f212 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f404:	d502      	bpl.n	800f40c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f406:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f40a:	e7e9      	b.n	800f3e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f40c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f410:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f414:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f41c:	dade      	bge.n	800f3dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f41e:	e7f2      	b.n	800f406 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f420:	d502      	bpl.n	800f428 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f422:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f426:	e7e7      	b.n	800f3f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f428:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f42c:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f430:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f438:	dadc      	bge.n	800f3f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f43a:	e7f2      	b.n	800f422 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f43c:	3d800000 	.word	0x3d800000

0800f440 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f440:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f444:	2714      	movs	r7, #20
 800f446:	435f      	muls	r7, r3
 800f448:	eb02 0c07 	add.w	ip, r2, r7
 800f44c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800f450:	f115 0e0f 	adds.w	lr, r5, #15
 800f454:	f100 80a2 	bmi.w	800f59c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f458:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800f45c:	9c08      	ldr	r4, [sp, #32]
 800f45e:	f8c0 e014 	str.w	lr, [r0, #20]
 800f462:	2614      	movs	r6, #20
 800f464:	4366      	muls	r6, r4
 800f466:	eb02 0806 	add.w	r8, r2, r6
 800f46a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800f46e:	f115 040f 	adds.w	r4, r5, #15
 800f472:	f100 809f 	bmi.w	800f5b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800f476:	1124      	asrs	r4, r4, #4
 800f478:	eba4 040e 	sub.w	r4, r4, lr
 800f47c:	6184      	str	r4, [r0, #24]
 800f47e:	2c00      	cmp	r4, #0
 800f480:	f000 808a 	beq.w	800f598 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800f484:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800f488:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800f48c:	5995      	ldr	r5, [r2, r6]
 800f48e:	eba4 0809 	sub.w	r8, r4, r9
 800f492:	59d4      	ldr	r4, [r2, r7]
 800f494:	eba5 0a04 	sub.w	sl, r5, r4
 800f498:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800f49c:	fb0e fe05 	mul.w	lr, lr, r5
 800f4a0:	fb0a ee19 	mls	lr, sl, r9, lr
 800f4a4:	fb08 e404 	mla	r4, r8, r4, lr
 800f4a8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800f4ac:	3c01      	subs	r4, #1
 800f4ae:	19a4      	adds	r4, r4, r6
 800f4b0:	f100 808c 	bmi.w	800f5cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800f4b4:	fb94 fef6 	sdiv	lr, r4, r6
 800f4b8:	f8c0 e000 	str.w	lr, [r0]
 800f4bc:	fb06 441e 	mls	r4, r6, lr, r4
 800f4c0:	6104      	str	r4, [r0, #16]
 800f4c2:	2d00      	cmp	r5, #0
 800f4c4:	f2c0 8095 	blt.w	800f5f2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800f4c8:	fb95 f4f6 	sdiv	r4, r5, r6
 800f4cc:	6044      	str	r4, [r0, #4]
 800f4ce:	fb06 5514 	mls	r5, r6, r4, r5
 800f4d2:	6085      	str	r5, [r0, #8]
 800f4d4:	60c6      	str	r6, [r0, #12]
 800f4d6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800f4da:	6945      	ldr	r5, [r0, #20]
 800f4dc:	59d2      	ldr	r2, [r2, r7]
 800f4de:	eddf 6a4d 	vldr	s13, [pc, #308]	; 800f614 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800f4e2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f4e6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800f4ea:	ee07 4a10 	vmov	s14, r4
 800f4ee:	6804      	ldr	r4, [r0, #0]
 800f4f0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800f4f4:	ee07 2a90 	vmov	s15, r2
 800f4f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f4fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f500:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800f504:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f508:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f50c:	edd3 6a00 	vldr	s13, [r3]
 800f510:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f514:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 800f518:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f51c:	edc0 6a07 	vstr	s13, [r0, #28]
 800f520:	edd0 6a01 	vldr	s13, [r0, #4]
 800f524:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 800f528:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f52c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f530:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f534:	ed80 6a08 	vstr	s12, [r0, #32]
 800f538:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f53a:	6242      	str	r2, [r0, #36]	; 0x24
 800f53c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 800f540:	ed93 6a03 	vldr	s12, [r3, #12]
 800f544:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f548:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f54c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f550:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 800f554:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f558:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 800f55c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f560:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 800f564:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f566:	6302      	str	r2, [r0, #48]	; 0x30
 800f568:	ed93 6a06 	vldr	s12, [r3, #24]
 800f56c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 800f570:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f574:	eeb0 7a46 	vmov.f32	s14, s12
 800f578:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 800f57c:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f580:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f584:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 800f588:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 800f58c:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f590:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 800f594:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800f596:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f598:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f59c:	f1c5 0501 	rsb	r5, r5, #1
 800f5a0:	f015 050f 	ands.w	r5, r5, #15
 800f5a4:	bf18      	it	ne
 800f5a6:	2501      	movne	r5, #1
 800f5a8:	2410      	movs	r4, #16
 800f5aa:	fb9e fef4 	sdiv	lr, lr, r4
 800f5ae:	ebae 0e05 	sub.w	lr, lr, r5
 800f5b2:	e753      	b.n	800f45c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800f5b4:	f1c5 0501 	rsb	r5, r5, #1
 800f5b8:	f015 050f 	ands.w	r5, r5, #15
 800f5bc:	bf18      	it	ne
 800f5be:	2501      	movne	r5, #1
 800f5c0:	f04f 0910 	mov.w	r9, #16
 800f5c4:	fb94 f4f9 	sdiv	r4, r4, r9
 800f5c8:	1b64      	subs	r4, r4, r5
 800f5ca:	e755      	b.n	800f478 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800f5cc:	4264      	negs	r4, r4
 800f5ce:	fb94 fef6 	sdiv	lr, r4, r6
 800f5d2:	f1ce 0800 	rsb	r8, lr, #0
 800f5d6:	fb06 441e 	mls	r4, r6, lr, r4
 800f5da:	f8c0 8000 	str.w	r8, [r0]
 800f5de:	6104      	str	r4, [r0, #16]
 800f5e0:	2c00      	cmp	r4, #0
 800f5e2:	f43f af6e 	beq.w	800f4c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800f5e6:	ea6f 0e0e 	mvn.w	lr, lr
 800f5ea:	f8c0 e000 	str.w	lr, [r0]
 800f5ee:	1b34      	subs	r4, r6, r4
 800f5f0:	e766      	b.n	800f4c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800f5f2:	426d      	negs	r5, r5
 800f5f4:	fb95 f4f6 	sdiv	r4, r5, r6
 800f5f8:	f1c4 0e00 	rsb	lr, r4, #0
 800f5fc:	fb06 5514 	mls	r5, r6, r4, r5
 800f600:	f8c0 e004 	str.w	lr, [r0, #4]
 800f604:	6085      	str	r5, [r0, #8]
 800f606:	2d00      	cmp	r5, #0
 800f608:	f43f af64 	beq.w	800f4d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800f60c:	43e4      	mvns	r4, r4
 800f60e:	6044      	str	r4, [r0, #4]
 800f610:	1b75      	subs	r5, r6, r5
 800f612:	e75e      	b.n	800f4d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800f614:	3d800000 	.word	0x3d800000

0800f618 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f618:	4602      	mov	r2, r0
 800f61a:	b148      	cbz	r0, 800f630 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f61c:	2300      	movs	r3, #0
 800f61e:	b298      	uxth	r0, r3
 800f620:	3301      	adds	r3, #1
 800f622:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f626:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f62a:	2900      	cmp	r1, #0
 800f62c:	d1f7      	bne.n	800f61e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f62e:	4770      	bx	lr
 800f630:	4770      	bx	lr

0800f632 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f632:	b530      	push	{r4, r5, lr}
 800f634:	4604      	mov	r4, r0
 800f636:	b159      	cbz	r1, 800f650 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f638:	b148      	cbz	r0, 800f64e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f63a:	2300      	movs	r3, #0
 800f63c:	b298      	uxth	r0, r3
 800f63e:	4282      	cmp	r2, r0
 800f640:	d905      	bls.n	800f64e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f642:	5ccd      	ldrb	r5, [r1, r3]
 800f644:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f648:	3301      	adds	r3, #1
 800f64a:	2d00      	cmp	r5, #0
 800f64c:	d1f6      	bne.n	800f63c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f64e:	bd30      	pop	{r4, r5, pc}
 800f650:	4608      	mov	r0, r1
 800f652:	e7fc      	b.n	800f64e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f654 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800f654:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f656:	b08b      	sub	sp, #44	; 0x2c
 800f658:	468c      	mov	ip, r1
 800f65a:	2100      	movs	r1, #0
 800f65c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f660:	ae01      	add	r6, sp, #4
 800f662:	211f      	movs	r1, #31
 800f664:	fbb0 f7f3 	udiv	r7, r0, r3
 800f668:	fb03 0517 	mls	r5, r3, r7, r0
 800f66c:	b2ec      	uxtb	r4, r5
 800f66e:	2d09      	cmp	r5, #9
 800f670:	bfd4      	ite	le
 800f672:	3430      	addle	r4, #48	; 0x30
 800f674:	3457      	addgt	r4, #87	; 0x57
 800f676:	b2e4      	uxtb	r4, r4
 800f678:	558c      	strb	r4, [r1, r6]
 800f67a:	4638      	mov	r0, r7
 800f67c:	1e4c      	subs	r4, r1, #1
 800f67e:	b92f      	cbnz	r7, 800f68c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800f680:	4431      	add	r1, r6
 800f682:	4660      	mov	r0, ip
 800f684:	f7ff ffd5 	bl	800f632 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f688:	b00b      	add	sp, #44	; 0x2c
 800f68a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f68c:	4621      	mov	r1, r4
 800f68e:	e7e9      	b.n	800f664 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800f690 <_ZN8touchgfx7Unicode4itoaElPtti>:
 800f690:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f692:	4607      	mov	r7, r0
 800f694:	b08b      	sub	sp, #44	; 0x2c
 800f696:	4608      	mov	r0, r1
 800f698:	b341      	cbz	r1, 800f6ec <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f69a:	1e99      	subs	r1, r3, #2
 800f69c:	2922      	cmp	r1, #34	; 0x22
 800f69e:	d825      	bhi.n	800f6ec <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f6a0:	2100      	movs	r1, #0
 800f6a2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f6a6:	463c      	mov	r4, r7
 800f6a8:	261f      	movs	r6, #31
 800f6aa:	f10d 0c04 	add.w	ip, sp, #4
 800f6ae:	fb94 fef3 	sdiv	lr, r4, r3
 800f6b2:	fb03 441e 	mls	r4, r3, lr, r4
 800f6b6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f6ba:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f6be:	b2ec      	uxtb	r4, r5
 800f6c0:	2d09      	cmp	r5, #9
 800f6c2:	bfd4      	ite	le
 800f6c4:	3430      	addle	r4, #48	; 0x30
 800f6c6:	3457      	addgt	r4, #87	; 0x57
 800f6c8:	b2e4      	uxtb	r4, r4
 800f6ca:	f80c 4006 	strb.w	r4, [ip, r6]
 800f6ce:	4674      	mov	r4, lr
 800f6d0:	1e71      	subs	r1, r6, #1
 800f6d2:	b96c      	cbnz	r4, 800f6f0 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800f6d4:	2f00      	cmp	r7, #0
 800f6d6:	da05      	bge.n	800f6e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800f6d8:	ab0a      	add	r3, sp, #40	; 0x28
 800f6da:	4419      	add	r1, r3
 800f6dc:	232d      	movs	r3, #45	; 0x2d
 800f6de:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f6e2:	1eb1      	subs	r1, r6, #2
 800f6e4:	3101      	adds	r1, #1
 800f6e6:	4461      	add	r1, ip
 800f6e8:	f7ff ffa3 	bl	800f632 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f6ec:	b00b      	add	sp, #44	; 0x2c
 800f6ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6f0:	460e      	mov	r6, r1
 800f6f2:	e7dc      	b.n	800f6ae <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800f6f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6f8:	4691      	mov	r9, r2
 800f6fa:	b085      	sub	sp, #20
 800f6fc:	6802      	ldr	r2, [r0, #0]
 800f6fe:	9201      	str	r2, [sp, #4]
 800f700:	4688      	mov	r8, r1
 800f702:	4683      	mov	fp, r0
 800f704:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f708:	9103      	str	r1, [sp, #12]
 800f70a:	4610      	mov	r0, r2
 800f70c:	461c      	mov	r4, r3
 800f70e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f712:	9302      	str	r3, [sp, #8]
 800f714:	f7ff ff80 	bl	800f618 <_ZN8touchgfx7Unicode6strlenEPKt>
 800f718:	f1b8 0f00 	cmp.w	r8, #0
 800f71c:	bf0c      	ite	eq
 800f71e:	4684      	moveq	ip, r0
 800f720:	f100 0c01 	addne.w	ip, r0, #1
 800f724:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800f728:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800f72c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f72e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f730:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800f734:	9903      	ldr	r1, [sp, #12]
 800f736:	fa1f fc8c 	uxth.w	ip, ip
 800f73a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f73e:	d041      	beq.n	800f7c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f740:	d834      	bhi.n	800f7ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f742:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800f746:	d059      	beq.n	800f7fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f748:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800f74c:	d03a      	beq.n	800f7c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f74e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800f752:	d034      	beq.n	800f7be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f754:	2400      	movs	r4, #0
 800f756:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f75a:	3a01      	subs	r2, #1
 800f75c:	b169      	cbz	r1, 800f77a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f75e:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f760:	458c      	cmp	ip, r1
 800f762:	da09      	bge.n	800f778 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f764:	eba1 010c 	sub.w	r1, r1, ip
 800f768:	b289      	uxth	r1, r1
 800f76a:	b933      	cbnz	r3, 800f77a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f76c:	2e00      	cmp	r6, #0
 800f76e:	d051      	beq.n	800f814 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f770:	2800      	cmp	r0, #0
 800f772:	d04f      	beq.n	800f814 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f774:	440c      	add	r4, r1
 800f776:	b2a4      	uxth	r4, r4
 800f778:	2100      	movs	r1, #0
 800f77a:	682b      	ldr	r3, [r5, #0]
 800f77c:	4293      	cmp	r3, r2
 800f77e:	da07      	bge.n	800f790 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f780:	f1b8 0f00 	cmp.w	r8, #0
 800f784:	d004      	beq.n	800f790 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f786:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f78a:	682b      	ldr	r3, [r5, #0]
 800f78c:	3301      	adds	r3, #1
 800f78e:	602b      	str	r3, [r5, #0]
 800f790:	2730      	movs	r7, #48	; 0x30
 800f792:	2c00      	cmp	r4, #0
 800f794:	d04e      	beq.n	800f834 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f796:	682e      	ldr	r6, [r5, #0]
 800f798:	3c01      	subs	r4, #1
 800f79a:	42b2      	cmp	r2, r6
 800f79c:	b2a4      	uxth	r4, r4
 800f79e:	dd49      	ble.n	800f834 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f7a0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f7a4:	682b      	ldr	r3, [r5, #0]
 800f7a6:	3301      	adds	r3, #1
 800f7a8:	602b      	str	r3, [r5, #0]
 800f7aa:	e7f2      	b.n	800f792 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f7ac:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800f7b0:	d01d      	beq.n	800f7ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f7b2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f7b6:	d002      	beq.n	800f7be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f7b8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f7bc:	e7c9      	b.n	800f752 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f7be:	4684      	mov	ip, r0
 800f7c0:	f04f 0800 	mov.w	r8, #0
 800f7c4:	2c00      	cmp	r4, #0
 800f7c6:	d0c6      	beq.n	800f756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f7c8:	b947      	cbnz	r7, 800f7dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f7ca:	2801      	cmp	r0, #1
 800f7cc:	d106      	bne.n	800f7dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f7ce:	8814      	ldrh	r4, [r2, #0]
 800f7d0:	2c30      	cmp	r4, #48	; 0x30
 800f7d2:	bf02      	ittt	eq
 800f7d4:	3202      	addeq	r2, #2
 800f7d6:	f8cb 2000 	streq.w	r2, [fp]
 800f7da:	4638      	moveq	r0, r7
 800f7dc:	45bc      	cmp	ip, r7
 800f7de:	da14      	bge.n	800f80a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f7e0:	b2bf      	uxth	r7, r7
 800f7e2:	eba7 040c 	sub.w	r4, r7, ip
 800f7e6:	b2a4      	uxth	r4, r4
 800f7e8:	46bc      	mov	ip, r7
 800f7ea:	2600      	movs	r6, #0
 800f7ec:	e7b3      	b.n	800f756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f7ee:	4684      	mov	ip, r0
 800f7f0:	b16c      	cbz	r4, 800f80e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f7f2:	42b8      	cmp	r0, r7
 800f7f4:	dd00      	ble.n	800f7f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f7f6:	b2b8      	uxth	r0, r7
 800f7f8:	2400      	movs	r4, #0
 800f7fa:	e003      	b.n	800f804 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f7fc:	f04f 0c01 	mov.w	ip, #1
 800f800:	2400      	movs	r4, #0
 800f802:	4660      	mov	r0, ip
 800f804:	4626      	mov	r6, r4
 800f806:	46a0      	mov	r8, r4
 800f808:	e7a5      	b.n	800f756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f80a:	2400      	movs	r4, #0
 800f80c:	e7ed      	b.n	800f7ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f80e:	4626      	mov	r6, r4
 800f810:	46a0      	mov	r8, r4
 800f812:	e7a0      	b.n	800f756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f814:	2900      	cmp	r1, #0
 800f816:	d0b0      	beq.n	800f77a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f818:	2720      	movs	r7, #32
 800f81a:	682e      	ldr	r6, [r5, #0]
 800f81c:	2900      	cmp	r1, #0
 800f81e:	d0ac      	beq.n	800f77a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f820:	3901      	subs	r1, #1
 800f822:	4296      	cmp	r6, r2
 800f824:	b289      	uxth	r1, r1
 800f826:	daa7      	bge.n	800f778 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f828:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f82c:	682b      	ldr	r3, [r5, #0]
 800f82e:	3301      	adds	r3, #1
 800f830:	602b      	str	r3, [r5, #0]
 800f832:	e7f2      	b.n	800f81a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f834:	b188      	cbz	r0, 800f85a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f836:	682b      	ldr	r3, [r5, #0]
 800f838:	3801      	subs	r0, #1
 800f83a:	429a      	cmp	r2, r3
 800f83c:	b280      	uxth	r0, r0
 800f83e:	dd0c      	ble.n	800f85a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f840:	f8db 3000 	ldr.w	r3, [fp]
 800f844:	1c9c      	adds	r4, r3, #2
 800f846:	f8cb 4000 	str.w	r4, [fp]
 800f84a:	881c      	ldrh	r4, [r3, #0]
 800f84c:	682b      	ldr	r3, [r5, #0]
 800f84e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f852:	682b      	ldr	r3, [r5, #0]
 800f854:	3301      	adds	r3, #1
 800f856:	602b      	str	r3, [r5, #0]
 800f858:	e7ec      	b.n	800f834 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f85a:	2620      	movs	r6, #32
 800f85c:	b151      	cbz	r1, 800f874 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f85e:	6828      	ldr	r0, [r5, #0]
 800f860:	3901      	subs	r1, #1
 800f862:	4282      	cmp	r2, r0
 800f864:	b289      	uxth	r1, r1
 800f866:	dd05      	ble.n	800f874 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f868:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f86c:	682b      	ldr	r3, [r5, #0]
 800f86e:	3301      	adds	r3, #1
 800f870:	602b      	str	r3, [r5, #0]
 800f872:	e7f3      	b.n	800f85c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f874:	b005      	add	sp, #20
 800f876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f87a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f87a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f87e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f882:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f886:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f88a:	2400      	movs	r4, #0
 800f88c:	8014      	strh	r4, [r2, #0]
 800f88e:	701c      	strb	r4, [r3, #0]
 800f890:	f888 4000 	strb.w	r4, [r8]
 800f894:	f88c 4000 	strb.w	r4, [ip]
 800f898:	f88e 4000 	strb.w	r4, [lr]
 800f89c:	703c      	strb	r4, [r7, #0]
 800f89e:	6804      	ldr	r4, [r0, #0]
 800f8a0:	b1a4      	cbz	r4, 800f8cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f8a2:	8824      	ldrh	r4, [r4, #0]
 800f8a4:	f04f 0901 	mov.w	r9, #1
 800f8a8:	b314      	cbz	r4, 800f8f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f8aa:	2c2b      	cmp	r4, #43	; 0x2b
 800f8ac:	d001      	beq.n	800f8b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f8ae:	2c20      	cmp	r4, #32
 800f8b0:	d110      	bne.n	800f8d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f8b2:	8014      	strh	r4, [r2, #0]
 800f8b4:	6804      	ldr	r4, [r0, #0]
 800f8b6:	b10c      	cbz	r4, 800f8bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f8b8:	3402      	adds	r4, #2
 800f8ba:	6004      	str	r4, [r0, #0]
 800f8bc:	680c      	ldr	r4, [r1, #0]
 800f8be:	b10c      	cbz	r4, 800f8c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f8c0:	3401      	adds	r4, #1
 800f8c2:	600c      	str	r4, [r1, #0]
 800f8c4:	6804      	ldr	r4, [r0, #0]
 800f8c6:	b17c      	cbz	r4, 800f8e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f8c8:	8824      	ldrh	r4, [r4, #0]
 800f8ca:	e7ed      	b.n	800f8a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f8cc:	680c      	ldr	r4, [r1, #0]
 800f8ce:	b17c      	cbz	r4, 800f8f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f8d0:	7824      	ldrb	r4, [r4, #0]
 800f8d2:	e7e7      	b.n	800f8a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f8d4:	2c2d      	cmp	r4, #45	; 0x2d
 800f8d6:	d102      	bne.n	800f8de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f8d8:	f883 9000 	strb.w	r9, [r3]
 800f8dc:	e7ea      	b.n	800f8b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f8de:	2c23      	cmp	r4, #35	; 0x23
 800f8e0:	d107      	bne.n	800f8f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f8e2:	f888 9000 	strb.w	r9, [r8]
 800f8e6:	e7e5      	b.n	800f8b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f8e8:	680c      	ldr	r4, [r1, #0]
 800f8ea:	b10c      	cbz	r4, 800f8f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f8ec:	7824      	ldrb	r4, [r4, #0]
 800f8ee:	e7db      	b.n	800f8a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f8f0:	2400      	movs	r4, #0
 800f8f2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f8f6:	2b09      	cmp	r3, #9
 800f8f8:	d901      	bls.n	800f8fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f8fa:	2c2a      	cmp	r4, #42	; 0x2a
 800f8fc:	d122      	bne.n	800f944 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f8fe:	2301      	movs	r3, #1
 800f900:	2c30      	cmp	r4, #48	; 0x30
 800f902:	f88e 3000 	strb.w	r3, [lr]
 800f906:	d10d      	bne.n	800f924 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f908:	f88c 3000 	strb.w	r3, [ip]
 800f90c:	6803      	ldr	r3, [r0, #0]
 800f90e:	b10b      	cbz	r3, 800f914 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f910:	3302      	adds	r3, #2
 800f912:	6003      	str	r3, [r0, #0]
 800f914:	680b      	ldr	r3, [r1, #0]
 800f916:	b10b      	cbz	r3, 800f91c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f918:	3301      	adds	r3, #1
 800f91a:	600b      	str	r3, [r1, #0]
 800f91c:	6803      	ldr	r3, [r0, #0]
 800f91e:	2b00      	cmp	r3, #0
 800f920:	d02f      	beq.n	800f982 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f922:	881c      	ldrh	r4, [r3, #0]
 800f924:	2c2a      	cmp	r4, #42	; 0x2a
 800f926:	d135      	bne.n	800f994 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f928:	f04f 33ff 	mov.w	r3, #4294967295
 800f92c:	6033      	str	r3, [r6, #0]
 800f92e:	6803      	ldr	r3, [r0, #0]
 800f930:	b10b      	cbz	r3, 800f936 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f932:	3302      	adds	r3, #2
 800f934:	6003      	str	r3, [r0, #0]
 800f936:	680b      	ldr	r3, [r1, #0]
 800f938:	b10b      	cbz	r3, 800f93e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f93a:	3301      	adds	r3, #1
 800f93c:	600b      	str	r3, [r1, #0]
 800f93e:	6803      	ldr	r3, [r0, #0]
 800f940:	b31b      	cbz	r3, 800f98a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f942:	881c      	ldrh	r4, [r3, #0]
 800f944:	2c2e      	cmp	r4, #46	; 0x2e
 800f946:	d11a      	bne.n	800f97e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f948:	2301      	movs	r3, #1
 800f94a:	703b      	strb	r3, [r7, #0]
 800f94c:	6803      	ldr	r3, [r0, #0]
 800f94e:	b10b      	cbz	r3, 800f954 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f950:	3302      	adds	r3, #2
 800f952:	6003      	str	r3, [r0, #0]
 800f954:	680b      	ldr	r3, [r1, #0]
 800f956:	b10b      	cbz	r3, 800f95c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f958:	3301      	adds	r3, #1
 800f95a:	600b      	str	r3, [r1, #0]
 800f95c:	6803      	ldr	r3, [r0, #0]
 800f95e:	2b00      	cmp	r3, #0
 800f960:	d036      	beq.n	800f9d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f962:	881b      	ldrh	r3, [r3, #0]
 800f964:	2b2a      	cmp	r3, #42	; 0x2a
 800f966:	d137      	bne.n	800f9d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f968:	f04f 33ff 	mov.w	r3, #4294967295
 800f96c:	602b      	str	r3, [r5, #0]
 800f96e:	6803      	ldr	r3, [r0, #0]
 800f970:	b10b      	cbz	r3, 800f976 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f972:	3302      	adds	r3, #2
 800f974:	6003      	str	r3, [r0, #0]
 800f976:	680b      	ldr	r3, [r1, #0]
 800f978:	b10b      	cbz	r3, 800f97e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f97a:	3301      	adds	r3, #1
 800f97c:	600b      	str	r3, [r1, #0]
 800f97e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f982:	680c      	ldr	r4, [r1, #0]
 800f984:	b134      	cbz	r4, 800f994 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f986:	7824      	ldrb	r4, [r4, #0]
 800f988:	e7cc      	b.n	800f924 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f98a:	680b      	ldr	r3, [r1, #0]
 800f98c:	2b00      	cmp	r3, #0
 800f98e:	d0f6      	beq.n	800f97e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f990:	781c      	ldrb	r4, [r3, #0]
 800f992:	e7d7      	b.n	800f944 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f994:	2300      	movs	r3, #0
 800f996:	6033      	str	r3, [r6, #0]
 800f998:	220a      	movs	r2, #10
 800f99a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f99e:	fa1f f38c 	uxth.w	r3, ip
 800f9a2:	2b09      	cmp	r3, #9
 800f9a4:	d8ce      	bhi.n	800f944 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f9a6:	6833      	ldr	r3, [r6, #0]
 800f9a8:	fb02 c303 	mla	r3, r2, r3, ip
 800f9ac:	6033      	str	r3, [r6, #0]
 800f9ae:	6803      	ldr	r3, [r0, #0]
 800f9b0:	b10b      	cbz	r3, 800f9b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f9b2:	3302      	adds	r3, #2
 800f9b4:	6003      	str	r3, [r0, #0]
 800f9b6:	680b      	ldr	r3, [r1, #0]
 800f9b8:	b10b      	cbz	r3, 800f9be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f9ba:	3301      	adds	r3, #1
 800f9bc:	600b      	str	r3, [r1, #0]
 800f9be:	6803      	ldr	r3, [r0, #0]
 800f9c0:	b10b      	cbz	r3, 800f9c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f9c2:	881c      	ldrh	r4, [r3, #0]
 800f9c4:	e7e9      	b.n	800f99a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f9c6:	680c      	ldr	r4, [r1, #0]
 800f9c8:	2c00      	cmp	r4, #0
 800f9ca:	d0e6      	beq.n	800f99a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f9cc:	7824      	ldrb	r4, [r4, #0]
 800f9ce:	e7e4      	b.n	800f99a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f9d0:	680b      	ldr	r3, [r1, #0]
 800f9d2:	b10b      	cbz	r3, 800f9d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f9d4:	781b      	ldrb	r3, [r3, #0]
 800f9d6:	e7c5      	b.n	800f964 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f9d8:	2200      	movs	r2, #0
 800f9da:	602a      	str	r2, [r5, #0]
 800f9dc:	240a      	movs	r4, #10
 800f9de:	3b30      	subs	r3, #48	; 0x30
 800f9e0:	b29e      	uxth	r6, r3
 800f9e2:	2e09      	cmp	r6, #9
 800f9e4:	682a      	ldr	r2, [r5, #0]
 800f9e6:	d813      	bhi.n	800fa10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f9e8:	fb04 3302 	mla	r3, r4, r2, r3
 800f9ec:	602b      	str	r3, [r5, #0]
 800f9ee:	6803      	ldr	r3, [r0, #0]
 800f9f0:	b10b      	cbz	r3, 800f9f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f9f2:	3302      	adds	r3, #2
 800f9f4:	6003      	str	r3, [r0, #0]
 800f9f6:	680b      	ldr	r3, [r1, #0]
 800f9f8:	b10b      	cbz	r3, 800f9fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f9fa:	3301      	adds	r3, #1
 800f9fc:	600b      	str	r3, [r1, #0]
 800f9fe:	6803      	ldr	r3, [r0, #0]
 800fa00:	b10b      	cbz	r3, 800fa06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800fa02:	881b      	ldrh	r3, [r3, #0]
 800fa04:	e7eb      	b.n	800f9de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fa06:	680b      	ldr	r3, [r1, #0]
 800fa08:	2b00      	cmp	r3, #0
 800fa0a:	d0e8      	beq.n	800f9de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fa0c:	781b      	ldrb	r3, [r3, #0]
 800fa0e:	e7e6      	b.n	800f9de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fa10:	2a06      	cmp	r2, #6
 800fa12:	bfa8      	it	ge
 800fa14:	2206      	movge	r2, #6
 800fa16:	602a      	str	r2, [r5, #0]
 800fa18:	e7b1      	b.n	800f97e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800fa1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800fa1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa1e:	b0a3      	sub	sp, #140	; 0x8c
 800fa20:	2600      	movs	r6, #0
 800fa22:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800fa26:	4607      	mov	r7, r0
 800fa28:	4688      	mov	r8, r1
 800fa2a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800fa2e:	4631      	mov	r1, r6
 800fa30:	2242      	movs	r2, #66	; 0x42
 800fa32:	4648      	mov	r0, r9
 800fa34:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800fa36:	960d      	str	r6, [sp, #52]	; 0x34
 800fa38:	f00c fe70 	bl	801c71c <memset>
 800fa3c:	b15f      	cbz	r7, 800fa56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800fa3e:	f108 3aff 	add.w	sl, r8, #4294967295
 800fa42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fa44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fa46:	b152      	cbz	r2, 800fa5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800fa48:	8812      	ldrh	r2, [r2, #0]
 800fa4a:	b10a      	cbz	r2, 800fa50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800fa4c:	459a      	cmp	sl, r3
 800fa4e:	dc2e      	bgt.n	800faae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800fa50:	2200      	movs	r2, #0
 800fa52:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800fa56:	4638      	mov	r0, r7
 800fa58:	b023      	add	sp, #140	; 0x8c
 800fa5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa5e:	9a08      	ldr	r2, [sp, #32]
 800fa60:	2a00      	cmp	r2, #0
 800fa62:	d0f5      	beq.n	800fa50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800fa64:	7812      	ldrb	r2, [r2, #0]
 800fa66:	e7f0      	b.n	800fa4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800fa68:	2d00      	cmp	r5, #0
 800fa6a:	d0ea      	beq.n	800fa42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fa6c:	782a      	ldrb	r2, [r5, #0]
 800fa6e:	b142      	cbz	r2, 800fa82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800fa70:	2a25      	cmp	r2, #37	; 0x25
 800fa72:	d001      	beq.n	800fa78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800fa74:	459a      	cmp	sl, r3
 800fa76:	dc08      	bgt.n	800fa8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800fa78:	f1bb 0f00 	cmp.w	fp, #0
 800fa7c:	d121      	bne.n	800fac2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800fa7e:	2d00      	cmp	r5, #0
 800fa80:	d0df      	beq.n	800fa42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fa82:	782a      	ldrb	r2, [r5, #0]
 800fa84:	f04f 0b00 	mov.w	fp, #0
 800fa88:	e01d      	b.n	800fac6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800fa8a:	f1bb 0f00 	cmp.w	fp, #0
 800fa8e:	d078      	beq.n	800fb82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800fa90:	f8bb 2000 	ldrh.w	r2, [fp]
 800fa94:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800fa98:	f1bb 0f00 	cmp.w	fp, #0
 800fa9c:	d002      	beq.n	800faa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800fa9e:	f10b 0202 	add.w	r2, fp, #2
 800faa2:	9209      	str	r2, [sp, #36]	; 0x24
 800faa4:	b10d      	cbz	r5, 800faaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800faa6:	3501      	adds	r5, #1
 800faa8:	9508      	str	r5, [sp, #32]
 800faaa:	3301      	adds	r3, #1
 800faac:	930d      	str	r3, [sp, #52]	; 0x34
 800faae:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800fab2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fab4:	f1bb 0f00 	cmp.w	fp, #0
 800fab8:	d0d6      	beq.n	800fa68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800faba:	f8bb 2000 	ldrh.w	r2, [fp]
 800fabe:	2a00      	cmp	r2, #0
 800fac0:	d1d6      	bne.n	800fa70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800fac2:	f8bb 2000 	ldrh.w	r2, [fp]
 800fac6:	2a00      	cmp	r2, #0
 800fac8:	d0bb      	beq.n	800fa42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800faca:	459a      	cmp	sl, r3
 800facc:	ddb9      	ble.n	800fa42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800face:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800fad2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800fad6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800fada:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800fade:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800fae2:	960e      	str	r6, [sp, #56]	; 0x38
 800fae4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800fae8:	960f      	str	r6, [sp, #60]	; 0x3c
 800faea:	f1bb 0f00 	cmp.w	fp, #0
 800faee:	d002      	beq.n	800faf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800faf0:	f10b 0302 	add.w	r3, fp, #2
 800faf4:	9309      	str	r3, [sp, #36]	; 0x24
 800faf6:	b10d      	cbz	r5, 800fafc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800faf8:	1c6b      	adds	r3, r5, #1
 800fafa:	9308      	str	r3, [sp, #32]
 800fafc:	ab0f      	add	r3, sp, #60	; 0x3c
 800fafe:	9305      	str	r3, [sp, #20]
 800fb00:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800fb04:	9304      	str	r3, [sp, #16]
 800fb06:	ab0e      	add	r3, sp, #56	; 0x38
 800fb08:	9303      	str	r3, [sp, #12]
 800fb0a:	ab0c      	add	r3, sp, #48	; 0x30
 800fb0c:	9302      	str	r3, [sp, #8]
 800fb0e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800fb12:	9301      	str	r3, [sp, #4]
 800fb14:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800fb18:	9300      	str	r3, [sp, #0]
 800fb1a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800fb1e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800fb22:	a908      	add	r1, sp, #32
 800fb24:	a809      	add	r0, sp, #36	; 0x24
 800fb26:	f7ff fea8 	bl	800f87a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800fb2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb2c:	2b00      	cmp	r3, #0
 800fb2e:	bfbe      	ittt	lt
 800fb30:	6823      	ldrlt	r3, [r4, #0]
 800fb32:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800fb36:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fb38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fb3a:	bfb8      	it	lt
 800fb3c:	3404      	addlt	r4, #4
 800fb3e:	2b00      	cmp	r3, #0
 800fb40:	bfb8      	it	lt
 800fb42:	6823      	ldrlt	r3, [r4, #0]
 800fb44:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800fb48:	bfbe      	ittt	lt
 800fb4a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800fb4e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800fb50:	3404      	addlt	r4, #4
 800fb52:	b1d9      	cbz	r1, 800fb8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800fb54:	880b      	ldrh	r3, [r1, #0]
 800fb56:	2b69      	cmp	r3, #105	; 0x69
 800fb58:	d01f      	beq.n	800fb9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fb5a:	d82f      	bhi.n	800fbbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800fb5c:	2b58      	cmp	r3, #88	; 0x58
 800fb5e:	d01c      	beq.n	800fb9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fb60:	d818      	bhi.n	800fb94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800fb62:	2b25      	cmp	r3, #37	; 0x25
 800fb64:	d034      	beq.n	800fbd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800fb66:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800fb6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fb6c:	f1bb 0f00 	cmp.w	fp, #0
 800fb70:	f000 80b8 	beq.w	800fce4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800fb74:	f8bb 5000 	ldrh.w	r5, [fp]
 800fb78:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800fb7c:	3301      	adds	r3, #1
 800fb7e:	930d      	str	r3, [sp, #52]	; 0x34
 800fb80:	e029      	b.n	800fbd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800fb82:	b10d      	cbz	r5, 800fb88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800fb84:	782a      	ldrb	r2, [r5, #0]
 800fb86:	e785      	b.n	800fa94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800fb88:	462a      	mov	r2, r5
 800fb8a:	e783      	b.n	800fa94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800fb8c:	2a00      	cmp	r2, #0
 800fb8e:	d0ea      	beq.n	800fb66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fb90:	7813      	ldrb	r3, [r2, #0]
 800fb92:	e7e0      	b.n	800fb56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800fb94:	3b63      	subs	r3, #99	; 0x63
 800fb96:	2b01      	cmp	r3, #1
 800fb98:	d8e5      	bhi.n	800fb66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fb9a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800fb9e:	b329      	cbz	r1, 800fbec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800fba0:	880b      	ldrh	r3, [r1, #0]
 800fba2:	2b69      	cmp	r3, #105	; 0x69
 800fba4:	d063      	beq.n	800fc6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800fba6:	d825      	bhi.n	800fbf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800fba8:	2b63      	cmp	r3, #99	; 0x63
 800fbaa:	d038      	beq.n	800fc1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800fbac:	2b64      	cmp	r3, #100	; 0x64
 800fbae:	d05e      	beq.n	800fc6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800fbb0:	2b58      	cmp	r3, #88	; 0x58
 800fbb2:	d07b      	beq.n	800fcac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800fbb4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800fbb8:	4625      	mov	r5, r4
 800fbba:	e036      	b.n	800fc2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fbbc:	2b73      	cmp	r3, #115	; 0x73
 800fbbe:	d0ec      	beq.n	800fb9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fbc0:	d802      	bhi.n	800fbc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800fbc2:	2b6f      	cmp	r3, #111	; 0x6f
 800fbc4:	d1cf      	bne.n	800fb66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fbc6:	e7e8      	b.n	800fb9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fbc8:	2b75      	cmp	r3, #117	; 0x75
 800fbca:	d0e6      	beq.n	800fb9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fbcc:	2b78      	cmp	r3, #120	; 0x78
 800fbce:	e7f9      	b.n	800fbc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800fbd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fbd2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800fbd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fbd8:	b10b      	cbz	r3, 800fbde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800fbda:	3302      	adds	r3, #2
 800fbdc:	9309      	str	r3, [sp, #36]	; 0x24
 800fbde:	9b08      	ldr	r3, [sp, #32]
 800fbe0:	2b00      	cmp	r3, #0
 800fbe2:	f43f af2e 	beq.w	800fa42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fbe6:	3301      	adds	r3, #1
 800fbe8:	9308      	str	r3, [sp, #32]
 800fbea:	e72a      	b.n	800fa42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fbec:	2a00      	cmp	r2, #0
 800fbee:	d0e1      	beq.n	800fbb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fbf0:	7813      	ldrb	r3, [r2, #0]
 800fbf2:	e7d6      	b.n	800fba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800fbf4:	2b73      	cmp	r3, #115	; 0x73
 800fbf6:	d036      	beq.n	800fc66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800fbf8:	d807      	bhi.n	800fc0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800fbfa:	2b6f      	cmp	r3, #111	; 0x6f
 800fbfc:	d1da      	bne.n	800fbb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fbfe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fc00:	1d25      	adds	r5, r4, #4
 800fc02:	eba8 0202 	sub.w	r2, r8, r2
 800fc06:	2308      	movs	r3, #8
 800fc08:	e04a      	b.n	800fca0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fc0a:	2b75      	cmp	r3, #117	; 0x75
 800fc0c:	d043      	beq.n	800fc96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800fc0e:	2b78      	cmp	r3, #120	; 0x78
 800fc10:	d1d0      	bne.n	800fbb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fc12:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fc14:	1d25      	adds	r5, r4, #4
 800fc16:	eba8 0202 	sub.w	r2, r8, r2
 800fc1a:	2310      	movs	r3, #16
 800fc1c:	e040      	b.n	800fca0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fc1e:	6823      	ldr	r3, [r4, #0]
 800fc20:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800fc24:	1d25      	adds	r5, r4, #4
 800fc26:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800fc2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fc2c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800fc30:	2b00      	cmp	r3, #0
 800fc32:	d052      	beq.n	800fcda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800fc34:	881a      	ldrh	r2, [r3, #0]
 800fc36:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800fc3a:	a80d      	add	r0, sp, #52	; 0x34
 800fc3c:	9005      	str	r0, [sp, #20]
 800fc3e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800fc42:	9004      	str	r0, [sp, #16]
 800fc44:	980e      	ldr	r0, [sp, #56]	; 0x38
 800fc46:	9003      	str	r0, [sp, #12]
 800fc48:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800fc4c:	9002      	str	r0, [sp, #8]
 800fc4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800fc50:	9001      	str	r0, [sp, #4]
 800fc52:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800fc56:	9000      	str	r0, [sp, #0]
 800fc58:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800fc5c:	a810      	add	r0, sp, #64	; 0x40
 800fc5e:	f7ff fd49 	bl	800f6f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800fc62:	462c      	mov	r4, r5
 800fc64:	e7b7      	b.n	800fbd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800fc66:	6823      	ldr	r3, [r4, #0]
 800fc68:	1d25      	adds	r5, r4, #4
 800fc6a:	9310      	str	r3, [sp, #64]	; 0x40
 800fc6c:	e7dd      	b.n	800fc2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fc6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fc70:	6820      	ldr	r0, [r4, #0]
 800fc72:	eba8 0202 	sub.w	r2, r8, r2
 800fc76:	230a      	movs	r3, #10
 800fc78:	b292      	uxth	r2, r2
 800fc7a:	4649      	mov	r1, r9
 800fc7c:	f7ff fd08 	bl	800f690 <_ZN8touchgfx7Unicode4itoaElPtti>
 800fc80:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fc84:	2b2d      	cmp	r3, #45	; 0x2d
 800fc86:	f104 0504 	add.w	r5, r4, #4
 800fc8a:	d1ce      	bne.n	800fc2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fc8c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800fc90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fc92:	3302      	adds	r3, #2
 800fc94:	e7e9      	b.n	800fc6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800fc96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fc98:	1d25      	adds	r5, r4, #4
 800fc9a:	eba8 0202 	sub.w	r2, r8, r2
 800fc9e:	230a      	movs	r3, #10
 800fca0:	b292      	uxth	r2, r2
 800fca2:	4649      	mov	r1, r9
 800fca4:	6820      	ldr	r0, [r4, #0]
 800fca6:	f7ff fcd5 	bl	800f654 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800fcaa:	e7be      	b.n	800fc2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fcac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fcae:	6820      	ldr	r0, [r4, #0]
 800fcb0:	eba8 0202 	sub.w	r2, r8, r2
 800fcb4:	b292      	uxth	r2, r2
 800fcb6:	2310      	movs	r3, #16
 800fcb8:	4649      	mov	r1, r9
 800fcba:	f7ff fccb 	bl	800f654 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800fcbe:	1d25      	adds	r5, r4, #4
 800fcc0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800fcc4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800fcc8:	2b00      	cmp	r3, #0
 800fcca:	d0ae      	beq.n	800fc2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fccc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800fcd0:	2919      	cmp	r1, #25
 800fcd2:	d8f7      	bhi.n	800fcc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800fcd4:	3b20      	subs	r3, #32
 800fcd6:	8013      	strh	r3, [r2, #0]
 800fcd8:	e7f4      	b.n	800fcc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800fcda:	9a08      	ldr	r2, [sp, #32]
 800fcdc:	2a00      	cmp	r2, #0
 800fcde:	d0aa      	beq.n	800fc36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800fce0:	7812      	ldrb	r2, [r2, #0]
 800fce2:	e7a8      	b.n	800fc36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800fce4:	2d00      	cmp	r5, #0
 800fce6:	f43f af47 	beq.w	800fb78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800fcea:	782d      	ldrb	r5, [r5, #0]
 800fcec:	e744      	b.n	800fb78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800fcee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800fcee:	b507      	push	{r0, r1, r2, lr}
 800fcf0:	9300      	str	r3, [sp, #0]
 800fcf2:	4613      	mov	r3, r2
 800fcf4:	2200      	movs	r2, #0
 800fcf6:	f7ff fe90 	bl	800fa1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800fcfa:	b003      	add	sp, #12
 800fcfc:	f85d fb04 	ldr.w	pc, [sp], #4

0800fd00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800fd00:	b40c      	push	{r2, r3}
 800fd02:	b507      	push	{r0, r1, r2, lr}
 800fd04:	ab04      	add	r3, sp, #16
 800fd06:	f853 2b04 	ldr.w	r2, [r3], #4
 800fd0a:	9301      	str	r3, [sp, #4]
 800fd0c:	f7ff ffef 	bl	800fcee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800fd10:	b003      	add	sp, #12
 800fd12:	f85d eb04 	ldr.w	lr, [sp], #4
 800fd16:	b002      	add	sp, #8
 800fd18:	4770      	bx	lr
	...

0800fd1c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fd1c:	4b01      	ldr	r3, [pc, #4]	; (800fd24 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fd1e:	6018      	str	r0, [r3, #0]
 800fd20:	4770      	bx	lr
 800fd22:	bf00      	nop
 800fd24:	200177b0 	.word	0x200177b0

0800fd28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800fd28:	4b06      	ldr	r3, [pc, #24]	; (800fd44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800fd2a:	881a      	ldrh	r2, [r3, #0]
 800fd2c:	4282      	cmp	r2, r0
 800fd2e:	d807      	bhi.n	800fd40 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800fd30:	4b05      	ldr	r3, [pc, #20]	; (800fd48 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800fd32:	881b      	ldrh	r3, [r3, #0]
 800fd34:	4413      	add	r3, r2
 800fd36:	4298      	cmp	r0, r3
 800fd38:	bfac      	ite	ge
 800fd3a:	2000      	movge	r0, #0
 800fd3c:	2001      	movlt	r0, #1
 800fd3e:	4770      	bx	lr
 800fd40:	2000      	movs	r0, #0
 800fd42:	4770      	bx	lr
 800fd44:	200177d0 	.word	0x200177d0
 800fd48:	200177d4 	.word	0x200177d4

0800fd4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fd4c:	b508      	push	{r3, lr}
 800fd4e:	4601      	mov	r1, r0
 800fd50:	f7ff ffea 	bl	800fd28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800fd54:	b118      	cbz	r0, 800fd5e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800fd56:	4b02      	ldr	r3, [pc, #8]	; (800fd60 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800fd58:	681b      	ldr	r3, [r3, #0]
 800fd5a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800fd5e:	bd08      	pop	{r3, pc}
 800fd60:	200177b4 	.word	0x200177b4

0800fd64 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800fd64:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fd66:	4c24      	ldr	r4, [pc, #144]	; (800fdf8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800fd68:	6823      	ldr	r3, [r4, #0]
 800fd6a:	2b00      	cmp	r3, #0
 800fd6c:	d042      	beq.n	800fdf4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fd6e:	4a23      	ldr	r2, [pc, #140]	; (800fdfc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800fd70:	4d23      	ldr	r5, [pc, #140]	; (800fe00 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800fd72:	8811      	ldrh	r1, [r2, #0]
 800fd74:	f8b5 c000 	ldrh.w	ip, [r5]
 800fd78:	4822      	ldr	r0, [pc, #136]	; (800fe04 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800fd7a:	4461      	add	r1, ip
 800fd7c:	1c4a      	adds	r2, r1, #1
 800fd7e:	f022 0201 	bic.w	r2, r2, #1
 800fd82:	008f      	lsls	r7, r1, #2
 800fd84:	0412      	lsls	r2, r2, #16
 800fd86:	19de      	adds	r6, r3, r7
 800fd88:	0c12      	lsrs	r2, r2, #16
 800fd8a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800fd8e:	6006      	str	r6, [r0, #0]
 800fd90:	4e1d      	ldr	r6, [pc, #116]	; (800fe08 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fd92:	19da      	adds	r2, r3, r7
 800fd94:	6032      	str	r2, [r6, #0]
 800fd96:	220e      	movs	r2, #14
 800fd98:	fb02 f20c 	mul.w	r2, r2, ip
 800fd9c:	3203      	adds	r2, #3
 800fd9e:	f022 0203 	bic.w	r2, r2, #3
 800fda2:	443a      	add	r2, r7
 800fda4:	4f19      	ldr	r7, [pc, #100]	; (800fe0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fda6:	4413      	add	r3, r2
 800fda8:	603b      	str	r3, [r7, #0]
 800fdaa:	4f19      	ldr	r7, [pc, #100]	; (800fe10 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800fdac:	2300      	movs	r3, #0
 800fdae:	803b      	strh	r3, [r7, #0]
 800fdb0:	4f18      	ldr	r7, [pc, #96]	; (800fe14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800fdb2:	683f      	ldr	r7, [r7, #0]
 800fdb4:	1aba      	subs	r2, r7, r2
 800fdb6:	4f18      	ldr	r7, [pc, #96]	; (800fe18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800fdb8:	603a      	str	r2, [r7, #0]
 800fdba:	4a18      	ldr	r2, [pc, #96]	; (800fe1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800fdbc:	469c      	mov	ip, r3
 800fdbe:	8013      	strh	r3, [r2, #0]
 800fdc0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fdc4:	428b      	cmp	r3, r1
 800fdc6:	d10d      	bne.n	800fde4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800fdc8:	882d      	ldrh	r5, [r5, #0]
 800fdca:	6830      	ldr	r0, [r6, #0]
 800fdcc:	2300      	movs	r3, #0
 800fdce:	240e      	movs	r4, #14
 800fdd0:	429d      	cmp	r5, r3
 800fdd2:	d90f      	bls.n	800fdf4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fdd4:	fb04 0203 	mla	r2, r4, r3, r0
 800fdd8:	3301      	adds	r3, #1
 800fdda:	7b11      	ldrb	r1, [r2, #12]
 800fddc:	f36f 1145 	bfc	r1, #5, #1
 800fde0:	7311      	strb	r1, [r2, #12]
 800fde2:	e7f5      	b.n	800fdd0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800fde4:	6822      	ldr	r2, [r4, #0]
 800fde6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800fdea:	6802      	ldr	r2, [r0, #0]
 800fdec:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800fdf0:	3301      	adds	r3, #1
 800fdf2:	e7e7      	b.n	800fdc4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800fdf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fdf6:	bf00      	nop
 800fdf8:	200177b4 	.word	0x200177b4
 800fdfc:	200177d0 	.word	0x200177d0
 800fe00:	200177d4 	.word	0x200177d4
 800fe04:	200177c8 	.word	0x200177c8
 800fe08:	200177b8 	.word	0x200177b8
 800fe0c:	200177c0 	.word	0x200177c0
 800fe10:	200177d2 	.word	0x200177d2
 800fe14:	200177bc 	.word	0x200177bc
 800fe18:	200177cc 	.word	0x200177cc
 800fe1c:	200177c4 	.word	0x200177c4

0800fe20 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800fe20:	4b06      	ldr	r3, [pc, #24]	; (800fe3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800fe22:	681b      	ldr	r3, [r3, #0]
 800fe24:	b943      	cbnz	r3, 800fe38 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800fe26:	b139      	cbz	r1, 800fe38 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800fe28:	4b05      	ldr	r3, [pc, #20]	; (800fe40 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800fe2a:	801a      	strh	r2, [r3, #0]
 800fe2c:	4b05      	ldr	r3, [pc, #20]	; (800fe44 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800fe2e:	6019      	str	r1, [r3, #0]
 800fe30:	4b05      	ldr	r3, [pc, #20]	; (800fe48 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800fe32:	6018      	str	r0, [r3, #0]
 800fe34:	f7ff bf96 	b.w	800fd64 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800fe38:	4770      	bx	lr
 800fe3a:	bf00      	nop
 800fe3c:	200177c0 	.word	0x200177c0
 800fe40:	200177d4 	.word	0x200177d4
 800fe44:	200177bc 	.word	0x200177bc
 800fe48:	200177b4 	.word	0x200177b4

0800fe4c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800fe4c:	b470      	push	{r4, r5, r6}
 800fe4e:	4c07      	ldr	r4, [pc, #28]	; (800fe6c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800fe50:	6826      	ldr	r6, [r4, #0]
 800fe52:	4605      	mov	r5, r0
 800fe54:	4610      	mov	r0, r2
 800fe56:	9a03      	ldr	r2, [sp, #12]
 800fe58:	b936      	cbnz	r6, 800fe68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800fe5a:	6025      	str	r5, [r4, #0]
 800fe5c:	4c04      	ldr	r4, [pc, #16]	; (800fe70 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800fe5e:	8021      	strh	r1, [r4, #0]
 800fe60:	bc70      	pop	{r4, r5, r6}
 800fe62:	4619      	mov	r1, r3
 800fe64:	f7ff bfdc 	b.w	800fe20 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800fe68:	bc70      	pop	{r4, r5, r6}
 800fe6a:	4770      	bx	lr
 800fe6c:	200177d8 	.word	0x200177d8
 800fe70:	200177d0 	.word	0x200177d0

0800fe74 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800fe74:	4a12      	ldr	r2, [pc, #72]	; (800fec0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800fe76:	8803      	ldrh	r3, [r0, #0]
 800fe78:	8812      	ldrh	r2, [r2, #0]
 800fe7a:	4293      	cmp	r3, r2
 800fe7c:	d207      	bcs.n	800fe8e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800fe7e:	4a11      	ldr	r2, [pc, #68]	; (800fec4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800fe80:	6812      	ldr	r2, [r2, #0]
 800fe82:	2114      	movs	r1, #20
 800fe84:	fb01 2303 	mla	r3, r1, r3, r2
 800fe88:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800fe8c:	4770      	bx	lr
 800fe8e:	490e      	ldr	r1, [pc, #56]	; (800fec8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800fe90:	8809      	ldrh	r1, [r1, #0]
 800fe92:	4411      	add	r1, r2
 800fe94:	428b      	cmp	r3, r1
 800fe96:	da04      	bge.n	800fea2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800fe98:	1a9b      	subs	r3, r3, r2
 800fe9a:	4a0c      	ldr	r2, [pc, #48]	; (800fecc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800fe9c:	210e      	movs	r1, #14
 800fe9e:	6812      	ldr	r2, [r2, #0]
 800fea0:	e7f0      	b.n	800fe84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800fea2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fea6:	4293      	cmp	r3, r2
 800fea8:	d108      	bne.n	800febc <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800feaa:	4b09      	ldr	r3, [pc, #36]	; (800fed0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800feac:	781b      	ldrb	r3, [r3, #0]
 800feae:	b91b      	cbnz	r3, 800feb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800feb0:	4b08      	ldr	r3, [pc, #32]	; (800fed4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800feb2:	f9b3 0000 	ldrsh.w	r0, [r3]
 800feb6:	4770      	bx	lr
 800feb8:	4b07      	ldr	r3, [pc, #28]	; (800fed8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800feba:	e7fa      	b.n	800feb2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 800febc:	2000      	movs	r0, #0
 800febe:	4770      	bx	lr
 800fec0:	200177d0 	.word	0x200177d0
 800fec4:	200177d8 	.word	0x200177d8
 800fec8:	200177d4 	.word	0x200177d4
 800fecc:	200177b8 	.word	0x200177b8
 800fed0:	20017748 	.word	0x20017748
 800fed4:	2001774a 	.word	0x2001774a
 800fed8:	2001774c 	.word	0x2001774c

0800fedc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800fedc:	4a12      	ldr	r2, [pc, #72]	; (800ff28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 800fede:	8803      	ldrh	r3, [r0, #0]
 800fee0:	8812      	ldrh	r2, [r2, #0]
 800fee2:	4293      	cmp	r3, r2
 800fee4:	d207      	bcs.n	800fef6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 800fee6:	4a11      	ldr	r2, [pc, #68]	; (800ff2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 800fee8:	6812      	ldr	r2, [r2, #0]
 800feea:	2114      	movs	r1, #20
 800feec:	fb01 2303 	mla	r3, r1, r3, r2
 800fef0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800fef4:	4770      	bx	lr
 800fef6:	490e      	ldr	r1, [pc, #56]	; (800ff30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800fef8:	8809      	ldrh	r1, [r1, #0]
 800fefa:	4411      	add	r1, r2
 800fefc:	428b      	cmp	r3, r1
 800fefe:	da04      	bge.n	800ff0a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 800ff00:	1a9b      	subs	r3, r3, r2
 800ff02:	4a0c      	ldr	r2, [pc, #48]	; (800ff34 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800ff04:	210e      	movs	r1, #14
 800ff06:	6812      	ldr	r2, [r2, #0]
 800ff08:	e7f0      	b.n	800feec <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 800ff0a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ff0e:	4293      	cmp	r3, r2
 800ff10:	d108      	bne.n	800ff24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 800ff12:	4b09      	ldr	r3, [pc, #36]	; (800ff38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800ff14:	781b      	ldrb	r3, [r3, #0]
 800ff16:	b91b      	cbnz	r3, 800ff20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 800ff18:	4b08      	ldr	r3, [pc, #32]	; (800ff3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800ff1a:	f9b3 0000 	ldrsh.w	r0, [r3]
 800ff1e:	4770      	bx	lr
 800ff20:	4b07      	ldr	r3, [pc, #28]	; (800ff40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800ff22:	e7fa      	b.n	800ff1a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 800ff24:	2000      	movs	r0, #0
 800ff26:	4770      	bx	lr
 800ff28:	200177d0 	.word	0x200177d0
 800ff2c:	200177d8 	.word	0x200177d8
 800ff30:	200177d4 	.word	0x200177d4
 800ff34:	200177b8 	.word	0x200177b8
 800ff38:	20017748 	.word	0x20017748
 800ff3c:	2001774c 	.word	0x2001774c
 800ff40:	2001774a 	.word	0x2001774a

0800ff44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800ff44:	b510      	push	{r4, lr}
 800ff46:	4a1f      	ldr	r2, [pc, #124]	; (800ffc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 800ff48:	880b      	ldrh	r3, [r1, #0]
 800ff4a:	8812      	ldrh	r2, [r2, #0]
 800ff4c:	4293      	cmp	r3, r2
 800ff4e:	d213      	bcs.n	800ff78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 800ff50:	4a1d      	ldr	r2, [pc, #116]	; (800ffc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 800ff52:	6812      	ldr	r2, [r2, #0]
 800ff54:	2114      	movs	r1, #20
 800ff56:	fb01 2303 	mla	r3, r1, r3, r2
 800ff5a:	8a1a      	ldrh	r2, [r3, #16]
 800ff5c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800ff60:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800ff64:	8a5b      	ldrh	r3, [r3, #18]
 800ff66:	8004      	strh	r4, [r0, #0]
 800ff68:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800ff6c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800ff70:	8041      	strh	r1, [r0, #2]
 800ff72:	8082      	strh	r2, [r0, #4]
 800ff74:	80c3      	strh	r3, [r0, #6]
 800ff76:	e00e      	b.n	800ff96 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 800ff78:	4914      	ldr	r1, [pc, #80]	; (800ffcc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 800ff7a:	8809      	ldrh	r1, [r1, #0]
 800ff7c:	4411      	add	r1, r2
 800ff7e:	428b      	cmp	r3, r1
 800ff80:	da0a      	bge.n	800ff98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 800ff82:	1a9b      	subs	r3, r3, r2
 800ff84:	4a12      	ldr	r2, [pc, #72]	; (800ffd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 800ff86:	6812      	ldr	r2, [r2, #0]
 800ff88:	210e      	movs	r1, #14
 800ff8a:	fb01 2303 	mla	r3, r1, r3, r2
 800ff8e:	681a      	ldr	r2, [r3, #0]
 800ff90:	6002      	str	r2, [r0, #0]
 800ff92:	685a      	ldr	r2, [r3, #4]
 800ff94:	6042      	str	r2, [r0, #4]
 800ff96:	bd10      	pop	{r4, pc}
 800ff98:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ff9c:	4293      	cmp	r3, r2
 800ff9e:	d10b      	bne.n	800ffb8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 800ffa0:	4b0c      	ldr	r3, [pc, #48]	; (800ffd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800ffa2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ffa6:	4b0c      	ldr	r3, [pc, #48]	; (800ffd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800ffa8:	8081      	strh	r1, [r0, #4]
 800ffaa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ffae:	80c2      	strh	r2, [r0, #6]
 800ffb0:	2300      	movs	r3, #0
 800ffb2:	8003      	strh	r3, [r0, #0]
 800ffb4:	8043      	strh	r3, [r0, #2]
 800ffb6:	e7ee      	b.n	800ff96 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 800ffb8:	2300      	movs	r3, #0
 800ffba:	8003      	strh	r3, [r0, #0]
 800ffbc:	8043      	strh	r3, [r0, #2]
 800ffbe:	8083      	strh	r3, [r0, #4]
 800ffc0:	e7d8      	b.n	800ff74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 800ffc2:	bf00      	nop
 800ffc4:	200177d0 	.word	0x200177d0
 800ffc8:	200177d8 	.word	0x200177d8
 800ffcc:	200177d4 	.word	0x200177d4
 800ffd0:	200177b8 	.word	0x200177b8
 800ffd4:	20017744 	.word	0x20017744
 800ffd8:	20017746 	.word	0x20017746

0800ffdc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800ffdc:	4a17      	ldr	r2, [pc, #92]	; (801003c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 800ffde:	8803      	ldrh	r3, [r0, #0]
 800ffe0:	8812      	ldrh	r2, [r2, #0]
 800ffe2:	4293      	cmp	r3, r2
 800ffe4:	d213      	bcs.n	801000e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 800ffe6:	4a16      	ldr	r2, [pc, #88]	; (8010040 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800ffe8:	6812      	ldr	r2, [r2, #0]
 800ffea:	2114      	movs	r1, #20
 800ffec:	fb01 2303 	mla	r3, r1, r3, r2
 800fff0:	8a1a      	ldrh	r2, [r3, #16]
 800fff2:	8919      	ldrh	r1, [r3, #8]
 800fff4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fff8:	428a      	cmp	r2, r1
 800fffa:	db1d      	blt.n	8010038 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800fffc:	8a58      	ldrh	r0, [r3, #18]
 800fffe:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010002:	895b      	ldrh	r3, [r3, #10]
 8010004:	4298      	cmp	r0, r3
 8010006:	bfac      	ite	ge
 8010008:	2000      	movge	r0, #0
 801000a:	2001      	movlt	r0, #1
 801000c:	4770      	bx	lr
 801000e:	490d      	ldr	r1, [pc, #52]	; (8010044 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8010010:	8809      	ldrh	r1, [r1, #0]
 8010012:	4411      	add	r1, r2
 8010014:	428b      	cmp	r3, r1
 8010016:	da0d      	bge.n	8010034 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8010018:	1a9b      	subs	r3, r3, r2
 801001a:	4a0b      	ldr	r2, [pc, #44]	; (8010048 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801001c:	6812      	ldr	r2, [r2, #0]
 801001e:	210e      	movs	r1, #14
 8010020:	fb01 2303 	mla	r3, r1, r3, r2
 8010024:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8010028:	891a      	ldrh	r2, [r3, #8]
 801002a:	4291      	cmp	r1, r2
 801002c:	db04      	blt.n	8010038 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801002e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8010032:	e7e6      	b.n	8010002 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8010034:	2000      	movs	r0, #0
 8010036:	4770      	bx	lr
 8010038:	2001      	movs	r0, #1
 801003a:	4770      	bx	lr
 801003c:	200177d0 	.word	0x200177d0
 8010040:	200177d8 	.word	0x200177d8
 8010044:	200177d4 	.word	0x200177d4
 8010048:	200177b8 	.word	0x200177b8

0801004c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801004c:	4a12      	ldr	r2, [pc, #72]	; (8010098 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801004e:	8803      	ldrh	r3, [r0, #0]
 8010050:	8811      	ldrh	r1, [r2, #0]
 8010052:	428b      	cmp	r3, r1
 8010054:	d20b      	bcs.n	801006e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8010056:	4a11      	ldr	r2, [pc, #68]	; (801009c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010058:	6812      	ldr	r2, [r2, #0]
 801005a:	b112      	cbz	r2, 8010062 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801005c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010060:	b9c0      	cbnz	r0, 8010094 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8010062:	4a0f      	ldr	r2, [pc, #60]	; (80100a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010064:	6811      	ldr	r1, [r2, #0]
 8010066:	2214      	movs	r2, #20
 8010068:	4353      	muls	r3, r2
 801006a:	58c8      	ldr	r0, [r1, r3]
 801006c:	4770      	bx	lr
 801006e:	4a0d      	ldr	r2, [pc, #52]	; (80100a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8010070:	8812      	ldrh	r2, [r2, #0]
 8010072:	440a      	add	r2, r1
 8010074:	4293      	cmp	r3, r2
 8010076:	da04      	bge.n	8010082 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8010078:	4a08      	ldr	r2, [pc, #32]	; (801009c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801007a:	6812      	ldr	r2, [r2, #0]
 801007c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010080:	4770      	bx	lr
 8010082:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010086:	4293      	cmp	r3, r2
 8010088:	d103      	bne.n	8010092 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801008a:	4b07      	ldr	r3, [pc, #28]	; (80100a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801008c:	681b      	ldr	r3, [r3, #0]
 801008e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8010090:	4770      	bx	lr
 8010092:	2000      	movs	r0, #0
 8010094:	4770      	bx	lr
 8010096:	bf00      	nop
 8010098:	200177d0 	.word	0x200177d0
 801009c:	200177b4 	.word	0x200177b4
 80100a0:	200177d8 	.word	0x200177d8
 80100a4:	200177d4 	.word	0x200177d4
 80100a8:	20017750 	.word	0x20017750

080100ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80100ac:	4b24      	ldr	r3, [pc, #144]	; (8010140 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80100ae:	8802      	ldrh	r2, [r0, #0]
 80100b0:	8818      	ldrh	r0, [r3, #0]
 80100b2:	4282      	cmp	r2, r0
 80100b4:	d221      	bcs.n	80100fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80100b6:	4b23      	ldr	r3, [pc, #140]	; (8010144 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80100b8:	6819      	ldr	r1, [r3, #0]
 80100ba:	2314      	movs	r3, #20
 80100bc:	fb03 1302 	mla	r3, r3, r2, r1
 80100c0:	6858      	ldr	r0, [r3, #4]
 80100c2:	2800      	cmp	r0, #0
 80100c4:	d03a      	beq.n	801013c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80100c6:	4920      	ldr	r1, [pc, #128]	; (8010148 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80100c8:	6809      	ldr	r1, [r1, #0]
 80100ca:	2900      	cmp	r1, #0
 80100cc:	d036      	beq.n	801013c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80100ce:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80100d2:	2900      	cmp	r1, #0
 80100d4:	d032      	beq.n	801013c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80100d6:	891a      	ldrh	r2, [r3, #8]
 80100d8:	8958      	ldrh	r0, [r3, #10]
 80100da:	4350      	muls	r0, r2
 80100dc:	7c5a      	ldrb	r2, [r3, #17]
 80100de:	7cdb      	ldrb	r3, [r3, #19]
 80100e0:	0952      	lsrs	r2, r2, #5
 80100e2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80100e6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80100ea:	2b0b      	cmp	r3, #11
 80100ec:	bf18      	it	ne
 80100ee:	0040      	lslne	r0, r0, #1
 80100f0:	3003      	adds	r0, #3
 80100f2:	f020 0003 	bic.w	r0, r0, #3
 80100f6:	4408      	add	r0, r1
 80100f8:	4770      	bx	lr
 80100fa:	4b14      	ldr	r3, [pc, #80]	; (801014c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80100fc:	881b      	ldrh	r3, [r3, #0]
 80100fe:	4403      	add	r3, r0
 8010100:	429a      	cmp	r2, r3
 8010102:	da1a      	bge.n	801013a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010104:	4b12      	ldr	r3, [pc, #72]	; (8010150 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010106:	681b      	ldr	r3, [r3, #0]
 8010108:	1a10      	subs	r0, r2, r0
 801010a:	210e      	movs	r1, #14
 801010c:	fb01 3000 	mla	r0, r1, r0, r3
 8010110:	7b03      	ldrb	r3, [r0, #12]
 8010112:	f003 031f 	and.w	r3, r3, #31
 8010116:	2b0b      	cmp	r3, #11
 8010118:	d10b      	bne.n	8010132 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801011a:	8903      	ldrh	r3, [r0, #8]
 801011c:	8940      	ldrh	r0, [r0, #10]
 801011e:	4358      	muls	r0, r3
 8010120:	4b09      	ldr	r3, [pc, #36]	; (8010148 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010122:	6819      	ldr	r1, [r3, #0]
 8010124:	3003      	adds	r0, #3
 8010126:	f020 0303 	bic.w	r3, r0, #3
 801012a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801012e:	4418      	add	r0, r3
 8010130:	4770      	bx	lr
 8010132:	2b0d      	cmp	r3, #13
 8010134:	d101      	bne.n	801013a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010136:	300d      	adds	r0, #13
 8010138:	4770      	bx	lr
 801013a:	2000      	movs	r0, #0
 801013c:	4770      	bx	lr
 801013e:	bf00      	nop
 8010140:	200177d0 	.word	0x200177d0
 8010144:	200177d8 	.word	0x200177d8
 8010148:	200177b4 	.word	0x200177b4
 801014c:	200177d4 	.word	0x200177d4
 8010150:	200177b8 	.word	0x200177b8

08010154 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010154:	b510      	push	{r4, lr}
 8010156:	4a17      	ldr	r2, [pc, #92]	; (80101b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8010158:	8803      	ldrh	r3, [r0, #0]
 801015a:	8812      	ldrh	r2, [r2, #0]
 801015c:	4293      	cmp	r3, r2
 801015e:	d20c      	bcs.n	801017a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010160:	4a15      	ldr	r2, [pc, #84]	; (80101b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8010162:	6812      	ldr	r2, [r2, #0]
 8010164:	2114      	movs	r1, #20
 8010166:	fb01 2303 	mla	r3, r1, r3, r2
 801016a:	7c58      	ldrb	r0, [r3, #17]
 801016c:	0942      	lsrs	r2, r0, #5
 801016e:	7cd8      	ldrb	r0, [r3, #19]
 8010170:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010174:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010178:	bd10      	pop	{r4, pc}
 801017a:	4910      	ldr	r1, [pc, #64]	; (80101bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801017c:	8809      	ldrh	r1, [r1, #0]
 801017e:	4411      	add	r1, r2
 8010180:	428b      	cmp	r3, r1
 8010182:	da09      	bge.n	8010198 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010184:	1a9b      	subs	r3, r3, r2
 8010186:	4a0e      	ldr	r2, [pc, #56]	; (80101c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010188:	6812      	ldr	r2, [r2, #0]
 801018a:	210e      	movs	r1, #14
 801018c:	fb01 2303 	mla	r3, r1, r3, r2
 8010190:	7b18      	ldrb	r0, [r3, #12]
 8010192:	f000 001f 	and.w	r0, r0, #31
 8010196:	e7ef      	b.n	8010178 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010198:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801019c:	4293      	cmp	r3, r2
 801019e:	d106      	bne.n	80101ae <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80101a0:	f7f9 fe04 	bl	8009dac <_ZN8touchgfx3HAL3lcdEv>
 80101a4:	6803      	ldr	r3, [r0, #0]
 80101a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80101ac:	4718      	bx	r3
 80101ae:	2000      	movs	r0, #0
 80101b0:	e7e2      	b.n	8010178 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80101b2:	bf00      	nop
 80101b4:	200177d0 	.word	0x200177d0
 80101b8:	200177d8 	.word	0x200177d8
 80101bc:	200177d4 	.word	0x200177d4
 80101c0:	200177b8 	.word	0x200177b8

080101c4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80101c4:	2010      	movs	r0, #16
 80101c6:	4770      	bx	lr

080101c8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80101c8:	2000      	movs	r0, #0
 80101ca:	4770      	bx	lr

080101cc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80101cc:	4b02      	ldr	r3, [pc, #8]	; (80101d8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80101ce:	8818      	ldrh	r0, [r3, #0]
 80101d0:	0040      	lsls	r0, r0, #1
 80101d2:	b280      	uxth	r0, r0
 80101d4:	4770      	bx	lr
 80101d6:	bf00      	nop
 80101d8:	2001774a 	.word	0x2001774a

080101dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80101dc:	2bff      	cmp	r3, #255	; 0xff
 80101de:	d050      	beq.n	8010282 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80101e0:	2a0b      	cmp	r2, #11
 80101e2:	d04a      	beq.n	801027a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80101e4:	d80e      	bhi.n	8010204 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80101e6:	2a03      	cmp	r2, #3
 80101e8:	d03f      	beq.n	801026a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80101ea:	d804      	bhi.n	80101f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80101ec:	2a01      	cmp	r2, #1
 80101ee:	d03e      	beq.n	801026e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80101f0:	d93f      	bls.n	8010272 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80101f2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80101f4:	4770      	bx	lr
 80101f6:	2a09      	cmp	r2, #9
 80101f8:	d03f      	beq.n	801027a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80101fa:	d83c      	bhi.n	8010276 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80101fc:	2a08      	cmp	r2, #8
 80101fe:	d03a      	beq.n	8010276 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010200:	2000      	movs	r0, #0
 8010202:	4770      	bx	lr
 8010204:	2a2f      	cmp	r2, #47	; 0x2f
 8010206:	d024      	beq.n	8010252 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8010208:	d80d      	bhi.n	8010226 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801020a:	2a2d      	cmp	r2, #45	; 0x2d
 801020c:	d014      	beq.n	8010238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801020e:	d826      	bhi.n	801025e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8010210:	2a2c      	cmp	r2, #44	; 0x2c
 8010212:	d1f5      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010214:	684b      	ldr	r3, [r1, #4]
 8010216:	781b      	ldrb	r3, [r3, #0]
 8010218:	2b01      	cmp	r3, #1
 801021a:	d018      	beq.n	801024e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801021c:	d323      	bcc.n	8010266 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801021e:	2b02      	cmp	r3, #2
 8010220:	d1ee      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010222:	6880      	ldr	r0, [r0, #8]
 8010224:	4770      	bx	lr
 8010226:	2a31      	cmp	r2, #49	; 0x31
 8010228:	d004      	beq.n	8010234 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801022a:	d328      	bcc.n	801027e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801022c:	2a32      	cmp	r2, #50	; 0x32
 801022e:	d026      	beq.n	801027e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010230:	2a33      	cmp	r2, #51	; 0x33
 8010232:	d1e5      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010234:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8010236:	4770      	bx	lr
 8010238:	684b      	ldr	r3, [r1, #4]
 801023a:	781b      	ldrb	r3, [r3, #0]
 801023c:	2b01      	cmp	r3, #1
 801023e:	d004      	beq.n	801024a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8010240:	d30b      	bcc.n	801025a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8010242:	2b02      	cmp	r3, #2
 8010244:	d1dc      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010246:	6900      	ldr	r0, [r0, #16]
 8010248:	4770      	bx	lr
 801024a:	6a00      	ldr	r0, [r0, #32]
 801024c:	4770      	bx	lr
 801024e:	6980      	ldr	r0, [r0, #24]
 8010250:	4770      	bx	lr
 8010252:	684b      	ldr	r3, [r1, #4]
 8010254:	781b      	ldrb	r3, [r3, #0]
 8010256:	2b00      	cmp	r3, #0
 8010258:	d1d2      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801025a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801025c:	4770      	bx	lr
 801025e:	684b      	ldr	r3, [r1, #4]
 8010260:	781b      	ldrb	r3, [r3, #0]
 8010262:	2b00      	cmp	r3, #0
 8010264:	d1cc      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010266:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010268:	4770      	bx	lr
 801026a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801026c:	4770      	bx	lr
 801026e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8010270:	4770      	bx	lr
 8010272:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8010274:	4770      	bx	lr
 8010276:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8010278:	4770      	bx	lr
 801027a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801027c:	4770      	bx	lr
 801027e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8010280:	4770      	bx	lr
 8010282:	2a0b      	cmp	r2, #11
 8010284:	d049      	beq.n	801031a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010286:	d80e      	bhi.n	80102a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8010288:	2a03      	cmp	r2, #3
 801028a:	d040      	beq.n	801030e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801028c:	d804      	bhi.n	8010298 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801028e:	2a01      	cmp	r2, #1
 8010290:	d03f      	beq.n	8010312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8010292:	d940      	bls.n	8010316 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8010294:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8010296:	4770      	bx	lr
 8010298:	2a09      	cmp	r2, #9
 801029a:	d03e      	beq.n	801031a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801029c:	d801      	bhi.n	80102a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801029e:	2a08      	cmp	r2, #8
 80102a0:	d1ae      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80102a2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80102a4:	4770      	bx	lr
 80102a6:	2a2f      	cmp	r2, #47	; 0x2f
 80102a8:	d024      	beq.n	80102f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80102aa:	d80d      	bhi.n	80102c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80102ac:	2a2d      	cmp	r2, #45	; 0x2d
 80102ae:	d014      	beq.n	80102da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80102b0:	d826      	bhi.n	8010300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80102b2:	2a2c      	cmp	r2, #44	; 0x2c
 80102b4:	d1a4      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80102b6:	684b      	ldr	r3, [r1, #4]
 80102b8:	781b      	ldrb	r3, [r3, #0]
 80102ba:	2b01      	cmp	r3, #1
 80102bc:	d018      	beq.n	80102f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80102be:	d324      	bcc.n	801030a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80102c0:	2b02      	cmp	r3, #2
 80102c2:	d19d      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80102c4:	68c0      	ldr	r0, [r0, #12]
 80102c6:	4770      	bx	lr
 80102c8:	2a31      	cmp	r2, #49	; 0x31
 80102ca:	d004      	beq.n	80102d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80102cc:	d327      	bcc.n	801031e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80102ce:	2a32      	cmp	r2, #50	; 0x32
 80102d0:	d025      	beq.n	801031e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80102d2:	2a33      	cmp	r2, #51	; 0x33
 80102d4:	d194      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80102d6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80102d8:	4770      	bx	lr
 80102da:	684b      	ldr	r3, [r1, #4]
 80102dc:	781b      	ldrb	r3, [r3, #0]
 80102de:	2b01      	cmp	r3, #1
 80102e0:	d004      	beq.n	80102ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80102e2:	d30b      	bcc.n	80102fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80102e4:	2b02      	cmp	r3, #2
 80102e6:	d18b      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80102e8:	6940      	ldr	r0, [r0, #20]
 80102ea:	4770      	bx	lr
 80102ec:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80102ee:	4770      	bx	lr
 80102f0:	69c0      	ldr	r0, [r0, #28]
 80102f2:	4770      	bx	lr
 80102f4:	684b      	ldr	r3, [r1, #4]
 80102f6:	781b      	ldrb	r3, [r3, #0]
 80102f8:	2b00      	cmp	r3, #0
 80102fa:	d181      	bne.n	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80102fc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80102fe:	4770      	bx	lr
 8010300:	684b      	ldr	r3, [r1, #4]
 8010302:	781b      	ldrb	r3, [r3, #0]
 8010304:	2b00      	cmp	r3, #0
 8010306:	f47f af7b 	bne.w	8010200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801030a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801030c:	4770      	bx	lr
 801030e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010310:	4770      	bx	lr
 8010312:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8010314:	4770      	bx	lr
 8010316:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8010318:	4770      	bx	lr
 801031a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801031c:	4770      	bx	lr
 801031e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8010320:	4770      	bx	lr

08010322 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010322:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010326:	b087      	sub	sp, #28
 8010328:	9815      	ldr	r0, [sp, #84]	; 0x54
 801032a:	9205      	str	r2, [sp, #20]
 801032c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010330:	9202      	str	r2, [sp, #8]
 8010332:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010336:	9101      	str	r1, [sp, #4]
 8010338:	6841      	ldr	r1, [r0, #4]
 801033a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801033e:	fb01 2404 	mla	r4, r1, r4, r2
 8010342:	6802      	ldr	r2, [r0, #0]
 8010344:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010348:	f8de 2000 	ldr.w	r2, [lr]
 801034c:	9203      	str	r2, [sp, #12]
 801034e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010352:	3204      	adds	r2, #4
 8010354:	9204      	str	r2, [sp, #16]
 8010356:	9a02      	ldr	r2, [sp, #8]
 8010358:	43d6      	mvns	r6, r2
 801035a:	b2f6      	uxtb	r6, r6
 801035c:	9a01      	ldr	r2, [sp, #4]
 801035e:	2a00      	cmp	r2, #0
 8010360:	dc03      	bgt.n	801036a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8010362:	9a05      	ldr	r2, [sp, #20]
 8010364:	2a00      	cmp	r2, #0
 8010366:	f340 8129 	ble.w	80105bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801036a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801036c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8010370:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8010374:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010378:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801037a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801037e:	2b00      	cmp	r3, #0
 8010380:	dd0e      	ble.n	80103a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010382:	1408      	asrs	r0, r1, #16
 8010384:	d405      	bmi.n	8010392 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010386:	4560      	cmp	r0, ip
 8010388:	da03      	bge.n	8010392 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801038a:	1410      	asrs	r0, r2, #16
 801038c:	d401      	bmi.n	8010392 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801038e:	42b8      	cmp	r0, r7
 8010390:	db07      	blt.n	80103a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8010392:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010394:	4401      	add	r1, r0
 8010396:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010398:	3b01      	subs	r3, #1
 801039a:	4402      	add	r2, r0
 801039c:	3402      	adds	r4, #2
 801039e:	e7ee      	b.n	801037e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80103a0:	d071      	beq.n	8010486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80103a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80103a4:	1e58      	subs	r0, r3, #1
 80103a6:	fb05 1500 	mla	r5, r5, r0, r1
 80103aa:	142d      	asrs	r5, r5, #16
 80103ac:	d45f      	bmi.n	801046e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80103ae:	4565      	cmp	r5, ip
 80103b0:	da5d      	bge.n	801046e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80103b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80103b4:	fb05 2000 	mla	r0, r5, r0, r2
 80103b8:	1400      	asrs	r0, r0, #16
 80103ba:	d458      	bmi.n	801046e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80103bc:	42b8      	cmp	r0, r7
 80103be:	da56      	bge.n	801046e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80103c0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80103c4:	4699      	mov	r9, r3
 80103c6:	46a2      	mov	sl, r4
 80103c8:	f1b9 0f00 	cmp.w	r9, #0
 80103cc:	dd57      	ble.n	801047e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80103ce:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80103d2:	9803      	ldr	r0, [sp, #12]
 80103d4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80103d8:	140d      	asrs	r5, r1, #16
 80103da:	fb07 000c 	mla	r0, r7, ip, r0
 80103de:	f109 39ff 	add.w	r9, r9, #4294967295
 80103e2:	5d40      	ldrb	r0, [r0, r5]
 80103e4:	9d04      	ldr	r5, [sp, #16]
 80103e6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80103ea:	f8ba 5000 	ldrh.w	r5, [sl]
 80103ee:	122f      	asrs	r7, r5, #8
 80103f0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80103f4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80103f8:	fb17 f706 	smulbb	r7, r7, r6
 80103fc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8010400:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010404:	00ed      	lsls	r5, r5, #3
 8010406:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801040a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801040e:	10c7      	asrs	r7, r0, #3
 8010410:	b2ed      	uxtb	r5, r5
 8010412:	00c0      	lsls	r0, r0, #3
 8010414:	fb18 f806 	smulbb	r8, r8, r6
 8010418:	fb15 f506 	smulbb	r5, r5, r6
 801041c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010420:	b2c0      	uxtb	r0, r0
 8010422:	fa1f fc8c 	uxth.w	ip, ip
 8010426:	fb07 870b 	mla	r7, r7, fp, r8
 801042a:	fb00 500b 	mla	r0, r0, fp, r5
 801042e:	b280      	uxth	r0, r0
 8010430:	b2bf      	uxth	r7, r7
 8010432:	f10c 0501 	add.w	r5, ip, #1
 8010436:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801043a:	f107 0801 	add.w	r8, r7, #1
 801043e:	1c45      	adds	r5, r0, #1
 8010440:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010444:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8010448:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801044a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801044e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010452:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8010456:	ea45 0c0c 	orr.w	ip, r5, ip
 801045a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801045e:	4401      	add	r1, r0
 8010460:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010462:	ea4c 0c08 	orr.w	ip, ip, r8
 8010466:	f82a cb02 	strh.w	ip, [sl], #2
 801046a:	4402      	add	r2, r0
 801046c:	e7ac      	b.n	80103c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801046e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8010472:	f04f 0800 	mov.w	r8, #0
 8010476:	eb03 0008 	add.w	r0, r3, r8
 801047a:	2800      	cmp	r0, #0
 801047c:	dc41      	bgt.n	8010502 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801047e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010482:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010486:	9b01      	ldr	r3, [sp, #4]
 8010488:	2b00      	cmp	r3, #0
 801048a:	f340 8097 	ble.w	80105bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801048e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010492:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010496:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801049a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801049c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80104a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80104a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80104a8:	eef0 6a62 	vmov.f32	s13, s5
 80104ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80104b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80104b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80104b8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80104bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80104c0:	eef0 6a43 	vmov.f32	s13, s6
 80104c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80104c8:	ee12 2a90 	vmov	r2, s5
 80104cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80104d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80104d4:	ee13 2a10 	vmov	r2, s6
 80104d8:	9313      	str	r3, [sp, #76]	; 0x4c
 80104da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80104e0:	9314      	str	r3, [sp, #80]	; 0x50
 80104e2:	9b01      	ldr	r3, [sp, #4]
 80104e4:	9a05      	ldr	r2, [sp, #20]
 80104e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80104ea:	3b01      	subs	r3, #1
 80104ec:	9301      	str	r3, [sp, #4]
 80104ee:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80104f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104f4:	eeb0 3a67 	vmov.f32	s6, s15
 80104f8:	bf08      	it	eq
 80104fa:	4613      	moveq	r3, r2
 80104fc:	eef0 2a47 	vmov.f32	s5, s14
 8010500:	e72c      	b.n	801035c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8010502:	140f      	asrs	r7, r1, #16
 8010504:	d453      	bmi.n	80105ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010506:	f8de 5008 	ldr.w	r5, [lr, #8]
 801050a:	42bd      	cmp	r5, r7
 801050c:	dd4f      	ble.n	80105ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801050e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010512:	d44c      	bmi.n	80105ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010514:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010518:	4560      	cmp	r0, ip
 801051a:	dd48      	ble.n	80105ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801051c:	9803      	ldr	r0, [sp, #12]
 801051e:	b22d      	sxth	r5, r5
 8010520:	fb0c 0505 	mla	r5, ip, r5, r0
 8010524:	5de8      	ldrb	r0, [r5, r7]
 8010526:	9d04      	ldr	r5, [sp, #16]
 8010528:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801052c:	f06f 0501 	mvn.w	r5, #1
 8010530:	fb05 fb08 	mul.w	fp, r5, r8
 8010534:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010538:	f834 500b 	ldrh.w	r5, [r4, fp]
 801053c:	122f      	asrs	r7, r5, #8
 801053e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010542:	fb17 f706 	smulbb	r7, r7, r6
 8010546:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801054a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801054e:	00ed      	lsls	r5, r5, #3
 8010550:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8010554:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010558:	10c7      	asrs	r7, r0, #3
 801055a:	b2ed      	uxtb	r5, r5
 801055c:	00c0      	lsls	r0, r0, #3
 801055e:	fb19 f906 	smulbb	r9, r9, r6
 8010562:	fb15 f506 	smulbb	r5, r5, r6
 8010566:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801056a:	b2c0      	uxtb	r0, r0
 801056c:	fa1f fc8c 	uxth.w	ip, ip
 8010570:	fb07 970a 	mla	r7, r7, sl, r9
 8010574:	fb00 500a 	mla	r0, r0, sl, r5
 8010578:	b2bf      	uxth	r7, r7
 801057a:	b280      	uxth	r0, r0
 801057c:	f10c 0501 	add.w	r5, ip, #1
 8010580:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010584:	f107 0901 	add.w	r9, r7, #1
 8010588:	1c45      	adds	r5, r0, #1
 801058a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801058e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010592:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010596:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801059a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801059e:	ea45 0c0c 	orr.w	ip, r5, ip
 80105a2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80105a6:	ea4c 0c09 	orr.w	ip, ip, r9
 80105aa:	f824 c00b 	strh.w	ip, [r4, fp]
 80105ae:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80105b0:	4401      	add	r1, r0
 80105b2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80105b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80105b8:	4402      	add	r2, r0
 80105ba:	e75c      	b.n	8010476 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80105bc:	b007      	add	sp, #28
 80105be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080105c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80105c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105c6:	b085      	sub	sp, #20
 80105c8:	4693      	mov	fp, r2
 80105ca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80105cc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80105ce:	6870      	ldr	r0, [r6, #4]
 80105d0:	9100      	str	r1, [sp, #0]
 80105d2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80105d6:	fb00 2404 	mla	r4, r0, r4, r2
 80105da:	6832      	ldr	r2, [r6, #0]
 80105dc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80105e0:	682a      	ldr	r2, [r5, #0]
 80105e2:	9201      	str	r2, [sp, #4]
 80105e4:	686a      	ldr	r2, [r5, #4]
 80105e6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80105ea:	3204      	adds	r2, #4
 80105ec:	9202      	str	r2, [sp, #8]
 80105ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80105f2:	9a00      	ldr	r2, [sp, #0]
 80105f4:	2a00      	cmp	r2, #0
 80105f6:	dc03      	bgt.n	8010600 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80105f8:	f1bb 0f00 	cmp.w	fp, #0
 80105fc:	f340 80a0 	ble.w	8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010600:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010602:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010606:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801060a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801060e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010610:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010614:	2b00      	cmp	r3, #0
 8010616:	dd0c      	ble.n	8010632 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010618:	1406      	asrs	r6, r0, #16
 801061a:	d405      	bmi.n	8010628 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801061c:	454e      	cmp	r6, r9
 801061e:	da03      	bge.n	8010628 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010620:	1416      	asrs	r6, r2, #16
 8010622:	d401      	bmi.n	8010628 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010624:	4546      	cmp	r6, r8
 8010626:	db05      	blt.n	8010634 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010628:	4470      	add	r0, lr
 801062a:	4462      	add	r2, ip
 801062c:	3b01      	subs	r3, #1
 801062e:	3402      	adds	r4, #2
 8010630:	e7f0      	b.n	8010614 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010632:	d00f      	beq.n	8010654 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010634:	1e5e      	subs	r6, r3, #1
 8010636:	fb0e 0706 	mla	r7, lr, r6, r0
 801063a:	143f      	asrs	r7, r7, #16
 801063c:	d541      	bpl.n	80106c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801063e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8010642:	4698      	mov	r8, r3
 8010644:	9603      	str	r6, [sp, #12]
 8010646:	f1b8 0f00 	cmp.w	r8, #0
 801064a:	dc59      	bgt.n	8010700 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801064c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010650:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010654:	9b00      	ldr	r3, [sp, #0]
 8010656:	2b00      	cmp	r3, #0
 8010658:	dd72      	ble.n	8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801065a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801065e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010662:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010666:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010668:	ee31 1a05 	vadd.f32	s2, s2, s10
 801066c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010670:	eeb0 6a62 	vmov.f32	s12, s5
 8010674:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010678:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801067c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010680:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010684:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010688:	eeb0 6a43 	vmov.f32	s12, s6
 801068c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010690:	ee12 2a90 	vmov	r2, s5
 8010694:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010698:	fb92 fef3 	sdiv	lr, r2, r3
 801069c:	ee13 2a10 	vmov	r2, s6
 80106a0:	fb92 fcf3 	sdiv	ip, r2, r3
 80106a4:	9b00      	ldr	r3, [sp, #0]
 80106a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80106aa:	3b01      	subs	r3, #1
 80106ac:	9300      	str	r3, [sp, #0]
 80106ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80106b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80106b4:	eeb0 3a67 	vmov.f32	s6, s15
 80106b8:	bf08      	it	eq
 80106ba:	465b      	moveq	r3, fp
 80106bc:	eef0 2a47 	vmov.f32	s5, s14
 80106c0:	e797      	b.n	80105f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80106c2:	454f      	cmp	r7, r9
 80106c4:	dabb      	bge.n	801063e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80106c6:	fb0c 2606 	mla	r6, ip, r6, r2
 80106ca:	1436      	asrs	r6, r6, #16
 80106cc:	d4b7      	bmi.n	801063e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80106ce:	4546      	cmp	r6, r8
 80106d0:	dab5      	bge.n	801063e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80106d2:	461e      	mov	r6, r3
 80106d4:	46a0      	mov	r8, r4
 80106d6:	2e00      	cmp	r6, #0
 80106d8:	ddb8      	ble.n	801064c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80106da:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80106de:	9901      	ldr	r1, [sp, #4]
 80106e0:	1417      	asrs	r7, r2, #16
 80106e2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80106e6:	fb0a 1707 	mla	r7, sl, r7, r1
 80106ea:	9902      	ldr	r1, [sp, #8]
 80106ec:	f817 7009 	ldrb.w	r7, [r7, r9]
 80106f0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80106f4:	f828 7b02 	strh.w	r7, [r8], #2
 80106f8:	4470      	add	r0, lr
 80106fa:	4462      	add	r2, ip
 80106fc:	3e01      	subs	r6, #1
 80106fe:	e7ea      	b.n	80106d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8010700:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010704:	d417      	bmi.n	8010736 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010706:	68ae      	ldr	r6, [r5, #8]
 8010708:	454e      	cmp	r6, r9
 801070a:	dd14      	ble.n	8010736 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801070c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8010710:	d411      	bmi.n	8010736 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010712:	68ef      	ldr	r7, [r5, #12]
 8010714:	4557      	cmp	r7, sl
 8010716:	dd0e      	ble.n	8010736 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010718:	9f01      	ldr	r7, [sp, #4]
 801071a:	b236      	sxth	r6, r6
 801071c:	fb0a 7606 	mla	r6, sl, r6, r7
 8010720:	9f02      	ldr	r7, [sp, #8]
 8010722:	f816 6009 	ldrb.w	r6, [r6, r9]
 8010726:	f06f 0101 	mvn.w	r1, #1
 801072a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801072e:	fb01 f608 	mul.w	r6, r1, r8
 8010732:	9903      	ldr	r1, [sp, #12]
 8010734:	538f      	strh	r7, [r1, r6]
 8010736:	4470      	add	r0, lr
 8010738:	4462      	add	r2, ip
 801073a:	f108 38ff 	add.w	r8, r8, #4294967295
 801073e:	e782      	b.n	8010646 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010740:	b005      	add	sp, #20
 8010742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010746 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010746:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801074a:	b087      	sub	sp, #28
 801074c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801074e:	9205      	str	r2, [sp, #20]
 8010750:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010754:	9203      	str	r2, [sp, #12]
 8010756:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801075a:	9102      	str	r1, [sp, #8]
 801075c:	6861      	ldr	r1, [r4, #4]
 801075e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010762:	fb01 2000 	mla	r0, r1, r0, r2
 8010766:	6822      	ldr	r2, [r4, #0]
 8010768:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801076c:	9200      	str	r2, [sp, #0]
 801076e:	f8dc 2000 	ldr.w	r2, [ip]
 8010772:	9204      	str	r2, [sp, #16]
 8010774:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010778:	3204      	adds	r2, #4
 801077a:	9201      	str	r2, [sp, #4]
 801077c:	9a03      	ldr	r2, [sp, #12]
 801077e:	43d5      	mvns	r5, r2
 8010780:	b2ed      	uxtb	r5, r5
 8010782:	9a02      	ldr	r2, [sp, #8]
 8010784:	2a00      	cmp	r2, #0
 8010786:	dc03      	bgt.n	8010790 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8010788:	9a05      	ldr	r2, [sp, #20]
 801078a:	2a00      	cmp	r2, #0
 801078c:	f340 812c 	ble.w	80109e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010790:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010792:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8010796:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801079a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801079e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80107a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80107a4:	2b00      	cmp	r3, #0
 80107a6:	dd10      	ble.n	80107ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80107a8:	140c      	asrs	r4, r1, #16
 80107aa:	d405      	bmi.n	80107b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80107ac:	4574      	cmp	r4, lr
 80107ae:	da03      	bge.n	80107b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80107b0:	1414      	asrs	r4, r2, #16
 80107b2:	d401      	bmi.n	80107b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80107b4:	42bc      	cmp	r4, r7
 80107b6:	db09      	blt.n	80107cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80107b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80107ba:	9800      	ldr	r0, [sp, #0]
 80107bc:	4421      	add	r1, r4
 80107be:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80107c0:	3002      	adds	r0, #2
 80107c2:	4422      	add	r2, r4
 80107c4:	3b01      	subs	r3, #1
 80107c6:	9000      	str	r0, [sp, #0]
 80107c8:	e7ec      	b.n	80107a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80107ca:	d071      	beq.n	80108b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80107cc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80107ce:	1e5c      	subs	r4, r3, #1
 80107d0:	fb06 1604 	mla	r6, r6, r4, r1
 80107d4:	1436      	asrs	r6, r6, #16
 80107d6:	d45d      	bmi.n	8010894 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80107d8:	4576      	cmp	r6, lr
 80107da:	da5b      	bge.n	8010894 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80107dc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80107de:	fb06 2404 	mla	r4, r6, r4, r2
 80107e2:	1424      	asrs	r4, r4, #16
 80107e4:	d456      	bmi.n	8010894 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80107e6:	42bc      	cmp	r4, r7
 80107e8:	da54      	bge.n	8010894 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80107ea:	f8dd 9000 	ldr.w	r9, [sp]
 80107ee:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80107f2:	4698      	mov	r8, r3
 80107f4:	f1b8 0f00 	cmp.w	r8, #0
 80107f8:	dd54      	ble.n	80108a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80107fa:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80107fe:	9804      	ldr	r0, [sp, #16]
 8010800:	1414      	asrs	r4, r2, #16
 8010802:	fb07 0404 	mla	r4, r7, r4, r0
 8010806:	140e      	asrs	r6, r1, #16
 8010808:	9801      	ldr	r0, [sp, #4]
 801080a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801080e:	f8b9 4000 	ldrh.w	r4, [r9]
 8010812:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010816:	eb00 0b0e 	add.w	fp, r0, lr
 801081a:	1227      	asrs	r7, r4, #8
 801081c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010820:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010824:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8010828:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801082a:	fb16 f60a 	smulbb	r6, r6, sl
 801082e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010832:	fb07 6705 	mla	r7, r7, r5, r6
 8010836:	10e6      	asrs	r6, r4, #3
 8010838:	00e4      	lsls	r4, r4, #3
 801083a:	b2e4      	uxtb	r4, r4
 801083c:	fb1b fb0a 	smulbb	fp, fp, sl
 8010840:	fb14 f405 	smulbb	r4, r4, r5
 8010844:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010848:	b2bf      	uxth	r7, r7
 801084a:	fb06 b605 	mla	r6, r6, r5, fp
 801084e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8010852:	b2b6      	uxth	r6, r6
 8010854:	fa1f fe8e 	uxth.w	lr, lr
 8010858:	1c7c      	adds	r4, r7, #1
 801085a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801085e:	f106 0b01 	add.w	fp, r6, #1
 8010862:	f10e 0401 	add.w	r4, lr, #1
 8010866:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801086a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801086e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010872:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010876:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801087a:	4327      	orrs	r7, r4
 801087c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010880:	4401      	add	r1, r0
 8010882:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010884:	ea47 070b 	orr.w	r7, r7, fp
 8010888:	f829 7b02 	strh.w	r7, [r9], #2
 801088c:	4402      	add	r2, r0
 801088e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010892:	e7af      	b.n	80107f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010894:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8010898:	f04f 0e00 	mov.w	lr, #0
 801089c:	eb03 040e 	add.w	r4, r3, lr
 80108a0:	2c00      	cmp	r4, #0
 80108a2:	dc43      	bgt.n	801092c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80108a4:	9a00      	ldr	r2, [sp, #0]
 80108a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80108aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80108ae:	9300      	str	r3, [sp, #0]
 80108b0:	9b02      	ldr	r3, [sp, #8]
 80108b2:	2b00      	cmp	r3, #0
 80108b4:	f340 8098 	ble.w	80109e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80108b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80108bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80108c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80108c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80108ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80108ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80108d2:	eef0 6a62 	vmov.f32	s13, s5
 80108d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80108da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80108de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80108e2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80108e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80108ea:	eef0 6a43 	vmov.f32	s13, s6
 80108ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80108f2:	ee12 2a90 	vmov	r2, s5
 80108f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80108fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80108fe:	ee13 2a10 	vmov	r2, s6
 8010902:	9313      	str	r3, [sp, #76]	; 0x4c
 8010904:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010906:	fb92 f3f3 	sdiv	r3, r2, r3
 801090a:	9314      	str	r3, [sp, #80]	; 0x50
 801090c:	9b02      	ldr	r3, [sp, #8]
 801090e:	9a05      	ldr	r2, [sp, #20]
 8010910:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010914:	3b01      	subs	r3, #1
 8010916:	9302      	str	r3, [sp, #8]
 8010918:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801091c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801091e:	eeb0 3a67 	vmov.f32	s6, s15
 8010922:	bf08      	it	eq
 8010924:	4613      	moveq	r3, r2
 8010926:	eef0 2a47 	vmov.f32	s5, s14
 801092a:	e72a      	b.n	8010782 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801092c:	140f      	asrs	r7, r1, #16
 801092e:	d454      	bmi.n	80109da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010930:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010934:	42be      	cmp	r6, r7
 8010936:	dd50      	ble.n	80109da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010938:	ea5f 4822 	movs.w	r8, r2, asr #16
 801093c:	d44d      	bmi.n	80109da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801093e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8010942:	4544      	cmp	r4, r8
 8010944:	dd49      	ble.n	80109da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010946:	9c04      	ldr	r4, [sp, #16]
 8010948:	b236      	sxth	r6, r6
 801094a:	fb08 4606 	mla	r6, r8, r6, r4
 801094e:	f06f 0001 	mvn.w	r0, #1
 8010952:	f816 8007 	ldrb.w	r8, [r6, r7]
 8010956:	9c01      	ldr	r4, [sp, #4]
 8010958:	fb00 fa0e 	mul.w	sl, r0, lr
 801095c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010960:	9800      	ldr	r0, [sp, #0]
 8010962:	eb04 0b08 	add.w	fp, r4, r8
 8010966:	f830 400a 	ldrh.w	r4, [r0, sl]
 801096a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801096e:	9801      	ldr	r0, [sp, #4]
 8010970:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010974:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010978:	9800      	ldr	r0, [sp, #0]
 801097a:	1227      	asrs	r7, r4, #8
 801097c:	fb16 f609 	smulbb	r6, r6, r9
 8010980:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010984:	fb07 6705 	mla	r7, r7, r5, r6
 8010988:	10e6      	asrs	r6, r4, #3
 801098a:	00e4      	lsls	r4, r4, #3
 801098c:	b2e4      	uxtb	r4, r4
 801098e:	fb1b fb09 	smulbb	fp, fp, r9
 8010992:	fb14 f405 	smulbb	r4, r4, r5
 8010996:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801099a:	b2bf      	uxth	r7, r7
 801099c:	fb06 b605 	mla	r6, r6, r5, fp
 80109a0:	fb08 4809 	mla	r8, r8, r9, r4
 80109a4:	b2b6      	uxth	r6, r6
 80109a6:	fa1f f888 	uxth.w	r8, r8
 80109aa:	1c7c      	adds	r4, r7, #1
 80109ac:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80109b0:	f106 0b01 	add.w	fp, r6, #1
 80109b4:	f108 0401 	add.w	r4, r8, #1
 80109b8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80109bc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80109c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80109c4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80109c8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80109cc:	4327      	orrs	r7, r4
 80109ce:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80109d2:	ea47 070b 	orr.w	r7, r7, fp
 80109d6:	f820 700a 	strh.w	r7, [r0, sl]
 80109da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80109dc:	4401      	add	r1, r0
 80109de:	9814      	ldr	r0, [sp, #80]	; 0x50
 80109e0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80109e4:	4402      	add	r2, r0
 80109e6:	e759      	b.n	801089c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80109e8:	b007      	add	sp, #28
 80109ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080109f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80109f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109f4:	b085      	sub	sp, #20
 80109f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80109fa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80109fc:	9203      	str	r2, [sp, #12]
 80109fe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010a02:	6870      	ldr	r0, [r6, #4]
 8010a04:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010a06:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8010a0a:	686f      	ldr	r7, [r5, #4]
 8010a0c:	9101      	str	r1, [sp, #4]
 8010a0e:	fb00 2404 	mla	r4, r0, r4, r2
 8010a12:	6832      	ldr	r2, [r6, #0]
 8010a14:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010a18:	682a      	ldr	r2, [r5, #0]
 8010a1a:	9202      	str	r2, [sp, #8]
 8010a1c:	3704      	adds	r7, #4
 8010a1e:	9a01      	ldr	r2, [sp, #4]
 8010a20:	2a00      	cmp	r2, #0
 8010a22:	dc03      	bgt.n	8010a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010a24:	9a03      	ldr	r2, [sp, #12]
 8010a26:	2a00      	cmp	r2, #0
 8010a28:	f340 80cc 	ble.w	8010bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010a2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010a2e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010a32:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010a36:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010a3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010a3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010a40:	2b00      	cmp	r3, #0
 8010a42:	dd0d      	ble.n	8010a60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010a44:	1406      	asrs	r6, r0, #16
 8010a46:	d405      	bmi.n	8010a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010a48:	454e      	cmp	r6, r9
 8010a4a:	da03      	bge.n	8010a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010a4c:	1416      	asrs	r6, r2, #16
 8010a4e:	d401      	bmi.n	8010a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010a50:	4546      	cmp	r6, r8
 8010a52:	db06      	blt.n	8010a62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010a54:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8010a56:	4460      	add	r0, ip
 8010a58:	4432      	add	r2, r6
 8010a5a:	3b01      	subs	r3, #1
 8010a5c:	3402      	adds	r4, #2
 8010a5e:	e7ef      	b.n	8010a40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8010a60:	d00f      	beq.n	8010a82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010a62:	1e5e      	subs	r6, r3, #1
 8010a64:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010a68:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010a6c:	d543      	bpl.n	8010af6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8010a6e:	4698      	mov	r8, r3
 8010a70:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010a74:	f1b8 0f00 	cmp.w	r8, #0
 8010a78:	dc71      	bgt.n	8010b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010a7a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010a7e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010a82:	9b01      	ldr	r3, [sp, #4]
 8010a84:	2b00      	cmp	r3, #0
 8010a86:	f340 809d 	ble.w	8010bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010a8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010a8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010a92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010a96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010a98:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010a9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010aa0:	eeb0 6a62 	vmov.f32	s12, s5
 8010aa4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010aa8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010aac:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010ab0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010ab4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010ab8:	eeb0 6a43 	vmov.f32	s12, s6
 8010abc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010ac0:	ee12 2a90 	vmov	r2, s5
 8010ac4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ac8:	fb92 fcf3 	sdiv	ip, r2, r3
 8010acc:	ee13 2a10 	vmov	r2, s6
 8010ad0:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ad4:	9312      	str	r3, [sp, #72]	; 0x48
 8010ad6:	9b01      	ldr	r3, [sp, #4]
 8010ad8:	9a03      	ldr	r2, [sp, #12]
 8010ada:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ade:	3b01      	subs	r3, #1
 8010ae0:	9301      	str	r3, [sp, #4]
 8010ae2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010ae6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ae8:	eeb0 3a67 	vmov.f32	s6, s15
 8010aec:	bf08      	it	eq
 8010aee:	4613      	moveq	r3, r2
 8010af0:	eef0 2a47 	vmov.f32	s5, s14
 8010af4:	e793      	b.n	8010a1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8010af6:	45ce      	cmp	lr, r9
 8010af8:	dab9      	bge.n	8010a6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010afa:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010afc:	fb01 2606 	mla	r6, r1, r6, r2
 8010b00:	1436      	asrs	r6, r6, #16
 8010b02:	d4b4      	bmi.n	8010a6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010b04:	4546      	cmp	r6, r8
 8010b06:	dab2      	bge.n	8010a6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010b08:	4698      	mov	r8, r3
 8010b0a:	46a2      	mov	sl, r4
 8010b0c:	f1b8 0f00 	cmp.w	r8, #0
 8010b10:	ddb3      	ble.n	8010a7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010b12:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010b16:	9902      	ldr	r1, [sp, #8]
 8010b18:	1416      	asrs	r6, r2, #16
 8010b1a:	fb09 1606 	mla	r6, r9, r6, r1
 8010b1e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8010b22:	492a      	ldr	r1, [pc, #168]	; (8010bcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010b24:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8010b28:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010b2c:	eb07 0b0e 	add.w	fp, r7, lr
 8010b30:	4460      	add	r0, ip
 8010b32:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8010b36:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010b3a:	00f6      	lsls	r6, r6, #3
 8010b3c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010b40:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010b44:	ea49 0606 	orr.w	r6, r9, r6
 8010b48:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010b4c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010b4e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8010b52:	f82a 6b02 	strh.w	r6, [sl], #2
 8010b56:	440a      	add	r2, r1
 8010b58:	f108 38ff 	add.w	r8, r8, #4294967295
 8010b5c:	e7d6      	b.n	8010b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010b5e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010b62:	d429      	bmi.n	8010bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010b64:	68ae      	ldr	r6, [r5, #8]
 8010b66:	454e      	cmp	r6, r9
 8010b68:	dd26      	ble.n	8010bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010b6a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8010b6e:	d423      	bmi.n	8010bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010b70:	68e9      	ldr	r1, [r5, #12]
 8010b72:	4559      	cmp	r1, fp
 8010b74:	dd20      	ble.n	8010bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010b76:	9902      	ldr	r1, [sp, #8]
 8010b78:	fa0f fe86 	sxth.w	lr, r6
 8010b7c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010b80:	f06f 0101 	mvn.w	r1, #1
 8010b84:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010b88:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010b8c:	eb07 060e 	add.w	r6, r7, lr
 8010b90:	fb01 f908 	mul.w	r9, r1, r8
 8010b94:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010b98:	7876      	ldrb	r6, [r6, #1]
 8010b9a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8010b9e:	00f6      	lsls	r6, r6, #3
 8010ba0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010ba4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010ba8:	ea4b 0606 	orr.w	r6, fp, r6
 8010bac:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8010bb0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010bb4:	f82a 6009 	strh.w	r6, [sl, r9]
 8010bb8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010bba:	4460      	add	r0, ip
 8010bbc:	440a      	add	r2, r1
 8010bbe:	f108 38ff 	add.w	r8, r8, #4294967295
 8010bc2:	e757      	b.n	8010a74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010bc4:	b005      	add	sp, #20
 8010bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bca:	bf00      	nop
 8010bcc:	fffff800 	.word	0xfffff800

08010bd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bd4:	b087      	sub	sp, #28
 8010bd6:	468b      	mov	fp, r1
 8010bd8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010bda:	9204      	str	r2, [sp, #16]
 8010bdc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010be0:	9205      	str	r2, [sp, #20]
 8010be2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010be6:	6841      	ldr	r1, [r0, #4]
 8010be8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010bec:	fb01 2404 	mla	r4, r1, r4, r2
 8010bf0:	6802      	ldr	r2, [r0, #0]
 8010bf2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010bf6:	f8dc 2000 	ldr.w	r2, [ip]
 8010bfa:	9201      	str	r2, [sp, #4]
 8010bfc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010c00:	3204      	adds	r2, #4
 8010c02:	9202      	str	r2, [sp, #8]
 8010c04:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010c08:	f1bb 0f00 	cmp.w	fp, #0
 8010c0c:	dc03      	bgt.n	8010c16 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010c0e:	9a04      	ldr	r2, [sp, #16]
 8010c10:	2a00      	cmp	r2, #0
 8010c12:	f340 8138 	ble.w	8010e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010c16:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010c18:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010c1c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010c20:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010c24:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010c26:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010c2a:	2b00      	cmp	r3, #0
 8010c2c:	dd0e      	ble.n	8010c4c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010c2e:	1402      	asrs	r2, r0, #16
 8010c30:	d405      	bmi.n	8010c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010c32:	42ba      	cmp	r2, r7
 8010c34:	da03      	bge.n	8010c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010c36:	140a      	asrs	r2, r1, #16
 8010c38:	d401      	bmi.n	8010c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010c3a:	42b2      	cmp	r2, r6
 8010c3c:	db07      	blt.n	8010c4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010c3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010c40:	4410      	add	r0, r2
 8010c42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010c44:	3b01      	subs	r3, #1
 8010c46:	4411      	add	r1, r2
 8010c48:	3402      	adds	r4, #2
 8010c4a:	e7ee      	b.n	8010c2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010c4c:	d019      	beq.n	8010c82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010c4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010c50:	1e5a      	subs	r2, r3, #1
 8010c52:	fb05 0502 	mla	r5, r5, r2, r0
 8010c56:	142d      	asrs	r5, r5, #16
 8010c58:	d409      	bmi.n	8010c6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010c5a:	42bd      	cmp	r5, r7
 8010c5c:	da07      	bge.n	8010c6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010c5e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010c60:	fb05 1202 	mla	r2, r5, r2, r1
 8010c64:	1412      	asrs	r2, r2, #16
 8010c66:	d402      	bmi.n	8010c6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010c68:	42b2      	cmp	r2, r6
 8010c6a:	f2c0 80ac 	blt.w	8010dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010c6e:	f04f 0e00 	mov.w	lr, #0
 8010c72:	eb03 020e 	add.w	r2, r3, lr
 8010c76:	2a00      	cmp	r2, #0
 8010c78:	dc3e      	bgt.n	8010cf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010c7a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010c7e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010c82:	f1bb 0f00 	cmp.w	fp, #0
 8010c86:	f340 80fe 	ble.w	8010e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010c8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010c8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010c92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010c96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c98:	f1bb 0b01 	subs.w	fp, fp, #1
 8010c9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010ca0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010ca4:	eeb0 6a62 	vmov.f32	s12, s5
 8010ca8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010cac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010cb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010cb4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010cb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010cbc:	eeb0 6a43 	vmov.f32	s12, s6
 8010cc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010cc4:	ee12 2a90 	vmov	r2, s5
 8010cc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ccc:	fb92 f3f3 	sdiv	r3, r2, r3
 8010cd0:	ee13 2a10 	vmov	r2, s6
 8010cd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010cd8:	9313      	str	r3, [sp, #76]	; 0x4c
 8010cda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010cdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ce0:	9a04      	ldr	r2, [sp, #16]
 8010ce2:	9314      	str	r3, [sp, #80]	; 0x50
 8010ce4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010ce8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010cea:	eeb0 3a67 	vmov.f32	s6, s15
 8010cee:	bf08      	it	eq
 8010cf0:	4613      	moveq	r3, r2
 8010cf2:	eef0 2a47 	vmov.f32	s5, s14
 8010cf6:	e787      	b.n	8010c08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010cf8:	1406      	asrs	r6, r0, #16
 8010cfa:	d45d      	bmi.n	8010db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010cfc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010d00:	42b5      	cmp	r5, r6
 8010d02:	dd59      	ble.n	8010db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010d04:	140f      	asrs	r7, r1, #16
 8010d06:	d457      	bmi.n	8010db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010d08:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010d0c:	42ba      	cmp	r2, r7
 8010d0e:	dd53      	ble.n	8010db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010d10:	9a01      	ldr	r2, [sp, #4]
 8010d12:	b22d      	sxth	r5, r5
 8010d14:	fb07 2505 	mla	r5, r7, r5, r2
 8010d18:	5daa      	ldrb	r2, [r5, r6]
 8010d1a:	9d02      	ldr	r5, [sp, #8]
 8010d1c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010d20:	0e2e      	lsrs	r6, r5, #24
 8010d22:	d049      	beq.n	8010db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010d24:	f06f 0201 	mvn.w	r2, #1
 8010d28:	fb02 f20e 	mul.w	r2, r2, lr
 8010d2c:	9203      	str	r2, [sp, #12]
 8010d2e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8010d32:	9a05      	ldr	r2, [sp, #20]
 8010d34:	4356      	muls	r6, r2
 8010d36:	1c72      	adds	r2, r6, #1
 8010d38:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010d3c:	1212      	asrs	r2, r2, #8
 8010d3e:	fa1f f982 	uxth.w	r9, r2
 8010d42:	ea4f 2728 	mov.w	r7, r8, asr #8
 8010d46:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010d4a:	43d2      	mvns	r2, r2
 8010d4c:	b2d2      	uxtb	r2, r2
 8010d4e:	fb16 f609 	smulbb	r6, r6, r9
 8010d52:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010d56:	fb07 6702 	mla	r7, r7, r2, r6
 8010d5a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010d5e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010d62:	b2ed      	uxtb	r5, r5
 8010d64:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010d68:	fa5f f888 	uxtb.w	r8, r8
 8010d6c:	fb15 f509 	smulbb	r5, r5, r9
 8010d70:	fb08 5502 	mla	r5, r8, r2, r5
 8010d74:	b2bf      	uxth	r7, r7
 8010d76:	fb1a fa09 	smulbb	sl, sl, r9
 8010d7a:	b2ad      	uxth	r5, r5
 8010d7c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010d80:	fb06 a602 	mla	r6, r6, r2, sl
 8010d84:	1c7a      	adds	r2, r7, #1
 8010d86:	f105 0a01 	add.w	sl, r5, #1
 8010d8a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010d8e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010d92:	b2b6      	uxth	r6, r6
 8010d94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010d98:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010d9c:	ea4a 0707 	orr.w	r7, sl, r7
 8010da0:	f106 0a01 	add.w	sl, r6, #1
 8010da4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010da8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010dac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010db0:	9a03      	ldr	r2, [sp, #12]
 8010db2:	ea47 070a 	orr.w	r7, r7, sl
 8010db6:	52a7      	strh	r7, [r4, r2]
 8010db8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010dba:	4410      	add	r0, r2
 8010dbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010dbe:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010dc2:	4411      	add	r1, r2
 8010dc4:	e755      	b.n	8010c72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010dc6:	f04f 0800 	mov.w	r8, #0
 8010dca:	eba3 0208 	sub.w	r2, r3, r8
 8010dce:	2a00      	cmp	r2, #0
 8010dd0:	f77f af53 	ble.w	8010c7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010dd4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8010dd8:	9f01      	ldr	r7, [sp, #4]
 8010dda:	140a      	asrs	r2, r1, #16
 8010ddc:	1405      	asrs	r5, r0, #16
 8010dde:	fb06 7202 	mla	r2, r6, r2, r7
 8010de2:	5d52      	ldrb	r2, [r2, r5]
 8010de4:	9d02      	ldr	r5, [sp, #8]
 8010de6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010dea:	0e2e      	lsrs	r6, r5, #24
 8010dec:	d044      	beq.n	8010e78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8010dee:	9a05      	ldr	r2, [sp, #20]
 8010df0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010df4:	4356      	muls	r6, r2
 8010df6:	1c72      	adds	r2, r6, #1
 8010df8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010dfc:	1212      	asrs	r2, r2, #8
 8010dfe:	fa1f f982 	uxth.w	r9, r2
 8010e02:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010e06:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010e0a:	43d2      	mvns	r2, r2
 8010e0c:	b2d2      	uxtb	r2, r2
 8010e0e:	fb16 f609 	smulbb	r6, r6, r9
 8010e12:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010e16:	fb07 6702 	mla	r7, r7, r2, r6
 8010e1a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010e1e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010e22:	b2ed      	uxtb	r5, r5
 8010e24:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010e28:	fa5f fe8e 	uxtb.w	lr, lr
 8010e2c:	fb15 f509 	smulbb	r5, r5, r9
 8010e30:	fb0e 5502 	mla	r5, lr, r2, r5
 8010e34:	b2bf      	uxth	r7, r7
 8010e36:	fb1a fa09 	smulbb	sl, sl, r9
 8010e3a:	b2ad      	uxth	r5, r5
 8010e3c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010e40:	fb06 a602 	mla	r6, r6, r2, sl
 8010e44:	1c7a      	adds	r2, r7, #1
 8010e46:	f105 0a01 	add.w	sl, r5, #1
 8010e4a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010e4e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010e52:	b2b6      	uxth	r6, r6
 8010e54:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010e58:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010e5c:	ea4a 0707 	orr.w	r7, sl, r7
 8010e60:	f106 0a01 	add.w	sl, r6, #1
 8010e64:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010e68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010e6c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010e70:	ea47 070a 	orr.w	r7, r7, sl
 8010e74:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010e78:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010e7a:	4410      	add	r0, r2
 8010e7c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010e7e:	f108 0801 	add.w	r8, r8, #1
 8010e82:	4411      	add	r1, r2
 8010e84:	e7a1      	b.n	8010dca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010e86:	b007      	add	sp, #28
 8010e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010e8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e90:	b085      	sub	sp, #20
 8010e92:	468b      	mov	fp, r1
 8010e94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010e96:	9203      	str	r2, [sp, #12]
 8010e98:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010e9c:	6841      	ldr	r1, [r0, #4]
 8010e9e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8010ea2:	fb01 2404 	mla	r4, r1, r4, r2
 8010ea6:	6802      	ldr	r2, [r0, #0]
 8010ea8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010eac:	f8de 2000 	ldr.w	r2, [lr]
 8010eb0:	9200      	str	r2, [sp, #0]
 8010eb2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010eb6:	3204      	adds	r2, #4
 8010eb8:	9201      	str	r2, [sp, #4]
 8010eba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010ebe:	f1bb 0f00 	cmp.w	fp, #0
 8010ec2:	dc03      	bgt.n	8010ecc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010ec4:	9a03      	ldr	r2, [sp, #12]
 8010ec6:	2a00      	cmp	r2, #0
 8010ec8:	f340 8153 	ble.w	8011172 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010ecc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010ece:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010ed2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010ed6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010eda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010edc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010ee0:	2b00      	cmp	r3, #0
 8010ee2:	dd0e      	ble.n	8010f02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010ee4:	1408      	asrs	r0, r1, #16
 8010ee6:	d405      	bmi.n	8010ef4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010ee8:	42b8      	cmp	r0, r7
 8010eea:	da03      	bge.n	8010ef4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010eec:	1410      	asrs	r0, r2, #16
 8010eee:	d401      	bmi.n	8010ef4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010ef0:	42b0      	cmp	r0, r6
 8010ef2:	db07      	blt.n	8010f04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010ef4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010ef6:	4401      	add	r1, r0
 8010ef8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010efa:	3b01      	subs	r3, #1
 8010efc:	4402      	add	r2, r0
 8010efe:	3402      	adds	r4, #2
 8010f00:	e7ee      	b.n	8010ee0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010f02:	d017      	beq.n	8010f34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010f04:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010f06:	1e58      	subs	r0, r3, #1
 8010f08:	fb05 1500 	mla	r5, r5, r0, r1
 8010f0c:	142d      	asrs	r5, r5, #16
 8010f0e:	d409      	bmi.n	8010f24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010f10:	42bd      	cmp	r5, r7
 8010f12:	da07      	bge.n	8010f24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010f14:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010f16:	fb05 2000 	mla	r0, r5, r0, r2
 8010f1a:	1400      	asrs	r0, r0, #16
 8010f1c:	d402      	bmi.n	8010f24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010f1e:	42b0      	cmp	r0, r6
 8010f20:	f2c0 80bc 	blt.w	801109c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010f24:	2600      	movs	r6, #0
 8010f26:	1998      	adds	r0, r3, r6
 8010f28:	2800      	cmp	r0, #0
 8010f2a:	dc3e      	bgt.n	8010faa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010f2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010f30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010f34:	f1bb 0f00 	cmp.w	fp, #0
 8010f38:	f340 811b 	ble.w	8011172 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010f3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010f40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010f44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010f48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010f4a:	f1bb 0b01 	subs.w	fp, fp, #1
 8010f4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010f52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010f56:	eeb0 6a62 	vmov.f32	s12, s5
 8010f5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010f5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f62:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010f66:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010f6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010f6e:	eeb0 6a43 	vmov.f32	s12, s6
 8010f72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010f76:	ee12 2a90 	vmov	r2, s5
 8010f7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010f7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010f82:	ee13 2a10 	vmov	r2, s6
 8010f86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f8a:	9311      	str	r3, [sp, #68]	; 0x44
 8010f8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010f8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010f92:	9a03      	ldr	r2, [sp, #12]
 8010f94:	9312      	str	r3, [sp, #72]	; 0x48
 8010f96:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010f9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010f9c:	eeb0 3a67 	vmov.f32	s6, s15
 8010fa0:	bf08      	it	eq
 8010fa2:	4613      	moveq	r3, r2
 8010fa4:	eef0 2a47 	vmov.f32	s5, s14
 8010fa8:	e789      	b.n	8010ebe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010faa:	140f      	asrs	r7, r1, #16
 8010fac:	d426      	bmi.n	8010ffc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010fae:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010fb2:	42bd      	cmp	r5, r7
 8010fb4:	dd22      	ble.n	8010ffc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010fb6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010fba:	d41f      	bmi.n	8010ffc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010fbc:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010fc0:	4560      	cmp	r0, ip
 8010fc2:	dd1b      	ble.n	8010ffc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010fc4:	9800      	ldr	r0, [sp, #0]
 8010fc6:	b22d      	sxth	r5, r5
 8010fc8:	fb0c 0505 	mla	r5, ip, r5, r0
 8010fcc:	5de8      	ldrb	r0, [r5, r7]
 8010fce:	9d01      	ldr	r5, [sp, #4]
 8010fd0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010fd4:	0e07      	lsrs	r7, r0, #24
 8010fd6:	2fff      	cmp	r7, #255	; 0xff
 8010fd8:	d116      	bne.n	8011008 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010fda:	f06f 0501 	mvn.w	r5, #1
 8010fde:	fb05 f706 	mul.w	r7, r5, r6
 8010fe2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010fe6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010fea:	0945      	lsrs	r5, r0, #5
 8010fec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010ff0:	ea4c 0505 	orr.w	r5, ip, r5
 8010ff4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010ff8:	4305      	orrs	r5, r0
 8010ffa:	53e5      	strh	r5, [r4, r7]
 8010ffc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010ffe:	4401      	add	r1, r0
 8011000:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011002:	3e01      	subs	r6, #1
 8011004:	4402      	add	r2, r0
 8011006:	e78e      	b.n	8010f26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8011008:	b2fd      	uxtb	r5, r7
 801100a:	2f00      	cmp	r7, #0
 801100c:	d0f6      	beq.n	8010ffc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801100e:	f06f 0701 	mvn.w	r7, #1
 8011012:	4377      	muls	r7, r6
 8011014:	fa1f f985 	uxth.w	r9, r5
 8011018:	f834 8007 	ldrh.w	r8, [r4, r7]
 801101c:	9702      	str	r7, [sp, #8]
 801101e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011022:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011026:	43ed      	mvns	r5, r5
 8011028:	b2ed      	uxtb	r5, r5
 801102a:	fb17 f709 	smulbb	r7, r7, r9
 801102e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011032:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011036:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801103a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801103e:	b2c0      	uxtb	r0, r0
 8011040:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011044:	fa5f f888 	uxtb.w	r8, r8
 8011048:	fb10 f009 	smulbb	r0, r0, r9
 801104c:	fb08 0005 	mla	r0, r8, r5, r0
 8011050:	b280      	uxth	r0, r0
 8011052:	fa1f fc8c 	uxth.w	ip, ip
 8011056:	fb1a fa09 	smulbb	sl, sl, r9
 801105a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801105e:	fb07 a705 	mla	r7, r7, r5, sl
 8011062:	f100 0a01 	add.w	sl, r0, #1
 8011066:	f10c 0501 	add.w	r5, ip, #1
 801106a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801106e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011072:	b2bf      	uxth	r7, r7
 8011074:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011078:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801107c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011080:	f107 0a01 	add.w	sl, r7, #1
 8011084:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011088:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801108c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011090:	9802      	ldr	r0, [sp, #8]
 8011092:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011096:	f824 c000 	strh.w	ip, [r4, r0]
 801109a:	e7af      	b.n	8010ffc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801109c:	f04f 0800 	mov.w	r8, #0
 80110a0:	eba3 0008 	sub.w	r0, r3, r8
 80110a4:	2800      	cmp	r0, #0
 80110a6:	f77f af41 	ble.w	8010f2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80110aa:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80110ae:	9f00      	ldr	r7, [sp, #0]
 80110b0:	1410      	asrs	r0, r2, #16
 80110b2:	140d      	asrs	r5, r1, #16
 80110b4:	fb06 7000 	mla	r0, r6, r0, r7
 80110b8:	5d40      	ldrb	r0, [r0, r5]
 80110ba:	9d01      	ldr	r5, [sp, #4]
 80110bc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80110c0:	0e2e      	lsrs	r6, r5, #24
 80110c2:	2eff      	cmp	r6, #255	; 0xff
 80110c4:	d112      	bne.n	80110ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80110c6:	482c      	ldr	r0, [pc, #176]	; (8011178 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80110c8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80110cc:	0968      	lsrs	r0, r5, #5
 80110ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80110d2:	4330      	orrs	r0, r6
 80110d4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80110d8:	4328      	orrs	r0, r5
 80110da:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80110de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80110e0:	4401      	add	r1, r0
 80110e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80110e4:	f108 0801 	add.w	r8, r8, #1
 80110e8:	4402      	add	r2, r0
 80110ea:	e7d9      	b.n	80110a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80110ec:	b2f0      	uxtb	r0, r6
 80110ee:	2e00      	cmp	r6, #0
 80110f0:	d0f5      	beq.n	80110de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80110f2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80110f6:	fa1f f980 	uxth.w	r9, r0
 80110fa:	ea4f 272c 	mov.w	r7, ip, asr #8
 80110fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011102:	43c0      	mvns	r0, r0
 8011104:	b2c0      	uxtb	r0, r0
 8011106:	fb16 f609 	smulbb	r6, r6, r9
 801110a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801110e:	fb07 6700 	mla	r7, r7, r0, r6
 8011112:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011116:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801111a:	b2ed      	uxtb	r5, r5
 801111c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011120:	fa5f fc8c 	uxtb.w	ip, ip
 8011124:	fb15 f509 	smulbb	r5, r5, r9
 8011128:	fb0c 5500 	mla	r5, ip, r0, r5
 801112c:	b2bf      	uxth	r7, r7
 801112e:	fb1a fa09 	smulbb	sl, sl, r9
 8011132:	b2ad      	uxth	r5, r5
 8011134:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011138:	fb06 a600 	mla	r6, r6, r0, sl
 801113c:	1c78      	adds	r0, r7, #1
 801113e:	f105 0a01 	add.w	sl, r5, #1
 8011142:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011146:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801114a:	b2b6      	uxth	r6, r6
 801114c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011150:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011154:	ea4a 0707 	orr.w	r7, sl, r7
 8011158:	f106 0a01 	add.w	sl, r6, #1
 801115c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011160:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011164:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011168:	ea47 070a 	orr.w	r7, r7, sl
 801116c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011170:	e7b5      	b.n	80110de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8011172:	b005      	add	sp, #20
 8011174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011178:	fffff800 	.word	0xfffff800

0801117c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801117c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011180:	b087      	sub	sp, #28
 8011182:	468b      	mov	fp, r1
 8011184:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011186:	9204      	str	r2, [sp, #16]
 8011188:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801118c:	9205      	str	r2, [sp, #20]
 801118e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011192:	6861      	ldr	r1, [r4, #4]
 8011194:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8011198:	fb01 2000 	mla	r0, r1, r0, r2
 801119c:	6822      	ldr	r2, [r4, #0]
 801119e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80111a2:	f8de 2000 	ldr.w	r2, [lr]
 80111a6:	9201      	str	r2, [sp, #4]
 80111a8:	f8de 2004 	ldr.w	r2, [lr, #4]
 80111ac:	9202      	str	r2, [sp, #8]
 80111ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80111b2:	f1bb 0f00 	cmp.w	fp, #0
 80111b6:	dc03      	bgt.n	80111c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80111b8:	9a04      	ldr	r2, [sp, #16]
 80111ba:	2a00      	cmp	r2, #0
 80111bc:	f340 8142 	ble.w	8011444 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80111c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80111c2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80111c6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80111ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80111ce:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80111d0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80111d4:	2b00      	cmp	r3, #0
 80111d6:	dd0e      	ble.n	80111f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80111d8:	140c      	asrs	r4, r1, #16
 80111da:	d405      	bmi.n	80111e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80111dc:	42bc      	cmp	r4, r7
 80111de:	da03      	bge.n	80111e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80111e0:	1414      	asrs	r4, r2, #16
 80111e2:	d401      	bmi.n	80111e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80111e4:	42b4      	cmp	r4, r6
 80111e6:	db07      	blt.n	80111f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80111e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80111ea:	4421      	add	r1, r4
 80111ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80111ee:	3b01      	subs	r3, #1
 80111f0:	4422      	add	r2, r4
 80111f2:	3002      	adds	r0, #2
 80111f4:	e7ee      	b.n	80111d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80111f6:	d019      	beq.n	801122c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80111f8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80111fa:	1e5c      	subs	r4, r3, #1
 80111fc:	fb05 1504 	mla	r5, r5, r4, r1
 8011200:	142d      	asrs	r5, r5, #16
 8011202:	d409      	bmi.n	8011218 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011204:	42bd      	cmp	r5, r7
 8011206:	da07      	bge.n	8011218 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011208:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801120a:	fb05 2404 	mla	r4, r5, r4, r2
 801120e:	1424      	asrs	r4, r4, #16
 8011210:	d402      	bmi.n	8011218 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011212:	42b4      	cmp	r4, r6
 8011214:	f2c0 80b1 	blt.w	801137a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8011218:	f04f 0800 	mov.w	r8, #0
 801121c:	eb03 0408 	add.w	r4, r3, r8
 8011220:	2c00      	cmp	r4, #0
 8011222:	dc3e      	bgt.n	80112a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8011224:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011228:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801122c:	f1bb 0f00 	cmp.w	fp, #0
 8011230:	f340 8108 	ble.w	8011444 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011234:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011238:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801123c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011240:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011242:	f1bb 0b01 	subs.w	fp, fp, #1
 8011246:	ee31 1a05 	vadd.f32	s2, s2, s10
 801124a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801124e:	eeb0 6a62 	vmov.f32	s12, s5
 8011252:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011256:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801125a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801125e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011262:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011266:	eeb0 6a43 	vmov.f32	s12, s6
 801126a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801126e:	ee12 2a90 	vmov	r2, s5
 8011272:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011276:	fb92 f3f3 	sdiv	r3, r2, r3
 801127a:	ee13 2a10 	vmov	r2, s6
 801127e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011282:	9313      	str	r3, [sp, #76]	; 0x4c
 8011284:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011286:	fb92 f3f3 	sdiv	r3, r2, r3
 801128a:	9a04      	ldr	r2, [sp, #16]
 801128c:	9314      	str	r3, [sp, #80]	; 0x50
 801128e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011292:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011294:	eeb0 3a67 	vmov.f32	s6, s15
 8011298:	bf08      	it	eq
 801129a:	4613      	moveq	r3, r2
 801129c:	eef0 2a47 	vmov.f32	s5, s14
 80112a0:	e787      	b.n	80111b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80112a2:	140e      	asrs	r6, r1, #16
 80112a4:	d462      	bmi.n	801136c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80112a6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80112aa:	42b5      	cmp	r5, r6
 80112ac:	dd5e      	ble.n	801136c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80112ae:	1417      	asrs	r7, r2, #16
 80112b0:	d45c      	bmi.n	801136c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80112b2:	f8de 400c 	ldr.w	r4, [lr, #12]
 80112b6:	42bc      	cmp	r4, r7
 80112b8:	dd58      	ble.n	801136c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80112ba:	b22d      	sxth	r5, r5
 80112bc:	fb07 6505 	mla	r5, r7, r5, r6
 80112c0:	9c02      	ldr	r4, [sp, #8]
 80112c2:	5d66      	ldrb	r6, [r4, r5]
 80112c4:	2e00      	cmp	r6, #0
 80112c6:	d051      	beq.n	801136c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80112c8:	9c01      	ldr	r4, [sp, #4]
 80112ca:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80112ce:	f06f 0401 	mvn.w	r4, #1
 80112d2:	fb04 f408 	mul.w	r4, r4, r8
 80112d6:	9403      	str	r4, [sp, #12]
 80112d8:	5b05      	ldrh	r5, [r0, r4]
 80112da:	9c05      	ldr	r4, [sp, #20]
 80112dc:	4366      	muls	r6, r4
 80112de:	1c74      	adds	r4, r6, #1
 80112e0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80112e4:	1224      	asrs	r4, r4, #8
 80112e6:	b2a7      	uxth	r7, r4
 80112e8:	122e      	asrs	r6, r5, #8
 80112ea:	43e4      	mvns	r4, r4
 80112ec:	b2e4      	uxtb	r4, r4
 80112ee:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80112f2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80112f6:	fb16 f604 	smulbb	r6, r6, r4
 80112fa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80112fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011302:	00ed      	lsls	r5, r5, #3
 8011304:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011308:	b2ed      	uxtb	r5, r5
 801130a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801130e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011312:	fb15 f504 	smulbb	r5, r5, r4
 8011316:	fa5f f989 	uxtb.w	r9, r9
 801131a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801131e:	fb09 5507 	mla	r5, r9, r7, r5
 8011322:	fb1a fa04 	smulbb	sl, sl, r4
 8011326:	fa1f fc8c 	uxth.w	ip, ip
 801132a:	b2ad      	uxth	r5, r5
 801132c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011330:	fb06 a607 	mla	r6, r6, r7, sl
 8011334:	f10c 0401 	add.w	r4, ip, #1
 8011338:	f105 0a01 	add.w	sl, r5, #1
 801133c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011340:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011344:	b2b6      	uxth	r6, r6
 8011346:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801134a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801134e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011352:	f106 0a01 	add.w	sl, r6, #1
 8011356:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801135a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801135e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011362:	9c03      	ldr	r4, [sp, #12]
 8011364:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011368:	f820 c004 	strh.w	ip, [r0, r4]
 801136c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801136e:	4421      	add	r1, r4
 8011370:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011372:	f108 38ff 	add.w	r8, r8, #4294967295
 8011376:	4422      	add	r2, r4
 8011378:	e750      	b.n	801121c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801137a:	f04f 0900 	mov.w	r9, #0
 801137e:	eba3 0409 	sub.w	r4, r3, r9
 8011382:	2c00      	cmp	r4, #0
 8011384:	f77f af4e 	ble.w	8011224 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011388:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801138c:	140d      	asrs	r5, r1, #16
 801138e:	1414      	asrs	r4, r2, #16
 8011390:	fb06 5404 	mla	r4, r6, r4, r5
 8011394:	9d02      	ldr	r5, [sp, #8]
 8011396:	5d2e      	ldrb	r6, [r5, r4]
 8011398:	2e00      	cmp	r6, #0
 801139a:	d04c      	beq.n	8011436 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801139c:	9d01      	ldr	r5, [sp, #4]
 801139e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80113a2:	9c05      	ldr	r4, [sp, #20]
 80113a4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80113a8:	4366      	muls	r6, r4
 80113aa:	1c74      	adds	r4, r6, #1
 80113ac:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80113b0:	1224      	asrs	r4, r4, #8
 80113b2:	b2a7      	uxth	r7, r4
 80113b4:	122e      	asrs	r6, r5, #8
 80113b6:	43e4      	mvns	r4, r4
 80113b8:	b2e4      	uxtb	r4, r4
 80113ba:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80113be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80113c2:	fb16 f604 	smulbb	r6, r6, r4
 80113c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80113ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80113ce:	00ed      	lsls	r5, r5, #3
 80113d0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80113d4:	b2ed      	uxtb	r5, r5
 80113d6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80113da:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80113de:	fb15 f504 	smulbb	r5, r5, r4
 80113e2:	fa5f f888 	uxtb.w	r8, r8
 80113e6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80113ea:	fb08 5507 	mla	r5, r8, r7, r5
 80113ee:	fb1a fa04 	smulbb	sl, sl, r4
 80113f2:	fa1f fc8c 	uxth.w	ip, ip
 80113f6:	b2ad      	uxth	r5, r5
 80113f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80113fc:	fb06 a607 	mla	r6, r6, r7, sl
 8011400:	f10c 0401 	add.w	r4, ip, #1
 8011404:	f105 0a01 	add.w	sl, r5, #1
 8011408:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801140c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011410:	b2b6      	uxth	r6, r6
 8011412:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011416:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801141a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801141e:	f106 0a01 	add.w	sl, r6, #1
 8011422:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011426:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801142a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801142e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011432:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011436:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011438:	4421      	add	r1, r4
 801143a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801143c:	f109 0901 	add.w	r9, r9, #1
 8011440:	4422      	add	r2, r4
 8011442:	e79c      	b.n	801137e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011444:	b007      	add	sp, #28
 8011446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801144a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801144a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801144e:	b085      	sub	sp, #20
 8011450:	468b      	mov	fp, r1
 8011452:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011454:	9203      	str	r2, [sp, #12]
 8011456:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801145a:	6861      	ldr	r1, [r4, #4]
 801145c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011460:	fb01 2000 	mla	r0, r1, r0, r2
 8011464:	6822      	ldr	r2, [r4, #0]
 8011466:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801146a:	f8d8 2000 	ldr.w	r2, [r8]
 801146e:	9200      	str	r2, [sp, #0]
 8011470:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8011474:	9201      	str	r2, [sp, #4]
 8011476:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801147a:	f1bb 0f00 	cmp.w	fp, #0
 801147e:	dc03      	bgt.n	8011488 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011480:	9a03      	ldr	r2, [sp, #12]
 8011482:	2a00      	cmp	r2, #0
 8011484:	f340 8146 	ble.w	8011714 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011488:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801148a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801148e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011492:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011496:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011498:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801149c:	2b00      	cmp	r3, #0
 801149e:	dd0e      	ble.n	80114be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80114a0:	140c      	asrs	r4, r1, #16
 80114a2:	d405      	bmi.n	80114b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80114a4:	42bc      	cmp	r4, r7
 80114a6:	da03      	bge.n	80114b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80114a8:	1414      	asrs	r4, r2, #16
 80114aa:	d401      	bmi.n	80114b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80114ac:	42b4      	cmp	r4, r6
 80114ae:	db07      	blt.n	80114c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80114b0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80114b2:	4421      	add	r1, r4
 80114b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80114b6:	3b01      	subs	r3, #1
 80114b8:	4422      	add	r2, r4
 80114ba:	3002      	adds	r0, #2
 80114bc:	e7ee      	b.n	801149c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80114be:	d017      	beq.n	80114f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80114c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80114c2:	1e5c      	subs	r4, r3, #1
 80114c4:	fb05 1504 	mla	r5, r5, r4, r1
 80114c8:	142d      	asrs	r5, r5, #16
 80114ca:	d409      	bmi.n	80114e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80114cc:	42bd      	cmp	r5, r7
 80114ce:	da07      	bge.n	80114e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80114d0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80114d2:	fb05 2404 	mla	r4, r5, r4, r2
 80114d6:	1424      	asrs	r4, r4, #16
 80114d8:	d402      	bmi.n	80114e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80114da:	42b4      	cmp	r4, r6
 80114dc:	f2c0 80b3 	blt.w	8011646 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80114e0:	2600      	movs	r6, #0
 80114e2:	199c      	adds	r4, r3, r6
 80114e4:	2c00      	cmp	r4, #0
 80114e6:	dc3e      	bgt.n	8011566 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80114e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80114ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80114f0:	f1bb 0f00 	cmp.w	fp, #0
 80114f4:	f340 810e 	ble.w	8011714 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80114f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80114fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011500:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011504:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011506:	f1bb 0b01 	subs.w	fp, fp, #1
 801150a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801150e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011512:	eeb0 6a62 	vmov.f32	s12, s5
 8011516:	ee61 7a27 	vmul.f32	s15, s2, s15
 801151a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801151e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011522:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011526:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801152a:	eeb0 6a43 	vmov.f32	s12, s6
 801152e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011532:	ee12 2a90 	vmov	r2, s5
 8011536:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801153a:	fb92 f3f3 	sdiv	r3, r2, r3
 801153e:	ee13 2a10 	vmov	r2, s6
 8011542:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011546:	9311      	str	r3, [sp, #68]	; 0x44
 8011548:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801154a:	fb92 f3f3 	sdiv	r3, r2, r3
 801154e:	9a03      	ldr	r2, [sp, #12]
 8011550:	9312      	str	r3, [sp, #72]	; 0x48
 8011552:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011556:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011558:	eeb0 3a67 	vmov.f32	s6, s15
 801155c:	bf08      	it	eq
 801155e:	4613      	moveq	r3, r2
 8011560:	eef0 2a47 	vmov.f32	s5, s14
 8011564:	e789      	b.n	801147a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011566:	140f      	asrs	r7, r1, #16
 8011568:	d418      	bmi.n	801159c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801156a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801156e:	42bd      	cmp	r5, r7
 8011570:	dd14      	ble.n	801159c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011572:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011576:	d411      	bmi.n	801159c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011578:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801157c:	4564      	cmp	r4, ip
 801157e:	dd0d      	ble.n	801159c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011580:	b22d      	sxth	r5, r5
 8011582:	fb0c 7505 	mla	r5, ip, r5, r7
 8011586:	9c01      	ldr	r4, [sp, #4]
 8011588:	5d64      	ldrb	r4, [r4, r5]
 801158a:	2cff      	cmp	r4, #255	; 0xff
 801158c:	d10c      	bne.n	80115a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801158e:	9c00      	ldr	r4, [sp, #0]
 8011590:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8011594:	f06f 0401 	mvn.w	r4, #1
 8011598:	4374      	muls	r4, r6
 801159a:	5305      	strh	r5, [r0, r4]
 801159c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801159e:	4421      	add	r1, r4
 80115a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80115a2:	3e01      	subs	r6, #1
 80115a4:	4422      	add	r2, r4
 80115a6:	e79c      	b.n	80114e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80115a8:	2c00      	cmp	r4, #0
 80115aa:	d0f7      	beq.n	801159c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80115ac:	9f00      	ldr	r7, [sp, #0]
 80115ae:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80115b2:	f06f 0501 	mvn.w	r5, #1
 80115b6:	4375      	muls	r5, r6
 80115b8:	9502      	str	r5, [sp, #8]
 80115ba:	5b45      	ldrh	r5, [r0, r5]
 80115bc:	fa1f fc84 	uxth.w	ip, r4
 80115c0:	122f      	asrs	r7, r5, #8
 80115c2:	43e4      	mvns	r4, r4
 80115c4:	b2e4      	uxtb	r4, r4
 80115c6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80115ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80115ce:	fb17 f704 	smulbb	r7, r7, r4
 80115d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80115d6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80115da:	00ed      	lsls	r5, r5, #3
 80115dc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80115e0:	b2ed      	uxtb	r5, r5
 80115e2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80115e6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80115ea:	fb15 f504 	smulbb	r5, r5, r4
 80115ee:	fa5f f989 	uxtb.w	r9, r9
 80115f2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80115f6:	fb09 550c 	mla	r5, r9, ip, r5
 80115fa:	fb1a fa04 	smulbb	sl, sl, r4
 80115fe:	fa1f fe8e 	uxth.w	lr, lr
 8011602:	b2ad      	uxth	r5, r5
 8011604:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011608:	fb07 a70c 	mla	r7, r7, ip, sl
 801160c:	f10e 0401 	add.w	r4, lr, #1
 8011610:	f105 0a01 	add.w	sl, r5, #1
 8011614:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8011618:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801161c:	b2bf      	uxth	r7, r7
 801161e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011622:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011626:	ea4a 0e0e 	orr.w	lr, sl, lr
 801162a:	f107 0a01 	add.w	sl, r7, #1
 801162e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011632:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011636:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801163a:	9c02      	ldr	r4, [sp, #8]
 801163c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011640:	f820 e004 	strh.w	lr, [r0, r4]
 8011644:	e7aa      	b.n	801159c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011646:	f04f 0900 	mov.w	r9, #0
 801164a:	eba3 0409 	sub.w	r4, r3, r9
 801164e:	2c00      	cmp	r4, #0
 8011650:	f77f af4a 	ble.w	80114e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011654:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011658:	1414      	asrs	r4, r2, #16
 801165a:	140d      	asrs	r5, r1, #16
 801165c:	fb06 5504 	mla	r5, r6, r4, r5
 8011660:	9c01      	ldr	r4, [sp, #4]
 8011662:	5d64      	ldrb	r4, [r4, r5]
 8011664:	2cff      	cmp	r4, #255	; 0xff
 8011666:	d10b      	bne.n	8011680 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8011668:	9c00      	ldr	r4, [sp, #0]
 801166a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801166e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8011672:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011674:	4421      	add	r1, r4
 8011676:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011678:	f109 0901 	add.w	r9, r9, #1
 801167c:	4422      	add	r2, r4
 801167e:	e7e4      	b.n	801164a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8011680:	2c00      	cmp	r4, #0
 8011682:	d0f6      	beq.n	8011672 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011684:	9e00      	ldr	r6, [sp, #0]
 8011686:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801168a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801168e:	b2a7      	uxth	r7, r4
 8011690:	122e      	asrs	r6, r5, #8
 8011692:	43e4      	mvns	r4, r4
 8011694:	b2e4      	uxtb	r4, r4
 8011696:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801169a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801169e:	fb16 f604 	smulbb	r6, r6, r4
 80116a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80116a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80116aa:	00ed      	lsls	r5, r5, #3
 80116ac:	fb0c 6c07 	mla	ip, ip, r7, r6
 80116b0:	b2ed      	uxtb	r5, r5
 80116b2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80116b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80116ba:	fb15 f504 	smulbb	r5, r5, r4
 80116be:	fa5f fe8e 	uxtb.w	lr, lr
 80116c2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80116c6:	fb0e 5507 	mla	r5, lr, r7, r5
 80116ca:	fb1a fa04 	smulbb	sl, sl, r4
 80116ce:	fa1f fc8c 	uxth.w	ip, ip
 80116d2:	b2ad      	uxth	r5, r5
 80116d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80116d8:	fb06 a607 	mla	r6, r6, r7, sl
 80116dc:	f10c 0401 	add.w	r4, ip, #1
 80116e0:	f105 0a01 	add.w	sl, r5, #1
 80116e4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80116e8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80116ec:	b2b6      	uxth	r6, r6
 80116ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80116f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80116f6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80116fa:	f106 0a01 	add.w	sl, r6, #1
 80116fe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011702:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011706:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801170a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801170e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011712:	e7ae      	b.n	8011672 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011714:	b005      	add	sp, #20
 8011716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801171a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801171a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801171e:	b085      	sub	sp, #20
 8011720:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011722:	9203      	str	r2, [sp, #12]
 8011724:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8011728:	9201      	str	r2, [sp, #4]
 801172a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801172e:	9100      	str	r1, [sp, #0]
 8011730:	6841      	ldr	r1, [r0, #4]
 8011732:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8011736:	fb01 2404 	mla	r4, r1, r4, r2
 801173a:	6802      	ldr	r2, [r0, #0]
 801173c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011740:	f8de 2000 	ldr.w	r2, [lr]
 8011744:	9202      	str	r2, [sp, #8]
 8011746:	9a01      	ldr	r2, [sp, #4]
 8011748:	43d6      	mvns	r6, r2
 801174a:	b2f6      	uxtb	r6, r6
 801174c:	9a00      	ldr	r2, [sp, #0]
 801174e:	2a00      	cmp	r2, #0
 8011750:	dc03      	bgt.n	801175a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011752:	9a03      	ldr	r2, [sp, #12]
 8011754:	2a00      	cmp	r2, #0
 8011756:	f340 8124 	ble.w	80119a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801175a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801175c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011760:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011764:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011768:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801176a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801176e:	2b00      	cmp	r3, #0
 8011770:	dd0e      	ble.n	8011790 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011772:	1408      	asrs	r0, r1, #16
 8011774:	d405      	bmi.n	8011782 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011776:	4560      	cmp	r0, ip
 8011778:	da03      	bge.n	8011782 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801177a:	1410      	asrs	r0, r2, #16
 801177c:	d401      	bmi.n	8011782 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801177e:	42b8      	cmp	r0, r7
 8011780:	db07      	blt.n	8011792 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8011782:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011784:	4401      	add	r1, r0
 8011786:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011788:	3b01      	subs	r3, #1
 801178a:	4402      	add	r2, r0
 801178c:	3402      	adds	r4, #2
 801178e:	e7ee      	b.n	801176e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011790:	d06e      	beq.n	8011870 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011792:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011794:	1e58      	subs	r0, r3, #1
 8011796:	fb05 1500 	mla	r5, r5, r0, r1
 801179a:	142d      	asrs	r5, r5, #16
 801179c:	d45c      	bmi.n	8011858 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801179e:	4565      	cmp	r5, ip
 80117a0:	da5a      	bge.n	8011858 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80117a2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80117a4:	fb05 2000 	mla	r0, r5, r0, r2
 80117a8:	1400      	asrs	r0, r0, #16
 80117aa:	d455      	bmi.n	8011858 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80117ac:	42b8      	cmp	r0, r7
 80117ae:	da53      	bge.n	8011858 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80117b0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80117b4:	4699      	mov	r9, r3
 80117b6:	46a2      	mov	sl, r4
 80117b8:	f1b9 0f00 	cmp.w	r9, #0
 80117bc:	dd54      	ble.n	8011868 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80117be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80117c2:	140d      	asrs	r5, r1, #16
 80117c4:	1410      	asrs	r0, r2, #16
 80117c6:	fb07 5000 	mla	r0, r7, r0, r5
 80117ca:	9d02      	ldr	r5, [sp, #8]
 80117cc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80117d0:	f8ba 5000 	ldrh.w	r5, [sl]
 80117d4:	122f      	asrs	r7, r5, #8
 80117d6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80117da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80117de:	fb17 f706 	smulbb	r7, r7, r6
 80117e2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80117e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80117ea:	00ed      	lsls	r5, r5, #3
 80117ec:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80117f0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80117f4:	10c7      	asrs	r7, r0, #3
 80117f6:	b2ed      	uxtb	r5, r5
 80117f8:	00c0      	lsls	r0, r0, #3
 80117fa:	fb18 f806 	smulbb	r8, r8, r6
 80117fe:	fb15 f506 	smulbb	r5, r5, r6
 8011802:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011806:	b2c0      	uxtb	r0, r0
 8011808:	fa1f fc8c 	uxth.w	ip, ip
 801180c:	fb07 870b 	mla	r7, r7, fp, r8
 8011810:	fb00 500b 	mla	r0, r0, fp, r5
 8011814:	b280      	uxth	r0, r0
 8011816:	b2bf      	uxth	r7, r7
 8011818:	f10c 0501 	add.w	r5, ip, #1
 801181c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011820:	f107 0801 	add.w	r8, r7, #1
 8011824:	1c45      	adds	r5, r0, #1
 8011826:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801182a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801182e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011830:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011834:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011838:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801183c:	ea45 0c0c 	orr.w	ip, r5, ip
 8011840:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011844:	4401      	add	r1, r0
 8011846:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011848:	ea4c 0c08 	orr.w	ip, ip, r8
 801184c:	f82a cb02 	strh.w	ip, [sl], #2
 8011850:	4402      	add	r2, r0
 8011852:	f109 39ff 	add.w	r9, r9, #4294967295
 8011856:	e7af      	b.n	80117b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011858:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801185c:	f04f 0800 	mov.w	r8, #0
 8011860:	eb03 0008 	add.w	r0, r3, r8
 8011864:	2800      	cmp	r0, #0
 8011866:	dc41      	bgt.n	80118ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8011868:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801186c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011870:	9b00      	ldr	r3, [sp, #0]
 8011872:	2b00      	cmp	r3, #0
 8011874:	f340 8095 	ble.w	80119a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011878:	ee30 0a04 	vadd.f32	s0, s0, s8
 801187c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011880:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011884:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011886:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801188a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801188e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011892:	eef0 6a62 	vmov.f32	s13, s5
 8011896:	ee61 7a27 	vmul.f32	s15, s2, s15
 801189a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801189e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80118a2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80118a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80118aa:	eef0 6a43 	vmov.f32	s13, s6
 80118ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80118b2:	ee12 2a90 	vmov	r2, s5
 80118b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80118ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80118be:	ee13 2a10 	vmov	r2, s6
 80118c2:	9311      	str	r3, [sp, #68]	; 0x44
 80118c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80118c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80118ca:	9312      	str	r3, [sp, #72]	; 0x48
 80118cc:	9b00      	ldr	r3, [sp, #0]
 80118ce:	9a03      	ldr	r2, [sp, #12]
 80118d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80118d4:	3b01      	subs	r3, #1
 80118d6:	9300      	str	r3, [sp, #0]
 80118d8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80118dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80118de:	eeb0 3a67 	vmov.f32	s6, s15
 80118e2:	bf08      	it	eq
 80118e4:	4613      	moveq	r3, r2
 80118e6:	eef0 2a47 	vmov.f32	s5, s14
 80118ea:	e72f      	b.n	801174c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80118ec:	140f      	asrs	r7, r1, #16
 80118ee:	d451      	bmi.n	8011994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80118f0:	f8de 5008 	ldr.w	r5, [lr, #8]
 80118f4:	42bd      	cmp	r5, r7
 80118f6:	dd4d      	ble.n	8011994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80118f8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80118fc:	d44a      	bmi.n	8011994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80118fe:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011902:	4560      	cmp	r0, ip
 8011904:	dd46      	ble.n	8011994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011906:	b22d      	sxth	r5, r5
 8011908:	fb0c 7505 	mla	r5, ip, r5, r7
 801190c:	9802      	ldr	r0, [sp, #8]
 801190e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8011912:	f06f 0501 	mvn.w	r5, #1
 8011916:	fb05 fb08 	mul.w	fp, r5, r8
 801191a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801191e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011922:	122f      	asrs	r7, r5, #8
 8011924:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011928:	fb17 f706 	smulbb	r7, r7, r6
 801192c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011930:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011934:	00ed      	lsls	r5, r5, #3
 8011936:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801193a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801193e:	10c7      	asrs	r7, r0, #3
 8011940:	b2ed      	uxtb	r5, r5
 8011942:	00c0      	lsls	r0, r0, #3
 8011944:	fb19 f906 	smulbb	r9, r9, r6
 8011948:	fb15 f506 	smulbb	r5, r5, r6
 801194c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011950:	b2c0      	uxtb	r0, r0
 8011952:	fa1f fc8c 	uxth.w	ip, ip
 8011956:	fb07 970a 	mla	r7, r7, sl, r9
 801195a:	fb00 500a 	mla	r0, r0, sl, r5
 801195e:	b2bf      	uxth	r7, r7
 8011960:	b280      	uxth	r0, r0
 8011962:	f10c 0501 	add.w	r5, ip, #1
 8011966:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801196a:	f107 0901 	add.w	r9, r7, #1
 801196e:	1c45      	adds	r5, r0, #1
 8011970:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011974:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011978:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801197c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011980:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011984:	ea45 0c0c 	orr.w	ip, r5, ip
 8011988:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801198c:	ea4c 0c09 	orr.w	ip, ip, r9
 8011990:	f824 c00b 	strh.w	ip, [r4, fp]
 8011994:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011996:	4401      	add	r1, r0
 8011998:	9812      	ldr	r0, [sp, #72]	; 0x48
 801199a:	f108 38ff 	add.w	r8, r8, #4294967295
 801199e:	4402      	add	r2, r0
 80119a0:	e75e      	b.n	8011860 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80119a2:	b005      	add	sp, #20
 80119a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080119a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80119a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119ac:	b085      	sub	sp, #20
 80119ae:	4693      	mov	fp, r2
 80119b0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80119b2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80119b4:	6870      	ldr	r0, [r6, #4]
 80119b6:	9101      	str	r1, [sp, #4]
 80119b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80119bc:	fb00 2404 	mla	r4, r0, r4, r2
 80119c0:	6832      	ldr	r2, [r6, #0]
 80119c2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80119c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80119ca:	682a      	ldr	r2, [r5, #0]
 80119cc:	9202      	str	r2, [sp, #8]
 80119ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80119d2:	9a01      	ldr	r2, [sp, #4]
 80119d4:	2a00      	cmp	r2, #0
 80119d6:	dc03      	bgt.n	80119e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80119d8:	f1bb 0f00 	cmp.w	fp, #0
 80119dc:	f340 809a 	ble.w	8011b14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80119e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80119e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80119e6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80119ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80119ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80119f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80119f4:	2b00      	cmp	r3, #0
 80119f6:	dd0c      	ble.n	8011a12 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80119f8:	1406      	asrs	r6, r0, #16
 80119fa:	d405      	bmi.n	8011a08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80119fc:	454e      	cmp	r6, r9
 80119fe:	da03      	bge.n	8011a08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a00:	1416      	asrs	r6, r2, #16
 8011a02:	d401      	bmi.n	8011a08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a04:	4546      	cmp	r6, r8
 8011a06:	db05      	blt.n	8011a14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011a08:	4470      	add	r0, lr
 8011a0a:	4462      	add	r2, ip
 8011a0c:	3b01      	subs	r3, #1
 8011a0e:	3402      	adds	r4, #2
 8011a10:	e7f0      	b.n	80119f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011a12:	d00f      	beq.n	8011a34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8011a14:	1e5e      	subs	r6, r3, #1
 8011a16:	fb0e 0706 	mla	r7, lr, r6, r0
 8011a1a:	143f      	asrs	r7, r7, #16
 8011a1c:	d541      	bpl.n	8011aa2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8011a1e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011a22:	4698      	mov	r8, r3
 8011a24:	9603      	str	r6, [sp, #12]
 8011a26:	f1b8 0f00 	cmp.w	r8, #0
 8011a2a:	dc56      	bgt.n	8011ada <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011a2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011a30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011a34:	9b01      	ldr	r3, [sp, #4]
 8011a36:	2b00      	cmp	r3, #0
 8011a38:	dd6c      	ble.n	8011b14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011a3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011a3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011a42:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011a46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a48:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011a4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a50:	eeb0 6a62 	vmov.f32	s12, s5
 8011a54:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a60:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011a64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a68:	eeb0 6a43 	vmov.f32	s12, s6
 8011a6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a70:	ee12 2a90 	vmov	r2, s5
 8011a74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a78:	fb92 fef3 	sdiv	lr, r2, r3
 8011a7c:	ee13 2a10 	vmov	r2, s6
 8011a80:	fb92 fcf3 	sdiv	ip, r2, r3
 8011a84:	9b01      	ldr	r3, [sp, #4]
 8011a86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a8a:	3b01      	subs	r3, #1
 8011a8c:	9301      	str	r3, [sp, #4]
 8011a8e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011a92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a94:	eeb0 3a67 	vmov.f32	s6, s15
 8011a98:	bf08      	it	eq
 8011a9a:	465b      	moveq	r3, fp
 8011a9c:	eef0 2a47 	vmov.f32	s5, s14
 8011aa0:	e797      	b.n	80119d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011aa2:	454f      	cmp	r7, r9
 8011aa4:	dabb      	bge.n	8011a1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011aa6:	fb0c 2606 	mla	r6, ip, r6, r2
 8011aaa:	1436      	asrs	r6, r6, #16
 8011aac:	d4b7      	bmi.n	8011a1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011aae:	4546      	cmp	r6, r8
 8011ab0:	dab5      	bge.n	8011a1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011ab2:	461e      	mov	r6, r3
 8011ab4:	46a0      	mov	r8, r4
 8011ab6:	2e00      	cmp	r6, #0
 8011ab8:	ddb8      	ble.n	8011a2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011aba:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011abe:	9902      	ldr	r1, [sp, #8]
 8011ac0:	1417      	asrs	r7, r2, #16
 8011ac2:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011ac6:	fb0a 9707 	mla	r7, sl, r7, r9
 8011aca:	4470      	add	r0, lr
 8011acc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011ad0:	f828 7b02 	strh.w	r7, [r8], #2
 8011ad4:	4462      	add	r2, ip
 8011ad6:	3e01      	subs	r6, #1
 8011ad8:	e7ed      	b.n	8011ab6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8011ada:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011ade:	d414      	bmi.n	8011b0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011ae0:	68ae      	ldr	r6, [r5, #8]
 8011ae2:	454e      	cmp	r6, r9
 8011ae4:	dd11      	ble.n	8011b0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011ae6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011aea:	d40e      	bmi.n	8011b0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011aec:	68ef      	ldr	r7, [r5, #12]
 8011aee:	4557      	cmp	r7, sl
 8011af0:	dd0b      	ble.n	8011b0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011af2:	b236      	sxth	r6, r6
 8011af4:	fb0a 9606 	mla	r6, sl, r6, r9
 8011af8:	9f02      	ldr	r7, [sp, #8]
 8011afa:	f06f 0101 	mvn.w	r1, #1
 8011afe:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011b02:	fb01 f608 	mul.w	r6, r1, r8
 8011b06:	9903      	ldr	r1, [sp, #12]
 8011b08:	538f      	strh	r7, [r1, r6]
 8011b0a:	4470      	add	r0, lr
 8011b0c:	4462      	add	r2, ip
 8011b0e:	f108 38ff 	add.w	r8, r8, #4294967295
 8011b12:	e788      	b.n	8011a26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011b14:	b005      	add	sp, #20
 8011b16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011b1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011b1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b1e:	b087      	sub	sp, #28
 8011b20:	468b      	mov	fp, r1
 8011b22:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011b24:	9203      	str	r2, [sp, #12]
 8011b26:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011b2a:	9204      	str	r2, [sp, #16]
 8011b2c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011b30:	6841      	ldr	r1, [r0, #4]
 8011b32:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011b36:	fb01 2505 	mla	r5, r1, r5, r2
 8011b3a:	6802      	ldr	r2, [r0, #0]
 8011b3c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011b40:	f8d9 2000 	ldr.w	r2, [r9]
 8011b44:	9201      	str	r2, [sp, #4]
 8011b46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011b4a:	f1bb 0f00 	cmp.w	fp, #0
 8011b4e:	dc03      	bgt.n	8011b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011b50:	9a03      	ldr	r2, [sp, #12]
 8011b52:	2a00      	cmp	r2, #0
 8011b54:	f340 8159 	ble.w	8011e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011b58:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011b5a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011b5e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011b62:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011b66:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011b68:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011b6c:	2b00      	cmp	r3, #0
 8011b6e:	dd0e      	ble.n	8011b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011b70:	1402      	asrs	r2, r0, #16
 8011b72:	d405      	bmi.n	8011b80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011b74:	42ba      	cmp	r2, r7
 8011b76:	da03      	bge.n	8011b80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011b78:	140a      	asrs	r2, r1, #16
 8011b7a:	d401      	bmi.n	8011b80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011b7c:	42b2      	cmp	r2, r6
 8011b7e:	db07      	blt.n	8011b90 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011b80:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011b82:	4410      	add	r0, r2
 8011b84:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011b86:	3b01      	subs	r3, #1
 8011b88:	4411      	add	r1, r2
 8011b8a:	3502      	adds	r5, #2
 8011b8c:	e7ee      	b.n	8011b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011b8e:	d017      	beq.n	8011bc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011b90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011b92:	1e5a      	subs	r2, r3, #1
 8011b94:	fb04 0402 	mla	r4, r4, r2, r0
 8011b98:	1424      	asrs	r4, r4, #16
 8011b9a:	d409      	bmi.n	8011bb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011b9c:	42bc      	cmp	r4, r7
 8011b9e:	da07      	bge.n	8011bb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011ba0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011ba2:	fb04 1202 	mla	r2, r4, r2, r1
 8011ba6:	1412      	asrs	r2, r2, #16
 8011ba8:	d402      	bmi.n	8011bb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011baa:	42b2      	cmp	r2, r6
 8011bac:	f2c0 80bf 	blt.w	8011d2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011bb0:	2700      	movs	r7, #0
 8011bb2:	19da      	adds	r2, r3, r7
 8011bb4:	2a00      	cmp	r2, #0
 8011bb6:	dc3e      	bgt.n	8011c36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011bb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011bbc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011bc0:	f1bb 0f00 	cmp.w	fp, #0
 8011bc4:	f340 8121 	ble.w	8011e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011bc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011bcc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011bd0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011bd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011bd6:	f1bb 0b01 	subs.w	fp, fp, #1
 8011bda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011bde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011be2:	eeb0 6a62 	vmov.f32	s12, s5
 8011be6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011bea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011bf2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011bf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011bfa:	eeb0 6a43 	vmov.f32	s12, s6
 8011bfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011c02:	ee12 2a90 	vmov	r2, s5
 8011c06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011c0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8011c0e:	ee13 2a10 	vmov	r2, s6
 8011c12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011c16:	9313      	str	r3, [sp, #76]	; 0x4c
 8011c18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011c1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8011c1e:	9a03      	ldr	r2, [sp, #12]
 8011c20:	9314      	str	r3, [sp, #80]	; 0x50
 8011c22:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011c26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011c28:	eeb0 3a67 	vmov.f32	s6, s15
 8011c2c:	bf08      	it	eq
 8011c2e:	4613      	moveq	r3, r2
 8011c30:	eef0 2a47 	vmov.f32	s5, s14
 8011c34:	e789      	b.n	8011b4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011c36:	1406      	asrs	r6, r0, #16
 8011c38:	d42d      	bmi.n	8011c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011c3a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8011c3e:	42b4      	cmp	r4, r6
 8011c40:	dd29      	ble.n	8011c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011c42:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8011c46:	d426      	bmi.n	8011c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011c48:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011c4c:	4562      	cmp	r2, ip
 8011c4e:	dd22      	ble.n	8011c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011c50:	b224      	sxth	r4, r4
 8011c52:	9a01      	ldr	r2, [sp, #4]
 8011c54:	fb0c 6404 	mla	r4, ip, r4, r6
 8011c58:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011c5c:	0e22      	lsrs	r2, r4, #24
 8011c5e:	d01a      	beq.n	8011c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011c60:	9e04      	ldr	r6, [sp, #16]
 8011c62:	4372      	muls	r2, r6
 8011c64:	1c56      	adds	r6, r2, #1
 8011c66:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011c6a:	1212      	asrs	r2, r2, #8
 8011c6c:	0a26      	lsrs	r6, r4, #8
 8011c6e:	2aff      	cmp	r2, #255	; 0xff
 8011c70:	9605      	str	r6, [sp, #20]
 8011c72:	d116      	bne.n	8011ca2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011c74:	f06f 0201 	mvn.w	r2, #1
 8011c78:	fb02 fc07 	mul.w	ip, r2, r7
 8011c7c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011c80:	0962      	lsrs	r2, r4, #5
 8011c82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011c86:	f026 0607 	bic.w	r6, r6, #7
 8011c8a:	4316      	orrs	r6, r2
 8011c8c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011c90:	4326      	orrs	r6, r4
 8011c92:	f825 600c 	strh.w	r6, [r5, ip]
 8011c96:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011c98:	4410      	add	r0, r2
 8011c9a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011c9c:	3f01      	subs	r7, #1
 8011c9e:	4411      	add	r1, r2
 8011ca0:	e787      	b.n	8011bb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011ca2:	f06f 0601 	mvn.w	r6, #1
 8011ca6:	437e      	muls	r6, r7
 8011ca8:	fa1f fa82 	uxth.w	sl, r2
 8011cac:	f835 8006 	ldrh.w	r8, [r5, r6]
 8011cb0:	9602      	str	r6, [sp, #8]
 8011cb2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011cb6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8011cba:	43d2      	mvns	r2, r2
 8011cbc:	b2d2      	uxtb	r2, r2
 8011cbe:	fb1c fc0a 	smulbb	ip, ip, sl
 8011cc2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011cc6:	fb0e ce02 	mla	lr, lr, r2, ip
 8011cca:	b2e4      	uxtb	r4, r4
 8011ccc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011cd0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011cd4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011cd8:	fa5f f888 	uxtb.w	r8, r8
 8011cdc:	fb14 f40a 	smulbb	r4, r4, sl
 8011ce0:	fb08 4402 	mla	r4, r8, r2, r4
 8011ce4:	fa1f fe8e 	uxth.w	lr, lr
 8011ce8:	fb16 f60a 	smulbb	r6, r6, sl
 8011cec:	b2a4      	uxth	r4, r4
 8011cee:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011cf2:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011cf6:	f10e 0201 	add.w	r2, lr, #1
 8011cfa:	1c66      	adds	r6, r4, #1
 8011cfc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011d00:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011d04:	fa1f fc8c 	uxth.w	ip, ip
 8011d08:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011d0c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011d10:	ea46 0e0e 	orr.w	lr, r6, lr
 8011d14:	f10c 0601 	add.w	r6, ip, #1
 8011d18:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011d1c:	0976      	lsrs	r6, r6, #5
 8011d1e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011d22:	9a02      	ldr	r2, [sp, #8]
 8011d24:	ea4e 0e06 	orr.w	lr, lr, r6
 8011d28:	f825 e002 	strh.w	lr, [r5, r2]
 8011d2c:	e7b3      	b.n	8011c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011d2e:	f04f 0800 	mov.w	r8, #0
 8011d32:	eba3 0208 	sub.w	r2, r3, r8
 8011d36:	2a00      	cmp	r2, #0
 8011d38:	f77f af3e 	ble.w	8011bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011d3c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011d40:	1404      	asrs	r4, r0, #16
 8011d42:	140a      	asrs	r2, r1, #16
 8011d44:	fb06 4202 	mla	r2, r6, r2, r4
 8011d48:	9c01      	ldr	r4, [sp, #4]
 8011d4a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8011d4e:	0e22      	lsrs	r2, r4, #24
 8011d50:	d016      	beq.n	8011d80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011d52:	9e04      	ldr	r6, [sp, #16]
 8011d54:	4372      	muls	r2, r6
 8011d56:	1c56      	adds	r6, r2, #1
 8011d58:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011d5c:	1212      	asrs	r2, r2, #8
 8011d5e:	2aff      	cmp	r2, #255	; 0xff
 8011d60:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011d64:	d113      	bne.n	8011d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8011d66:	0962      	lsrs	r2, r4, #5
 8011d68:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011d6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011d70:	f026 0607 	bic.w	r6, r6, #7
 8011d74:	4316      	orrs	r6, r2
 8011d76:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011d7a:	4326      	orrs	r6, r4
 8011d7c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011d80:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d82:	4410      	add	r0, r2
 8011d84:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d86:	f108 0801 	add.w	r8, r8, #1
 8011d8a:	4411      	add	r1, r2
 8011d8c:	e7d1      	b.n	8011d32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011d8e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011d92:	fa1f fa82 	uxth.w	sl, r2
 8011d96:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011d9a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8011d9e:	43d2      	mvns	r2, r2
 8011da0:	b2d2      	uxtb	r2, r2
 8011da2:	fb17 f70a 	smulbb	r7, r7, sl
 8011da6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011daa:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011dae:	b2e4      	uxtb	r4, r4
 8011db0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011db4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011db8:	fa5f fe8e 	uxtb.w	lr, lr
 8011dbc:	fb14 f40a 	smulbb	r4, r4, sl
 8011dc0:	fb0e 4402 	mla	r4, lr, r2, r4
 8011dc4:	b2f6      	uxtb	r6, r6
 8011dc6:	fa1f fc8c 	uxth.w	ip, ip
 8011dca:	fb16 f60a 	smulbb	r6, r6, sl
 8011dce:	b2a4      	uxth	r4, r4
 8011dd0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011dd4:	fb07 6702 	mla	r7, r7, r2, r6
 8011dd8:	f10c 0201 	add.w	r2, ip, #1
 8011ddc:	1c66      	adds	r6, r4, #1
 8011dde:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011de2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011de6:	b2bf      	uxth	r7, r7
 8011de8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011dec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011df0:	ea46 0c0c 	orr.w	ip, r6, ip
 8011df4:	1c7e      	adds	r6, r7, #1
 8011df6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011dfa:	0976      	lsrs	r6, r6, #5
 8011dfc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011e00:	ea4c 0c06 	orr.w	ip, ip, r6
 8011e04:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011e08:	e7ba      	b.n	8011d80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011e0a:	b007      	add	sp, #28
 8011e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011e10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e14:	b085      	sub	sp, #20
 8011e16:	468b      	mov	fp, r1
 8011e18:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011e1a:	9203      	str	r2, [sp, #12]
 8011e1c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011e20:	6841      	ldr	r1, [r0, #4]
 8011e22:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011e26:	fb01 2404 	mla	r4, r1, r4, r2
 8011e2a:	6802      	ldr	r2, [r0, #0]
 8011e2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011e30:	f8d8 2000 	ldr.w	r2, [r8]
 8011e34:	9201      	str	r2, [sp, #4]
 8011e36:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011e3a:	f1bb 0f00 	cmp.w	fp, #0
 8011e3e:	dc03      	bgt.n	8011e48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011e40:	9a03      	ldr	r2, [sp, #12]
 8011e42:	2a00      	cmp	r2, #0
 8011e44:	f340 814f 	ble.w	80120e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011e48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011e4a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011e4e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011e52:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011e56:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011e58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011e5c:	2b00      	cmp	r3, #0
 8011e5e:	dd0e      	ble.n	8011e7e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011e60:	1408      	asrs	r0, r1, #16
 8011e62:	d405      	bmi.n	8011e70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011e64:	42b8      	cmp	r0, r7
 8011e66:	da03      	bge.n	8011e70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011e68:	1410      	asrs	r0, r2, #16
 8011e6a:	d401      	bmi.n	8011e70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011e6c:	42b0      	cmp	r0, r6
 8011e6e:	db07      	blt.n	8011e80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011e70:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011e72:	4401      	add	r1, r0
 8011e74:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011e76:	3b01      	subs	r3, #1
 8011e78:	4402      	add	r2, r0
 8011e7a:	3402      	adds	r4, #2
 8011e7c:	e7ee      	b.n	8011e5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011e7e:	d017      	beq.n	8011eb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011e80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011e82:	1e58      	subs	r0, r3, #1
 8011e84:	fb05 1500 	mla	r5, r5, r0, r1
 8011e88:	142d      	asrs	r5, r5, #16
 8011e8a:	d409      	bmi.n	8011ea0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011e8c:	42bd      	cmp	r5, r7
 8011e8e:	da07      	bge.n	8011ea0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011e90:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011e92:	fb05 2000 	mla	r0, r5, r0, r2
 8011e96:	1400      	asrs	r0, r0, #16
 8011e98:	d402      	bmi.n	8011ea0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011e9a:	42b0      	cmp	r0, r6
 8011e9c:	f2c0 80ba 	blt.w	8012014 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011ea0:	2600      	movs	r6, #0
 8011ea2:	1998      	adds	r0, r3, r6
 8011ea4:	2800      	cmp	r0, #0
 8011ea6:	dc3e      	bgt.n	8011f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011ea8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011eac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011eb0:	f1bb 0f00 	cmp.w	fp, #0
 8011eb4:	f340 8117 	ble.w	80120e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011eb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011ebc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011ec0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ec4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ec6:	f1bb 0b01 	subs.w	fp, fp, #1
 8011eca:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011ece:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ed2:	eeb0 6a62 	vmov.f32	s12, s5
 8011ed6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011eda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ede:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ee2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011ee6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011eea:	eeb0 6a43 	vmov.f32	s12, s6
 8011eee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011ef2:	ee12 2a90 	vmov	r2, s5
 8011ef6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011efa:	fb92 f3f3 	sdiv	r3, r2, r3
 8011efe:	ee13 2a10 	vmov	r2, s6
 8011f02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011f06:	9311      	str	r3, [sp, #68]	; 0x44
 8011f08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011f0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f0e:	9a03      	ldr	r2, [sp, #12]
 8011f10:	9312      	str	r3, [sp, #72]	; 0x48
 8011f12:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011f16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011f18:	eeb0 3a67 	vmov.f32	s6, s15
 8011f1c:	bf08      	it	eq
 8011f1e:	4613      	moveq	r3, r2
 8011f20:	eef0 2a47 	vmov.f32	s5, s14
 8011f24:	e789      	b.n	8011e3a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011f26:	140f      	asrs	r7, r1, #16
 8011f28:	d424      	bmi.n	8011f74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011f2a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011f2e:	42bd      	cmp	r5, r7
 8011f30:	dd20      	ble.n	8011f74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011f32:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011f36:	d41d      	bmi.n	8011f74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011f38:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011f3c:	4560      	cmp	r0, ip
 8011f3e:	dd19      	ble.n	8011f74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011f40:	b22d      	sxth	r5, r5
 8011f42:	fb0c 7505 	mla	r5, ip, r5, r7
 8011f46:	9801      	ldr	r0, [sp, #4]
 8011f48:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011f4c:	0e07      	lsrs	r7, r0, #24
 8011f4e:	2fff      	cmp	r7, #255	; 0xff
 8011f50:	d116      	bne.n	8011f80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011f52:	f06f 0501 	mvn.w	r5, #1
 8011f56:	fb05 f706 	mul.w	r7, r5, r6
 8011f5a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011f5e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011f62:	0945      	lsrs	r5, r0, #5
 8011f64:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011f68:	ea4c 0505 	orr.w	r5, ip, r5
 8011f6c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011f70:	4305      	orrs	r5, r0
 8011f72:	53e5      	strh	r5, [r4, r7]
 8011f74:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011f76:	4401      	add	r1, r0
 8011f78:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011f7a:	3e01      	subs	r6, #1
 8011f7c:	4402      	add	r2, r0
 8011f7e:	e790      	b.n	8011ea2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011f80:	b2fd      	uxtb	r5, r7
 8011f82:	2f00      	cmp	r7, #0
 8011f84:	d0f6      	beq.n	8011f74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011f86:	f06f 0701 	mvn.w	r7, #1
 8011f8a:	4377      	muls	r7, r6
 8011f8c:	fa1f f985 	uxth.w	r9, r5
 8011f90:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011f94:	9702      	str	r7, [sp, #8]
 8011f96:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011f9a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011f9e:	43ed      	mvns	r5, r5
 8011fa0:	b2ed      	uxtb	r5, r5
 8011fa2:	fb17 f709 	smulbb	r7, r7, r9
 8011fa6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011faa:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011fae:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011fb2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011fb6:	b2c0      	uxtb	r0, r0
 8011fb8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011fbc:	fa5f fe8e 	uxtb.w	lr, lr
 8011fc0:	fb10 f009 	smulbb	r0, r0, r9
 8011fc4:	fb0e 0005 	mla	r0, lr, r5, r0
 8011fc8:	b280      	uxth	r0, r0
 8011fca:	fa1f fc8c 	uxth.w	ip, ip
 8011fce:	fb1a fa09 	smulbb	sl, sl, r9
 8011fd2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011fd6:	fb07 a705 	mla	r7, r7, r5, sl
 8011fda:	f100 0a01 	add.w	sl, r0, #1
 8011fde:	f10c 0501 	add.w	r5, ip, #1
 8011fe2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011fe6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011fea:	b2bf      	uxth	r7, r7
 8011fec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011ff0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011ff4:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011ff8:	f107 0a01 	add.w	sl, r7, #1
 8011ffc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012000:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012004:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012008:	9802      	ldr	r0, [sp, #8]
 801200a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801200e:	f824 c000 	strh.w	ip, [r4, r0]
 8012012:	e7af      	b.n	8011f74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012014:	f04f 0e00 	mov.w	lr, #0
 8012018:	eba3 000e 	sub.w	r0, r3, lr
 801201c:	2800      	cmp	r0, #0
 801201e:	f77f af43 	ble.w	8011ea8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012022:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012026:	140d      	asrs	r5, r1, #16
 8012028:	1410      	asrs	r0, r2, #16
 801202a:	fb06 5000 	mla	r0, r6, r0, r5
 801202e:	9d01      	ldr	r5, [sp, #4]
 8012030:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012034:	0e2e      	lsrs	r6, r5, #24
 8012036:	2eff      	cmp	r6, #255	; 0xff
 8012038:	d112      	bne.n	8012060 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801203a:	482c      	ldr	r0, [pc, #176]	; (80120ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801203c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012040:	0968      	lsrs	r0, r5, #5
 8012042:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012046:	4330      	orrs	r0, r6
 8012048:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801204c:	4328      	orrs	r0, r5
 801204e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8012052:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012054:	4401      	add	r1, r0
 8012056:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012058:	f10e 0e01 	add.w	lr, lr, #1
 801205c:	4402      	add	r2, r0
 801205e:	e7db      	b.n	8012018 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8012060:	b2f0      	uxtb	r0, r6
 8012062:	2e00      	cmp	r6, #0
 8012064:	d0f5      	beq.n	8012052 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8012066:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801206a:	fa1f f980 	uxth.w	r9, r0
 801206e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012072:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012076:	43c0      	mvns	r0, r0
 8012078:	b2c0      	uxtb	r0, r0
 801207a:	fb16 f609 	smulbb	r6, r6, r9
 801207e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012082:	fb07 6700 	mla	r7, r7, r0, r6
 8012086:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801208a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801208e:	b2ed      	uxtb	r5, r5
 8012090:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012094:	fa5f fc8c 	uxtb.w	ip, ip
 8012098:	fb15 f509 	smulbb	r5, r5, r9
 801209c:	fb0c 5500 	mla	r5, ip, r0, r5
 80120a0:	b2bf      	uxth	r7, r7
 80120a2:	fb1a fa09 	smulbb	sl, sl, r9
 80120a6:	b2ad      	uxth	r5, r5
 80120a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80120ac:	fb06 a600 	mla	r6, r6, r0, sl
 80120b0:	1c78      	adds	r0, r7, #1
 80120b2:	f105 0a01 	add.w	sl, r5, #1
 80120b6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80120ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80120be:	b2b6      	uxth	r6, r6
 80120c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80120c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80120c8:	ea4a 0707 	orr.w	r7, sl, r7
 80120cc:	f106 0a01 	add.w	sl, r6, #1
 80120d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80120d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80120d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80120dc:	ea47 070a 	orr.w	r7, r7, sl
 80120e0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80120e4:	e7b5      	b.n	8012052 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80120e6:	b005      	add	sp, #20
 80120e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120ec:	fffff800 	.word	0xfffff800

080120f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80120f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120f4:	b087      	sub	sp, #28
 80120f6:	468b      	mov	fp, r1
 80120f8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80120fa:	9203      	str	r2, [sp, #12]
 80120fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012100:	9204      	str	r2, [sp, #16]
 8012102:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012106:	6841      	ldr	r1, [r0, #4]
 8012108:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801210c:	fb01 2404 	mla	r4, r1, r4, r2
 8012110:	6802      	ldr	r2, [r0, #0]
 8012112:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012116:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801211a:	3201      	adds	r2, #1
 801211c:	f022 0201 	bic.w	r2, r2, #1
 8012120:	9200      	str	r2, [sp, #0]
 8012122:	f8d9 2000 	ldr.w	r2, [r9]
 8012126:	9201      	str	r2, [sp, #4]
 8012128:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801212c:	f1bb 0f00 	cmp.w	fp, #0
 8012130:	dc03      	bgt.n	801213a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012132:	9a03      	ldr	r2, [sp, #12]
 8012134:	2a00      	cmp	r2, #0
 8012136:	f340 8169 	ble.w	801240c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801213a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801213c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012140:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012144:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012148:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801214a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801214e:	2b00      	cmp	r3, #0
 8012150:	dd0e      	ble.n	8012170 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012152:	1402      	asrs	r2, r0, #16
 8012154:	d405      	bmi.n	8012162 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012156:	42ba      	cmp	r2, r7
 8012158:	da03      	bge.n	8012162 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801215a:	140a      	asrs	r2, r1, #16
 801215c:	d401      	bmi.n	8012162 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801215e:	42b2      	cmp	r2, r6
 8012160:	db07      	blt.n	8012172 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8012162:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012164:	4410      	add	r0, r2
 8012166:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012168:	3b01      	subs	r3, #1
 801216a:	4411      	add	r1, r2
 801216c:	3402      	adds	r4, #2
 801216e:	e7ee      	b.n	801214e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8012170:	d017      	beq.n	80121a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8012172:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012174:	1e5a      	subs	r2, r3, #1
 8012176:	fb05 0502 	mla	r5, r5, r2, r0
 801217a:	142d      	asrs	r5, r5, #16
 801217c:	d409      	bmi.n	8012192 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801217e:	42bd      	cmp	r5, r7
 8012180:	da07      	bge.n	8012192 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012182:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012184:	fb05 1202 	mla	r2, r5, r2, r1
 8012188:	1412      	asrs	r2, r2, #16
 801218a:	d402      	bmi.n	8012192 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801218c:	42b2      	cmp	r2, r6
 801218e:	f2c0 80c7 	blt.w	8012320 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8012192:	2700      	movs	r7, #0
 8012194:	19da      	adds	r2, r3, r7
 8012196:	2a00      	cmp	r2, #0
 8012198:	dc3e      	bgt.n	8012218 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801219a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801219e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80121a2:	f1bb 0f00 	cmp.w	fp, #0
 80121a6:	f340 8131 	ble.w	801240c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80121aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80121ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80121b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80121b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80121b8:	f1bb 0b01 	subs.w	fp, fp, #1
 80121bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80121c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80121c4:	eeb0 6a62 	vmov.f32	s12, s5
 80121c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80121cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80121d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80121d4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80121d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80121dc:	eeb0 6a43 	vmov.f32	s12, s6
 80121e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80121e4:	ee12 2a90 	vmov	r2, s5
 80121e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80121ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80121f0:	ee13 2a10 	vmov	r2, s6
 80121f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80121f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80121fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80121fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8012200:	9a03      	ldr	r2, [sp, #12]
 8012202:	9314      	str	r3, [sp, #80]	; 0x50
 8012204:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012208:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801220a:	eeb0 3a67 	vmov.f32	s6, s15
 801220e:	bf08      	it	eq
 8012210:	4613      	moveq	r3, r2
 8012212:	eef0 2a47 	vmov.f32	s5, s14
 8012216:	e789      	b.n	801212c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012218:	1405      	asrs	r5, r0, #16
 801221a:	d435      	bmi.n	8012288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801221c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8012220:	42aa      	cmp	r2, r5
 8012222:	dd31      	ble.n	8012288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012224:	140e      	asrs	r6, r1, #16
 8012226:	d42f      	bmi.n	8012288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012228:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801222c:	42b2      	cmp	r2, r6
 801222e:	dd2b      	ble.n	8012288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012230:	9a00      	ldr	r2, [sp, #0]
 8012232:	fb06 5502 	mla	r5, r6, r2, r5
 8012236:	086a      	lsrs	r2, r5, #1
 8012238:	9e01      	ldr	r6, [sp, #4]
 801223a:	5cb2      	ldrb	r2, [r6, r2]
 801223c:	07ee      	lsls	r6, r5, #31
 801223e:	bf54      	ite	pl
 8012240:	f002 020f 	andpl.w	r2, r2, #15
 8012244:	1112      	asrmi	r2, r2, #4
 8012246:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801224a:	b2d2      	uxtb	r2, r2
 801224c:	b1e2      	cbz	r2, 8012288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801224e:	9d04      	ldr	r5, [sp, #16]
 8012250:	436a      	muls	r2, r5
 8012252:	1c55      	adds	r5, r2, #1
 8012254:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8012258:	4d6e      	ldr	r5, [pc, #440]	; (8012414 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801225a:	682d      	ldr	r5, [r5, #0]
 801225c:	1212      	asrs	r2, r2, #8
 801225e:	0a2e      	lsrs	r6, r5, #8
 8012260:	2aff      	cmp	r2, #255	; 0xff
 8012262:	9605      	str	r6, [sp, #20]
 8012264:	d116      	bne.n	8012294 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8012266:	f06f 0201 	mvn.w	r2, #1
 801226a:	fb02 fc07 	mul.w	ip, r2, r7
 801226e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012272:	096a      	lsrs	r2, r5, #5
 8012274:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012278:	f026 0607 	bic.w	r6, r6, #7
 801227c:	4316      	orrs	r6, r2
 801227e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012282:	432e      	orrs	r6, r5
 8012284:	f824 600c 	strh.w	r6, [r4, ip]
 8012288:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801228a:	4410      	add	r0, r2
 801228c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801228e:	3f01      	subs	r7, #1
 8012290:	4411      	add	r1, r2
 8012292:	e77f      	b.n	8012194 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8012294:	f06f 0601 	mvn.w	r6, #1
 8012298:	437e      	muls	r6, r7
 801229a:	fa1f fa82 	uxth.w	sl, r2
 801229e:	f834 8006 	ldrh.w	r8, [r4, r6]
 80122a2:	9602      	str	r6, [sp, #8]
 80122a4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80122a8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80122ac:	43d2      	mvns	r2, r2
 80122ae:	b2d2      	uxtb	r2, r2
 80122b0:	fb1c fc0a 	smulbb	ip, ip, sl
 80122b4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80122b8:	fb0e ce02 	mla	lr, lr, r2, ip
 80122bc:	b2ed      	uxtb	r5, r5
 80122be:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80122c2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80122c6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80122ca:	fa5f f888 	uxtb.w	r8, r8
 80122ce:	fb15 f50a 	smulbb	r5, r5, sl
 80122d2:	fb08 5502 	mla	r5, r8, r2, r5
 80122d6:	fa1f fe8e 	uxth.w	lr, lr
 80122da:	fb16 f60a 	smulbb	r6, r6, sl
 80122de:	b2ad      	uxth	r5, r5
 80122e0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80122e4:	fb0c 6c02 	mla	ip, ip, r2, r6
 80122e8:	f10e 0201 	add.w	r2, lr, #1
 80122ec:	1c6e      	adds	r6, r5, #1
 80122ee:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80122f2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80122f6:	fa1f fc8c 	uxth.w	ip, ip
 80122fa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80122fe:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012302:	ea46 0e0e 	orr.w	lr, r6, lr
 8012306:	f10c 0601 	add.w	r6, ip, #1
 801230a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801230e:	0976      	lsrs	r6, r6, #5
 8012310:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012314:	9a02      	ldr	r2, [sp, #8]
 8012316:	ea4e 0e06 	orr.w	lr, lr, r6
 801231a:	f824 e002 	strh.w	lr, [r4, r2]
 801231e:	e7b3      	b.n	8012288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012320:	f04f 0800 	mov.w	r8, #0
 8012324:	eba3 0208 	sub.w	r2, r3, r8
 8012328:	2a00      	cmp	r2, #0
 801232a:	f77f af36 	ble.w	801219a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801232e:	9e00      	ldr	r6, [sp, #0]
 8012330:	1402      	asrs	r2, r0, #16
 8012332:	140d      	asrs	r5, r1, #16
 8012334:	fb06 2505 	mla	r5, r6, r5, r2
 8012338:	086a      	lsrs	r2, r5, #1
 801233a:	9e01      	ldr	r6, [sp, #4]
 801233c:	5cb2      	ldrb	r2, [r6, r2]
 801233e:	07ed      	lsls	r5, r5, #31
 8012340:	bf54      	ite	pl
 8012342:	f002 020f 	andpl.w	r2, r2, #15
 8012346:	1112      	asrmi	r2, r2, #4
 8012348:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801234c:	b2d2      	uxtb	r2, r2
 801234e:	b1c2      	cbz	r2, 8012382 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012350:	9d04      	ldr	r5, [sp, #16]
 8012352:	436a      	muls	r2, r5
 8012354:	1c55      	adds	r5, r2, #1
 8012356:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801235a:	4d2e      	ldr	r5, [pc, #184]	; (8012414 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801235c:	1212      	asrs	r2, r2, #8
 801235e:	682e      	ldr	r6, [r5, #0]
 8012360:	2aff      	cmp	r2, #255	; 0xff
 8012362:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8012366:	d113      	bne.n	8012390 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012368:	0972      	lsrs	r2, r6, #5
 801236a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801236e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012372:	f025 0507 	bic.w	r5, r5, #7
 8012376:	4315      	orrs	r5, r2
 8012378:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801237c:	4335      	orrs	r5, r6
 801237e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8012382:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012384:	4410      	add	r0, r2
 8012386:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012388:	f108 0801 	add.w	r8, r8, #1
 801238c:	4411      	add	r1, r2
 801238e:	e7c9      	b.n	8012324 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8012390:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8012394:	fa1f fa82 	uxth.w	sl, r2
 8012398:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801239c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80123a0:	43d2      	mvns	r2, r2
 80123a2:	b2d2      	uxtb	r2, r2
 80123a4:	fb17 f70a 	smulbb	r7, r7, sl
 80123a8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80123ac:	fb0c 7c02 	mla	ip, ip, r2, r7
 80123b0:	b2f6      	uxtb	r6, r6
 80123b2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80123b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80123ba:	fa5f fe8e 	uxtb.w	lr, lr
 80123be:	fb16 f60a 	smulbb	r6, r6, sl
 80123c2:	fb0e 6602 	mla	r6, lr, r2, r6
 80123c6:	b2ed      	uxtb	r5, r5
 80123c8:	fa1f fc8c 	uxth.w	ip, ip
 80123cc:	fb15 f50a 	smulbb	r5, r5, sl
 80123d0:	b2b6      	uxth	r6, r6
 80123d2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80123d6:	fb07 5702 	mla	r7, r7, r2, r5
 80123da:	f10c 0201 	add.w	r2, ip, #1
 80123de:	1c75      	adds	r5, r6, #1
 80123e0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80123e4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80123e8:	b2bf      	uxth	r7, r7
 80123ea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80123ee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80123f2:	ea45 0c0c 	orr.w	ip, r5, ip
 80123f6:	1c7d      	adds	r5, r7, #1
 80123f8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80123fc:	096d      	lsrs	r5, r5, #5
 80123fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012402:	ea4c 0c05 	orr.w	ip, ip, r5
 8012406:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801240a:	e7ba      	b.n	8012382 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801240c:	b007      	add	sp, #28
 801240e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012412:	bf00      	nop
 8012414:	20017758 	.word	0x20017758

08012418 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801241c:	b087      	sub	sp, #28
 801241e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801272c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8012422:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012424:	9205      	str	r2, [sp, #20]
 8012426:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801242a:	9101      	str	r1, [sp, #4]
 801242c:	6841      	ldr	r1, [r0, #4]
 801242e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8012432:	fb01 2404 	mla	r4, r1, r4, r2
 8012436:	6802      	ldr	r2, [r0, #0]
 8012438:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801243c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012440:	3201      	adds	r2, #1
 8012442:	f022 0201 	bic.w	r2, r2, #1
 8012446:	9202      	str	r2, [sp, #8]
 8012448:	f8db 2000 	ldr.w	r2, [fp]
 801244c:	9203      	str	r2, [sp, #12]
 801244e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012452:	9a01      	ldr	r2, [sp, #4]
 8012454:	2a00      	cmp	r2, #0
 8012456:	dc03      	bgt.n	8012460 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012458:	9a05      	ldr	r2, [sp, #20]
 801245a:	2a00      	cmp	r2, #0
 801245c:	f340 8162 	ble.w	8012724 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012460:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012462:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8012466:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801246a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801246e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012470:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012474:	2b00      	cmp	r3, #0
 8012476:	dd0e      	ble.n	8012496 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012478:	1402      	asrs	r2, r0, #16
 801247a:	d405      	bmi.n	8012488 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801247c:	42ba      	cmp	r2, r7
 801247e:	da03      	bge.n	8012488 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012480:	140a      	asrs	r2, r1, #16
 8012482:	d401      	bmi.n	8012488 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012484:	42b2      	cmp	r2, r6
 8012486:	db07      	blt.n	8012498 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012488:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801248a:	4410      	add	r0, r2
 801248c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801248e:	3b01      	subs	r3, #1
 8012490:	4411      	add	r1, r2
 8012492:	3402      	adds	r4, #2
 8012494:	e7ee      	b.n	8012474 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012496:	d017      	beq.n	80124c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012498:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801249a:	1e5a      	subs	r2, r3, #1
 801249c:	fb05 0502 	mla	r5, r5, r2, r0
 80124a0:	142d      	asrs	r5, r5, #16
 80124a2:	d409      	bmi.n	80124b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80124a4:	42bd      	cmp	r5, r7
 80124a6:	da07      	bge.n	80124b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80124a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80124aa:	fb05 1202 	mla	r2, r5, r2, r1
 80124ae:	1412      	asrs	r2, r2, #16
 80124b0:	d402      	bmi.n	80124b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80124b2:	42b2      	cmp	r2, r6
 80124b4:	f2c0 80c3 	blt.w	801263e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80124b8:	2500      	movs	r5, #0
 80124ba:	195a      	adds	r2, r3, r5
 80124bc:	2a00      	cmp	r2, #0
 80124be:	dc3f      	bgt.n	8012540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80124c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80124c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80124c8:	9b01      	ldr	r3, [sp, #4]
 80124ca:	2b00      	cmp	r3, #0
 80124cc:	f340 812a 	ble.w	8012724 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80124d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80124d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80124d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80124dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80124de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80124e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80124e6:	eeb0 6a62 	vmov.f32	s12, s5
 80124ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80124ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80124f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80124f6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80124fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80124fe:	eeb0 6a43 	vmov.f32	s12, s6
 8012502:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012506:	ee12 2a90 	vmov	r2, s5
 801250a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801250e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012512:	ee13 2a10 	vmov	r2, s6
 8012516:	9313      	str	r3, [sp, #76]	; 0x4c
 8012518:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801251a:	fb92 f3f3 	sdiv	r3, r2, r3
 801251e:	9314      	str	r3, [sp, #80]	; 0x50
 8012520:	9b01      	ldr	r3, [sp, #4]
 8012522:	9a05      	ldr	r2, [sp, #20]
 8012524:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012528:	3b01      	subs	r3, #1
 801252a:	9301      	str	r3, [sp, #4]
 801252c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012530:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012532:	eeb0 3a67 	vmov.f32	s6, s15
 8012536:	bf08      	it	eq
 8012538:	4613      	moveq	r3, r2
 801253a:	eef0 2a47 	vmov.f32	s5, s14
 801253e:	e788      	b.n	8012452 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012540:	1406      	asrs	r6, r0, #16
 8012542:	d42c      	bmi.n	801259e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012544:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012548:	42b2      	cmp	r2, r6
 801254a:	dd28      	ble.n	801259e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801254c:	140f      	asrs	r7, r1, #16
 801254e:	d426      	bmi.n	801259e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012550:	f8db 200c 	ldr.w	r2, [fp, #12]
 8012554:	42ba      	cmp	r2, r7
 8012556:	dd22      	ble.n	801259e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012558:	9a02      	ldr	r2, [sp, #8]
 801255a:	fb07 6602 	mla	r6, r7, r2, r6
 801255e:	0872      	lsrs	r2, r6, #1
 8012560:	9f03      	ldr	r7, [sp, #12]
 8012562:	5cba      	ldrb	r2, [r7, r2]
 8012564:	07f6      	lsls	r6, r6, #31
 8012566:	bf54      	ite	pl
 8012568:	f002 020f 	andpl.w	r2, r2, #15
 801256c:	1112      	asrmi	r2, r2, #4
 801256e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012572:	b2d2      	uxtb	r2, r2
 8012574:	2aff      	cmp	r2, #255	; 0xff
 8012576:	d118      	bne.n	80125aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8012578:	f8d8 2000 	ldr.w	r2, [r8]
 801257c:	f06f 0601 	mvn.w	r6, #1
 8012580:	fb06 f705 	mul.w	r7, r6, r5
 8012584:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8012588:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801258c:	0956      	lsrs	r6, r2, #5
 801258e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012592:	ea4c 0606 	orr.w	r6, ip, r6
 8012596:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801259a:	4316      	orrs	r6, r2
 801259c:	53e6      	strh	r6, [r4, r7]
 801259e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80125a0:	4410      	add	r0, r2
 80125a2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80125a4:	3d01      	subs	r5, #1
 80125a6:	4411      	add	r1, r2
 80125a8:	e787      	b.n	80124ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80125aa:	2a00      	cmp	r2, #0
 80125ac:	d0f7      	beq.n	801259e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80125ae:	f06f 0601 	mvn.w	r6, #1
 80125b2:	436e      	muls	r6, r5
 80125b4:	f8d8 c000 	ldr.w	ip, [r8]
 80125b8:	f834 e006 	ldrh.w	lr, [r4, r6]
 80125bc:	9604      	str	r6, [sp, #16]
 80125be:	fa1f f982 	uxth.w	r9, r2
 80125c2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80125c6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80125ca:	43d2      	mvns	r2, r2
 80125cc:	b2d2      	uxtb	r2, r2
 80125ce:	fb16 f609 	smulbb	r6, r6, r9
 80125d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80125d6:	fb07 6702 	mla	r7, r7, r2, r6
 80125da:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80125de:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80125e2:	fa5f fc8c 	uxtb.w	ip, ip
 80125e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80125ea:	fa5f fe8e 	uxtb.w	lr, lr
 80125ee:	fb1c fc09 	smulbb	ip, ip, r9
 80125f2:	fb0e cc02 	mla	ip, lr, r2, ip
 80125f6:	b2bf      	uxth	r7, r7
 80125f8:	fb1a fa09 	smulbb	sl, sl, r9
 80125fc:	fa1f fc8c 	uxth.w	ip, ip
 8012600:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012604:	fb06 a602 	mla	r6, r6, r2, sl
 8012608:	1c7a      	adds	r2, r7, #1
 801260a:	f10c 0a01 	add.w	sl, ip, #1
 801260e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012612:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8012616:	b2b6      	uxth	r6, r6
 8012618:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801261c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012620:	ea4a 0707 	orr.w	r7, sl, r7
 8012624:	f106 0a01 	add.w	sl, r6, #1
 8012628:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801262c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012630:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012634:	9a04      	ldr	r2, [sp, #16]
 8012636:	ea47 070a 	orr.w	r7, r7, sl
 801263a:	52a7      	strh	r7, [r4, r2]
 801263c:	e7af      	b.n	801259e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801263e:	f04f 0e00 	mov.w	lr, #0
 8012642:	eba3 020e 	sub.w	r2, r3, lr
 8012646:	2a00      	cmp	r2, #0
 8012648:	f77f af3a 	ble.w	80124c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801264c:	9e02      	ldr	r6, [sp, #8]
 801264e:	1402      	asrs	r2, r0, #16
 8012650:	140d      	asrs	r5, r1, #16
 8012652:	fb06 2505 	mla	r5, r6, r5, r2
 8012656:	086a      	lsrs	r2, r5, #1
 8012658:	9e03      	ldr	r6, [sp, #12]
 801265a:	5cb2      	ldrb	r2, [r6, r2]
 801265c:	07ed      	lsls	r5, r5, #31
 801265e:	bf54      	ite	pl
 8012660:	f002 020f 	andpl.w	r2, r2, #15
 8012664:	1112      	asrmi	r2, r2, #4
 8012666:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801266a:	b2d2      	uxtb	r2, r2
 801266c:	2aff      	cmp	r2, #255	; 0xff
 801266e:	d115      	bne.n	801269c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8012670:	f8d8 5000 	ldr.w	r5, [r8]
 8012674:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8012678:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801267c:	096a      	lsrs	r2, r5, #5
 801267e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012682:	4332      	orrs	r2, r6
 8012684:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012688:	432a      	orrs	r2, r5
 801268a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801268e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012690:	4410      	add	r0, r2
 8012692:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012694:	f10e 0e01 	add.w	lr, lr, #1
 8012698:	4411      	add	r1, r2
 801269a:	e7d2      	b.n	8012642 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801269c:	2a00      	cmp	r2, #0
 801269e:	d0f6      	beq.n	801268e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80126a0:	f8d8 7000 	ldr.w	r7, [r8]
 80126a4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80126a8:	fa1f f982 	uxth.w	r9, r2
 80126ac:	ea4f 262c 	mov.w	r6, ip, asr #8
 80126b0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80126b4:	43d2      	mvns	r2, r2
 80126b6:	b2d2      	uxtb	r2, r2
 80126b8:	fb15 f509 	smulbb	r5, r5, r9
 80126bc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80126c0:	fb06 5602 	mla	r6, r6, r2, r5
 80126c4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80126c8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80126cc:	b2ff      	uxtb	r7, r7
 80126ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80126d2:	fa5f fc8c 	uxtb.w	ip, ip
 80126d6:	fb17 f709 	smulbb	r7, r7, r9
 80126da:	fb0c 7702 	mla	r7, ip, r2, r7
 80126de:	b2b6      	uxth	r6, r6
 80126e0:	fb1a fa09 	smulbb	sl, sl, r9
 80126e4:	b2bf      	uxth	r7, r7
 80126e6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80126ea:	fb05 a502 	mla	r5, r5, r2, sl
 80126ee:	1c72      	adds	r2, r6, #1
 80126f0:	f107 0a01 	add.w	sl, r7, #1
 80126f4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80126f8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80126fc:	b2ad      	uxth	r5, r5
 80126fe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012702:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012706:	ea4a 0606 	orr.w	r6, sl, r6
 801270a:	f105 0a01 	add.w	sl, r5, #1
 801270e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012712:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012716:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801271a:	ea46 060a 	orr.w	r6, r6, sl
 801271e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8012722:	e7b4      	b.n	801268e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012724:	b007      	add	sp, #28
 8012726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801272a:	bf00      	nop
 801272c:	20017758 	.word	0x20017758

08012730 <_ZN8touchgfx8LCD16bppD1Ev>:
 8012730:	4770      	bx	lr

08012732 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8012732:	4770      	bx	lr

08012734 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8012734:	4770      	bx	lr

08012736 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8012736:	4770      	bx	lr

08012738 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012738:	4770      	bx	lr

0801273a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801273a:	4770      	bx	lr

0801273c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801273c:	4770      	bx	lr

0801273e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801273e:	4770      	bx	lr

08012740 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012740:	4770      	bx	lr

08012742 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012742:	4770      	bx	lr

08012744 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012744:	4770      	bx	lr

08012746 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012746:	4770      	bx	lr

08012748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012748:	4770      	bx	lr

0801274a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801274a:	4770      	bx	lr

0801274c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801274c:	4770      	bx	lr

0801274e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801274e:	4770      	bx	lr

08012750 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012750:	4770      	bx	lr

08012752 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012752:	4770      	bx	lr

08012754 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012754:	4770      	bx	lr

08012756 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012756:	4770      	bx	lr

08012758 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012758:	4770      	bx	lr

0801275a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801275a:	4770      	bx	lr

0801275c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801275c:	4770      	bx	lr

0801275e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801275e:	4770      	bx	lr

08012760 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012760:	4770      	bx	lr

08012762 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012762:	4770      	bx	lr

08012764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012764:	4770      	bx	lr

08012766 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012766:	4770      	bx	lr

08012768 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012768:	4770      	bx	lr

0801276a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801276a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801276e:	b088      	sub	sp, #32
 8012770:	ac08      	add	r4, sp, #32
 8012772:	4606      	mov	r6, r0
 8012774:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8012778:	4620      	mov	r0, r4
 801277a:	4688      	mov	r8, r1
 801277c:	4691      	mov	r9, r2
 801277e:	f7fd fc65 	bl	801004c <_ZNK8touchgfx6Bitmap7getDataEv>
 8012782:	6833      	ldr	r3, [r6, #0]
 8012784:	4605      	mov	r5, r0
 8012786:	4620      	mov	r0, r4
 8012788:	699f      	ldr	r7, [r3, #24]
 801278a:	f7fd fb73 	bl	800fe74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801278e:	4682      	mov	sl, r0
 8012790:	4620      	mov	r0, r4
 8012792:	f7fd fba3 	bl	800fedc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012796:	9500      	str	r5, [sp, #0]
 8012798:	e9cd a001 	strd	sl, r0, [sp, #4]
 801279c:	464b      	mov	r3, r9
 801279e:	a806      	add	r0, sp, #24
 80127a0:	4642      	mov	r2, r8
 80127a2:	4631      	mov	r1, r6
 80127a4:	47b8      	blx	r7
 80127a6:	4628      	mov	r0, r5
 80127a8:	b008      	add	sp, #32
 80127aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080127b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80127b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80127b4:	2300      	movs	r3, #0
 80127b6:	9300      	str	r3, [sp, #0]
 80127b8:	4b3d      	ldr	r3, [pc, #244]	; (80128b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80127ba:	781b      	ldrb	r3, [r3, #0]
 80127bc:	2b00      	cmp	r3, #0
 80127be:	d137      	bne.n	8012830 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80127c0:	4a3c      	ldr	r2, [pc, #240]	; (80128b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80127c2:	f9b2 2000 	ldrsh.w	r2, [r2]
 80127c6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80127ca:	2b00      	cmp	r3, #0
 80127cc:	d132      	bne.n	8012834 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80127ce:	4b3a      	ldr	r3, [pc, #232]	; (80128b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80127d0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80127d4:	6808      	ldr	r0, [r1, #0]
 80127d6:	6849      	ldr	r1, [r1, #4]
 80127d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80127dc:	ac02      	add	r4, sp, #8
 80127de:	ab02      	add	r3, sp, #8
 80127e0:	c303      	stmia	r3!, {r0, r1}
 80127e2:	4669      	mov	r1, sp
 80127e4:	4620      	mov	r0, r4
 80127e6:	f7fa f8d5 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80127ea:	4668      	mov	r0, sp
 80127ec:	f7fa f8aa 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80127f0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80127f4:	f8bd 2000 	ldrh.w	r2, [sp]
 80127f8:	4d30      	ldr	r5, [pc, #192]	; (80128bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80127fa:	4413      	add	r3, r2
 80127fc:	f8ad 3008 	strh.w	r3, [sp, #8]
 8012800:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012804:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012808:	6828      	ldr	r0, [r5, #0]
 801280a:	4413      	add	r3, r2
 801280c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012810:	6803      	ldr	r3, [r0, #0]
 8012812:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012814:	4798      	blx	r3
 8012816:	f010 0f01 	tst.w	r0, #1
 801281a:	462f      	mov	r7, r5
 801281c:	d00c      	beq.n	8012838 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801281e:	6828      	ldr	r0, [r5, #0]
 8012820:	6803      	ldr	r3, [r0, #0]
 8012822:	e894 0006 	ldmia.w	r4, {r1, r2}
 8012826:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012828:	4798      	blx	r3
 801282a:	b004      	add	sp, #16
 801282c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012830:	4a21      	ldr	r2, [pc, #132]	; (80128b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8012832:	e7c6      	b.n	80127c2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8012834:	4b1f      	ldr	r3, [pc, #124]	; (80128b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012836:	e7cb      	b.n	80127d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8012838:	6838      	ldr	r0, [r7, #0]
 801283a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801283e:	6803      	ldr	r3, [r0, #0]
 8012840:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8012844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012846:	4798      	blx	r3
 8012848:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801284c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012850:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8012854:	fb16 3602 	smlabb	r6, r6, r2, r3
 8012858:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801285c:	6838      	ldr	r0, [r7, #0]
 801285e:	6803      	ldr	r3, [r0, #0]
 8012860:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012862:	4798      	blx	r3
 8012864:	4a13      	ldr	r2, [pc, #76]	; (80128b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012866:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801286a:	8813      	ldrh	r3, [r2, #0]
 801286c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012870:	fb03 1404 	mla	r4, r3, r4, r1
 8012874:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012878:	435d      	muls	r5, r3
 801287a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801287e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8012882:	4691      	mov	r9, r2
 8012884:	6838      	ldr	r0, [r7, #0]
 8012886:	42ac      	cmp	r4, r5
 8012888:	6803      	ldr	r3, [r0, #0]
 801288a:	d20e      	bcs.n	80128aa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801288c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8012890:	4632      	mov	r2, r6
 8012892:	4643      	mov	r3, r8
 8012894:	4621      	mov	r1, r4
 8012896:	47d0      	blx	sl
 8012898:	f8b9 3000 	ldrh.w	r3, [r9]
 801289c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80128a0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80128a4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80128a8:	e7ec      	b.n	8012884 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80128aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80128ac:	4798      	blx	r3
 80128ae:	e7bc      	b.n	801282a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80128b0:	20017748 	.word	0x20017748
 80128b4:	2001774a 	.word	0x2001774a
 80128b8:	2001774c 	.word	0x2001774c
 80128bc:	20017750 	.word	0x20017750

080128c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80128c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128c4:	b08b      	sub	sp, #44	; 0x2c
 80128c6:	460f      	mov	r7, r1
 80128c8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80128cc:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80128d0:	4616      	mov	r6, r2
 80128d2:	f1bb 0f00 	cmp.w	fp, #0
 80128d6:	d049      	beq.n	801296c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80128d8:	6810      	ldr	r0, [r2, #0]
 80128da:	6851      	ldr	r1, [r2, #4]
 80128dc:	ad06      	add	r5, sp, #24
 80128de:	c503      	stmia	r5!, {r0, r1}
 80128e0:	6818      	ldr	r0, [r3, #0]
 80128e2:	6859      	ldr	r1, [r3, #4]
 80128e4:	ad08      	add	r5, sp, #32
 80128e6:	c503      	stmia	r5!, {r0, r1}
 80128e8:	a806      	add	r0, sp, #24
 80128ea:	f7fa f82b 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80128ee:	4631      	mov	r1, r6
 80128f0:	a808      	add	r0, sp, #32
 80128f2:	f7fa f84f 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80128f6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80128fa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80128fe:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8012902:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012906:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801290a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801290e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8012912:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012916:	4f5f      	ldr	r7, [pc, #380]	; (8012a94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012918:	440a      	add	r2, r1
 801291a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801291e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012922:	6838      	ldr	r0, [r7, #0]
 8012924:	4413      	add	r3, r2
 8012926:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801292a:	6803      	ldr	r3, [r0, #0]
 801292c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801292e:	4798      	blx	r3
 8012930:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012934:	46b9      	mov	r9, r7
 8012936:	d01c      	beq.n	8012972 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8012938:	f010 0f04 	tst.w	r0, #4
 801293c:	d01d      	beq.n	801297a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801293e:	f8d9 0000 	ldr.w	r0, [r9]
 8012942:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012946:	6801      	ldr	r1, [r0, #0]
 8012948:	f8cd b00c 	str.w	fp, [sp, #12]
 801294c:	2700      	movs	r7, #0
 801294e:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8012952:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8012956:	9402      	str	r4, [sp, #8]
 8012958:	b2ad      	uxth	r5, r5
 801295a:	fa1f f488 	uxth.w	r4, r8
 801295e:	9501      	str	r5, [sp, #4]
 8012960:	9400      	str	r4, [sp, #0]
 8012962:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8012964:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012968:	4631      	mov	r1, r6
 801296a:	47a0      	blx	r4
 801296c:	b00b      	add	sp, #44	; 0x2c
 801296e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012972:	b914      	cbnz	r4, 801297a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012974:	f010 0f01 	tst.w	r0, #1
 8012978:	e7e0      	b.n	801293c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801297a:	f8d9 0000 	ldr.w	r0, [r9]
 801297e:	6803      	ldr	r3, [r0, #0]
 8012980:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012982:	4798      	blx	r3
 8012984:	4b44      	ldr	r3, [pc, #272]	; (8012a98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8012986:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801298a:	881a      	ldrh	r2, [r3, #0]
 801298c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012990:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012994:	fb02 1404 	mla	r4, r2, r4, r1
 8012998:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801299c:	469a      	mov	sl, r3
 801299e:	fb05 f502 	mul.w	r5, r5, r2
 80129a2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80129a6:	d059      	beq.n	8012a5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80129a8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80129ac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80129b0:	fa1f f28b 	uxth.w	r2, fp
 80129b4:	fa1f f989 	uxth.w	r9, r9
 80129b8:	469e      	mov	lr, r3
 80129ba:	42ac      	cmp	r4, r5
 80129bc:	d264      	bcs.n	8012a88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80129be:	eb04 0a07 	add.w	sl, r4, r7
 80129c2:	4554      	cmp	r4, sl
 80129c4:	d23d      	bcs.n	8012a42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80129c6:	8821      	ldrh	r1, [r4, #0]
 80129c8:	f836 3b02 	ldrh.w	r3, [r6], #2
 80129cc:	1208      	asrs	r0, r1, #8
 80129ce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80129d2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80129d6:	fb10 f009 	smulbb	r0, r0, r9
 80129da:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80129de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80129e2:	00c9      	lsls	r1, r1, #3
 80129e4:	fb0c 0c02 	mla	ip, ip, r2, r0
 80129e8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80129ec:	10d8      	asrs	r0, r3, #3
 80129ee:	b2c9      	uxtb	r1, r1
 80129f0:	00db      	lsls	r3, r3, #3
 80129f2:	fa1f fc8c 	uxth.w	ip, ip
 80129f6:	fb1b fb09 	smulbb	fp, fp, r9
 80129fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80129fe:	b2db      	uxtb	r3, r3
 8012a00:	fb11 f109 	smulbb	r1, r1, r9
 8012a04:	fb00 b002 	mla	r0, r0, r2, fp
 8012a08:	fb03 1302 	mla	r3, r3, r2, r1
 8012a0c:	f10c 0b01 	add.w	fp, ip, #1
 8012a10:	b29b      	uxth	r3, r3
 8012a12:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8012a16:	b280      	uxth	r0, r0
 8012a18:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8012a1c:	f103 0c01 	add.w	ip, r3, #1
 8012a20:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012a24:	1c43      	adds	r3, r0, #1
 8012a26:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012a2a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012a2e:	0940      	lsrs	r0, r0, #5
 8012a30:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012a34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012a38:	ea4c 0c00 	orr.w	ip, ip, r0
 8012a3c:	f824 cb02 	strh.w	ip, [r4], #2
 8012a40:	e7bf      	b.n	80129c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8012a42:	f8be 3000 	ldrh.w	r3, [lr]
 8012a46:	eba3 0308 	sub.w	r3, r3, r8
 8012a4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012a4e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012a52:	eba3 0308 	sub.w	r3, r3, r8
 8012a56:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012a5a:	e7ae      	b.n	80129ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8012a5c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012a60:	f8d9 0000 	ldr.w	r0, [r9]
 8012a64:	42ac      	cmp	r4, r5
 8012a66:	6803      	ldr	r3, [r0, #0]
 8012a68:	d20e      	bcs.n	8012a88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012a6a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8012a6e:	4632      	mov	r2, r6
 8012a70:	463b      	mov	r3, r7
 8012a72:	4621      	mov	r1, r4
 8012a74:	47c0      	blx	r8
 8012a76:	f8ba 3000 	ldrh.w	r3, [sl]
 8012a7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012a7e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012a82:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012a86:	e7eb      	b.n	8012a60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8012a88:	4b02      	ldr	r3, [pc, #8]	; (8012a94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012a8a:	6818      	ldr	r0, [r3, #0]
 8012a8c:	6803      	ldr	r3, [r0, #0]
 8012a8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a90:	4798      	blx	r3
 8012a92:	e76b      	b.n	801296c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8012a94:	20017750 	.word	0x20017750
 8012a98:	2001774a 	.word	0x2001774a

08012a9c <_ZN8touchgfx8LCD16bppD0Ev>:
 8012a9c:	b510      	push	{r4, lr}
 8012a9e:	2178      	movs	r1, #120	; 0x78
 8012aa0:	4604      	mov	r4, r0
 8012aa2:	f008 ffdf 	bl	801ba64 <_ZdlPvj>
 8012aa6:	4620      	mov	r0, r4
 8012aa8:	bd10      	pop	{r4, pc}

08012aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012aaa:	b510      	push	{r4, lr}
 8012aac:	2104      	movs	r1, #4
 8012aae:	4604      	mov	r4, r0
 8012ab0:	f008 ffd8 	bl	801ba64 <_ZdlPvj>
 8012ab4:	4620      	mov	r0, r4
 8012ab6:	bd10      	pop	{r4, pc}

08012ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012ab8:	b510      	push	{r4, lr}
 8012aba:	2104      	movs	r1, #4
 8012abc:	4604      	mov	r4, r0
 8012abe:	f008 ffd1 	bl	801ba64 <_ZdlPvj>
 8012ac2:	4620      	mov	r0, r4
 8012ac4:	bd10      	pop	{r4, pc}

08012ac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012ac6:	b510      	push	{r4, lr}
 8012ac8:	2104      	movs	r1, #4
 8012aca:	4604      	mov	r4, r0
 8012acc:	f008 ffca 	bl	801ba64 <_ZdlPvj>
 8012ad0:	4620      	mov	r0, r4
 8012ad2:	bd10      	pop	{r4, pc}

08012ad4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012ad4:	b510      	push	{r4, lr}
 8012ad6:	2104      	movs	r1, #4
 8012ad8:	4604      	mov	r4, r0
 8012ada:	f008 ffc3 	bl	801ba64 <_ZdlPvj>
 8012ade:	4620      	mov	r0, r4
 8012ae0:	bd10      	pop	{r4, pc}

08012ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012ae2:	b510      	push	{r4, lr}
 8012ae4:	2104      	movs	r1, #4
 8012ae6:	4604      	mov	r4, r0
 8012ae8:	f008 ffbc 	bl	801ba64 <_ZdlPvj>
 8012aec:	4620      	mov	r0, r4
 8012aee:	bd10      	pop	{r4, pc}

08012af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012af0:	b510      	push	{r4, lr}
 8012af2:	2104      	movs	r1, #4
 8012af4:	4604      	mov	r4, r0
 8012af6:	f008 ffb5 	bl	801ba64 <_ZdlPvj>
 8012afa:	4620      	mov	r0, r4
 8012afc:	bd10      	pop	{r4, pc}

08012afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012afe:	b510      	push	{r4, lr}
 8012b00:	2104      	movs	r1, #4
 8012b02:	4604      	mov	r4, r0
 8012b04:	f008 ffae 	bl	801ba64 <_ZdlPvj>
 8012b08:	4620      	mov	r0, r4
 8012b0a:	bd10      	pop	{r4, pc}

08012b0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012b0c:	b510      	push	{r4, lr}
 8012b0e:	2104      	movs	r1, #4
 8012b10:	4604      	mov	r4, r0
 8012b12:	f008 ffa7 	bl	801ba64 <_ZdlPvj>
 8012b16:	4620      	mov	r0, r4
 8012b18:	bd10      	pop	{r4, pc}

08012b1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012b1a:	b510      	push	{r4, lr}
 8012b1c:	2104      	movs	r1, #4
 8012b1e:	4604      	mov	r4, r0
 8012b20:	f008 ffa0 	bl	801ba64 <_ZdlPvj>
 8012b24:	4620      	mov	r0, r4
 8012b26:	bd10      	pop	{r4, pc}

08012b28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012b28:	b510      	push	{r4, lr}
 8012b2a:	2104      	movs	r1, #4
 8012b2c:	4604      	mov	r4, r0
 8012b2e:	f008 ff99 	bl	801ba64 <_ZdlPvj>
 8012b32:	4620      	mov	r0, r4
 8012b34:	bd10      	pop	{r4, pc}

08012b36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012b36:	b510      	push	{r4, lr}
 8012b38:	2104      	movs	r1, #4
 8012b3a:	4604      	mov	r4, r0
 8012b3c:	f008 ff92 	bl	801ba64 <_ZdlPvj>
 8012b40:	4620      	mov	r0, r4
 8012b42:	bd10      	pop	{r4, pc}

08012b44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012b44:	b510      	push	{r4, lr}
 8012b46:	2104      	movs	r1, #4
 8012b48:	4604      	mov	r4, r0
 8012b4a:	f008 ff8b 	bl	801ba64 <_ZdlPvj>
 8012b4e:	4620      	mov	r0, r4
 8012b50:	bd10      	pop	{r4, pc}

08012b52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012b52:	b510      	push	{r4, lr}
 8012b54:	2104      	movs	r1, #4
 8012b56:	4604      	mov	r4, r0
 8012b58:	f008 ff84 	bl	801ba64 <_ZdlPvj>
 8012b5c:	4620      	mov	r0, r4
 8012b5e:	bd10      	pop	{r4, pc}

08012b60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012b60:	b510      	push	{r4, lr}
 8012b62:	2104      	movs	r1, #4
 8012b64:	4604      	mov	r4, r0
 8012b66:	f008 ff7d 	bl	801ba64 <_ZdlPvj>
 8012b6a:	4620      	mov	r0, r4
 8012b6c:	bd10      	pop	{r4, pc}

08012b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012b6e:	b510      	push	{r4, lr}
 8012b70:	2104      	movs	r1, #4
 8012b72:	4604      	mov	r4, r0
 8012b74:	f008 ff76 	bl	801ba64 <_ZdlPvj>
 8012b78:	4620      	mov	r0, r4
 8012b7a:	bd10      	pop	{r4, pc}

08012b7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012b7c:	b510      	push	{r4, lr}
 8012b7e:	2104      	movs	r1, #4
 8012b80:	4604      	mov	r4, r0
 8012b82:	f008 ff6f 	bl	801ba64 <_ZdlPvj>
 8012b86:	4620      	mov	r0, r4
 8012b88:	bd10      	pop	{r4, pc}

08012b8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012b8a:	b510      	push	{r4, lr}
 8012b8c:	2104      	movs	r1, #4
 8012b8e:	4604      	mov	r4, r0
 8012b90:	f008 ff68 	bl	801ba64 <_ZdlPvj>
 8012b94:	4620      	mov	r0, r4
 8012b96:	bd10      	pop	{r4, pc}

08012b98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012b98:	b510      	push	{r4, lr}
 8012b9a:	2104      	movs	r1, #4
 8012b9c:	4604      	mov	r4, r0
 8012b9e:	f008 ff61 	bl	801ba64 <_ZdlPvj>
 8012ba2:	4620      	mov	r0, r4
 8012ba4:	bd10      	pop	{r4, pc}

08012ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012ba6:	b510      	push	{r4, lr}
 8012ba8:	2104      	movs	r1, #4
 8012baa:	4604      	mov	r4, r0
 8012bac:	f008 ff5a 	bl	801ba64 <_ZdlPvj>
 8012bb0:	4620      	mov	r0, r4
 8012bb2:	bd10      	pop	{r4, pc}

08012bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012bb4:	b510      	push	{r4, lr}
 8012bb6:	2104      	movs	r1, #4
 8012bb8:	4604      	mov	r4, r0
 8012bba:	f008 ff53 	bl	801ba64 <_ZdlPvj>
 8012bbe:	4620      	mov	r0, r4
 8012bc0:	bd10      	pop	{r4, pc}

08012bc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012bc2:	b510      	push	{r4, lr}
 8012bc4:	2104      	movs	r1, #4
 8012bc6:	4604      	mov	r4, r0
 8012bc8:	f008 ff4c 	bl	801ba64 <_ZdlPvj>
 8012bcc:	4620      	mov	r0, r4
 8012bce:	bd10      	pop	{r4, pc}

08012bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012bd0:	b510      	push	{r4, lr}
 8012bd2:	2104      	movs	r1, #4
 8012bd4:	4604      	mov	r4, r0
 8012bd6:	f008 ff45 	bl	801ba64 <_ZdlPvj>
 8012bda:	4620      	mov	r0, r4
 8012bdc:	bd10      	pop	{r4, pc}

08012bde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012bde:	b510      	push	{r4, lr}
 8012be0:	2104      	movs	r1, #4
 8012be2:	4604      	mov	r4, r0
 8012be4:	f008 ff3e 	bl	801ba64 <_ZdlPvj>
 8012be8:	4620      	mov	r0, r4
 8012bea:	bd10      	pop	{r4, pc}

08012bec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012bec:	b510      	push	{r4, lr}
 8012bee:	2104      	movs	r1, #4
 8012bf0:	4604      	mov	r4, r0
 8012bf2:	f008 ff37 	bl	801ba64 <_ZdlPvj>
 8012bf6:	4620      	mov	r0, r4
 8012bf8:	bd10      	pop	{r4, pc}

08012bfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012bfa:	b510      	push	{r4, lr}
 8012bfc:	2104      	movs	r1, #4
 8012bfe:	4604      	mov	r4, r0
 8012c00:	f008 ff30 	bl	801ba64 <_ZdlPvj>
 8012c04:	4620      	mov	r0, r4
 8012c06:	bd10      	pop	{r4, pc}

08012c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012c08:	b510      	push	{r4, lr}
 8012c0a:	2104      	movs	r1, #4
 8012c0c:	4604      	mov	r4, r0
 8012c0e:	f008 ff29 	bl	801ba64 <_ZdlPvj>
 8012c12:	4620      	mov	r0, r4
 8012c14:	bd10      	pop	{r4, pc}

08012c16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8012c16:	b510      	push	{r4, lr}
 8012c18:	2104      	movs	r1, #4
 8012c1a:	4604      	mov	r4, r0
 8012c1c:	f008 ff22 	bl	801ba64 <_ZdlPvj>
 8012c20:	4620      	mov	r0, r4
 8012c22:	bd10      	pop	{r4, pc}

08012c24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012c24:	b510      	push	{r4, lr}
 8012c26:	2104      	movs	r1, #4
 8012c28:	4604      	mov	r4, r0
 8012c2a:	f008 ff1b 	bl	801ba64 <_ZdlPvj>
 8012c2e:	4620      	mov	r0, r4
 8012c30:	bd10      	pop	{r4, pc}
	...

08012c34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8012c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c38:	b091      	sub	sp, #68	; 0x44
 8012c3a:	469b      	mov	fp, r3
 8012c3c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8012c40:	4616      	mov	r6, r2
 8012c42:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8012c46:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012c4a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8012c4e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012c52:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012c56:	4604      	mov	r4, r0
 8012c58:	460d      	mov	r5, r1
 8012c5a:	4640      	mov	r0, r8
 8012c5c:	4659      	mov	r1, fp
 8012c5e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012c62:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8012c66:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8012c6a:	f7f6 fdcf 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 8012c6e:	4631      	mov	r1, r6
 8012c70:	4640      	mov	r0, r8
 8012c72:	f7f6 fdcb 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 8012c76:	4b74      	ldr	r3, [pc, #464]	; (8012e48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8012c78:	8818      	ldrh	r0, [r3, #0]
 8012c7a:	4b74      	ldr	r3, [pc, #464]	; (8012e4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8012c7c:	8819      	ldrh	r1, [r3, #0]
 8012c7e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8012c82:	2b00      	cmp	r3, #0
 8012c84:	b202      	sxth	r2, r0
 8012c86:	b20e      	sxth	r6, r1
 8012c88:	da07      	bge.n	8012c9a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8012c8a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8012c8e:	4463      	add	r3, ip
 8012c90:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012c94:	2300      	movs	r3, #0
 8012c96:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012c9a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8012c9e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8012ca2:	1ad2      	subs	r2, r2, r3
 8012ca4:	4594      	cmp	ip, r2
 8012ca6:	bfc4      	itt	gt
 8012ca8:	1ac2      	subgt	r2, r0, r3
 8012caa:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8012cae:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012cb2:	2a00      	cmp	r2, #0
 8012cb4:	da07      	bge.n	8012cc6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8012cb6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8012cba:	4462      	add	r2, ip
 8012cbc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8012cc0:	2200      	movs	r2, #0
 8012cc2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012cc6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8012cca:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8012cce:	eba6 060a 	sub.w	r6, r6, sl
 8012cd2:	42b2      	cmp	r2, r6
 8012cd4:	bfc4      	itt	gt
 8012cd6:	eba1 020a 	subgt.w	r2, r1, sl
 8012cda:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8012cde:	4a5c      	ldr	r2, [pc, #368]	; (8012e50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8012ce0:	7812      	ldrb	r2, [r2, #0]
 8012ce2:	b9a2      	cbnz	r2, 8012d0e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8012ce4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012ce8:	4286      	cmp	r6, r0
 8012cea:	4640      	mov	r0, r8
 8012cec:	9303      	str	r3, [sp, #12]
 8012cee:	bf14      	ite	ne
 8012cf0:	2600      	movne	r6, #0
 8012cf2:	2601      	moveq	r6, #1
 8012cf4:	f7f6 fdcd 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cf8:	9b03      	ldr	r3, [sp, #12]
 8012cfa:	b160      	cbz	r0, 8012d16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8012cfc:	2300      	movs	r3, #0
 8012cfe:	8023      	strh	r3, [r4, #0]
 8012d00:	8063      	strh	r3, [r4, #2]
 8012d02:	80a3      	strh	r3, [r4, #4]
 8012d04:	4620      	mov	r0, r4
 8012d06:	80e3      	strh	r3, [r4, #6]
 8012d08:	b011      	add	sp, #68	; 0x44
 8012d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d0e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012d12:	428e      	cmp	r6, r1
 8012d14:	e7e9      	b.n	8012cea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8012d16:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012d1a:	9205      	str	r2, [sp, #20]
 8012d1c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8012d20:	9206      	str	r2, [sp, #24]
 8012d22:	f8bb 2000 	ldrh.w	r2, [fp]
 8012d26:	900e      	str	r0, [sp, #56]	; 0x38
 8012d28:	1a9b      	subs	r3, r3, r2
 8012d2a:	b21b      	sxth	r3, r3
 8012d2c:	9303      	str	r3, [sp, #12]
 8012d2e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8012d32:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8012d36:	ebaa 0a03 	sub.w	sl, sl, r3
 8012d3a:	fa0f f38a 	sxth.w	r3, sl
 8012d3e:	9304      	str	r3, [sp, #16]
 8012d40:	9b03      	ldr	r3, [sp, #12]
 8012d42:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012d46:	9b04      	ldr	r3, [sp, #16]
 8012d48:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012d4c:	9b05      	ldr	r3, [sp, #20]
 8012d4e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012d52:	a90e      	add	r1, sp, #56	; 0x38
 8012d54:	9b06      	ldr	r3, [sp, #24]
 8012d56:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012d5a:	a80c      	add	r0, sp, #48	; 0x30
 8012d5c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8012d60:	f7f9 fe18 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d64:	4640      	mov	r0, r8
 8012d66:	f7f9 fded 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d6a:	a80e      	add	r0, sp, #56	; 0x38
 8012d6c:	f7f9 fdea 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d70:	4b38      	ldr	r3, [pc, #224]	; (8012e54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8012d72:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8012d76:	881b      	ldrh	r3, [r3, #0]
 8012d78:	9307      	str	r3, [sp, #28]
 8012d7a:	682b      	ldr	r3, [r5, #0]
 8012d7c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8012e58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8012d80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012d82:	4628      	mov	r0, r5
 8012d84:	4798      	blx	r3
 8012d86:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8012d8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8012d8e:	4681      	mov	r9, r0
 8012d90:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8012d94:	f8db 0000 	ldr.w	r0, [fp]
 8012d98:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8012d9a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012d9e:	6803      	ldr	r3, [r0, #0]
 8012da0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012da2:	4798      	blx	r3
 8012da4:	4607      	mov	r7, r0
 8012da6:	f8db 0000 	ldr.w	r0, [fp]
 8012daa:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012dae:	6803      	ldr	r3, [r0, #0]
 8012db0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012db4:	9109      	str	r1, [sp, #36]	; 0x24
 8012db6:	9208      	str	r2, [sp, #32]
 8012db8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012dba:	4798      	blx	r3
 8012dbc:	f010 0f01 	tst.w	r0, #1
 8012dc0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8012dc4:	d012      	beq.n	8012dec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8012dc6:	f8db 0000 	ldr.w	r0, [fp]
 8012dca:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8012dce:	6803      	ldr	r3, [r0, #0]
 8012dd0:	9200      	str	r2, [sp, #0]
 8012dd2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8012dd4:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012dd8:	462b      	mov	r3, r5
 8012dda:	47b0      	blx	r6
 8012ddc:	9b03      	ldr	r3, [sp, #12]
 8012dde:	8023      	strh	r3, [r4, #0]
 8012de0:	9b04      	ldr	r3, [sp, #16]
 8012de2:	8063      	strh	r3, [r4, #2]
 8012de4:	9b05      	ldr	r3, [sp, #20]
 8012de6:	80a3      	strh	r3, [r4, #4]
 8012de8:	9b06      	ldr	r3, [sp, #24]
 8012dea:	e78b      	b.n	8012d04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8012dec:	fb09 f202 	mul.w	r2, r9, r2
 8012df0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8012df4:	440f      	add	r7, r1
 8012df6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8012dfa:	b166      	cbz	r6, 8012e16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8012dfc:	9a07      	ldr	r2, [sp, #28]
 8012dfe:	4592      	cmp	sl, r2
 8012e00:	d109      	bne.n	8012e16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8012e02:	f8db 0000 	ldr.w	r0, [fp]
 8012e06:	6802      	ldr	r2, [r0, #0]
 8012e08:	fb09 f303 	mul.w	r3, r9, r3
 8012e0c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8012e0e:	4629      	mov	r1, r5
 8012e10:	463a      	mov	r2, r7
 8012e12:	47b0      	blx	r6
 8012e14:	e7e2      	b.n	8012ddc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8012e16:	fb0a f303 	mul.w	r3, sl, r3
 8012e1a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8012e58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8012e1e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8012e22:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8012e26:	4545      	cmp	r5, r8
 8012e28:	d2d8      	bcs.n	8012ddc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8012e2a:	f8db 0000 	ldr.w	r0, [fp]
 8012e2e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8012e32:	6802      	ldr	r2, [r0, #0]
 8012e34:	4629      	mov	r1, r5
 8012e36:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8012e3a:	005b      	lsls	r3, r3, #1
 8012e3c:	463a      	mov	r2, r7
 8012e3e:	47d0      	blx	sl
 8012e40:	444f      	add	r7, r9
 8012e42:	4435      	add	r5, r6
 8012e44:	e7ef      	b.n	8012e26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8012e46:	bf00      	nop
 8012e48:	20017744 	.word	0x20017744
 8012e4c:	20017746 	.word	0x20017746
 8012e50:	20017748 	.word	0x20017748
 8012e54:	2001774a 	.word	0x2001774a
 8012e58:	20017750 	.word	0x20017750

08012e5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e5e:	4606      	mov	r6, r0
 8012e60:	b087      	sub	sp, #28
 8012e62:	460c      	mov	r4, r1
 8012e64:	4617      	mov	r7, r2
 8012e66:	461d      	mov	r5, r3
 8012e68:	b333      	cbz	r3, 8012eb8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012e6a:	4608      	mov	r0, r1
 8012e6c:	f7f6 fd11 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012e70:	bb10      	cbnz	r0, 8012eb8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012e72:	6820      	ldr	r0, [r4, #0]
 8012e74:	6861      	ldr	r1, [r4, #4]
 8012e76:	4c1c      	ldr	r4, [pc, #112]	; (8012ee8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8012e78:	ab04      	add	r3, sp, #16
 8012e7a:	c303      	stmia	r3!, {r0, r1}
 8012e7c:	a804      	add	r0, sp, #16
 8012e7e:	f7f9 fd61 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e82:	6820      	ldr	r0, [r4, #0]
 8012e84:	6803      	ldr	r3, [r0, #0]
 8012e86:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e88:	4798      	blx	r3
 8012e8a:	2dff      	cmp	r5, #255	; 0xff
 8012e8c:	d016      	beq.n	8012ebc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8012e8e:	f010 0f08 	tst.w	r0, #8
 8012e92:	6820      	ldr	r0, [r4, #0]
 8012e94:	d015      	beq.n	8012ec2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8012e96:	2400      	movs	r4, #0
 8012e98:	6801      	ldr	r1, [r0, #0]
 8012e9a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012e9e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012ea2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8012ea6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8012eaa:	9401      	str	r4, [sp, #4]
 8012eac:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8012eb0:	9400      	str	r4, [sp, #0]
 8012eb2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8012eb4:	4639      	mov	r1, r7
 8012eb6:	47a0      	blx	r4
 8012eb8:	b007      	add	sp, #28
 8012eba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012ebc:	f010 0f02 	tst.w	r0, #2
 8012ec0:	e7e7      	b.n	8012e92 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012ec2:	6803      	ldr	r3, [r0, #0]
 8012ec4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012ec6:	4798      	blx	r3
 8012ec8:	4b08      	ldr	r3, [pc, #32]	; (8012eec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8012eca:	881a      	ldrh	r2, [r3, #0]
 8012ecc:	6833      	ldr	r3, [r6, #0]
 8012ece:	e9cd 7500 	strd	r7, r5, [sp]
 8012ed2:	4601      	mov	r1, r0
 8012ed4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8012ed6:	4630      	mov	r0, r6
 8012ed8:	ab04      	add	r3, sp, #16
 8012eda:	47a8      	blx	r5
 8012edc:	6820      	ldr	r0, [r4, #0]
 8012ede:	6803      	ldr	r3, [r0, #0]
 8012ee0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012ee2:	4798      	blx	r3
 8012ee4:	e7e8      	b.n	8012eb8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012ee6:	bf00      	nop
 8012ee8:	20017750 	.word	0x20017750
 8012eec:	2001774a 	.word	0x2001774a

08012ef0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8012ef0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012ef4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8012ef8:	9e08      	ldr	r6, [sp, #32]
 8012efa:	4688      	mov	r8, r1
 8012efc:	4614      	mov	r4, r2
 8012efe:	461d      	mov	r5, r3
 8012f00:	2f00      	cmp	r7, #0
 8012f02:	f000 80a9 	beq.w	8013058 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012f06:	4618      	mov	r0, r3
 8012f08:	f7f6 fcc3 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012f0c:	2800      	cmp	r0, #0
 8012f0e:	f040 80a3 	bne.w	8013058 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012f12:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012f16:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012f1a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8012f1e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8012f22:	fb04 1303 	mla	r3, r4, r3, r1
 8012f26:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8012f2a:	4365      	muls	r5, r4
 8012f2c:	2fff      	cmp	r7, #255	; 0xff
 8012f2e:	eba4 0200 	sub.w	r2, r4, r0
 8012f32:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8012f36:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8012f3a:	d04a      	beq.n	8012fd2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8012f3c:	b2bc      	uxth	r4, r7
 8012f3e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012f42:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8012f46:	fa5f f788 	uxtb.w	r7, r8
 8012f4a:	b2f3      	uxtb	r3, r6
 8012f4c:	0040      	lsls	r0, r0, #1
 8012f4e:	fb0e fe04 	mul.w	lr, lr, r4
 8012f52:	4367      	muls	r7, r4
 8012f54:	4363      	muls	r3, r4
 8012f56:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8012f5a:	fa1f fc8c 	uxth.w	ip, ip
 8012f5e:	42a9      	cmp	r1, r5
 8012f60:	d27a      	bcs.n	8013058 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012f62:	eb01 0900 	add.w	r9, r1, r0
 8012f66:	4549      	cmp	r1, r9
 8012f68:	d231      	bcs.n	8012fce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8012f6a:	880a      	ldrh	r2, [r1, #0]
 8012f6c:	1214      	asrs	r4, r2, #8
 8012f6e:	10d6      	asrs	r6, r2, #3
 8012f70:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012f74:	00d2      	lsls	r2, r2, #3
 8012f76:	b2d2      	uxtb	r2, r2
 8012f78:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8012f7c:	fb14 f40c 	smulbb	r4, r4, ip
 8012f80:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012f84:	4474      	add	r4, lr
 8012f86:	fb12 f20c 	smulbb	r2, r2, ip
 8012f8a:	b2a4      	uxth	r4, r4
 8012f8c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012f90:	441a      	add	r2, r3
 8012f92:	b292      	uxth	r2, r2
 8012f94:	f104 0a01 	add.w	sl, r4, #1
 8012f98:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8012f9c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8012fa0:	fb16 f60c 	smulbb	r6, r6, ip
 8012fa4:	f102 0a01 	add.w	sl, r2, #1
 8012fa8:	443e      	add	r6, r7
 8012faa:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8012fae:	b2b6      	uxth	r6, r6
 8012fb0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012fb4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012fb8:	4322      	orrs	r2, r4
 8012fba:	1c74      	adds	r4, r6, #1
 8012fbc:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8012fc0:	0976      	lsrs	r6, r6, #5
 8012fc2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012fc6:	4332      	orrs	r2, r6
 8012fc8:	f821 2b02 	strh.w	r2, [r1], #2
 8012fcc:	e7cb      	b.n	8012f66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8012fce:	4441      	add	r1, r8
 8012fd0:	e7c5      	b.n	8012f5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8012fd2:	4f22      	ldr	r7, [pc, #136]	; (801305c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8012fd4:	0973      	lsrs	r3, r6, #5
 8012fd6:	ea08 0707 	and.w	r7, r8, r7
 8012fda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012fde:	433b      	orrs	r3, r7
 8012fe0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012fe4:	4333      	orrs	r3, r6
 8012fe6:	07e7      	lsls	r7, r4, #31
 8012fe8:	b29b      	uxth	r3, r3
 8012fea:	d50b      	bpl.n	8013004 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8012fec:	0040      	lsls	r0, r0, #1
 8012fee:	0052      	lsls	r2, r2, #1
 8012ff0:	42a9      	cmp	r1, r5
 8012ff2:	d231      	bcs.n	8013058 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012ff4:	180c      	adds	r4, r1, r0
 8012ff6:	42a1      	cmp	r1, r4
 8012ff8:	d202      	bcs.n	8013000 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8012ffa:	f821 3b02 	strh.w	r3, [r1], #2
 8012ffe:	e7fa      	b.n	8012ff6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8013000:	4411      	add	r1, r2
 8013002:	e7f5      	b.n	8012ff0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8013004:	078e      	lsls	r6, r1, #30
 8013006:	d008      	beq.n	801301a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8013008:	0066      	lsls	r6, r4, #1
 801300a:	460a      	mov	r2, r1
 801300c:	42aa      	cmp	r2, r5
 801300e:	d202      	bcs.n	8013016 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8013010:	8013      	strh	r3, [r2, #0]
 8013012:	4432      	add	r2, r6
 8013014:	e7fa      	b.n	801300c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8013016:	3102      	adds	r1, #2
 8013018:	3801      	subs	r0, #1
 801301a:	07c2      	lsls	r2, r0, #31
 801301c:	d50b      	bpl.n	8013036 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801301e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8013022:	3a01      	subs	r2, #1
 8013024:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8013028:	0066      	lsls	r6, r4, #1
 801302a:	42aa      	cmp	r2, r5
 801302c:	d202      	bcs.n	8013034 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801302e:	8013      	strh	r3, [r2, #0]
 8013030:	4432      	add	r2, r6
 8013032:	e7fa      	b.n	801302a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8013034:	3801      	subs	r0, #1
 8013036:	b178      	cbz	r0, 8013058 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8013038:	1040      	asrs	r0, r0, #1
 801303a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801303e:	0080      	lsls	r0, r0, #2
 8013040:	0064      	lsls	r4, r4, #1
 8013042:	42a9      	cmp	r1, r5
 8013044:	d208      	bcs.n	8013058 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8013046:	180e      	adds	r6, r1, r0
 8013048:	460a      	mov	r2, r1
 801304a:	42b2      	cmp	r2, r6
 801304c:	d202      	bcs.n	8013054 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801304e:	f842 3b04 	str.w	r3, [r2], #4
 8013052:	e7fa      	b.n	801304a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8013054:	4421      	add	r1, r4
 8013056:	e7f4      	b.n	8013042 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8013058:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801305c:	00fff800 	.word	0x00fff800

08013060 <_ZN8touchgfx8LCD16bppC1Ev>:
 8013060:	2200      	movs	r2, #0
 8013062:	4910      	ldr	r1, [pc, #64]	; (80130a4 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8013064:	6042      	str	r2, [r0, #4]
 8013066:	6001      	str	r1, [r0, #0]
 8013068:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801306c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8013070:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8013074:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8013078:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801307c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8013080:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8013084:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8013088:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801308c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8013090:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8013094:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8013098:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801309c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80130a0:	4770      	bx	lr
 80130a2:	bf00      	nop
 80130a4:	0801f830 	.word	0x0801f830

080130a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80130a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130ac:	460d      	mov	r5, r1
 80130ae:	b08d      	sub	sp, #52	; 0x34
 80130b0:	4604      	mov	r4, r0
 80130b2:	6808      	ldr	r0, [r1, #0]
 80130b4:	6849      	ldr	r1, [r1, #4]
 80130b6:	4699      	mov	r9, r3
 80130b8:	ab08      	add	r3, sp, #32
 80130ba:	c303      	stmia	r3!, {r0, r1}
 80130bc:	6810      	ldr	r0, [r2, #0]
 80130be:	6851      	ldr	r1, [r2, #4]
 80130c0:	ab0a      	add	r3, sp, #40	; 0x28
 80130c2:	c303      	stmia	r3!, {r0, r1}
 80130c4:	a808      	add	r0, sp, #32
 80130c6:	f7f9 fc3d 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80130ca:	4629      	mov	r1, r5
 80130cc:	a80a      	add	r0, sp, #40	; 0x28
 80130ce:	f7f9 fc61 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80130d2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80130d6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80130da:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80130de:	4d63      	ldr	r5, [pc, #396]	; (801326c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80130e0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80130e4:	6828      	ldr	r0, [r5, #0]
 80130e6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80130ea:	fb11 2103 	smlabb	r1, r1, r3, r2
 80130ee:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80130f2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80130f6:	440a      	add	r2, r1
 80130f8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80130fc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8013100:	4413      	add	r3, r2
 8013102:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8013106:	6803      	ldr	r3, [r0, #0]
 8013108:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801310a:	4798      	blx	r3
 801310c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013110:	d119      	bne.n	8013146 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8013112:	f010 0f20 	tst.w	r0, #32
 8013116:	6828      	ldr	r0, [r5, #0]
 8013118:	d018      	beq.n	801314c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801311a:	2500      	movs	r5, #0
 801311c:	6801      	ldr	r1, [r0, #0]
 801311e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8013122:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8013126:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801312a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801312e:	9502      	str	r5, [sp, #8]
 8013130:	b2b6      	uxth	r6, r6
 8013132:	fa1f f588 	uxth.w	r5, r8
 8013136:	9601      	str	r6, [sp, #4]
 8013138:	9500      	str	r5, [sp, #0]
 801313a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801313c:	4621      	mov	r1, r4
 801313e:	47a8      	blx	r5
 8013140:	b00d      	add	sp, #52	; 0x34
 8013142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013146:	f010 0f40 	tst.w	r0, #64	; 0x40
 801314a:	e7e4      	b.n	8013116 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801314c:	6803      	ldr	r3, [r0, #0]
 801314e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013150:	4798      	blx	r3
 8013152:	4947      	ldr	r1, [pc, #284]	; (8013270 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8013154:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8013158:	880b      	ldrh	r3, [r1, #0]
 801315a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801315e:	fb03 5202 	mla	r2, r3, r2, r5
 8013162:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013166:	4373      	muls	r3, r6
 8013168:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801316c:	9307      	str	r3, [sp, #28]
 801316e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8013172:	9306      	str	r3, [sp, #24]
 8013174:	468a      	mov	sl, r1
 8013176:	9b07      	ldr	r3, [sp, #28]
 8013178:	4298      	cmp	r0, r3
 801317a:	d270      	bcs.n	801325e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801317c:	9b06      	ldr	r3, [sp, #24]
 801317e:	4621      	mov	r1, r4
 8013180:	eb00 0b03 	add.w	fp, r0, r3
 8013184:	4558      	cmp	r0, fp
 8013186:	d25d      	bcs.n	8013244 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8013188:	f851 4b04 	ldr.w	r4, [r1], #4
 801318c:	0e23      	lsrs	r3, r4, #24
 801318e:	d014      	beq.n	80131ba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013190:	2bff      	cmp	r3, #255	; 0xff
 8013192:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8013196:	d112      	bne.n	80131be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8013198:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801319c:	d10f      	bne.n	80131be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801319e:	0963      	lsrs	r3, r4, #5
 80131a0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80131a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80131a8:	f02c 0c07 	bic.w	ip, ip, #7
 80131ac:	ea43 0c0c 	orr.w	ip, r3, ip
 80131b0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80131b4:	ea4c 0404 	orr.w	r4, ip, r4
 80131b8:	8004      	strh	r4, [r0, #0]
 80131ba:	3002      	adds	r0, #2
 80131bc:	e7e2      	b.n	8013184 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80131be:	fb09 f303 	mul.w	r3, r9, r3
 80131c2:	8807      	ldrh	r7, [r0, #0]
 80131c4:	1c5a      	adds	r2, r3, #1
 80131c6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80131ca:	1212      	asrs	r2, r2, #8
 80131cc:	123e      	asrs	r6, r7, #8
 80131ce:	b293      	uxth	r3, r2
 80131d0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80131d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80131d8:	43d2      	mvns	r2, r2
 80131da:	b2d2      	uxtb	r2, r2
 80131dc:	10fd      	asrs	r5, r7, #3
 80131de:	fb1e fe03 	smulbb	lr, lr, r3
 80131e2:	00ff      	lsls	r7, r7, #3
 80131e4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80131e8:	fb06 e602 	mla	r6, r6, r2, lr
 80131ec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80131f0:	b2ff      	uxtb	r7, r7
 80131f2:	fa5f fc8c 	uxtb.w	ip, ip
 80131f6:	b2e4      	uxtb	r4, r4
 80131f8:	b2b6      	uxth	r6, r6
 80131fa:	fb1c fc03 	smulbb	ip, ip, r3
 80131fe:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013202:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8013206:	fb14 f403 	smulbb	r4, r4, r3
 801320a:	fb05 c502 	mla	r5, r5, r2, ip
 801320e:	f106 0e01 	add.w	lr, r6, #1
 8013212:	fb07 4702 	mla	r7, r7, r2, r4
 8013216:	b2ad      	uxth	r5, r5
 8013218:	b2bf      	uxth	r7, r7
 801321a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801321e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8013222:	f105 0c01 	add.w	ip, r5, #1
 8013226:	1c7e      	adds	r6, r7, #1
 8013228:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801322c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8013230:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013234:	096d      	lsrs	r5, r5, #5
 8013236:	ea46 060e 	orr.w	r6, r6, lr
 801323a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801323e:	432e      	orrs	r6, r5
 8013240:	8006      	strh	r6, [r0, #0]
 8013242:	e7ba      	b.n	80131ba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013244:	f8ba 3000 	ldrh.w	r3, [sl]
 8013248:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801324c:	eba3 0308 	sub.w	r3, r3, r8
 8013250:	eba4 0408 	sub.w	r4, r4, r8
 8013254:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013258:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801325c:	e78b      	b.n	8013176 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801325e:	4b03      	ldr	r3, [pc, #12]	; (801326c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8013260:	6818      	ldr	r0, [r3, #0]
 8013262:	6803      	ldr	r3, [r0, #0]
 8013264:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013266:	4798      	blx	r3
 8013268:	e76a      	b.n	8013140 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801326a:	bf00      	nop
 801326c:	20017750 	.word	0x20017750
 8013270:	2001774a 	.word	0x2001774a

08013274 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8013274:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013278:	460c      	mov	r4, r1
 801327a:	b085      	sub	sp, #20
 801327c:	6810      	ldr	r0, [r2, #0]
 801327e:	6851      	ldr	r1, [r2, #4]
 8013280:	466d      	mov	r5, sp
 8013282:	c503      	stmia	r5!, {r0, r1}
 8013284:	6818      	ldr	r0, [r3, #0]
 8013286:	6859      	ldr	r1, [r3, #4]
 8013288:	4616      	mov	r6, r2
 801328a:	c503      	stmia	r5!, {r0, r1}
 801328c:	4668      	mov	r0, sp
 801328e:	f7f9 fb59 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013292:	4631      	mov	r1, r6
 8013294:	a802      	add	r0, sp, #8
 8013296:	f7f9 fb7d 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801329a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801329e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80132a2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80132a6:	4d28      	ldr	r5, [pc, #160]	; (8013348 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80132a8:	4e28      	ldr	r6, [pc, #160]	; (801334c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80132aa:	6828      	ldr	r0, [r5, #0]
 80132ac:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80132b0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80132b4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80132b8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80132bc:	f8bd 1000 	ldrh.w	r1, [sp]
 80132c0:	440a      	add	r2, r1
 80132c2:	f8ad 2008 	strh.w	r2, [sp, #8]
 80132c6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80132ca:	4413      	add	r3, r2
 80132cc:	f8ad 300a 	strh.w	r3, [sp, #10]
 80132d0:	6803      	ldr	r3, [r0, #0]
 80132d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80132d4:	4798      	blx	r3
 80132d6:	8833      	ldrh	r3, [r6, #0]
 80132d8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80132dc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80132e0:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8013350 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80132e4:	fb03 1202 	mla	r2, r3, r2, r1
 80132e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80132ec:	fb08 f303 	mul.w	r3, r8, r3
 80132f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80132f4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80132f8:	4298      	cmp	r0, r3
 80132fa:	d21d      	bcs.n	8013338 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80132fc:	eb00 080c 	add.w	r8, r0, ip
 8013300:	4540      	cmp	r0, r8
 8013302:	d20f      	bcs.n	8013324 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8013304:	f854 1b04 	ldr.w	r1, [r4], #4
 8013308:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801330c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8013310:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013314:	ea42 0209 	orr.w	r2, r2, r9
 8013318:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801331c:	430a      	orrs	r2, r1
 801331e:	f820 2b02 	strh.w	r2, [r0], #2
 8013322:	e7ed      	b.n	8013300 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8013324:	8832      	ldrh	r2, [r6, #0]
 8013326:	1bd2      	subs	r2, r2, r7
 8013328:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801332c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013330:	1bd2      	subs	r2, r2, r7
 8013332:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8013336:	e7df      	b.n	80132f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8013338:	6828      	ldr	r0, [r5, #0]
 801333a:	6803      	ldr	r3, [r0, #0]
 801333c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801333e:	4798      	blx	r3
 8013340:	b005      	add	sp, #20
 8013342:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013346:	bf00      	nop
 8013348:	20017750 	.word	0x20017750
 801334c:	2001774a 	.word	0x2001774a
 8013350:	fffff800 	.word	0xfffff800

08013354 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8013354:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013358:	460e      	mov	r6, r1
 801335a:	b08e      	sub	sp, #56	; 0x38
 801335c:	4604      	mov	r4, r0
 801335e:	6808      	ldr	r0, [r1, #0]
 8013360:	6849      	ldr	r1, [r1, #4]
 8013362:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801353c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8013366:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8013540 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801336a:	461d      	mov	r5, r3
 801336c:	ab0a      	add	r3, sp, #40	; 0x28
 801336e:	c303      	stmia	r3!, {r0, r1}
 8013370:	6810      	ldr	r0, [r2, #0]
 8013372:	6851      	ldr	r1, [r2, #4]
 8013374:	ab0c      	add	r3, sp, #48	; 0x30
 8013376:	c303      	stmia	r3!, {r0, r1}
 8013378:	a80a      	add	r0, sp, #40	; 0x28
 801337a:	f7f9 fae3 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801337e:	4631      	mov	r1, r6
 8013380:	a80c      	add	r0, sp, #48	; 0x30
 8013382:	f7f9 fb07 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013386:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801338a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801338e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013392:	f8d8 0000 	ldr.w	r0, [r8]
 8013396:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801339a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801339e:	fb11 2103 	smlabb	r1, r1, r3, r2
 80133a2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80133a6:	440c      	add	r4, r1
 80133a8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80133ac:	440a      	add	r2, r1
 80133ae:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80133b2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80133b6:	4413      	add	r3, r2
 80133b8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80133bc:	6803      	ldr	r3, [r0, #0]
 80133be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80133c0:	4798      	blx	r3
 80133c2:	2dff      	cmp	r5, #255	; 0xff
 80133c4:	d124      	bne.n	8013410 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80133c6:	f010 0f01 	tst.w	r0, #1
 80133ca:	f8d8 0000 	ldr.w	r0, [r8]
 80133ce:	d022      	beq.n	8013416 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80133d0:	2100      	movs	r1, #0
 80133d2:	f8d0 c000 	ldr.w	ip, [r0]
 80133d6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80133da:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80133de:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80133e2:	f04f 0e01 	mov.w	lr, #1
 80133e6:	f8cd e018 	str.w	lr, [sp, #24]
 80133ea:	f8b9 e000 	ldrh.w	lr, [r9]
 80133ee:	9503      	str	r5, [sp, #12]
 80133f0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80133f4:	b2b6      	uxth	r6, r6
 80133f6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80133fa:	9102      	str	r1, [sp, #8]
 80133fc:	b2bf      	uxth	r7, r7
 80133fe:	9601      	str	r6, [sp, #4]
 8013400:	9700      	str	r7, [sp, #0]
 8013402:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8013406:	4621      	mov	r1, r4
 8013408:	47a8      	blx	r5
 801340a:	b00e      	add	sp, #56	; 0x38
 801340c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013410:	f010 0f04 	tst.w	r0, #4
 8013414:	e7d9      	b.n	80133ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8013416:	6803      	ldr	r3, [r0, #0]
 8013418:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801341a:	4798      	blx	r3
 801341c:	f8b9 3000 	ldrh.w	r3, [r9]
 8013420:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8013424:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8013428:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801342c:	fb03 1202 	mla	r2, r3, r2, r1
 8013430:	ebac 0c07 	sub.w	ip, ip, r7
 8013434:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013438:	435e      	muls	r6, r3
 801343a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801343e:	2dff      	cmp	r5, #255	; 0xff
 8013440:	eba3 0707 	sub.w	r7, r3, r7
 8013444:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013448:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801344c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8013450:	d049      	beq.n	80134e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8013452:	43eb      	mvns	r3, r5
 8013454:	fa1f f985 	uxth.w	r9, r5
 8013458:	b2db      	uxtb	r3, r3
 801345a:	42b0      	cmp	r0, r6
 801345c:	d266      	bcs.n	801352c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801345e:	eb00 0a0e 	add.w	sl, r0, lr
 8013462:	4550      	cmp	r0, sl
 8013464:	4621      	mov	r1, r4
 8013466:	f104 0403 	add.w	r4, r4, #3
 801346a:	d25b      	bcs.n	8013524 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801346c:	8802      	ldrh	r2, [r0, #0]
 801346e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8013472:	ea4f 2822 	mov.w	r8, r2, asr #8
 8013476:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801347a:	fb11 f109 	smulbb	r1, r1, r9
 801347e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8013482:	10d5      	asrs	r5, r2, #3
 8013484:	fb08 1803 	mla	r8, r8, r3, r1
 8013488:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801348c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013490:	fb11 f109 	smulbb	r1, r1, r9
 8013494:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013498:	fb05 1503 	mla	r5, r5, r3, r1
 801349c:	00d2      	lsls	r2, r2, #3
 801349e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80134a2:	b2d2      	uxtb	r2, r2
 80134a4:	fb11 f109 	smulbb	r1, r1, r9
 80134a8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80134ac:	fa1f f888 	uxth.w	r8, r8
 80134b0:	fb02 1203 	mla	r2, r2, r3, r1
 80134b4:	b292      	uxth	r2, r2
 80134b6:	f108 0101 	add.w	r1, r8, #1
 80134ba:	b2ad      	uxth	r5, r5
 80134bc:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80134c0:	1c51      	adds	r1, r2, #1
 80134c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80134c6:	1c69      	adds	r1, r5, #1
 80134c8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80134cc:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80134d0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80134d4:	096d      	lsrs	r5, r5, #5
 80134d6:	ea42 0208 	orr.w	r2, r2, r8
 80134da:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80134de:	432a      	orrs	r2, r5
 80134e0:	f820 2b02 	strh.w	r2, [r0], #2
 80134e4:	e7bd      	b.n	8013462 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80134e6:	4a14      	ldr	r2, [pc, #80]	; (8013538 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80134e8:	42b0      	cmp	r0, r6
 80134ea:	d21f      	bcs.n	801352c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80134ec:	eb00 050e 	add.w	r5, r0, lr
 80134f0:	42a8      	cmp	r0, r5
 80134f2:	4621      	mov	r1, r4
 80134f4:	f104 0403 	add.w	r4, r4, #3
 80134f8:	d210      	bcs.n	801351c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80134fa:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80134fe:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8013502:	00db      	lsls	r3, r3, #3
 8013504:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8013508:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801350c:	430b      	orrs	r3, r1
 801350e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8013512:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8013516:	f820 3b02 	strh.w	r3, [r0], #2
 801351a:	e7e9      	b.n	80134f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801351c:	4438      	add	r0, r7
 801351e:	eb01 040c 	add.w	r4, r1, ip
 8013522:	e7e1      	b.n	80134e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8013524:	4438      	add	r0, r7
 8013526:	eb01 040c 	add.w	r4, r1, ip
 801352a:	e796      	b.n	801345a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801352c:	4b03      	ldr	r3, [pc, #12]	; (801353c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801352e:	6818      	ldr	r0, [r3, #0]
 8013530:	6803      	ldr	r3, [r0, #0]
 8013532:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013534:	4798      	blx	r3
 8013536:	e768      	b.n	801340a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8013538:	fffff800 	.word	0xfffff800
 801353c:	20017750 	.word	0x20017750
 8013540:	2001774a 	.word	0x2001774a

08013544 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8013544:	b4f0      	push	{r4, r5, r6, r7}
 8013546:	4616      	mov	r6, r2
 8013548:	2e01      	cmp	r6, #1
 801354a:	461c      	mov	r4, r3
 801354c:	460d      	mov	r5, r1
 801354e:	9a04      	ldr	r2, [sp, #16]
 8013550:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013554:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8013558:	d012      	beq.n	8013580 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801355a:	d303      	bcc.n	8013564 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801355c:	2e02      	cmp	r6, #2
 801355e:	d00a      	beq.n	8013576 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8013560:	bcf0      	pop	{r4, r5, r6, r7}
 8013562:	4770      	bx	lr
 8013564:	6805      	ldr	r5, [r0, #0]
 8013566:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801356a:	68ed      	ldr	r5, [r5, #12]
 801356c:	4613      	mov	r3, r2
 801356e:	46ac      	mov	ip, r5
 8013570:	4622      	mov	r2, r4
 8013572:	bcf0      	pop	{r4, r5, r6, r7}
 8013574:	4760      	bx	ip
 8013576:	4621      	mov	r1, r4
 8013578:	4628      	mov	r0, r5
 801357a:	bcf0      	pop	{r4, r5, r6, r7}
 801357c:	f7ff bd94 	b.w	80130a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013580:	4621      	mov	r1, r4
 8013582:	4628      	mov	r0, r5
 8013584:	bcf0      	pop	{r4, r5, r6, r7}
 8013586:	f7ff bee5 	b.w	8013354 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801358c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801358c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013590:	4681      	mov	r9, r0
 8013592:	b093      	sub	sp, #76	; 0x4c
 8013594:	6810      	ldr	r0, [r2, #0]
 8013596:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801359a:	4f6d      	ldr	r7, [pc, #436]	; (8013750 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801359c:	4688      	mov	r8, r1
 801359e:	6851      	ldr	r1, [r2, #4]
 80135a0:	ac0e      	add	r4, sp, #56	; 0x38
 80135a2:	c403      	stmia	r4!, {r0, r1}
 80135a4:	6818      	ldr	r0, [r3, #0]
 80135a6:	6859      	ldr	r1, [r3, #4]
 80135a8:	ac10      	add	r4, sp, #64	; 0x40
 80135aa:	4616      	mov	r6, r2
 80135ac:	c403      	stmia	r4!, {r0, r1}
 80135ae:	a80e      	add	r0, sp, #56	; 0x38
 80135b0:	f7f9 f9c8 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80135b4:	4631      	mov	r1, r6
 80135b6:	a810      	add	r0, sp, #64	; 0x40
 80135b8:	f7f9 f9ec 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80135bc:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80135c0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80135c4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80135c8:	4e62      	ldr	r6, [pc, #392]	; (8013754 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80135ca:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80135ce:	6830      	ldr	r0, [r6, #0]
 80135d0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80135d4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80135d8:	4489      	add	r9, r1
 80135da:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80135de:	440a      	add	r2, r1
 80135e0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80135e4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80135e8:	4413      	add	r3, r2
 80135ea:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80135ee:	6803      	ldr	r3, [r0, #0]
 80135f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80135f2:	4798      	blx	r3
 80135f4:	f010 0f80 	tst.w	r0, #128	; 0x80
 80135f8:	6830      	ldr	r0, [r6, #0]
 80135fa:	d01d      	beq.n	8013638 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80135fc:	2200      	movs	r2, #0
 80135fe:	6801      	ldr	r1, [r0, #0]
 8013600:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013604:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8013608:	220b      	movs	r2, #11
 801360a:	9207      	str	r2, [sp, #28]
 801360c:	883a      	ldrh	r2, [r7, #0]
 801360e:	9206      	str	r2, [sp, #24]
 8013610:	2201      	movs	r2, #1
 8013612:	e9cd a204 	strd	sl, r2, [sp, #16]
 8013616:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801361a:	9203      	str	r2, [sp, #12]
 801361c:	b2a4      	uxth	r4, r4
 801361e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013622:	9200      	str	r2, [sp, #0]
 8013624:	b2ad      	uxth	r5, r5
 8013626:	9502      	str	r5, [sp, #8]
 8013628:	9401      	str	r4, [sp, #4]
 801362a:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801362c:	4642      	mov	r2, r8
 801362e:	4649      	mov	r1, r9
 8013630:	47a0      	blx	r4
 8013632:	b013      	add	sp, #76	; 0x4c
 8013634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013638:	6803      	ldr	r3, [r0, #0]
 801363a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801363c:	4798      	blx	r3
 801363e:	883b      	ldrh	r3, [r7, #0]
 8013640:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8013644:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8013648:	fb03 1202 	mla	r2, r3, r2, r1
 801364c:	435d      	muls	r5, r3
 801364e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013652:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8013656:	920c      	str	r2, [sp, #48]	; 0x30
 8013658:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801365c:	1b12      	subs	r2, r2, r4
 801365e:	920d      	str	r2, [sp, #52]	; 0x34
 8013660:	0062      	lsls	r2, r4, #1
 8013662:	1b1c      	subs	r4, r3, r4
 8013664:	0063      	lsls	r3, r4, #1
 8013666:	920a      	str	r2, [sp, #40]	; 0x28
 8013668:	930b      	str	r3, [sp, #44]	; 0x2c
 801366a:	f04f 0e04 	mov.w	lr, #4
 801366e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013670:	4298      	cmp	r0, r3
 8013672:	d266      	bcs.n	8013742 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8013674:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013676:	eb00 0b03 	add.w	fp, r0, r3
 801367a:	4558      	cmp	r0, fp
 801367c:	d25c      	bcs.n	8013738 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801367e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8013682:	fb1e e303 	smlabb	r3, lr, r3, lr
 8013686:	f858 2003 	ldr.w	r2, [r8, r3]
 801368a:	0e11      	lsrs	r1, r2, #24
 801368c:	d012      	beq.n	80136b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801368e:	29ff      	cmp	r1, #255	; 0xff
 8013690:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8013694:	d110      	bne.n	80136b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8013696:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801369a:	d10d      	bne.n	80136b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801369c:	0953      	lsrs	r3, r2, #5
 801369e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80136a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80136a6:	f027 0707 	bic.w	r7, r7, #7
 80136aa:	431f      	orrs	r7, r3
 80136ac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80136b0:	433a      	orrs	r2, r7
 80136b2:	8002      	strh	r2, [r0, #0]
 80136b4:	3002      	adds	r0, #2
 80136b6:	e7e0      	b.n	801367a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80136b8:	fb0a f101 	mul.w	r1, sl, r1
 80136bc:	8806      	ldrh	r6, [r0, #0]
 80136be:	1c4b      	adds	r3, r1, #1
 80136c0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80136c4:	1235      	asrs	r5, r6, #8
 80136c6:	10f4      	asrs	r4, r6, #3
 80136c8:	121b      	asrs	r3, r3, #8
 80136ca:	00f6      	lsls	r6, r6, #3
 80136cc:	b299      	uxth	r1, r3
 80136ce:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80136d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80136d6:	b2f6      	uxtb	r6, r6
 80136d8:	43db      	mvns	r3, r3
 80136da:	b2d2      	uxtb	r2, r2
 80136dc:	b2db      	uxtb	r3, r3
 80136de:	fb1c fc01 	smulbb	ip, ip, r1
 80136e2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80136e6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80136ea:	fb12 f201 	smulbb	r2, r2, r1
 80136ee:	fb05 c503 	mla	r5, r5, r3, ip
 80136f2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80136f6:	b2ff      	uxtb	r7, r7
 80136f8:	fb06 2203 	mla	r2, r6, r3, r2
 80136fc:	b2ad      	uxth	r5, r5
 80136fe:	fb17 f701 	smulbb	r7, r7, r1
 8013702:	b292      	uxth	r2, r2
 8013704:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8013708:	fb04 7403 	mla	r4, r4, r3, r7
 801370c:	f105 0c01 	add.w	ip, r5, #1
 8013710:	1c57      	adds	r7, r2, #1
 8013712:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8013716:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801371a:	b2a4      	uxth	r4, r4
 801371c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013720:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8013724:	433d      	orrs	r5, r7
 8013726:	1c67      	adds	r7, r4, #1
 8013728:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801372c:	0964      	lsrs	r4, r4, #5
 801372e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8013732:	4325      	orrs	r5, r4
 8013734:	8005      	strh	r5, [r0, #0]
 8013736:	e7bd      	b.n	80136b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8013738:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801373a:	4418      	add	r0, r3
 801373c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801373e:	4499      	add	r9, r3
 8013740:	e795      	b.n	801366e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8013742:	4b04      	ldr	r3, [pc, #16]	; (8013754 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8013744:	6818      	ldr	r0, [r3, #0]
 8013746:	6803      	ldr	r3, [r0, #0]
 8013748:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801374a:	4798      	blx	r3
 801374c:	e771      	b.n	8013632 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801374e:	bf00      	nop
 8013750:	2001774a 	.word	0x2001774a
 8013754:	20017750 	.word	0x20017750

08013758 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8013758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801375c:	b087      	sub	sp, #28
 801375e:	4680      	mov	r8, r0
 8013760:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8013764:	460d      	mov	r5, r1
 8013766:	4614      	mov	r4, r2
 8013768:	2e00      	cmp	r6, #0
 801376a:	f000 80b9 	beq.w	80138e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801376e:	6810      	ldr	r0, [r2, #0]
 8013770:	6851      	ldr	r1, [r2, #4]
 8013772:	af02      	add	r7, sp, #8
 8013774:	c703      	stmia	r7!, {r0, r1}
 8013776:	6818      	ldr	r0, [r3, #0]
 8013778:	6859      	ldr	r1, [r3, #4]
 801377a:	af04      	add	r7, sp, #16
 801377c:	c703      	stmia	r7!, {r0, r1}
 801377e:	a802      	add	r0, sp, #8
 8013780:	f7f9 f8e0 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013784:	4621      	mov	r1, r4
 8013786:	a804      	add	r0, sp, #16
 8013788:	f7f9 f904 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801378c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013790:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013794:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8013798:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801379c:	fb14 2103 	smlabb	r1, r4, r3, r2
 80137a0:	eb08 0401 	add.w	r4, r8, r1
 80137a4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80137a8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80137ac:	440a      	add	r2, r1
 80137ae:	f8ad 2010 	strh.w	r2, [sp, #16]
 80137b2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80137b6:	4413      	add	r3, r2
 80137b8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80137bc:	4b4a      	ldr	r3, [pc, #296]	; (80138e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80137be:	6818      	ldr	r0, [r3, #0]
 80137c0:	6803      	ldr	r3, [r0, #0]
 80137c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80137c4:	4798      	blx	r3
 80137c6:	4b49      	ldr	r3, [pc, #292]	; (80138ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80137c8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80137cc:	881a      	ldrh	r2, [r3, #0]
 80137ce:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80137d2:	2eff      	cmp	r6, #255	; 0xff
 80137d4:	fb02 c101 	mla	r1, r2, r1, ip
 80137d8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80137dc:	fb02 f207 	mul.w	r2, r2, r7
 80137e0:	f105 0104 	add.w	r1, r5, #4
 80137e4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80137e8:	461d      	mov	r5, r3
 80137ea:	d05a      	beq.n	80138a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80137ec:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80137f0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80137f4:	b2b6      	uxth	r6, r6
 80137f6:	fa1f fe8e 	uxth.w	lr, lr
 80137fa:	9301      	str	r3, [sp, #4]
 80137fc:	4282      	cmp	r2, r0
 80137fe:	d96a      	bls.n	80138d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8013800:	eb00 0b0a 	add.w	fp, r0, sl
 8013804:	4583      	cmp	fp, r0
 8013806:	d940      	bls.n	801388a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8013808:	f814 3b01 	ldrb.w	r3, [r4], #1
 801380c:	8805      	ldrh	r5, [r0, #0]
 801380e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8013812:	122f      	asrs	r7, r5, #8
 8013814:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013818:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801381c:	fb17 f70e 	smulbb	r7, r7, lr
 8013820:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013824:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013828:	00ed      	lsls	r5, r5, #3
 801382a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801382e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013832:	10df      	asrs	r7, r3, #3
 8013834:	b2ed      	uxtb	r5, r5
 8013836:	00db      	lsls	r3, r3, #3
 8013838:	fa1f fc8c 	uxth.w	ip, ip
 801383c:	fb19 f90e 	smulbb	r9, r9, lr
 8013840:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013844:	b2db      	uxtb	r3, r3
 8013846:	fb15 f50e 	smulbb	r5, r5, lr
 801384a:	fb07 9706 	mla	r7, r7, r6, r9
 801384e:	fb03 5306 	mla	r3, r3, r6, r5
 8013852:	f10c 0901 	add.w	r9, ip, #1
 8013856:	b29b      	uxth	r3, r3
 8013858:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801385c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013860:	f103 0c01 	add.w	ip, r3, #1
 8013864:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013868:	b2bf      	uxth	r7, r7
 801386a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801386e:	ea4c 0c09 	orr.w	ip, ip, r9
 8013872:	f107 0901 	add.w	r9, r7, #1
 8013876:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801387a:	097f      	lsrs	r7, r7, #5
 801387c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8013880:	ea4c 0c07 	orr.w	ip, ip, r7
 8013884:	f820 cb02 	strh.w	ip, [r0], #2
 8013888:	e7bc      	b.n	8013804 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801388a:	9b01      	ldr	r3, [sp, #4]
 801388c:	881b      	ldrh	r3, [r3, #0]
 801388e:	eba3 0308 	sub.w	r3, r3, r8
 8013892:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013896:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801389a:	eba3 0308 	sub.w	r3, r3, r8
 801389e:	441c      	add	r4, r3
 80138a0:	e7ac      	b.n	80137fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80138a2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80138a6:	4282      	cmp	r2, r0
 80138a8:	d915      	bls.n	80138d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80138aa:	eb00 060a 	add.w	r6, r0, sl
 80138ae:	4286      	cmp	r6, r0
 80138b0:	d906      	bls.n	80138c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80138b2:	f814 3b01 	ldrb.w	r3, [r4], #1
 80138b6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80138ba:	f820 3b02 	strh.w	r3, [r0], #2
 80138be:	e7f6      	b.n	80138ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80138c0:	882b      	ldrh	r3, [r5, #0]
 80138c2:	eba3 0308 	sub.w	r3, r3, r8
 80138c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80138ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80138ce:	eba3 0308 	sub.w	r3, r3, r8
 80138d2:	441c      	add	r4, r3
 80138d4:	e7e7      	b.n	80138a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80138d6:	4b04      	ldr	r3, [pc, #16]	; (80138e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80138d8:	6818      	ldr	r0, [r3, #0]
 80138da:	6803      	ldr	r3, [r0, #0]
 80138dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138de:	4798      	blx	r3
 80138e0:	b007      	add	sp, #28
 80138e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138e6:	bf00      	nop
 80138e8:	20017750 	.word	0x20017750
 80138ec:	2001774a 	.word	0x2001774a

080138f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80138f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138f4:	b091      	sub	sp, #68	; 0x44
 80138f6:	4680      	mov	r8, r0
 80138f8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80138fc:	460f      	mov	r7, r1
 80138fe:	4614      	mov	r4, r2
 8013900:	2d00      	cmp	r5, #0
 8013902:	d051      	beq.n	80139a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8013904:	6810      	ldr	r0, [r2, #0]
 8013906:	6851      	ldr	r1, [r2, #4]
 8013908:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8013b0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801390c:	ae0c      	add	r6, sp, #48	; 0x30
 801390e:	c603      	stmia	r6!, {r0, r1}
 8013910:	6818      	ldr	r0, [r3, #0]
 8013912:	6859      	ldr	r1, [r3, #4]
 8013914:	ae0e      	add	r6, sp, #56	; 0x38
 8013916:	c603      	stmia	r6!, {r0, r1}
 8013918:	a80c      	add	r0, sp, #48	; 0x30
 801391a:	f7f9 f813 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801391e:	4621      	mov	r1, r4
 8013920:	a80e      	add	r0, sp, #56	; 0x38
 8013922:	f7f9 f837 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013926:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801392a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801392e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013932:	f8d9 0000 	ldr.w	r0, [r9]
 8013936:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801393a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801393e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013942:	eb08 0401 	add.w	r4, r8, r1
 8013946:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801394a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8013b10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801394e:	440a      	add	r2, r1
 8013950:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8013954:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8013958:	4413      	add	r3, r2
 801395a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801395e:	6803      	ldr	r3, [r0, #0]
 8013960:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013962:	4798      	blx	r3
 8013964:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013968:	f8d9 0000 	ldr.w	r0, [r9]
 801396c:	d01f      	beq.n	80139ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801396e:	2200      	movs	r2, #0
 8013970:	6801      	ldr	r1, [r0, #0]
 8013972:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013976:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801397a:	220b      	movs	r2, #11
 801397c:	9207      	str	r2, [sp, #28]
 801397e:	f8b8 2000 	ldrh.w	r2, [r8]
 8013982:	9206      	str	r2, [sp, #24]
 8013984:	2201      	movs	r2, #1
 8013986:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801398a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801398e:	9203      	str	r2, [sp, #12]
 8013990:	fa1f f28a 	uxth.w	r2, sl
 8013994:	9202      	str	r2, [sp, #8]
 8013996:	b2b6      	uxth	r6, r6
 8013998:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801399c:	9200      	str	r2, [sp, #0]
 801399e:	9601      	str	r6, [sp, #4]
 80139a0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80139a2:	463a      	mov	r2, r7
 80139a4:	4621      	mov	r1, r4
 80139a6:	47a8      	blx	r5
 80139a8:	b011      	add	sp, #68	; 0x44
 80139aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80139ae:	6803      	ldr	r3, [r0, #0]
 80139b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80139b2:	4798      	blx	r3
 80139b4:	f8b8 2000 	ldrh.w	r2, [r8]
 80139b8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80139bc:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80139c0:	2dff      	cmp	r5, #255	; 0xff
 80139c2:	fb02 1303 	mla	r3, r2, r3, r1
 80139c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80139ca:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80139ce:	fb0a fa02 	mul.w	sl, sl, r2
 80139d2:	d062      	beq.n	8013a9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80139d4:	ea6f 0c05 	mvn.w	ip, r5
 80139d8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80139dc:	930a      	str	r3, [sp, #40]	; 0x28
 80139de:	b2ad      	uxth	r5, r5
 80139e0:	fa5f fc8c 	uxtb.w	ip, ip
 80139e4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80139e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80139ea:	4298      	cmp	r0, r3
 80139ec:	f080 8085 	bcs.w	8013afa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80139f0:	eb00 0b09 	add.w	fp, r0, r9
 80139f4:	4558      	cmp	r0, fp
 80139f6:	d246      	bcs.n	8013a86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80139f8:	f814 eb01 	ldrb.w	lr, [r4], #1
 80139fc:	2303      	movs	r3, #3
 80139fe:	2204      	movs	r2, #4
 8013a00:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8013a04:	eb07 0a0e 	add.w	sl, r7, lr
 8013a08:	8803      	ldrh	r3, [r0, #0]
 8013a0a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8013a0e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8013a12:	1219      	asrs	r1, r3, #8
 8013a14:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013a18:	fb18 f805 	smulbb	r8, r8, r5
 8013a1c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8013a20:	10da      	asrs	r2, r3, #3
 8013a22:	fb01 810c 	mla	r1, r1, ip, r8
 8013a26:	00db      	lsls	r3, r3, #3
 8013a28:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8013a2c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013a30:	b2db      	uxtb	r3, r3
 8013a32:	fb18 f805 	smulbb	r8, r8, r5
 8013a36:	fb1e fe05 	smulbb	lr, lr, r5
 8013a3a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8013a3e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8013a42:	b289      	uxth	r1, r1
 8013a44:	fb02 820c 	mla	r2, r2, ip, r8
 8013a48:	fb03 e30c 	mla	r3, r3, ip, lr
 8013a4c:	b292      	uxth	r2, r2
 8013a4e:	b29b      	uxth	r3, r3
 8013a50:	f101 0801 	add.w	r8, r1, #1
 8013a54:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013a58:	f103 0e01 	add.w	lr, r3, #1
 8013a5c:	f102 0801 	add.w	r8, r2, #1
 8013a60:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8013a64:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8013a68:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8013a6c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013a70:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013a74:	ea4e 0101 	orr.w	r1, lr, r1
 8013a78:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013a7c:	ea41 0108 	orr.w	r1, r1, r8
 8013a80:	f820 1b02 	strh.w	r1, [r0], #2
 8013a84:	e7b6      	b.n	80139f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8013a86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a88:	881b      	ldrh	r3, [r3, #0]
 8013a8a:	1b9b      	subs	r3, r3, r6
 8013a8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013a90:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013a94:	1b9b      	subs	r3, r3, r6
 8013a96:	441c      	add	r4, r3
 8013a98:	e7a6      	b.n	80139e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8013a9a:	491b      	ldr	r1, [pc, #108]	; (8013b08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8013a9c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8013aa0:	2203      	movs	r2, #3
 8013aa2:	2504      	movs	r5, #4
 8013aa4:	4550      	cmp	r0, sl
 8013aa6:	d228      	bcs.n	8013afa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8013aa8:	eb00 0c09 	add.w	ip, r0, r9
 8013aac:	4560      	cmp	r0, ip
 8013aae:	4623      	mov	r3, r4
 8013ab0:	d219      	bcs.n	8013ae6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8013ab2:	f893 e000 	ldrb.w	lr, [r3]
 8013ab6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8013aba:	eb07 0b0e 	add.w	fp, r7, lr
 8013abe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8013ac2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8013ac6:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013aca:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8013ace:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8013ad2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013ad6:	ea43 030b 	orr.w	r3, r3, fp
 8013ada:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8013ade:	3401      	adds	r4, #1
 8013ae0:	f820 3b02 	strh.w	r3, [r0], #2
 8013ae4:	e7e2      	b.n	8013aac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8013ae6:	f8b8 3000 	ldrh.w	r3, [r8]
 8013aea:	1b9b      	subs	r3, r3, r6
 8013aec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013af0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013af4:	1b9b      	subs	r3, r3, r6
 8013af6:	441c      	add	r4, r3
 8013af8:	e7d4      	b.n	8013aa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8013afa:	4b04      	ldr	r3, [pc, #16]	; (8013b0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8013afc:	6818      	ldr	r0, [r3, #0]
 8013afe:	6803      	ldr	r3, [r0, #0]
 8013b00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b02:	4798      	blx	r3
 8013b04:	e750      	b.n	80139a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8013b06:	bf00      	nop
 8013b08:	fffff800 	.word	0xfffff800
 8013b0c:	20017750 	.word	0x20017750
 8013b10:	2001774a 	.word	0x2001774a

08013b14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8013b14:	b430      	push	{r4, r5}
 8013b16:	780d      	ldrb	r5, [r1, #0]
 8013b18:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013b1c:	2d01      	cmp	r5, #1
 8013b1e:	d00a      	beq.n	8013b36 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8013b20:	d305      	bcc.n	8013b2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8013b22:	2d02      	cmp	r5, #2
 8013b24:	d10b      	bne.n	8013b3e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8013b26:	9402      	str	r4, [sp, #8]
 8013b28:	bc30      	pop	{r4, r5}
 8013b2a:	f7ff be15 	b.w	8013758 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8013b2e:	9402      	str	r4, [sp, #8]
 8013b30:	bc30      	pop	{r4, r5}
 8013b32:	f7ff bd2b 	b.w	801358c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8013b36:	9402      	str	r4, [sp, #8]
 8013b38:	bc30      	pop	{r4, r5}
 8013b3a:	f7ff bed9 	b.w	80138f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8013b3e:	bc30      	pop	{r4, r5}
 8013b40:	4770      	bx	lr
	...

08013b44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b48:	4604      	mov	r4, r0
 8013b4a:	b087      	sub	sp, #28
 8013b4c:	6810      	ldr	r0, [r2, #0]
 8013b4e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8013b52:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013d8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8013b56:	460e      	mov	r6, r1
 8013b58:	6851      	ldr	r1, [r2, #4]
 8013b5a:	ad02      	add	r5, sp, #8
 8013b5c:	c503      	stmia	r5!, {r0, r1}
 8013b5e:	6818      	ldr	r0, [r3, #0]
 8013b60:	6859      	ldr	r1, [r3, #4]
 8013b62:	ad04      	add	r5, sp, #16
 8013b64:	4617      	mov	r7, r2
 8013b66:	c503      	stmia	r5!, {r0, r1}
 8013b68:	a802      	add	r0, sp, #8
 8013b6a:	f7f8 feeb 	bl	800c944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013b6e:	4639      	mov	r1, r7
 8013b70:	a804      	add	r0, sp, #16
 8013b72:	f7f8 ff0f 	bl	800c994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013b76:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013b7a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013b7e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8013b82:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8013b86:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8013b8a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013b8e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8013b92:	440e      	add	r6, r1
 8013b94:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013b98:	440a      	add	r2, r1
 8013b9a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013b9e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013ba2:	4413      	add	r3, r2
 8013ba4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013ba8:	4b77      	ldr	r3, [pc, #476]	; (8013d88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013baa:	6818      	ldr	r0, [r3, #0]
 8013bac:	6803      	ldr	r3, [r0, #0]
 8013bae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013bb0:	4798      	blx	r3
 8013bb2:	f8b9 b000 	ldrh.w	fp, [r9]
 8013bb6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013bba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013bbe:	fb0b 2303 	mla	r3, fp, r3, r2
 8013bc2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013bc6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013bca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8013bce:	fb05 f50b 	mul.w	r5, r5, fp
 8013bd2:	9300      	str	r3, [sp, #0]
 8013bd4:	d069      	beq.n	8013caa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8013bd6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8013bda:	4558      	cmp	r0, fp
 8013bdc:	f080 80cc 	bcs.w	8013d78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013be0:	9b00      	ldr	r3, [sp, #0]
 8013be2:	18c3      	adds	r3, r0, r3
 8013be4:	9301      	str	r3, [sp, #4]
 8013be6:	4631      	mov	r1, r6
 8013be8:	9b01      	ldr	r3, [sp, #4]
 8013bea:	4298      	cmp	r0, r3
 8013bec:	d24f      	bcs.n	8013c8e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8013bee:	f811 2b01 	ldrb.w	r2, [r1], #1
 8013bf2:	2a00      	cmp	r2, #0
 8013bf4:	d048      	beq.n	8013c88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8013bf6:	fb0a f202 	mul.w	r2, sl, r2
 8013bfa:	1c53      	adds	r3, r2, #1
 8013bfc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013c00:	121b      	asrs	r3, r3, #8
 8013c02:	d041      	beq.n	8013c88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8013c04:	8802      	ldrh	r2, [r0, #0]
 8013c06:	f8b4 c000 	ldrh.w	ip, [r4]
 8013c0a:	b29e      	uxth	r6, r3
 8013c0c:	1215      	asrs	r5, r2, #8
 8013c0e:	43db      	mvns	r3, r3
 8013c10:	b2db      	uxtb	r3, r3
 8013c12:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013c16:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013c1a:	fb15 f503 	smulbb	r5, r5, r3
 8013c1e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8013c22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013c26:	00d2      	lsls	r2, r2, #3
 8013c28:	fb07 5706 	mla	r7, r7, r6, r5
 8013c2c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013c30:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013c34:	b2d2      	uxtb	r2, r2
 8013c36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013c3a:	b2bf      	uxth	r7, r7
 8013c3c:	fb1e fe03 	smulbb	lr, lr, r3
 8013c40:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013c44:	fa5f fc8c 	uxtb.w	ip, ip
 8013c48:	fb12 f203 	smulbb	r2, r2, r3
 8013c4c:	fb05 e506 	mla	r5, r5, r6, lr
 8013c50:	fb0c 2c06 	mla	ip, ip, r6, r2
 8013c54:	f107 0e01 	add.w	lr, r7, #1
 8013c58:	fa1f fc8c 	uxth.w	ip, ip
 8013c5c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8013c60:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8013c64:	f10c 0701 	add.w	r7, ip, #1
 8013c68:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8013c6c:	b2ad      	uxth	r5, r5
 8013c6e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013c72:	ea47 070e 	orr.w	r7, r7, lr
 8013c76:	f105 0e01 	add.w	lr, r5, #1
 8013c7a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8013c7e:	096d      	lsrs	r5, r5, #5
 8013c80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013c84:	432f      	orrs	r7, r5
 8013c86:	8007      	strh	r7, [r0, #0]
 8013c88:	3002      	adds	r0, #2
 8013c8a:	3402      	adds	r4, #2
 8013c8c:	e7ac      	b.n	8013be8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8013c8e:	f8b9 3000 	ldrh.w	r3, [r9]
 8013c92:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013c96:	eba3 0308 	sub.w	r3, r3, r8
 8013c9a:	eba6 0608 	sub.w	r6, r6, r8
 8013c9e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013ca2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013ca6:	440e      	add	r6, r1
 8013ca8:	e797      	b.n	8013bda <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8013caa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013cae:	42a8      	cmp	r0, r5
 8013cb0:	d262      	bcs.n	8013d78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013cb2:	9b00      	ldr	r3, [sp, #0]
 8013cb4:	4631      	mov	r1, r6
 8013cb6:	eb00 0b03 	add.w	fp, r0, r3
 8013cba:	4558      	cmp	r0, fp
 8013cbc:	d24e      	bcs.n	8013d5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8013cbe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013cc2:	b12b      	cbz	r3, 8013cd0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013cc4:	2bff      	cmp	r3, #255	; 0xff
 8013cc6:	f8b4 e000 	ldrh.w	lr, [r4]
 8013cca:	d104      	bne.n	8013cd6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8013ccc:	f8a0 e000 	strh.w	lr, [r0]
 8013cd0:	3002      	adds	r0, #2
 8013cd2:	3402      	adds	r4, #2
 8013cd4:	e7f1      	b.n	8013cba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8013cd6:	8802      	ldrh	r2, [r0, #0]
 8013cd8:	b29f      	uxth	r7, r3
 8013cda:	1216      	asrs	r6, r2, #8
 8013cdc:	43db      	mvns	r3, r3
 8013cde:	b2db      	uxtb	r3, r3
 8013ce0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013ce4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013ce8:	fb16 f603 	smulbb	r6, r6, r3
 8013cec:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8013cf0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013cf4:	00d2      	lsls	r2, r2, #3
 8013cf6:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013cfa:	b2d2      	uxtb	r2, r2
 8013cfc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013d00:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8013d04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013d08:	fb1a fa03 	smulbb	sl, sl, r3
 8013d0c:	fa1f fc8c 	uxth.w	ip, ip
 8013d10:	fb12 f303 	smulbb	r3, r2, r3
 8013d14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013d18:	fa5f fe8e 	uxtb.w	lr, lr
 8013d1c:	fb06 a607 	mla	r6, r6, r7, sl
 8013d20:	f10c 0201 	add.w	r2, ip, #1
 8013d24:	fb0e 3307 	mla	r3, lr, r7, r3
 8013d28:	b2b6      	uxth	r6, r6
 8013d2a:	b29b      	uxth	r3, r3
 8013d2c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013d30:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8013d34:	f106 0a01 	add.w	sl, r6, #1
 8013d38:	f103 0c01 	add.w	ip, r3, #1
 8013d3c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013d40:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013d44:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013d48:	0976      	lsrs	r6, r6, #5
 8013d4a:	ea4c 0c02 	orr.w	ip, ip, r2
 8013d4e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013d52:	ea4c 0c06 	orr.w	ip, ip, r6
 8013d56:	f8a0 c000 	strh.w	ip, [r0]
 8013d5a:	e7b9      	b.n	8013cd0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013d5c:	f8b9 3000 	ldrh.w	r3, [r9]
 8013d60:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013d64:	eba3 0308 	sub.w	r3, r3, r8
 8013d68:	eba6 0608 	sub.w	r6, r6, r8
 8013d6c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013d70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013d74:	440e      	add	r6, r1
 8013d76:	e79a      	b.n	8013cae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8013d78:	4b03      	ldr	r3, [pc, #12]	; (8013d88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013d7a:	6818      	ldr	r0, [r3, #0]
 8013d7c:	6803      	ldr	r3, [r0, #0]
 8013d7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d80:	4798      	blx	r3
 8013d82:	b007      	add	sp, #28
 8013d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d88:	20017750 	.word	0x20017750
 8013d8c:	2001774a 	.word	0x2001774a

08013d90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d94:	b089      	sub	sp, #36	; 0x24
 8013d96:	4682      	mov	sl, r0
 8013d98:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013d9c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013d9e:	460f      	mov	r7, r1
 8013da0:	4691      	mov	r9, r2
 8013da2:	4698      	mov	r8, r3
 8013da4:	2e00      	cmp	r6, #0
 8013da6:	d036      	beq.n	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013da8:	4608      	mov	r0, r1
 8013daa:	f7fc f863 	bl	800fe74 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013dae:	4605      	mov	r5, r0
 8013db0:	4638      	mov	r0, r7
 8013db2:	f7fc f893 	bl	800fedc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013db6:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013dba:	4638      	mov	r0, r7
 8013dbc:	f8ad 9008 	strh.w	r9, [sp, #8]
 8013dc0:	f8ad 500c 	strh.w	r5, [sp, #12]
 8013dc4:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013dc8:	f7fc f940 	bl	801004c <_ZNK8touchgfx6Bitmap7getDataEv>
 8013dcc:	4605      	mov	r5, r0
 8013dce:	4638      	mov	r0, r7
 8013dd0:	f7fc f96c 	bl	80100ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013dd4:	4681      	mov	r9, r0
 8013dd6:	4638      	mov	r0, r7
 8013dd8:	f7fc f9bc 	bl	8010154 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013ddc:	280b      	cmp	r0, #11
 8013dde:	d81a      	bhi.n	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013de0:	e8df f000 	tbb	[pc, r0]
 8013de4:	1906aebd 	.word	0x1906aebd
 8013de8:	19191919 	.word	0x19191919
 8013dec:	b5191919 	.word	0xb5191919
 8013df0:	4bb0      	ldr	r3, [pc, #704]	; (80140b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8013df2:	6818      	ldr	r0, [r3, #0]
 8013df4:	6803      	ldr	r3, [r0, #0]
 8013df6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013df8:	4798      	blx	r3
 8013dfa:	2eff      	cmp	r6, #255	; 0xff
 8013dfc:	d121      	bne.n	8013e42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8013dfe:	0683      	lsls	r3, r0, #26
 8013e00:	d41f      	bmi.n	8013e42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8013e02:	4638      	mov	r0, r7
 8013e04:	f7fc f8ea 	bl	800ffdc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013e08:	b940      	cbnz	r0, 8013e1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8013e0a:	4623      	mov	r3, r4
 8013e0c:	aa02      	add	r2, sp, #8
 8013e0e:	4629      	mov	r1, r5
 8013e10:	4650      	mov	r0, sl
 8013e12:	f7ff fa2f 	bl	8013274 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013e16:	b009      	add	sp, #36	; 0x24
 8013e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e1c:	f10d 0818 	add.w	r8, sp, #24
 8013e20:	4639      	mov	r1, r7
 8013e22:	4640      	mov	r0, r8
 8013e24:	f7fc f88e 	bl	800ff44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013e28:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013e2c:	af04      	add	r7, sp, #16
 8013e2e:	e887 0003 	stmia.w	r7, {r0, r1}
 8013e32:	4638      	mov	r0, r7
 8013e34:	4621      	mov	r1, r4
 8013e36:	f7f5 fce9 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 8013e3a:	4638      	mov	r0, r7
 8013e3c:	f7f5 fd29 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013e40:	b130      	cbz	r0, 8013e50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013e42:	4633      	mov	r3, r6
 8013e44:	4622      	mov	r2, r4
 8013e46:	a902      	add	r1, sp, #8
 8013e48:	4628      	mov	r0, r5
 8013e4a:	f7ff f92d 	bl	80130a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013e4e:	e7e2      	b.n	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013e50:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013e54:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013e58:	4293      	cmp	r3, r2
 8013e5a:	dd12      	ble.n	8013e82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8013e5c:	1a9b      	subs	r3, r3, r2
 8013e5e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013e62:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013e66:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013e6a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013e6e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013e72:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e76:	4642      	mov	r2, r8
 8013e78:	4633      	mov	r3, r6
 8013e7a:	a902      	add	r1, sp, #8
 8013e7c:	4628      	mov	r0, r5
 8013e7e:	f7ff f913 	bl	80130a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013e82:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013e86:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013e8a:	4293      	cmp	r3, r2
 8013e8c:	dd12      	ble.n	8013eb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8013e8e:	1a9b      	subs	r3, r3, r2
 8013e90:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013e94:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013e98:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013e9c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013ea0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013ea4:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013ea8:	23ff      	movs	r3, #255	; 0xff
 8013eaa:	4642      	mov	r2, r8
 8013eac:	a902      	add	r1, sp, #8
 8013eae:	4628      	mov	r0, r5
 8013eb0:	f7ff f8fa 	bl	80130a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013eb4:	463b      	mov	r3, r7
 8013eb6:	aa02      	add	r2, sp, #8
 8013eb8:	4629      	mov	r1, r5
 8013eba:	4650      	mov	r0, sl
 8013ebc:	f7ff f9da 	bl	8013274 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013ec0:	88a2      	ldrh	r2, [r4, #4]
 8013ec2:	8823      	ldrh	r3, [r4, #0]
 8013ec4:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013ec8:	4413      	add	r3, r2
 8013eca:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013ece:	440a      	add	r2, r1
 8013ed0:	b29b      	uxth	r3, r3
 8013ed2:	b292      	uxth	r2, r2
 8013ed4:	b211      	sxth	r1, r2
 8013ed6:	b218      	sxth	r0, r3
 8013ed8:	4288      	cmp	r0, r1
 8013eda:	dd12      	ble.n	8013f02 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8013edc:	1a9b      	subs	r3, r3, r2
 8013ede:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013ee2:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8013ee6:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013eea:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013eee:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013ef2:	23ff      	movs	r3, #255	; 0xff
 8013ef4:	4642      	mov	r2, r8
 8013ef6:	a902      	add	r1, sp, #8
 8013ef8:	4628      	mov	r0, r5
 8013efa:	f8ad 601a 	strh.w	r6, [sp, #26]
 8013efe:	f7ff f8d3 	bl	80130a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013f02:	88e2      	ldrh	r2, [r4, #6]
 8013f04:	8863      	ldrh	r3, [r4, #2]
 8013f06:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013f0a:	4413      	add	r3, r2
 8013f0c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013f10:	440a      	add	r2, r1
 8013f12:	b29b      	uxth	r3, r3
 8013f14:	b292      	uxth	r2, r2
 8013f16:	b211      	sxth	r1, r2
 8013f18:	b218      	sxth	r0, r3
 8013f1a:	4288      	cmp	r0, r1
 8013f1c:	f77f af7b 	ble.w	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013f20:	1a9b      	subs	r3, r3, r2
 8013f22:	f9b4 6000 	ldrsh.w	r6, [r4]
 8013f26:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013f2a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013f2e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013f32:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013f36:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013f3a:	23ff      	movs	r3, #255	; 0xff
 8013f3c:	4642      	mov	r2, r8
 8013f3e:	e782      	b.n	8013e46 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8013f40:	4633      	mov	r3, r6
 8013f42:	4622      	mov	r2, r4
 8013f44:	a902      	add	r1, sp, #8
 8013f46:	4628      	mov	r0, r5
 8013f48:	f7ff fa04 	bl	8013354 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013f4c:	e763      	b.n	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013f4e:	9600      	str	r6, [sp, #0]
 8013f50:	4623      	mov	r3, r4
 8013f52:	aa02      	add	r2, sp, #8
 8013f54:	4649      	mov	r1, r9
 8013f56:	4628      	mov	r0, r5
 8013f58:	f7ff fddc 	bl	8013b14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013f5c:	e75b      	b.n	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013f5e:	4638      	mov	r0, r7
 8013f60:	f7fc f83c 	bl	800ffdc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013f64:	b950      	cbnz	r0, 8013f7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8013f66:	e9cd 6000 	strd	r6, r0, [sp]
 8013f6a:	f8da 3000 	ldr.w	r3, [sl]
 8013f6e:	aa02      	add	r2, sp, #8
 8013f70:	68de      	ldr	r6, [r3, #12]
 8013f72:	4629      	mov	r1, r5
 8013f74:	4623      	mov	r3, r4
 8013f76:	4650      	mov	r0, sl
 8013f78:	47b0      	blx	r6
 8013f7a:	e74c      	b.n	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013f7c:	f10d 0818 	add.w	r8, sp, #24
 8013f80:	4639      	mov	r1, r7
 8013f82:	4640      	mov	r0, r8
 8013f84:	f7fb ffde 	bl	800ff44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013f88:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013f8c:	af04      	add	r7, sp, #16
 8013f8e:	e887 0003 	stmia.w	r7, {r0, r1}
 8013f92:	4638      	mov	r0, r7
 8013f94:	4621      	mov	r1, r4
 8013f96:	f7f5 fc39 	bl	800980c <_ZN8touchgfx4RectaNERKS0_>
 8013f9a:	4638      	mov	r0, r7
 8013f9c:	f7f5 fc79 	bl	8009892 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013fa0:	b138      	cbz	r0, 8013fb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8013fa2:	9600      	str	r6, [sp, #0]
 8013fa4:	4623      	mov	r3, r4
 8013fa6:	aa02      	add	r2, sp, #8
 8013fa8:	4649      	mov	r1, r9
 8013faa:	4628      	mov	r0, r5
 8013fac:	f7ff fdca 	bl	8013b44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013fb0:	e731      	b.n	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013fb2:	e9cd 6000 	strd	r6, r0, [sp]
 8013fb6:	f8da 3000 	ldr.w	r3, [sl]
 8013fba:	aa02      	add	r2, sp, #8
 8013fbc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013fc0:	4629      	mov	r1, r5
 8013fc2:	463b      	mov	r3, r7
 8013fc4:	4650      	mov	r0, sl
 8013fc6:	47d8      	blx	fp
 8013fc8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013fcc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013fd0:	4293      	cmp	r3, r2
 8013fd2:	dd13      	ble.n	8013ffc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8013fd4:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013fd8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013fdc:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013fe0:	1a9b      	subs	r3, r3, r2
 8013fe2:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013fe6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013fea:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013fee:	9600      	str	r6, [sp, #0]
 8013ff0:	4643      	mov	r3, r8
 8013ff2:	aa02      	add	r2, sp, #8
 8013ff4:	4649      	mov	r1, r9
 8013ff6:	4628      	mov	r0, r5
 8013ff8:	f7ff fda4 	bl	8013b44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013ffc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014000:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014004:	4293      	cmp	r3, r2
 8014006:	dd13      	ble.n	8014030 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8014008:	1a9b      	subs	r3, r3, r2
 801400a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801400e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014012:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014016:	f8ad 001a 	strh.w	r0, [sp, #26]
 801401a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801401e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014022:	9600      	str	r6, [sp, #0]
 8014024:	4643      	mov	r3, r8
 8014026:	aa02      	add	r2, sp, #8
 8014028:	4649      	mov	r1, r9
 801402a:	4628      	mov	r0, r5
 801402c:	f7ff fd8a 	bl	8013b44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014030:	88a2      	ldrh	r2, [r4, #4]
 8014032:	8823      	ldrh	r3, [r4, #0]
 8014034:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014038:	4413      	add	r3, r2
 801403a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801403e:	440a      	add	r2, r1
 8014040:	b29b      	uxth	r3, r3
 8014042:	b292      	uxth	r2, r2
 8014044:	b211      	sxth	r1, r2
 8014046:	b218      	sxth	r0, r3
 8014048:	4288      	cmp	r0, r1
 801404a:	dd13      	ble.n	8014074 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 801404c:	1a9b      	subs	r3, r3, r2
 801404e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014052:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8014056:	f8ad 1018 	strh.w	r1, [sp, #24]
 801405a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801405e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014062:	9600      	str	r6, [sp, #0]
 8014064:	4643      	mov	r3, r8
 8014066:	aa02      	add	r2, sp, #8
 8014068:	4649      	mov	r1, r9
 801406a:	4628      	mov	r0, r5
 801406c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014070:	f7ff fd68 	bl	8013b44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014074:	88e2      	ldrh	r2, [r4, #6]
 8014076:	8863      	ldrh	r3, [r4, #2]
 8014078:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801407c:	4413      	add	r3, r2
 801407e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014082:	440a      	add	r2, r1
 8014084:	b29b      	uxth	r3, r3
 8014086:	b292      	uxth	r2, r2
 8014088:	b211      	sxth	r1, r2
 801408a:	b218      	sxth	r0, r3
 801408c:	4288      	cmp	r0, r1
 801408e:	f77f aec2 	ble.w	8013e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8014092:	f9b4 7000 	ldrsh.w	r7, [r4]
 8014096:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801409a:	f8ad 7018 	strh.w	r7, [sp, #24]
 801409e:	1a9b      	subs	r3, r3, r2
 80140a0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80140a4:	f8ad 101a 	strh.w	r1, [sp, #26]
 80140a8:	f8ad 001c 	strh.w	r0, [sp, #28]
 80140ac:	9600      	str	r6, [sp, #0]
 80140ae:	4643      	mov	r3, r8
 80140b0:	e779      	b.n	8013fa6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 80140b2:	bf00      	nop
 80140b4:	20017750 	.word	0x20017750

080140b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80140b8:	b180      	cbz	r0, 80140dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80140ba:	2903      	cmp	r1, #3
 80140bc:	d81c      	bhi.n	80140f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80140be:	e8df f001 	tbb	[pc, r1]
 80140c2:	1d02      	.short	0x1d02
 80140c4:	1f08      	.short	0x1f08
 80140c6:	4b10      	ldr	r3, [pc, #64]	; (8014108 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80140c8:	8818      	ldrh	r0, [r3, #0]
 80140ca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80140ce:	4240      	negs	r0, r0
 80140d0:	4770      	bx	lr
 80140d2:	4b0d      	ldr	r3, [pc, #52]	; (8014108 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80140d4:	8818      	ldrh	r0, [r3, #0]
 80140d6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80140da:	4770      	bx	lr
 80140dc:	2903      	cmp	r1, #3
 80140de:	d80b      	bhi.n	80140f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80140e0:	a301      	add	r3, pc, #4	; (adr r3, 80140e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80140e2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80140e6:	bf00      	nop
 80140e8:	080140fd 	.word	0x080140fd
 80140ec:	080140d3 	.word	0x080140d3
 80140f0:	08014101 	.word	0x08014101
 80140f4:	080140c7 	.word	0x080140c7
 80140f8:	2000      	movs	r0, #0
 80140fa:	4770      	bx	lr
 80140fc:	2001      	movs	r0, #1
 80140fe:	4770      	bx	lr
 8014100:	f04f 30ff 	mov.w	r0, #4294967295
 8014104:	4770      	bx	lr
 8014106:	bf00      	nop
 8014108:	2001774a 	.word	0x2001774a

0801410c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801410c:	b180      	cbz	r0, 8014130 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801410e:	2903      	cmp	r1, #3
 8014110:	d81c      	bhi.n	801414c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8014112:	e8df f001 	tbb	[pc, r1]
 8014116:	021d      	.short	0x021d
 8014118:	071f      	.short	0x071f
 801411a:	4b10      	ldr	r3, [pc, #64]	; (801415c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801411c:	8818      	ldrh	r0, [r3, #0]
 801411e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014122:	4770      	bx	lr
 8014124:	4b0d      	ldr	r3, [pc, #52]	; (801415c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014126:	8818      	ldrh	r0, [r3, #0]
 8014128:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801412c:	4240      	negs	r0, r0
 801412e:	4770      	bx	lr
 8014130:	2903      	cmp	r1, #3
 8014132:	d80b      	bhi.n	801414c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8014134:	a301      	add	r3, pc, #4	; (adr r3, 801413c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8014136:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801413a:	bf00      	nop
 801413c:	0801411b 	.word	0x0801411b
 8014140:	08014155 	.word	0x08014155
 8014144:	08014125 	.word	0x08014125
 8014148:	08014151 	.word	0x08014151
 801414c:	2000      	movs	r0, #0
 801414e:	4770      	bx	lr
 8014150:	2001      	movs	r0, #1
 8014152:	4770      	bx	lr
 8014154:	f04f 30ff 	mov.w	r0, #4294967295
 8014158:	4770      	bx	lr
 801415a:	bf00      	nop
 801415c:	2001774a 	.word	0x2001774a

08014160 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8014160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014164:	b099      	sub	sp, #100	; 0x64
 8014166:	910b      	str	r1, [sp, #44]	; 0x2c
 8014168:	a914      	add	r1, sp, #80	; 0x50
 801416a:	e881 000c 	stmia.w	r1, {r2, r3}
 801416e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8014172:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8014176:	f891 900d 	ldrb.w	r9, [r1, #13]
 801417a:	9309      	str	r3, [sp, #36]	; 0x24
 801417c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8014180:	9310      	str	r3, [sp, #64]	; 0x40
 8014182:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8014186:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801418a:	930c      	str	r3, [sp, #48]	; 0x30
 801418c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8014190:	798f      	ldrb	r7, [r1, #6]
 8014192:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8014196:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801419a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801419e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80141a2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80141a6:	431f      	orrs	r7, r3
 80141a8:	f000 8195 	beq.w	80144d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80141ac:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80141b0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80141b4:	f891 9007 	ldrb.w	r9, [r1, #7]
 80141b8:	ea59 0903 	orrs.w	r9, r9, r3
 80141bc:	f000 818b 	beq.w	80144d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80141c0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80141c4:	b29b      	uxth	r3, r3
 80141c6:	2d00      	cmp	r5, #0
 80141c8:	f000 812e 	beq.w	8014428 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80141cc:	1aed      	subs	r5, r5, r3
 80141ce:	b2ad      	uxth	r5, r5
 80141d0:	042b      	lsls	r3, r5, #16
 80141d2:	d502      	bpl.n	80141da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80141d4:	1b64      	subs	r4, r4, r5
 80141d6:	b224      	sxth	r4, r4
 80141d8:	2500      	movs	r5, #0
 80141da:	f9b2 1000 	ldrsh.w	r1, [r2]
 80141de:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80141e2:	428c      	cmp	r4, r1
 80141e4:	b28b      	uxth	r3, r1
 80141e6:	bfbf      	itttt	lt
 80141e8:	18ed      	addlt	r5, r5, r3
 80141ea:	1b2c      	sublt	r4, r5, r4
 80141ec:	b2a5      	uxthlt	r5, r4
 80141ee:	460c      	movlt	r4, r1
 80141f0:	8891      	ldrh	r1, [r2, #4]
 80141f2:	440b      	add	r3, r1
 80141f4:	b21b      	sxth	r3, r3
 80141f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80141f8:	88d3      	ldrh	r3, [r2, #6]
 80141fa:	8852      	ldrh	r2, [r2, #2]
 80141fc:	4413      	add	r3, r2
 80141fe:	b21b      	sxth	r3, r3
 8014200:	930d      	str	r3, [sp, #52]	; 0x34
 8014202:	4bbe      	ldr	r3, [pc, #760]	; (80144fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8014204:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014206:	f893 b000 	ldrb.w	fp, [r3]
 801420a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801420e:	f1dc 0300 	rsbs	r3, ip, #0
 8014212:	eb43 030c 	adc.w	r3, r3, ip
 8014216:	930e      	str	r3, [sp, #56]	; 0x38
 8014218:	4621      	mov	r1, r4
 801421a:	4653      	mov	r3, sl
 801421c:	a814      	add	r0, sp, #80	; 0x50
 801421e:	f7f8 fa0b 	bl	800c638 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8014222:	4621      	mov	r1, r4
 8014224:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8014228:	4653      	mov	r3, sl
 801422a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801422c:	a814      	add	r0, sp, #80	; 0x50
 801422e:	f7f8 fa20 	bl	800c672 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8014232:	a918      	add	r1, sp, #96	; 0x60
 8014234:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8014238:	a817      	add	r0, sp, #92	; 0x5c
 801423a:	f7f8 fb41 	bl	800c8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801423e:	f1ba 0f00 	cmp.w	sl, #0
 8014242:	f040 80f4 	bne.w	801442e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8014246:	f1bb 0f01 	cmp.w	fp, #1
 801424a:	f040 80f8 	bne.w	801443e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801424e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014250:	2b00      	cmp	r3, #0
 8014252:	f040 8145 	bne.w	80144e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8014256:	b2ba      	uxth	r2, r7
 8014258:	b905      	cbnz	r5, 801425c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801425a:	b16e      	cbz	r6, 8014278 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801425c:	fb06 5302 	mla	r3, r6, r2, r5
 8014260:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8014262:	fb08 f303 	mul.w	r3, r8, r3
 8014266:	4631      	mov	r1, r6
 8014268:	f003 0607 	and.w	r6, r3, #7
 801426c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8014270:	9328      	str	r3, [sp, #160]	; 0xa0
 8014272:	eba9 0301 	sub.w	r3, r9, r1
 8014276:	930a      	str	r3, [sp, #40]	; 0x28
 8014278:	4651      	mov	r1, sl
 801427a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801427c:	f7ff ff1c 	bl	80140b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8014280:	4681      	mov	r9, r0
 8014282:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014284:	f7ff ff42 	bl	801410c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8014288:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801428a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801428c:	eba3 0a01 	sub.w	sl, r3, r1
 8014290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014292:	459a      	cmp	sl, r3
 8014294:	bfa8      	it	ge
 8014296:	469a      	movge	sl, r3
 8014298:	f1ba 0f00 	cmp.w	sl, #0
 801429c:	4683      	mov	fp, r0
 801429e:	f340 811a 	ble.w	80144d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80142a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80142a4:	1b64      	subs	r4, r4, r5
 80142a6:	1b1c      	subs	r4, r3, r4
 80142a8:	42bc      	cmp	r4, r7
 80142aa:	bfd4      	ite	le
 80142ac:	ebc5 0504 	rsble	r5, r5, r4
 80142b0:	ebc5 0507 	rsbgt	r5, r5, r7
 80142b4:	2d00      	cmp	r5, #0
 80142b6:	f340 810e 	ble.w	80144d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80142ba:	1b52      	subs	r2, r2, r5
 80142bc:	fb08 f302 	mul.w	r3, r8, r2
 80142c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80142c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80142c4:	2b00      	cmp	r3, #0
 80142c6:	f040 8116 	bne.w	80144f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80142ca:	4b8d      	ldr	r3, [pc, #564]	; (8014500 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80142cc:	6818      	ldr	r0, [r3, #0]
 80142ce:	6803      	ldr	r3, [r0, #0]
 80142d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80142d2:	4798      	blx	r3
 80142d4:	2301      	movs	r3, #1
 80142d6:	fa03 f308 	lsl.w	r3, r3, r8
 80142da:	4a8a      	ldr	r2, [pc, #552]	; (8014504 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80142dc:	3b01      	subs	r3, #1
 80142de:	b2db      	uxtb	r3, r3
 80142e0:	8811      	ldrh	r1, [r2, #0]
 80142e2:	930e      	str	r3, [sp, #56]	; 0x38
 80142e4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80142e8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80142ec:	fb01 2303 	mla	r3, r1, r3, r2
 80142f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80142f4:	930a      	str	r3, [sp, #40]	; 0x28
 80142f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80142f8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80142fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80142fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014300:	0a19      	lsrs	r1, r3, #8
 8014302:	b2cb      	uxtb	r3, r1
 8014304:	9312      	str	r3, [sp, #72]	; 0x48
 8014306:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014308:	b2db      	uxtb	r3, r3
 801430a:	9311      	str	r3, [sp, #68]	; 0x44
 801430c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801430e:	095a      	lsrs	r2, r3, #5
 8014310:	4b7d      	ldr	r3, [pc, #500]	; (8014508 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8014312:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014316:	400b      	ands	r3, r1
 8014318:	4313      	orrs	r3, r2
 801431a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801431c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014320:	4313      	orrs	r3, r2
 8014322:	b29b      	uxth	r3, r3
 8014324:	9310      	str	r3, [sp, #64]	; 0x40
 8014326:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014328:	781a      	ldrb	r2, [r3, #0]
 801432a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801432e:	4132      	asrs	r2, r6
 8014330:	fb05 b919 	mls	r9, r5, r9, fp
 8014334:	fb03 fb05 	mul.w	fp, r3, r5
 8014338:	b2d2      	uxtb	r2, r2
 801433a:	930d      	str	r3, [sp, #52]	; 0x34
 801433c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8014340:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8014344:	f0c0 80f5 	bcc.w	8014532 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8014348:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801434c:	46ae      	mov	lr, r5
 801434e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8014352:	f0c0 80dd 	bcc.w	8014510 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8014356:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014358:	4013      	ands	r3, r2
 801435a:	d055      	beq.n	8014408 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801435c:	20ff      	movs	r0, #255	; 0xff
 801435e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014360:	fb90 f1f1 	sdiv	r1, r0, r1
 8014364:	434b      	muls	r3, r1
 8014366:	2bfe      	cmp	r3, #254	; 0xfe
 8014368:	dd03      	ble.n	8014372 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801436a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801436c:	4281      	cmp	r1, r0
 801436e:	f000 80cd 	beq.w	801450c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8014372:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014374:	f8bc 4000 	ldrh.w	r4, [ip]
 8014378:	fb11 f303 	smulbb	r3, r1, r3
 801437c:	b29b      	uxth	r3, r3
 801437e:	1c59      	adds	r1, r3, #1
 8014380:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8014384:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014388:	b29f      	uxth	r7, r3
 801438a:	43db      	mvns	r3, r3
 801438c:	b2db      	uxtb	r3, r3
 801438e:	9309      	str	r3, [sp, #36]	; 0x24
 8014390:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014392:	1220      	asrs	r0, r4, #8
 8014394:	fb13 f907 	smulbb	r9, r3, r7
 8014398:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801439c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801439e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80143a2:	fb00 9003 	mla	r0, r0, r3, r9
 80143a6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80143a8:	10e1      	asrs	r1, r4, #3
 80143aa:	fb13 f907 	smulbb	r9, r3, r7
 80143ae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80143b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143b4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80143b8:	fb01 9103 	mla	r1, r1, r3, r9
 80143bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80143be:	00e4      	lsls	r4, r4, #3
 80143c0:	fb13 f707 	smulbb	r7, r3, r7
 80143c4:	b2e4      	uxtb	r4, r4
 80143c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143c8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80143cc:	fb04 7403 	mla	r4, r4, r3, r7
 80143d0:	b280      	uxth	r0, r0
 80143d2:	b2a4      	uxth	r4, r4
 80143d4:	1c43      	adds	r3, r0, #1
 80143d6:	f104 0901 	add.w	r9, r4, #1
 80143da:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80143de:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80143e2:	b289      	uxth	r1, r1
 80143e4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80143e8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80143ec:	ea49 0000 	orr.w	r0, r9, r0
 80143f0:	f101 0901 	add.w	r9, r1, #1
 80143f4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80143f8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80143fc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014400:	ea40 0009 	orr.w	r0, r0, r9
 8014404:	f8ac 0000 	strh.w	r0, [ip]
 8014408:	4446      	add	r6, r8
 801440a:	b2b6      	uxth	r6, r6
 801440c:	2e07      	cmp	r6, #7
 801440e:	bf81      	itttt	hi
 8014410:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8014412:	785a      	ldrbhi	r2, [r3, #1]
 8014414:	3301      	addhi	r3, #1
 8014416:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8014418:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801441a:	bf9a      	itte	ls
 801441c:	fa42 f208 	asrls.w	r2, r2, r8
 8014420:	b2d2      	uxtbls	r2, r2
 8014422:	2600      	movhi	r6, #0
 8014424:	449c      	add	ip, r3
 8014426:	e792      	b.n	801434e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8014428:	441c      	add	r4, r3
 801442a:	b224      	sxth	r4, r4
 801442c:	e6d5      	b.n	80141da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801442e:	f1ba 0f01 	cmp.w	sl, #1
 8014432:	f47f af0c 	bne.w	801424e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8014436:	f1bb 0f01 	cmp.w	fp, #1
 801443a:	f47f af08 	bne.w	801424e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801443e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8014500 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8014442:	f8db 0000 	ldr.w	r0, [fp]
 8014446:	6803      	ldr	r3, [r0, #0]
 8014448:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801444a:	4798      	blx	r3
 801444c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8014450:	465a      	mov	r2, fp
 8014452:	d006      	beq.n	8014462 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8014454:	f1b8 0f04 	cmp.w	r8, #4
 8014458:	d140      	bne.n	80144dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801445a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801445c:	3300      	adds	r3, #0
 801445e:	bf18      	it	ne
 8014460:	2301      	movne	r3, #1
 8014462:	0580      	lsls	r0, r0, #22
 8014464:	d56e      	bpl.n	8014544 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8014466:	f1b8 0f08 	cmp.w	r8, #8
 801446a:	d16b      	bne.n	8014544 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801446c:	2b00      	cmp	r3, #0
 801446e:	bf0c      	ite	eq
 8014470:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8014474:	f44f 7180 	movne.w	r1, #256	; 0x100
 8014478:	2d00      	cmp	r5, #0
 801447a:	f47f aee8 	bne.w	801424e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801447e:	2e00      	cmp	r6, #0
 8014480:	f47f aee5 	bne.w	801424e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8014484:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014486:	19e3      	adds	r3, r4, r7
 8014488:	4283      	cmp	r3, r0
 801448a:	f73f aee0 	bgt.w	801424e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801448e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014490:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014492:	444b      	add	r3, r9
 8014494:	4283      	cmp	r3, r0
 8014496:	f73f aeda 	bgt.w	801424e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801449a:	6810      	ldr	r0, [r2, #0]
 801449c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80144a0:	6804      	ldr	r4, [r0, #0]
 80144a2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80144a6:	b2bf      	uxth	r7, r7
 80144a8:	f1b8 0f08 	cmp.w	r8, #8
 80144ac:	f04f 0500 	mov.w	r5, #0
 80144b0:	bf18      	it	ne
 80144b2:	3701      	addne	r7, #1
 80144b4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80144b8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80144ba:	9104      	str	r1, [sp, #16]
 80144bc:	bf18      	it	ne
 80144be:	f027 0701 	bicne.w	r7, r7, #1
 80144c2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80144c4:	bf18      	it	ne
 80144c6:	b2bf      	uxthne	r7, r7
 80144c8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80144cc:	e9cd 7900 	strd	r7, r9, [sp]
 80144d0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80144d2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 80144d4:	47a0      	blx	r4
 80144d6:	b019      	add	sp, #100	; 0x64
 80144d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144dc:	2300      	movs	r3, #0
 80144de:	e7c0      	b.n	8014462 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80144e0:	2208      	movs	r2, #8
 80144e2:	fb92 f3f8 	sdiv	r3, r2, r8
 80144e6:	1e5a      	subs	r2, r3, #1
 80144e8:	443a      	add	r2, r7
 80144ea:	fb92 f2f3 	sdiv	r2, r2, r3
 80144ee:	fb12 f203 	smulbb	r2, r2, r3
 80144f2:	b292      	uxth	r2, r2
 80144f4:	e6b0      	b.n	8014258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80144f6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80144f8:	e6ec      	b.n	80142d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80144fa:	bf00      	nop
 80144fc:	20017748 	.word	0x20017748
 8014500:	20017750 	.word	0x20017750
 8014504:	2001774a 	.word	0x2001774a
 8014508:	00fff800 	.word	0x00fff800
 801450c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801450e:	e779      	b.n	8014404 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8014510:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014512:	b153      	cbz	r3, 801452a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8014514:	441e      	add	r6, r3
 8014516:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014518:	b2b6      	uxth	r6, r6
 801451a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801451e:	f006 0607 	and.w	r6, r6, #7
 8014522:	781a      	ldrb	r2, [r3, #0]
 8014524:	9328      	str	r3, [sp, #160]	; 0xa0
 8014526:	4132      	asrs	r2, r6
 8014528:	b2d2      	uxtb	r2, r2
 801452a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801452c:	445b      	add	r3, fp
 801452e:	930a      	str	r3, [sp, #40]	; 0x28
 8014530:	e706      	b.n	8014340 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8014532:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014534:	2b00      	cmp	r3, #0
 8014536:	d1ce      	bne.n	80144d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8014538:	4b05      	ldr	r3, [pc, #20]	; (8014550 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801453a:	6818      	ldr	r0, [r3, #0]
 801453c:	6803      	ldr	r3, [r0, #0]
 801453e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014540:	4798      	blx	r3
 8014542:	e7c8      	b.n	80144d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8014544:	2b00      	cmp	r3, #0
 8014546:	f43f ae82 	beq.w	801424e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801454a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801454e:	e793      	b.n	8014478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8014550:	20017750 	.word	0x20017750

08014554 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014554:	b538      	push	{r3, r4, r5, lr}
 8014556:	4c15      	ldr	r4, [pc, #84]	; (80145ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8014558:	7823      	ldrb	r3, [r4, #0]
 801455a:	f3bf 8f5b 	dmb	ish
 801455e:	07da      	lsls	r2, r3, #31
 8014560:	4605      	mov	r5, r0
 8014562:	d40b      	bmi.n	801457c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014564:	4620      	mov	r0, r4
 8014566:	f007 fa7f 	bl	801ba68 <__cxa_guard_acquire>
 801456a:	b138      	cbz	r0, 801457c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801456c:	4620      	mov	r0, r4
 801456e:	f007 fa87 	bl	801ba80 <__cxa_guard_release>
 8014572:	4a0f      	ldr	r2, [pc, #60]	; (80145b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014574:	490f      	ldr	r1, [pc, #60]	; (80145b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8014576:	4810      	ldr	r0, [pc, #64]	; (80145b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014578:	f007 fa6f 	bl	801ba5a <__aeabi_atexit>
 801457c:	4c0f      	ldr	r4, [pc, #60]	; (80145bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801457e:	7823      	ldrb	r3, [r4, #0]
 8014580:	f3bf 8f5b 	dmb	ish
 8014584:	07db      	lsls	r3, r3, #31
 8014586:	d40b      	bmi.n	80145a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014588:	4620      	mov	r0, r4
 801458a:	f007 fa6d 	bl	801ba68 <__cxa_guard_acquire>
 801458e:	b138      	cbz	r0, 80145a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014590:	4620      	mov	r0, r4
 8014592:	f007 fa75 	bl	801ba80 <__cxa_guard_release>
 8014596:	4a06      	ldr	r2, [pc, #24]	; (80145b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014598:	4909      	ldr	r1, [pc, #36]	; (80145c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801459a:	480a      	ldr	r0, [pc, #40]	; (80145c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801459c:	f007 fa5d 	bl	801ba5a <__aeabi_atexit>
 80145a0:	4b05      	ldr	r3, [pc, #20]	; (80145b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80145a2:	612b      	str	r3, [r5, #16]
 80145a4:	4b07      	ldr	r3, [pc, #28]	; (80145c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80145a6:	616b      	str	r3, [r5, #20]
 80145a8:	bd38      	pop	{r3, r4, r5, pc}
 80145aa:	bf00      	nop
 80145ac:	2001781c 	.word	0x2001781c
 80145b0:	20000000 	.word	0x20000000
 80145b4:	08012765 	.word	0x08012765
 80145b8:	200000c8 	.word	0x200000c8
 80145bc:	20017820 	.word	0x20017820
 80145c0:	08012763 	.word	0x08012763
 80145c4:	200000cc 	.word	0x200000cc

080145c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80145c8:	b538      	push	{r3, r4, r5, lr}
 80145ca:	4c15      	ldr	r4, [pc, #84]	; (8014620 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80145cc:	7823      	ldrb	r3, [r4, #0]
 80145ce:	f3bf 8f5b 	dmb	ish
 80145d2:	07da      	lsls	r2, r3, #31
 80145d4:	4605      	mov	r5, r0
 80145d6:	d40b      	bmi.n	80145f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80145d8:	4620      	mov	r0, r4
 80145da:	f007 fa45 	bl	801ba68 <__cxa_guard_acquire>
 80145de:	b138      	cbz	r0, 80145f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80145e0:	4620      	mov	r0, r4
 80145e2:	f007 fa4d 	bl	801ba80 <__cxa_guard_release>
 80145e6:	4a0f      	ldr	r2, [pc, #60]	; (8014624 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80145e8:	490f      	ldr	r1, [pc, #60]	; (8014628 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80145ea:	4810      	ldr	r0, [pc, #64]	; (801462c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80145ec:	f007 fa35 	bl	801ba5a <__aeabi_atexit>
 80145f0:	4c0f      	ldr	r4, [pc, #60]	; (8014630 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80145f2:	7823      	ldrb	r3, [r4, #0]
 80145f4:	f3bf 8f5b 	dmb	ish
 80145f8:	07db      	lsls	r3, r3, #31
 80145fa:	d40b      	bmi.n	8014614 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80145fc:	4620      	mov	r0, r4
 80145fe:	f007 fa33 	bl	801ba68 <__cxa_guard_acquire>
 8014602:	b138      	cbz	r0, 8014614 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014604:	4620      	mov	r0, r4
 8014606:	f007 fa3b 	bl	801ba80 <__cxa_guard_release>
 801460a:	4a06      	ldr	r2, [pc, #24]	; (8014624 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801460c:	4909      	ldr	r1, [pc, #36]	; (8014634 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801460e:	480a      	ldr	r0, [pc, #40]	; (8014638 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014610:	f007 fa23 	bl	801ba5a <__aeabi_atexit>
 8014614:	4b05      	ldr	r3, [pc, #20]	; (801462c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014616:	60ab      	str	r3, [r5, #8]
 8014618:	4b07      	ldr	r3, [pc, #28]	; (8014638 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801461a:	60eb      	str	r3, [r5, #12]
 801461c:	bd38      	pop	{r3, r4, r5, pc}
 801461e:	bf00      	nop
 8014620:	200177f4 	.word	0x200177f4
 8014624:	20000000 	.word	0x20000000
 8014628:	08012769 	.word	0x08012769
 801462c:	200000a0 	.word	0x200000a0
 8014630:	200177f8 	.word	0x200177f8
 8014634:	08012767 	.word	0x08012767
 8014638:	200000a4 	.word	0x200000a4

0801463c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801463c:	b510      	push	{r4, lr}
 801463e:	4604      	mov	r4, r0
 8014640:	f7ff ff88 	bl	8014554 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8014644:	4620      	mov	r0, r4
 8014646:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801464a:	f7ff bfbd 	b.w	80145c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08014650 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8014650:	b538      	push	{r3, r4, r5, lr}
 8014652:	4c15      	ldr	r4, [pc, #84]	; (80146a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014654:	7823      	ldrb	r3, [r4, #0]
 8014656:	f3bf 8f5b 	dmb	ish
 801465a:	07da      	lsls	r2, r3, #31
 801465c:	4605      	mov	r5, r0
 801465e:	d40b      	bmi.n	8014678 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014660:	4620      	mov	r0, r4
 8014662:	f007 fa01 	bl	801ba68 <__cxa_guard_acquire>
 8014666:	b138      	cbz	r0, 8014678 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014668:	4620      	mov	r0, r4
 801466a:	f007 fa09 	bl	801ba80 <__cxa_guard_release>
 801466e:	4a0f      	ldr	r2, [pc, #60]	; (80146ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014670:	490f      	ldr	r1, [pc, #60]	; (80146b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8014672:	4810      	ldr	r0, [pc, #64]	; (80146b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014674:	f007 f9f1 	bl	801ba5a <__aeabi_atexit>
 8014678:	4c0f      	ldr	r4, [pc, #60]	; (80146b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801467a:	7823      	ldrb	r3, [r4, #0]
 801467c:	f3bf 8f5b 	dmb	ish
 8014680:	07db      	lsls	r3, r3, #31
 8014682:	d40b      	bmi.n	801469c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014684:	4620      	mov	r0, r4
 8014686:	f007 f9ef 	bl	801ba68 <__cxa_guard_acquire>
 801468a:	b138      	cbz	r0, 801469c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801468c:	4620      	mov	r0, r4
 801468e:	f007 f9f7 	bl	801ba80 <__cxa_guard_release>
 8014692:	4a06      	ldr	r2, [pc, #24]	; (80146ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014694:	4909      	ldr	r1, [pc, #36]	; (80146bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8014696:	480a      	ldr	r0, [pc, #40]	; (80146c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014698:	f007 f9df 	bl	801ba5a <__aeabi_atexit>
 801469c:	4b05      	ldr	r3, [pc, #20]	; (80146b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801469e:	622b      	str	r3, [r5, #32]
 80146a0:	4b07      	ldr	r3, [pc, #28]	; (80146c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80146a2:	626b      	str	r3, [r5, #36]	; 0x24
 80146a4:	bd38      	pop	{r3, r4, r5, pc}
 80146a6:	bf00      	nop
 80146a8:	20017824 	.word	0x20017824
 80146ac:	20000000 	.word	0x20000000
 80146b0:	0801275d 	.word	0x0801275d
 80146b4:	200000d0 	.word	0x200000d0
 80146b8:	20017828 	.word	0x20017828
 80146bc:	0801275b 	.word	0x0801275b
 80146c0:	200000d4 	.word	0x200000d4

080146c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80146c4:	b538      	push	{r3, r4, r5, lr}
 80146c6:	4c15      	ldr	r4, [pc, #84]	; (801471c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80146c8:	7823      	ldrb	r3, [r4, #0]
 80146ca:	f3bf 8f5b 	dmb	ish
 80146ce:	07da      	lsls	r2, r3, #31
 80146d0:	4605      	mov	r5, r0
 80146d2:	d40b      	bmi.n	80146ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80146d4:	4620      	mov	r0, r4
 80146d6:	f007 f9c7 	bl	801ba68 <__cxa_guard_acquire>
 80146da:	b138      	cbz	r0, 80146ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80146dc:	4620      	mov	r0, r4
 80146de:	f007 f9cf 	bl	801ba80 <__cxa_guard_release>
 80146e2:	4a0f      	ldr	r2, [pc, #60]	; (8014720 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80146e4:	490f      	ldr	r1, [pc, #60]	; (8014724 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80146e6:	4810      	ldr	r0, [pc, #64]	; (8014728 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80146e8:	f007 f9b7 	bl	801ba5a <__aeabi_atexit>
 80146ec:	4c0f      	ldr	r4, [pc, #60]	; (801472c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80146ee:	7823      	ldrb	r3, [r4, #0]
 80146f0:	f3bf 8f5b 	dmb	ish
 80146f4:	07db      	lsls	r3, r3, #31
 80146f6:	d40b      	bmi.n	8014710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80146f8:	4620      	mov	r0, r4
 80146fa:	f007 f9b5 	bl	801ba68 <__cxa_guard_acquire>
 80146fe:	b138      	cbz	r0, 8014710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014700:	4620      	mov	r0, r4
 8014702:	f007 f9bd 	bl	801ba80 <__cxa_guard_release>
 8014706:	4a06      	ldr	r2, [pc, #24]	; (8014720 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014708:	4909      	ldr	r1, [pc, #36]	; (8014730 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801470a:	480a      	ldr	r0, [pc, #40]	; (8014734 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801470c:	f007 f9a5 	bl	801ba5a <__aeabi_atexit>
 8014710:	4b05      	ldr	r3, [pc, #20]	; (8014728 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014712:	61ab      	str	r3, [r5, #24]
 8014714:	4b07      	ldr	r3, [pc, #28]	; (8014734 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014716:	61eb      	str	r3, [r5, #28]
 8014718:	bd38      	pop	{r3, r4, r5, pc}
 801471a:	bf00      	nop
 801471c:	200177fc 	.word	0x200177fc
 8014720:	20000000 	.word	0x20000000
 8014724:	08012761 	.word	0x08012761
 8014728:	200000a8 	.word	0x200000a8
 801472c:	20017800 	.word	0x20017800
 8014730:	0801275f 	.word	0x0801275f
 8014734:	200000ac 	.word	0x200000ac

08014738 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8014738:	b510      	push	{r4, lr}
 801473a:	4604      	mov	r4, r0
 801473c:	f7ff ff88 	bl	8014650 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8014740:	4620      	mov	r0, r4
 8014742:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014746:	f7ff bfbd 	b.w	80146c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801474c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801474c:	b538      	push	{r3, r4, r5, lr}
 801474e:	4c15      	ldr	r4, [pc, #84]	; (80147a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8014750:	7823      	ldrb	r3, [r4, #0]
 8014752:	f3bf 8f5b 	dmb	ish
 8014756:	07da      	lsls	r2, r3, #31
 8014758:	4605      	mov	r5, r0
 801475a:	d40b      	bmi.n	8014774 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801475c:	4620      	mov	r0, r4
 801475e:	f007 f983 	bl	801ba68 <__cxa_guard_acquire>
 8014762:	b138      	cbz	r0, 8014774 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014764:	4620      	mov	r0, r4
 8014766:	f007 f98b 	bl	801ba80 <__cxa_guard_release>
 801476a:	4a0f      	ldr	r2, [pc, #60]	; (80147a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801476c:	490f      	ldr	r1, [pc, #60]	; (80147ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801476e:	4810      	ldr	r0, [pc, #64]	; (80147b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014770:	f007 f973 	bl	801ba5a <__aeabi_atexit>
 8014774:	4c0f      	ldr	r4, [pc, #60]	; (80147b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8014776:	7823      	ldrb	r3, [r4, #0]
 8014778:	f3bf 8f5b 	dmb	ish
 801477c:	07db      	lsls	r3, r3, #31
 801477e:	d40b      	bmi.n	8014798 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014780:	4620      	mov	r0, r4
 8014782:	f007 f971 	bl	801ba68 <__cxa_guard_acquire>
 8014786:	b138      	cbz	r0, 8014798 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014788:	4620      	mov	r0, r4
 801478a:	f007 f979 	bl	801ba80 <__cxa_guard_release>
 801478e:	4a06      	ldr	r2, [pc, #24]	; (80147a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014790:	4909      	ldr	r1, [pc, #36]	; (80147b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8014792:	480a      	ldr	r0, [pc, #40]	; (80147bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014794:	f007 f961 	bl	801ba5a <__aeabi_atexit>
 8014798:	4b05      	ldr	r3, [pc, #20]	; (80147b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801479a:	632b      	str	r3, [r5, #48]	; 0x30
 801479c:	4b07      	ldr	r3, [pc, #28]	; (80147bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801479e:	636b      	str	r3, [r5, #52]	; 0x34
 80147a0:	bd38      	pop	{r3, r4, r5, pc}
 80147a2:	bf00      	nop
 80147a4:	20017834 	.word	0x20017834
 80147a8:	20000000 	.word	0x20000000
 80147ac:	08012755 	.word	0x08012755
 80147b0:	200000e0 	.word	0x200000e0
 80147b4:	20017838 	.word	0x20017838
 80147b8:	08012753 	.word	0x08012753
 80147bc:	200000e4 	.word	0x200000e4

080147c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80147c0:	b538      	push	{r3, r4, r5, lr}
 80147c2:	4c15      	ldr	r4, [pc, #84]	; (8014818 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80147c4:	7823      	ldrb	r3, [r4, #0]
 80147c6:	f3bf 8f5b 	dmb	ish
 80147ca:	07da      	lsls	r2, r3, #31
 80147cc:	4605      	mov	r5, r0
 80147ce:	d40b      	bmi.n	80147e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80147d0:	4620      	mov	r0, r4
 80147d2:	f007 f949 	bl	801ba68 <__cxa_guard_acquire>
 80147d6:	b138      	cbz	r0, 80147e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80147d8:	4620      	mov	r0, r4
 80147da:	f007 f951 	bl	801ba80 <__cxa_guard_release>
 80147de:	4a0f      	ldr	r2, [pc, #60]	; (801481c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80147e0:	490f      	ldr	r1, [pc, #60]	; (8014820 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80147e2:	4810      	ldr	r0, [pc, #64]	; (8014824 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80147e4:	f007 f939 	bl	801ba5a <__aeabi_atexit>
 80147e8:	4c0f      	ldr	r4, [pc, #60]	; (8014828 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80147ea:	7823      	ldrb	r3, [r4, #0]
 80147ec:	f3bf 8f5b 	dmb	ish
 80147f0:	07db      	lsls	r3, r3, #31
 80147f2:	d40b      	bmi.n	801480c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80147f4:	4620      	mov	r0, r4
 80147f6:	f007 f937 	bl	801ba68 <__cxa_guard_acquire>
 80147fa:	b138      	cbz	r0, 801480c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80147fc:	4620      	mov	r0, r4
 80147fe:	f007 f93f 	bl	801ba80 <__cxa_guard_release>
 8014802:	4a06      	ldr	r2, [pc, #24]	; (801481c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014804:	4909      	ldr	r1, [pc, #36]	; (801482c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8014806:	480a      	ldr	r0, [pc, #40]	; (8014830 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014808:	f007 f927 	bl	801ba5a <__aeabi_atexit>
 801480c:	4b05      	ldr	r3, [pc, #20]	; (8014824 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801480e:	62ab      	str	r3, [r5, #40]	; 0x28
 8014810:	4b07      	ldr	r3, [pc, #28]	; (8014830 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014812:	62eb      	str	r3, [r5, #44]	; 0x2c
 8014814:	bd38      	pop	{r3, r4, r5, pc}
 8014816:	bf00      	nop
 8014818:	20017804 	.word	0x20017804
 801481c:	20000000 	.word	0x20000000
 8014820:	08012759 	.word	0x08012759
 8014824:	200000b0 	.word	0x200000b0
 8014828:	20017808 	.word	0x20017808
 801482c:	08012757 	.word	0x08012757
 8014830:	200000b4 	.word	0x200000b4

08014834 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8014834:	b510      	push	{r4, lr}
 8014836:	4604      	mov	r4, r0
 8014838:	f7ff ff88 	bl	801474c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801483c:	4620      	mov	r0, r4
 801483e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014842:	f7ff bfbd 	b.w	80147c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08014848 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8014848:	b538      	push	{r3, r4, r5, lr}
 801484a:	4c15      	ldr	r4, [pc, #84]	; (80148a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801484c:	7823      	ldrb	r3, [r4, #0]
 801484e:	f3bf 8f5b 	dmb	ish
 8014852:	07da      	lsls	r2, r3, #31
 8014854:	4605      	mov	r5, r0
 8014856:	d40b      	bmi.n	8014870 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014858:	4620      	mov	r0, r4
 801485a:	f007 f905 	bl	801ba68 <__cxa_guard_acquire>
 801485e:	b138      	cbz	r0, 8014870 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014860:	4620      	mov	r0, r4
 8014862:	f007 f90d 	bl	801ba80 <__cxa_guard_release>
 8014866:	4a0f      	ldr	r2, [pc, #60]	; (80148a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014868:	490f      	ldr	r1, [pc, #60]	; (80148a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801486a:	4810      	ldr	r0, [pc, #64]	; (80148ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801486c:	f007 f8f5 	bl	801ba5a <__aeabi_atexit>
 8014870:	4c0f      	ldr	r4, [pc, #60]	; (80148b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8014872:	7823      	ldrb	r3, [r4, #0]
 8014874:	f3bf 8f5b 	dmb	ish
 8014878:	07db      	lsls	r3, r3, #31
 801487a:	d40b      	bmi.n	8014894 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801487c:	4620      	mov	r0, r4
 801487e:	f007 f8f3 	bl	801ba68 <__cxa_guard_acquire>
 8014882:	b138      	cbz	r0, 8014894 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014884:	4620      	mov	r0, r4
 8014886:	f007 f8fb 	bl	801ba80 <__cxa_guard_release>
 801488a:	4a06      	ldr	r2, [pc, #24]	; (80148a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801488c:	4909      	ldr	r1, [pc, #36]	; (80148b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801488e:	480a      	ldr	r0, [pc, #40]	; (80148b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8014890:	f007 f8e3 	bl	801ba5a <__aeabi_atexit>
 8014894:	4b05      	ldr	r3, [pc, #20]	; (80148ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014896:	652b      	str	r3, [r5, #80]	; 0x50
 8014898:	4b07      	ldr	r3, [pc, #28]	; (80148b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801489a:	656b      	str	r3, [r5, #84]	; 0x54
 801489c:	bd38      	pop	{r3, r4, r5, pc}
 801489e:	bf00      	nop
 80148a0:	2001783c 	.word	0x2001783c
 80148a4:	20000000 	.word	0x20000000
 80148a8:	08012745 	.word	0x08012745
 80148ac:	200000e8 	.word	0x200000e8
 80148b0:	20017840 	.word	0x20017840
 80148b4:	08012743 	.word	0x08012743
 80148b8:	200000ec 	.word	0x200000ec

080148bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80148bc:	b538      	push	{r3, r4, r5, lr}
 80148be:	4c15      	ldr	r4, [pc, #84]	; (8014914 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80148c0:	7823      	ldrb	r3, [r4, #0]
 80148c2:	f3bf 8f5b 	dmb	ish
 80148c6:	07da      	lsls	r2, r3, #31
 80148c8:	4605      	mov	r5, r0
 80148ca:	d40b      	bmi.n	80148e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80148cc:	4620      	mov	r0, r4
 80148ce:	f007 f8cb 	bl	801ba68 <__cxa_guard_acquire>
 80148d2:	b138      	cbz	r0, 80148e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80148d4:	4620      	mov	r0, r4
 80148d6:	f007 f8d3 	bl	801ba80 <__cxa_guard_release>
 80148da:	4a0f      	ldr	r2, [pc, #60]	; (8014918 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80148dc:	490f      	ldr	r1, [pc, #60]	; (801491c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80148de:	4810      	ldr	r0, [pc, #64]	; (8014920 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80148e0:	f007 f8bb 	bl	801ba5a <__aeabi_atexit>
 80148e4:	4c0f      	ldr	r4, [pc, #60]	; (8014924 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80148e6:	7823      	ldrb	r3, [r4, #0]
 80148e8:	f3bf 8f5b 	dmb	ish
 80148ec:	07db      	lsls	r3, r3, #31
 80148ee:	d40b      	bmi.n	8014908 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80148f0:	4620      	mov	r0, r4
 80148f2:	f007 f8b9 	bl	801ba68 <__cxa_guard_acquire>
 80148f6:	b138      	cbz	r0, 8014908 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80148f8:	4620      	mov	r0, r4
 80148fa:	f007 f8c1 	bl	801ba80 <__cxa_guard_release>
 80148fe:	4a06      	ldr	r2, [pc, #24]	; (8014918 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014900:	4909      	ldr	r1, [pc, #36]	; (8014928 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8014902:	480a      	ldr	r0, [pc, #40]	; (801492c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014904:	f007 f8a9 	bl	801ba5a <__aeabi_atexit>
 8014908:	4b05      	ldr	r3, [pc, #20]	; (8014920 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801490a:	64ab      	str	r3, [r5, #72]	; 0x48
 801490c:	4b07      	ldr	r3, [pc, #28]	; (801492c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801490e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8014910:	bd38      	pop	{r3, r4, r5, pc}
 8014912:	bf00      	nop
 8014914:	20017844 	.word	0x20017844
 8014918:	20000000 	.word	0x20000000
 801491c:	08012749 	.word	0x08012749
 8014920:	200000f0 	.word	0x200000f0
 8014924:	20017848 	.word	0x20017848
 8014928:	08012747 	.word	0x08012747
 801492c:	200000f4 	.word	0x200000f4

08014930 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8014930:	b538      	push	{r3, r4, r5, lr}
 8014932:	4c15      	ldr	r4, [pc, #84]	; (8014988 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014934:	7823      	ldrb	r3, [r4, #0]
 8014936:	f3bf 8f5b 	dmb	ish
 801493a:	07da      	lsls	r2, r3, #31
 801493c:	4605      	mov	r5, r0
 801493e:	d40b      	bmi.n	8014958 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014940:	4620      	mov	r0, r4
 8014942:	f007 f891 	bl	801ba68 <__cxa_guard_acquire>
 8014946:	b138      	cbz	r0, 8014958 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014948:	4620      	mov	r0, r4
 801494a:	f007 f899 	bl	801ba80 <__cxa_guard_release>
 801494e:	4a0f      	ldr	r2, [pc, #60]	; (801498c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014950:	490f      	ldr	r1, [pc, #60]	; (8014990 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8014952:	4810      	ldr	r0, [pc, #64]	; (8014994 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014954:	f007 f881 	bl	801ba5a <__aeabi_atexit>
 8014958:	4c0f      	ldr	r4, [pc, #60]	; (8014998 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801495a:	7823      	ldrb	r3, [r4, #0]
 801495c:	f3bf 8f5b 	dmb	ish
 8014960:	07db      	lsls	r3, r3, #31
 8014962:	d40b      	bmi.n	801497c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014964:	4620      	mov	r0, r4
 8014966:	f007 f87f 	bl	801ba68 <__cxa_guard_acquire>
 801496a:	b138      	cbz	r0, 801497c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801496c:	4620      	mov	r0, r4
 801496e:	f007 f887 	bl	801ba80 <__cxa_guard_release>
 8014972:	4a06      	ldr	r2, [pc, #24]	; (801498c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014974:	4909      	ldr	r1, [pc, #36]	; (801499c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8014976:	480a      	ldr	r0, [pc, #40]	; (80149a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014978:	f007 f86f 	bl	801ba5a <__aeabi_atexit>
 801497c:	4b05      	ldr	r3, [pc, #20]	; (8014994 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801497e:	642b      	str	r3, [r5, #64]	; 0x40
 8014980:	4b07      	ldr	r3, [pc, #28]	; (80149a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014982:	646b      	str	r3, [r5, #68]	; 0x44
 8014984:	bd38      	pop	{r3, r4, r5, pc}
 8014986:	bf00      	nop
 8014988:	2001780c 	.word	0x2001780c
 801498c:	20000000 	.word	0x20000000
 8014990:	0801274d 	.word	0x0801274d
 8014994:	200000b8 	.word	0x200000b8
 8014998:	20017810 	.word	0x20017810
 801499c:	0801274b 	.word	0x0801274b
 80149a0:	200000bc 	.word	0x200000bc

080149a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80149a4:	b538      	push	{r3, r4, r5, lr}
 80149a6:	4c15      	ldr	r4, [pc, #84]	; (80149fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80149a8:	7823      	ldrb	r3, [r4, #0]
 80149aa:	f3bf 8f5b 	dmb	ish
 80149ae:	07da      	lsls	r2, r3, #31
 80149b0:	4605      	mov	r5, r0
 80149b2:	d40b      	bmi.n	80149cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80149b4:	4620      	mov	r0, r4
 80149b6:	f007 f857 	bl	801ba68 <__cxa_guard_acquire>
 80149ba:	b138      	cbz	r0, 80149cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80149bc:	4620      	mov	r0, r4
 80149be:	f007 f85f 	bl	801ba80 <__cxa_guard_release>
 80149c2:	4a0f      	ldr	r2, [pc, #60]	; (8014a00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80149c4:	490f      	ldr	r1, [pc, #60]	; (8014a04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80149c6:	4810      	ldr	r0, [pc, #64]	; (8014a08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80149c8:	f007 f847 	bl	801ba5a <__aeabi_atexit>
 80149cc:	4c0f      	ldr	r4, [pc, #60]	; (8014a0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80149ce:	7823      	ldrb	r3, [r4, #0]
 80149d0:	f3bf 8f5b 	dmb	ish
 80149d4:	07db      	lsls	r3, r3, #31
 80149d6:	d40b      	bmi.n	80149f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80149d8:	4620      	mov	r0, r4
 80149da:	f007 f845 	bl	801ba68 <__cxa_guard_acquire>
 80149de:	b138      	cbz	r0, 80149f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80149e0:	4620      	mov	r0, r4
 80149e2:	f007 f84d 	bl	801ba80 <__cxa_guard_release>
 80149e6:	4a06      	ldr	r2, [pc, #24]	; (8014a00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80149e8:	4909      	ldr	r1, [pc, #36]	; (8014a10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80149ea:	480a      	ldr	r0, [pc, #40]	; (8014a14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80149ec:	f007 f835 	bl	801ba5a <__aeabi_atexit>
 80149f0:	4b05      	ldr	r3, [pc, #20]	; (8014a08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80149f2:	63ab      	str	r3, [r5, #56]	; 0x38
 80149f4:	4b07      	ldr	r3, [pc, #28]	; (8014a14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80149f6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80149f8:	bd38      	pop	{r3, r4, r5, pc}
 80149fa:	bf00      	nop
 80149fc:	2001782c 	.word	0x2001782c
 8014a00:	20000000 	.word	0x20000000
 8014a04:	08012751 	.word	0x08012751
 8014a08:	200000d8 	.word	0x200000d8
 8014a0c:	20017830 	.word	0x20017830
 8014a10:	0801274f 	.word	0x0801274f
 8014a14:	200000dc 	.word	0x200000dc

08014a18 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8014a18:	b510      	push	{r4, lr}
 8014a1a:	4604      	mov	r4, r0
 8014a1c:	f7ff ff14 	bl	8014848 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8014a20:	4620      	mov	r0, r4
 8014a22:	f7ff ff85 	bl	8014930 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8014a26:	4620      	mov	r0, r4
 8014a28:	f7ff ff48 	bl	80148bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014a2c:	4620      	mov	r0, r4
 8014a2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014a32:	f7ff bfb7 	b.w	80149a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08014a38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8014a38:	b538      	push	{r3, r4, r5, lr}
 8014a3a:	4c15      	ldr	r4, [pc, #84]	; (8014a90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014a3c:	7823      	ldrb	r3, [r4, #0]
 8014a3e:	f3bf 8f5b 	dmb	ish
 8014a42:	07da      	lsls	r2, r3, #31
 8014a44:	4605      	mov	r5, r0
 8014a46:	d40b      	bmi.n	8014a60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014a48:	4620      	mov	r0, r4
 8014a4a:	f007 f80d 	bl	801ba68 <__cxa_guard_acquire>
 8014a4e:	b138      	cbz	r0, 8014a60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014a50:	4620      	mov	r0, r4
 8014a52:	f007 f815 	bl	801ba80 <__cxa_guard_release>
 8014a56:	4a0f      	ldr	r2, [pc, #60]	; (8014a94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014a58:	490f      	ldr	r1, [pc, #60]	; (8014a98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8014a5a:	4810      	ldr	r0, [pc, #64]	; (8014a9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014a5c:	f006 fffd 	bl	801ba5a <__aeabi_atexit>
 8014a60:	4c0f      	ldr	r4, [pc, #60]	; (8014aa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8014a62:	7823      	ldrb	r3, [r4, #0]
 8014a64:	f3bf 8f5b 	dmb	ish
 8014a68:	07db      	lsls	r3, r3, #31
 8014a6a:	d40b      	bmi.n	8014a84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014a6c:	4620      	mov	r0, r4
 8014a6e:	f006 fffb 	bl	801ba68 <__cxa_guard_acquire>
 8014a72:	b138      	cbz	r0, 8014a84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014a74:	4620      	mov	r0, r4
 8014a76:	f007 f803 	bl	801ba80 <__cxa_guard_release>
 8014a7a:	4a06      	ldr	r2, [pc, #24]	; (8014a94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014a7c:	4909      	ldr	r1, [pc, #36]	; (8014aa4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8014a7e:	480a      	ldr	r0, [pc, #40]	; (8014aa8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014a80:	f006 ffeb 	bl	801ba5a <__aeabi_atexit>
 8014a84:	4b05      	ldr	r3, [pc, #20]	; (8014a9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014a86:	662b      	str	r3, [r5, #96]	; 0x60
 8014a88:	4b07      	ldr	r3, [pc, #28]	; (8014aa8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014a8a:	666b      	str	r3, [r5, #100]	; 0x64
 8014a8c:	bd38      	pop	{r3, r4, r5, pc}
 8014a8e:	bf00      	nop
 8014a90:	20017814 	.word	0x20017814
 8014a94:	20000000 	.word	0x20000000
 8014a98:	0801273d 	.word	0x0801273d
 8014a9c:	200000c0 	.word	0x200000c0
 8014aa0:	20017818 	.word	0x20017818
 8014aa4:	0801273b 	.word	0x0801273b
 8014aa8:	200000c4 	.word	0x200000c4

08014aac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8014aac:	b538      	push	{r3, r4, r5, lr}
 8014aae:	4c15      	ldr	r4, [pc, #84]	; (8014b04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8014ab0:	7823      	ldrb	r3, [r4, #0]
 8014ab2:	f3bf 8f5b 	dmb	ish
 8014ab6:	07da      	lsls	r2, r3, #31
 8014ab8:	4605      	mov	r5, r0
 8014aba:	d40b      	bmi.n	8014ad4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8014abc:	4620      	mov	r0, r4
 8014abe:	f006 ffd3 	bl	801ba68 <__cxa_guard_acquire>
 8014ac2:	b138      	cbz	r0, 8014ad4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8014ac4:	4620      	mov	r0, r4
 8014ac6:	f006 ffdb 	bl	801ba80 <__cxa_guard_release>
 8014aca:	4a0f      	ldr	r2, [pc, #60]	; (8014b08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014acc:	490f      	ldr	r1, [pc, #60]	; (8014b0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8014ace:	4810      	ldr	r0, [pc, #64]	; (8014b10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8014ad0:	f006 ffc3 	bl	801ba5a <__aeabi_atexit>
 8014ad4:	4c0f      	ldr	r4, [pc, #60]	; (8014b14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8014ad6:	7823      	ldrb	r3, [r4, #0]
 8014ad8:	f3bf 8f5b 	dmb	ish
 8014adc:	07db      	lsls	r3, r3, #31
 8014ade:	d40b      	bmi.n	8014af8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014ae0:	4620      	mov	r0, r4
 8014ae2:	f006 ffc1 	bl	801ba68 <__cxa_guard_acquire>
 8014ae6:	b138      	cbz	r0, 8014af8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014ae8:	4620      	mov	r0, r4
 8014aea:	f006 ffc9 	bl	801ba80 <__cxa_guard_release>
 8014aee:	4a06      	ldr	r2, [pc, #24]	; (8014b08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014af0:	4909      	ldr	r1, [pc, #36]	; (8014b18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8014af2:	480a      	ldr	r0, [pc, #40]	; (8014b1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014af4:	f006 ffb1 	bl	801ba5a <__aeabi_atexit>
 8014af8:	4b05      	ldr	r3, [pc, #20]	; (8014b10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8014afa:	65ab      	str	r3, [r5, #88]	; 0x58
 8014afc:	4b07      	ldr	r3, [pc, #28]	; (8014b1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014afe:	65eb      	str	r3, [r5, #92]	; 0x5c
 8014b00:	bd38      	pop	{r3, r4, r5, pc}
 8014b02:	bf00      	nop
 8014b04:	200177ec 	.word	0x200177ec
 8014b08:	20000000 	.word	0x20000000
 8014b0c:	08012741 	.word	0x08012741
 8014b10:	20000098 	.word	0x20000098
 8014b14:	200177f0 	.word	0x200177f0
 8014b18:	0801273f 	.word	0x0801273f
 8014b1c:	2000009c 	.word	0x2000009c

08014b20 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014b20:	b510      	push	{r4, lr}
 8014b22:	4604      	mov	r4, r0
 8014b24:	f7ff ff88 	bl	8014a38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8014b28:	4620      	mov	r0, r4
 8014b2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014b2e:	f7ff bfbd 	b.w	8014aac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014b34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014b34:	b538      	push	{r3, r4, r5, lr}
 8014b36:	4c15      	ldr	r4, [pc, #84]	; (8014b8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8014b38:	7823      	ldrb	r3, [r4, #0]
 8014b3a:	f3bf 8f5b 	dmb	ish
 8014b3e:	07da      	lsls	r2, r3, #31
 8014b40:	4605      	mov	r5, r0
 8014b42:	d40b      	bmi.n	8014b5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014b44:	4620      	mov	r0, r4
 8014b46:	f006 ff8f 	bl	801ba68 <__cxa_guard_acquire>
 8014b4a:	b138      	cbz	r0, 8014b5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014b4c:	4620      	mov	r0, r4
 8014b4e:	f006 ff97 	bl	801ba80 <__cxa_guard_release>
 8014b52:	4a0f      	ldr	r2, [pc, #60]	; (8014b90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014b54:	490f      	ldr	r1, [pc, #60]	; (8014b94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8014b56:	4810      	ldr	r0, [pc, #64]	; (8014b98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014b58:	f006 ff7f 	bl	801ba5a <__aeabi_atexit>
 8014b5c:	4c0f      	ldr	r4, [pc, #60]	; (8014b9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8014b5e:	7823      	ldrb	r3, [r4, #0]
 8014b60:	f3bf 8f5b 	dmb	ish
 8014b64:	07db      	lsls	r3, r3, #31
 8014b66:	d40b      	bmi.n	8014b80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014b68:	4620      	mov	r0, r4
 8014b6a:	f006 ff7d 	bl	801ba68 <__cxa_guard_acquire>
 8014b6e:	b138      	cbz	r0, 8014b80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014b70:	4620      	mov	r0, r4
 8014b72:	f006 ff85 	bl	801ba80 <__cxa_guard_release>
 8014b76:	4a06      	ldr	r2, [pc, #24]	; (8014b90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014b78:	4909      	ldr	r1, [pc, #36]	; (8014ba0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8014b7a:	480a      	ldr	r0, [pc, #40]	; (8014ba4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014b7c:	f006 ff6d 	bl	801ba5a <__aeabi_atexit>
 8014b80:	4b05      	ldr	r3, [pc, #20]	; (8014b98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014b82:	672b      	str	r3, [r5, #112]	; 0x70
 8014b84:	4b07      	ldr	r3, [pc, #28]	; (8014ba4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014b86:	676b      	str	r3, [r5, #116]	; 0x74
 8014b88:	bd38      	pop	{r3, r4, r5, pc}
 8014b8a:	bf00      	nop
 8014b8c:	200177e4 	.word	0x200177e4
 8014b90:	20000000 	.word	0x20000000
 8014b94:	08012735 	.word	0x08012735
 8014b98:	20000090 	.word	0x20000090
 8014b9c:	200177e8 	.word	0x200177e8
 8014ba0:	08012733 	.word	0x08012733
 8014ba4:	20000094 	.word	0x20000094

08014ba8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8014ba8:	b538      	push	{r3, r4, r5, lr}
 8014baa:	4c15      	ldr	r4, [pc, #84]	; (8014c00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8014bac:	7823      	ldrb	r3, [r4, #0]
 8014bae:	f3bf 8f5b 	dmb	ish
 8014bb2:	07da      	lsls	r2, r3, #31
 8014bb4:	4605      	mov	r5, r0
 8014bb6:	d40b      	bmi.n	8014bd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014bb8:	4620      	mov	r0, r4
 8014bba:	f006 ff55 	bl	801ba68 <__cxa_guard_acquire>
 8014bbe:	b138      	cbz	r0, 8014bd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014bc0:	4620      	mov	r0, r4
 8014bc2:	f006 ff5d 	bl	801ba80 <__cxa_guard_release>
 8014bc6:	4a0f      	ldr	r2, [pc, #60]	; (8014c04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014bc8:	490f      	ldr	r1, [pc, #60]	; (8014c08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8014bca:	4810      	ldr	r0, [pc, #64]	; (8014c0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014bcc:	f006 ff45 	bl	801ba5a <__aeabi_atexit>
 8014bd0:	4c0f      	ldr	r4, [pc, #60]	; (8014c10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8014bd2:	7823      	ldrb	r3, [r4, #0]
 8014bd4:	f3bf 8f5b 	dmb	ish
 8014bd8:	07db      	lsls	r3, r3, #31
 8014bda:	d40b      	bmi.n	8014bf4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014bdc:	4620      	mov	r0, r4
 8014bde:	f006 ff43 	bl	801ba68 <__cxa_guard_acquire>
 8014be2:	b138      	cbz	r0, 8014bf4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014be4:	4620      	mov	r0, r4
 8014be6:	f006 ff4b 	bl	801ba80 <__cxa_guard_release>
 8014bea:	4a06      	ldr	r2, [pc, #24]	; (8014c04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014bec:	4909      	ldr	r1, [pc, #36]	; (8014c14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8014bee:	480a      	ldr	r0, [pc, #40]	; (8014c18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014bf0:	f006 ff33 	bl	801ba5a <__aeabi_atexit>
 8014bf4:	4b05      	ldr	r3, [pc, #20]	; (8014c0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014bf6:	66ab      	str	r3, [r5, #104]	; 0x68
 8014bf8:	4b07      	ldr	r3, [pc, #28]	; (8014c18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014bfa:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014bfc:	bd38      	pop	{r3, r4, r5, pc}
 8014bfe:	bf00      	nop
 8014c00:	200177dc 	.word	0x200177dc
 8014c04:	20000000 	.word	0x20000000
 8014c08:	08012739 	.word	0x08012739
 8014c0c:	20000088 	.word	0x20000088
 8014c10:	200177e0 	.word	0x200177e0
 8014c14:	08012737 	.word	0x08012737
 8014c18:	2000008c 	.word	0x2000008c

08014c1c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014c1c:	b510      	push	{r4, lr}
 8014c1e:	4604      	mov	r4, r0
 8014c20:	f7ff ff88 	bl	8014b34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014c24:	4620      	mov	r0, r4
 8014c26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014c2a:	f7ff bfbd 	b.w	8014ba8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014c2e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014c2e:	b510      	push	{r4, lr}
 8014c30:	4604      	mov	r4, r0
 8014c32:	f7ff fff3 	bl	8014c1c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8014c36:	4620      	mov	r0, r4
 8014c38:	f7ff ff72 	bl	8014b20 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014c3c:	4620      	mov	r0, r4
 8014c3e:	f7ff fdf9 	bl	8014834 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014c42:	4620      	mov	r0, r4
 8014c44:	f7ff fcfa 	bl	801463c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8014c48:	4620      	mov	r0, r4
 8014c4a:	f7ff fd75 	bl	8014738 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014c4e:	4620      	mov	r0, r4
 8014c50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014c54:	f7ff bee0 	b.w	8014a18 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08014c58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8014c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c5c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8014c60:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8014c64:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8014c68:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8014c6c:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8014c70:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8014c74:	8808      	ldrh	r0, [r1, #0]
 8014c76:	fb05 4c0e 	mla	ip, r5, lr, r4
 8014c7a:	2d00      	cmp	r5, #0
 8014c7c:	eb02 0a0c 	add.w	sl, r2, ip
 8014c80:	f2c0 80b0 	blt.w	8014de4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8014c84:	45ab      	cmp	fp, r5
 8014c86:	f340 80ad 	ble.w	8014de4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8014c8a:	2c00      	cmp	r4, #0
 8014c8c:	f2c0 80a8 	blt.w	8014de0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8014c90:	45a6      	cmp	lr, r4
 8014c92:	f340 80a5 	ble.w	8014de0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8014c96:	f812 200c 	ldrb.w	r2, [r2, ip]
 8014c9a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8014c9e:	1c62      	adds	r2, r4, #1
 8014ca0:	f100 80a3 	bmi.w	8014dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8014ca4:	4596      	cmp	lr, r2
 8014ca6:	f340 80a0 	ble.w	8014dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8014caa:	f1b9 0f00 	cmp.w	r9, #0
 8014cae:	f000 809c 	beq.w	8014dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8014cb2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014cb6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8014cba:	3501      	adds	r5, #1
 8014cbc:	f100 8099 	bmi.w	8014df2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8014cc0:	45ab      	cmp	fp, r5
 8014cc2:	f340 8096 	ble.w	8014df2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8014cc6:	2f00      	cmp	r7, #0
 8014cc8:	f000 8093 	beq.w	8014df2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8014ccc:	2c00      	cmp	r4, #0
 8014cce:	f2c0 808e 	blt.w	8014dee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8014cd2:	45a6      	cmp	lr, r4
 8014cd4:	f340 808b 	ble.w	8014dee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8014cd8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8014cdc:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8014ce0:	3401      	adds	r4, #1
 8014ce2:	f100 8089 	bmi.w	8014df8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8014ce6:	45a6      	cmp	lr, r4
 8014ce8:	f340 8086 	ble.w	8014df8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8014cec:	f1b9 0f00 	cmp.w	r9, #0
 8014cf0:	f000 8082 	beq.w	8014df8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8014cf4:	44d6      	add	lr, sl
 8014cf6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014cfa:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8014cfe:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8014d02:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014d06:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8014d0a:	fb19 fe07 	smulbb	lr, r9, r7
 8014d0e:	ea44 0808 	orr.w	r8, r4, r8
 8014d12:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8014d16:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8014d1a:	f1c7 0210 	rsb	r2, r7, #16
 8014d1e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014d22:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014d26:	ea44 0c0c 	orr.w	ip, r4, ip
 8014d2a:	eba2 0209 	sub.w	r2, r2, r9
 8014d2e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8014d32:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8014d36:	fb04 f40c 	mul.w	r4, r4, ip
 8014d3a:	fb02 4808 	mla	r8, r2, r8, r4
 8014d3e:	041a      	lsls	r2, r3, #16
 8014d40:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014d44:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014d48:	4313      	orrs	r3, r2
 8014d4a:	042a      	lsls	r2, r5, #16
 8014d4c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014d50:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014d54:	fb0e 8303 	mla	r3, lr, r3, r8
 8014d58:	432a      	orrs	r2, r5
 8014d5a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8014d5e:	fb07 3202 	mla	r2, r7, r2, r3
 8014d62:	0d53      	lsrs	r3, r2, #21
 8014d64:	0952      	lsrs	r2, r2, #5
 8014d66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014d6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014d6e:	431a      	orrs	r2, r3
 8014d70:	b293      	uxth	r3, r2
 8014d72:	b2b4      	uxth	r4, r6
 8014d74:	1202      	asrs	r2, r0, #8
 8014d76:	43f6      	mvns	r6, r6
 8014d78:	b2f6      	uxtb	r6, r6
 8014d7a:	121d      	asrs	r5, r3, #8
 8014d7c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014d80:	fb12 f206 	smulbb	r2, r2, r6
 8014d84:	10c7      	asrs	r7, r0, #3
 8014d86:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014d8a:	00c0      	lsls	r0, r0, #3
 8014d8c:	fb05 2504 	mla	r5, r5, r4, r2
 8014d90:	b2c0      	uxtb	r0, r0
 8014d92:	10da      	asrs	r2, r3, #3
 8014d94:	00db      	lsls	r3, r3, #3
 8014d96:	b2db      	uxtb	r3, r3
 8014d98:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014d9c:	fb10 f006 	smulbb	r0, r0, r6
 8014da0:	b2ad      	uxth	r5, r5
 8014da2:	fb03 0004 	mla	r0, r3, r4, r0
 8014da6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014daa:	fb17 f706 	smulbb	r7, r7, r6
 8014dae:	b280      	uxth	r0, r0
 8014db0:	1c6b      	adds	r3, r5, #1
 8014db2:	fb02 7204 	mla	r2, r2, r4, r7
 8014db6:	b292      	uxth	r2, r2
 8014db8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8014dbc:	1c43      	adds	r3, r0, #1
 8014dbe:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014dc2:	1c50      	adds	r0, r2, #1
 8014dc4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8014dc8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8014dcc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014dd0:	0952      	lsrs	r2, r2, #5
 8014dd2:	432b      	orrs	r3, r5
 8014dd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014dd8:	4313      	orrs	r3, r2
 8014dda:	800b      	strh	r3, [r1, #0]
 8014ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014de0:	4680      	mov	r8, r0
 8014de2:	e75c      	b.n	8014c9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8014de4:	4684      	mov	ip, r0
 8014de6:	4680      	mov	r8, r0
 8014de8:	e767      	b.n	8014cba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8014dea:	4684      	mov	ip, r0
 8014dec:	e765      	b.n	8014cba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8014dee:	4605      	mov	r5, r0
 8014df0:	e776      	b.n	8014ce0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8014df2:	4603      	mov	r3, r0
 8014df4:	4605      	mov	r5, r0
 8014df6:	e782      	b.n	8014cfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8014df8:	4603      	mov	r3, r0
 8014dfa:	e780      	b.n	8014cfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08014dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e00:	b099      	sub	sp, #100	; 0x64
 8014e02:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8014e06:	9215      	str	r2, [sp, #84]	; 0x54
 8014e08:	9309      	str	r3, [sp, #36]	; 0x24
 8014e0a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014e0c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8014e10:	930d      	str	r3, [sp, #52]	; 0x34
 8014e12:	910c      	str	r1, [sp, #48]	; 0x30
 8014e14:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8014e18:	9016      	str	r0, [sp, #88]	; 0x58
 8014e1a:	6850      	ldr	r0, [r2, #4]
 8014e1c:	6812      	ldr	r2, [r2, #0]
 8014e1e:	fb00 1303 	mla	r3, r0, r3, r1
 8014e22:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014e26:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e28:	681b      	ldr	r3, [r3, #0]
 8014e2a:	930b      	str	r3, [sp, #44]	; 0x2c
 8014e2c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e2e:	685e      	ldr	r6, [r3, #4]
 8014e30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e32:	43db      	mvns	r3, r3
 8014e34:	b2db      	uxtb	r3, r3
 8014e36:	3604      	adds	r6, #4
 8014e38:	930a      	str	r3, [sp, #40]	; 0x28
 8014e3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e3c:	2b00      	cmp	r3, #0
 8014e3e:	dc03      	bgt.n	8014e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014e40:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014e42:	2b00      	cmp	r3, #0
 8014e44:	f340 8225 	ble.w	8015292 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8014e48:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014e4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014e52:	1e48      	subs	r0, r1, #1
 8014e54:	1e57      	subs	r7, r2, #1
 8014e56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e58:	2b00      	cmp	r3, #0
 8014e5a:	f340 80e3 	ble.w	8015024 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014e5e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8014e62:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014e66:	d406      	bmi.n	8014e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014e68:	4584      	cmp	ip, r0
 8014e6a:	da04      	bge.n	8014e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014e6c:	2b00      	cmp	r3, #0
 8014e6e:	db02      	blt.n	8014e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014e70:	42bb      	cmp	r3, r7
 8014e72:	f2c0 80d8 	blt.w	8015026 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014e76:	f11c 0c01 	adds.w	ip, ip, #1
 8014e7a:	f100 80c9 	bmi.w	8015010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014e7e:	4561      	cmp	r1, ip
 8014e80:	f2c0 80c6 	blt.w	8015010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014e84:	3301      	adds	r3, #1
 8014e86:	f100 80c3 	bmi.w	8015010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014e8a:	429a      	cmp	r2, r3
 8014e8c:	f2c0 80c0 	blt.w	8015010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014e90:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014e94:	4647      	mov	r7, r8
 8014e96:	f1bb 0f00 	cmp.w	fp, #0
 8014e9a:	f340 80e3 	ble.w	8015064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8014e9e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014ea0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ea2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014ea6:	689b      	ldr	r3, [r3, #8]
 8014ea8:	ea5f 422a 	movs.w	r2, sl, asr #16
 8014eac:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014eb0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014eb4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014eb8:	f100 8121 	bmi.w	80150fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014ebc:	f103 39ff 	add.w	r9, r3, #4294967295
 8014ec0:	454a      	cmp	r2, r9
 8014ec2:	f280 811c 	bge.w	80150fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014ec6:	f1bc 0f00 	cmp.w	ip, #0
 8014eca:	f2c0 8118 	blt.w	80150fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014ece:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014ed2:	45cc      	cmp	ip, r9
 8014ed4:	f280 8113 	bge.w	80150fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014ed8:	b21b      	sxth	r3, r3
 8014eda:	fb0c 2203 	mla	r2, ip, r3, r2
 8014ede:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014ee0:	eb04 0902 	add.w	r9, r4, r2
 8014ee4:	5ca2      	ldrb	r2, [r4, r2]
 8014ee6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8014eea:	2800      	cmp	r0, #0
 8014eec:	f000 80fe 	beq.w	80150ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014ef0:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014ef4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014ef8:	9211      	str	r2, [sp, #68]	; 0x44
 8014efa:	b151      	cbz	r1, 8014f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014efc:	eb09 0203 	add.w	r2, r9, r3
 8014f00:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014f04:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014f08:	930f      	str	r3, [sp, #60]	; 0x3c
 8014f0a:	7853      	ldrb	r3, [r2, #1]
 8014f0c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014f10:	9312      	str	r3, [sp, #72]	; 0x48
 8014f12:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014f14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014f16:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014f1a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014f1e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014f22:	ea4c 0c03 	orr.w	ip, ip, r3
 8014f26:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014f28:	041b      	lsls	r3, r3, #16
 8014f2a:	fb10 f201 	smulbb	r2, r0, r1
 8014f2e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014f32:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014f36:	10d2      	asrs	r2, r2, #3
 8014f38:	4323      	orrs	r3, r4
 8014f3a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8014f3e:	4353      	muls	r3, r2
 8014f40:	fb09 330c 	mla	r3, r9, ip, r3
 8014f44:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014f48:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014f4c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014f50:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014f54:	f1c1 0c10 	rsb	ip, r1, #16
 8014f58:	ebac 0c00 	sub.w	ip, ip, r0
 8014f5c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014f60:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014f64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014f66:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014f68:	0418      	lsls	r0, r3, #16
 8014f6a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014f6e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014f72:	4318      	orrs	r0, r3
 8014f74:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014f78:	fb02 c200 	mla	r2, r2, r0, ip
 8014f7c:	0d53      	lsrs	r3, r2, #21
 8014f7e:	0952      	lsrs	r2, r2, #5
 8014f80:	8838      	ldrh	r0, [r7, #0]
 8014f82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f86:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014f8a:	431a      	orrs	r2, r3
 8014f8c:	b292      	uxth	r2, r2
 8014f8e:	1201      	asrs	r1, r0, #8
 8014f90:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8014f94:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8014f98:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014f9c:	fb11 f104 	smulbb	r1, r1, r4
 8014fa0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014fa4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014fa8:	00c0      	lsls	r0, r0, #3
 8014faa:	fb0c 1c03 	mla	ip, ip, r3, r1
 8014fae:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014fb2:	10d1      	asrs	r1, r2, #3
 8014fb4:	b2c0      	uxtb	r0, r0
 8014fb6:	00d2      	lsls	r2, r2, #3
 8014fb8:	b2d2      	uxtb	r2, r2
 8014fba:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014fbe:	fb1e fe04 	smulbb	lr, lr, r4
 8014fc2:	fb10 f004 	smulbb	r0, r0, r4
 8014fc6:	fa1f fc8c 	uxth.w	ip, ip
 8014fca:	fb01 e103 	mla	r1, r1, r3, lr
 8014fce:	fb02 0303 	mla	r3, r2, r3, r0
 8014fd2:	b29a      	uxth	r2, r3
 8014fd4:	f10c 0301 	add.w	r3, ip, #1
 8014fd8:	b289      	uxth	r1, r1
 8014fda:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014fde:	1c53      	adds	r3, r2, #1
 8014fe0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014fe4:	1c4a      	adds	r2, r1, #1
 8014fe6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014fea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014fee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014ff2:	0949      	lsrs	r1, r1, #5
 8014ff4:	ea43 030c 	orr.w	r3, r3, ip
 8014ff8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014ffc:	430b      	orrs	r3, r1
 8014ffe:	803b      	strh	r3, [r7, #0]
 8015000:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015002:	449a      	add	sl, r3
 8015004:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015006:	3702      	adds	r7, #2
 8015008:	441d      	add	r5, r3
 801500a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801500e:	e742      	b.n	8014e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015010:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015012:	449a      	add	sl, r3
 8015014:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015016:	441d      	add	r5, r3
 8015018:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801501a:	3b01      	subs	r3, #1
 801501c:	9309      	str	r3, [sp, #36]	; 0x24
 801501e:	f108 0802 	add.w	r8, r8, #2
 8015022:	e718      	b.n	8014e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015024:	d023      	beq.n	801506e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8015026:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015028:	9825      	ldr	r0, [sp, #148]	; 0x94
 801502a:	3b01      	subs	r3, #1
 801502c:	fb00 a003 	mla	r0, r0, r3, sl
 8015030:	1400      	asrs	r0, r0, #16
 8015032:	f53f af2d 	bmi.w	8014e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015036:	3901      	subs	r1, #1
 8015038:	4288      	cmp	r0, r1
 801503a:	f6bf af29 	bge.w	8014e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801503e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8015040:	fb01 5303 	mla	r3, r1, r3, r5
 8015044:	141b      	asrs	r3, r3, #16
 8015046:	f53f af23 	bmi.w	8014e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801504a:	3a01      	subs	r2, #1
 801504c:	4293      	cmp	r3, r2
 801504e:	f6bf af1f 	bge.w	8014e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015052:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8015056:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801505a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801505e:	f1be 0f00 	cmp.w	lr, #0
 8015062:	dc6c      	bgt.n	801513e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8015064:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015066:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801506a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801506e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015070:	2b00      	cmp	r3, #0
 8015072:	f340 810e 	ble.w	8015292 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8015076:	ee30 0a04 	vadd.f32	s0, s0, s8
 801507a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801507e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015082:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015084:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015088:	ee31 1a05 	vadd.f32	s2, s2, s10
 801508c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015090:	eef0 6a62 	vmov.f32	s13, s5
 8015094:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015098:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801509c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150a0:	ee16 aa90 	vmov	sl, s13
 80150a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80150a8:	eef0 6a43 	vmov.f32	s13, s6
 80150ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80150b0:	ee12 2a90 	vmov	r2, s5
 80150b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80150b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80150bc:	ee13 2a10 	vmov	r2, s6
 80150c0:	9325      	str	r3, [sp, #148]	; 0x94
 80150c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80150c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80150c8:	9326      	str	r3, [sp, #152]	; 0x98
 80150ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80150cc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80150ce:	3b01      	subs	r3, #1
 80150d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80150d4:	930c      	str	r3, [sp, #48]	; 0x30
 80150d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80150d8:	bf08      	it	eq
 80150da:	4613      	moveq	r3, r2
 80150dc:	ee16 5a90 	vmov	r5, s13
 80150e0:	9309      	str	r3, [sp, #36]	; 0x24
 80150e2:	eeb0 3a67 	vmov.f32	s6, s15
 80150e6:	eef0 2a47 	vmov.f32	s5, s14
 80150ea:	e6a6      	b.n	8014e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80150ec:	2900      	cmp	r1, #0
 80150ee:	f43f af10 	beq.w	8014f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80150f2:	f819 3003 	ldrb.w	r3, [r9, r3]
 80150f6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80150fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80150fc:	e709      	b.n	8014f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80150fe:	f112 0901 	adds.w	r9, r2, #1
 8015102:	f53f af7d 	bmi.w	8015000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015106:	454b      	cmp	r3, r9
 8015108:	f6ff af7a 	blt.w	8015000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801510c:	f11c 0901 	adds.w	r9, ip, #1
 8015110:	f53f af76 	bmi.w	8015000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015114:	45ce      	cmp	lr, r9
 8015116:	f6ff af73 	blt.w	8015000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801511a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801511c:	9202      	str	r2, [sp, #8]
 801511e:	b21b      	sxth	r3, r3
 8015120:	fa0f f28e 	sxth.w	r2, lr
 8015124:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8015128:	e9cd c003 	strd	ip, r0, [sp, #12]
 801512c:	9201      	str	r2, [sp, #4]
 801512e:	9300      	str	r3, [sp, #0]
 8015130:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015132:	9816      	ldr	r0, [sp, #88]	; 0x58
 8015134:	4633      	mov	r3, r6
 8015136:	4639      	mov	r1, r7
 8015138:	f7ff fd8e 	bl	8014c58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801513c:	e760      	b.n	8015000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801513e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015140:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015142:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015146:	ea4f 422a 	mov.w	r2, sl, asr #16
 801514a:	1429      	asrs	r1, r5, #16
 801514c:	fb03 2101 	mla	r1, r3, r1, r2
 8015150:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015152:	440a      	add	r2, r1
 8015154:	5c61      	ldrb	r1, [r4, r1]
 8015156:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801515a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801515e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8015162:	f1bc 0f00 	cmp.w	ip, #0
 8015166:	f000 808c 	beq.w	8015282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801516a:	7857      	ldrb	r7, [r2, #1]
 801516c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8015170:	9413      	str	r4, [sp, #76]	; 0x4c
 8015172:	b140      	cbz	r0, 8015186 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015174:	18d7      	adds	r7, r2, r3
 8015176:	5cd3      	ldrb	r3, [r2, r3]
 8015178:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801517c:	9310      	str	r3, [sp, #64]	; 0x40
 801517e:	787b      	ldrb	r3, [r7, #1]
 8015180:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015184:	9314      	str	r3, [sp, #80]	; 0x50
 8015186:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015188:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801518a:	fb1c f200 	smulbb	r2, ip, r0
 801518e:	041f      	lsls	r7, r3, #16
 8015190:	10d2      	asrs	r2, r2, #3
 8015192:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015196:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801519a:	431f      	orrs	r7, r3
 801519c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80151a0:	9317      	str	r3, [sp, #92]	; 0x5c
 80151a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80151a4:	041b      	lsls	r3, r3, #16
 80151a6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80151aa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80151ae:	ea43 030b 	orr.w	r3, r3, fp
 80151b2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80151b4:	4353      	muls	r3, r2
 80151b6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80151ba:	fb04 3707 	mla	r7, r4, r7, r3
 80151be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80151c2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80151c6:	ea43 0b01 	orr.w	fp, r3, r1
 80151ca:	f1c0 0110 	rsb	r1, r0, #16
 80151ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80151d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80151d2:	eba1 0c0c 	sub.w	ip, r1, ip
 80151d6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80151da:	fb0c 770b 	mla	r7, ip, fp, r7
 80151de:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80151e2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80151e6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80151ea:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80151ee:	ea4c 0c0b 	orr.w	ip, ip, fp
 80151f2:	fb02 770c 	mla	r7, r2, ip, r7
 80151f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80151f8:	0d79      	lsrs	r1, r7, #21
 80151fa:	097f      	lsrs	r7, r7, #5
 80151fc:	8812      	ldrh	r2, [r2, #0]
 80151fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015202:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015206:	430f      	orrs	r7, r1
 8015208:	b2bb      	uxth	r3, r7
 801520a:	1211      	asrs	r1, r2, #8
 801520c:	1218      	asrs	r0, r3, #8
 801520e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015212:	fb11 f104 	smulbb	r1, r1, r4
 8015216:	10d7      	asrs	r7, r2, #3
 8015218:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801521c:	00d2      	lsls	r2, r2, #3
 801521e:	fb00 1009 	mla	r0, r0, r9, r1
 8015222:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015226:	10d9      	asrs	r1, r3, #3
 8015228:	b2d2      	uxtb	r2, r2
 801522a:	00db      	lsls	r3, r3, #3
 801522c:	fb17 f704 	smulbb	r7, r7, r4
 8015230:	fb12 f204 	smulbb	r2, r2, r4
 8015234:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015238:	b2db      	uxtb	r3, r3
 801523a:	b280      	uxth	r0, r0
 801523c:	fb01 7109 	mla	r1, r1, r9, r7
 8015240:	fb03 2309 	mla	r3, r3, r9, r2
 8015244:	b29b      	uxth	r3, r3
 8015246:	b289      	uxth	r1, r1
 8015248:	1c42      	adds	r2, r0, #1
 801524a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801524e:	1c4f      	adds	r7, r1, #1
 8015250:	1c5a      	adds	r2, r3, #1
 8015252:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015256:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801525a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801525e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015262:	0949      	lsrs	r1, r1, #5
 8015264:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015266:	4310      	orrs	r0, r2
 8015268:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801526c:	4308      	orrs	r0, r1
 801526e:	f823 0b02 	strh.w	r0, [r3], #2
 8015272:	930e      	str	r3, [sp, #56]	; 0x38
 8015274:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015276:	449a      	add	sl, r3
 8015278:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801527a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801527e:	441d      	add	r5, r3
 8015280:	e6ed      	b.n	801505e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8015282:	2800      	cmp	r0, #0
 8015284:	f43f af7f 	beq.w	8015186 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015288:	5cd3      	ldrb	r3, [r2, r3]
 801528a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801528e:	9310      	str	r3, [sp, #64]	; 0x40
 8015290:	e779      	b.n	8015186 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015292:	b019      	add	sp, #100	; 0x64
 8015294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8015298:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801529c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80152a0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80152a4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80152a8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80152ac:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80152b0:	8808      	ldrh	r0, [r1, #0]
 80152b2:	fb08 470e 	mla	r7, r8, lr, r4
 80152b6:	f1b8 0f00 	cmp.w	r8, #0
 80152ba:	eb02 0907 	add.w	r9, r2, r7
 80152be:	db67      	blt.n	8015390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80152c0:	45c2      	cmp	sl, r8
 80152c2:	dd65      	ble.n	8015390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80152c4:	2c00      	cmp	r4, #0
 80152c6:	db61      	blt.n	801538c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80152c8:	45a6      	cmp	lr, r4
 80152ca:	dd5f      	ble.n	801538c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80152cc:	5dd2      	ldrb	r2, [r2, r7]
 80152ce:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80152d2:	1c62      	adds	r2, r4, #1
 80152d4:	d45f      	bmi.n	8015396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80152d6:	4596      	cmp	lr, r2
 80152d8:	dd5d      	ble.n	8015396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80152da:	2d00      	cmp	r5, #0
 80152dc:	d05b      	beq.n	8015396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80152de:	f899 2001 	ldrb.w	r2, [r9, #1]
 80152e2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80152e6:	f118 0801 	adds.w	r8, r8, #1
 80152ea:	d458      	bmi.n	801539e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80152ec:	45c2      	cmp	sl, r8
 80152ee:	dd56      	ble.n	801539e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80152f0:	2e00      	cmp	r6, #0
 80152f2:	d054      	beq.n	801539e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80152f4:	2c00      	cmp	r4, #0
 80152f6:	db50      	blt.n	801539a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80152f8:	45a6      	cmp	lr, r4
 80152fa:	dd4e      	ble.n	801539a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80152fc:	f819 200e 	ldrb.w	r2, [r9, lr]
 8015300:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015304:	3401      	adds	r4, #1
 8015306:	d407      	bmi.n	8015318 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015308:	45a6      	cmp	lr, r4
 801530a:	dd05      	ble.n	8015318 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801530c:	b125      	cbz	r5, 8015318 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801530e:	44ce      	add	lr, r9
 8015310:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015314:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8015318:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801531c:	fb15 f406 	smulbb	r4, r5, r6
 8015320:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015324:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8015328:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801532c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8015330:	ea43 0c0c 	orr.w	ip, r3, ip
 8015334:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015338:	f1c6 0310 	rsb	r3, r6, #16
 801533c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015340:	1b5b      	subs	r3, r3, r5
 8015342:	ea4e 0707 	orr.w	r7, lr, r7
 8015346:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801534a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801534e:	437d      	muls	r5, r7
 8015350:	fb03 5c0c 	mla	ip, r3, ip, r5
 8015354:	0403      	lsls	r3, r0, #16
 8015356:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801535a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801535e:	4318      	orrs	r0, r3
 8015360:	0413      	lsls	r3, r2, #16
 8015362:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015366:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801536a:	4313      	orrs	r3, r2
 801536c:	fb04 c000 	mla	r0, r4, r0, ip
 8015370:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8015374:	fb06 0003 	mla	r0, r6, r3, r0
 8015378:	0d43      	lsrs	r3, r0, #21
 801537a:	0940      	lsrs	r0, r0, #5
 801537c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015380:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015384:	4318      	orrs	r0, r3
 8015386:	8008      	strh	r0, [r1, #0]
 8015388:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801538c:	4684      	mov	ip, r0
 801538e:	e7a0      	b.n	80152d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8015390:	4607      	mov	r7, r0
 8015392:	4684      	mov	ip, r0
 8015394:	e7a7      	b.n	80152e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8015396:	4607      	mov	r7, r0
 8015398:	e7a5      	b.n	80152e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801539a:	4602      	mov	r2, r0
 801539c:	e7b2      	b.n	8015304 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801539e:	4602      	mov	r2, r0
 80153a0:	e7ba      	b.n	8015318 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080153a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80153a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153a6:	b093      	sub	sp, #76	; 0x4c
 80153a8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80153ac:	920f      	str	r2, [sp, #60]	; 0x3c
 80153ae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80153b0:	9108      	str	r1, [sp, #32]
 80153b2:	9306      	str	r3, [sp, #24]
 80153b4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80153b8:	9010      	str	r0, [sp, #64]	; 0x40
 80153ba:	6850      	ldr	r0, [r2, #4]
 80153bc:	6812      	ldr	r2, [r2, #0]
 80153be:	fb00 1303 	mla	r3, r0, r3, r1
 80153c2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80153c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80153c8:	681b      	ldr	r3, [r3, #0]
 80153ca:	9307      	str	r3, [sp, #28]
 80153cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80153ce:	685f      	ldr	r7, [r3, #4]
 80153d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80153d4:	3704      	adds	r7, #4
 80153d6:	9b08      	ldr	r3, [sp, #32]
 80153d8:	2b00      	cmp	r3, #0
 80153da:	dc03      	bgt.n	80153e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80153dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80153de:	2b00      	cmp	r3, #0
 80153e0:	f340 81b2 	ble.w	8015748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80153e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80153e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80153ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80153ee:	1e48      	subs	r0, r1, #1
 80153f0:	f102 3cff 	add.w	ip, r2, #4294967295
 80153f4:	9b06      	ldr	r3, [sp, #24]
 80153f6:	2b00      	cmp	r3, #0
 80153f8:	f340 80a9 	ble.w	801554e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80153fc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8015400:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015404:	d406      	bmi.n	8015414 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015406:	4586      	cmp	lr, r0
 8015408:	da04      	bge.n	8015414 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801540a:	2b00      	cmp	r3, #0
 801540c:	db02      	blt.n	8015414 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801540e:	4563      	cmp	r3, ip
 8015410:	f2c0 809e 	blt.w	8015550 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015414:	f11e 0e01 	adds.w	lr, lr, #1
 8015418:	f100 808f 	bmi.w	801553a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801541c:	4571      	cmp	r1, lr
 801541e:	f2c0 808c 	blt.w	801553a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015422:	3301      	adds	r3, #1
 8015424:	f100 8089 	bmi.w	801553a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015428:	429a      	cmp	r2, r3
 801542a:	f2c0 8086 	blt.w	801553a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801542e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8015432:	46c8      	mov	r8, r9
 8015434:	f1bb 0f00 	cmp.w	fp, #0
 8015438:	f340 80a6 	ble.w	8015588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801543c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801543e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015440:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015444:	689b      	ldr	r3, [r3, #8]
 8015446:	1422      	asrs	r2, r4, #16
 8015448:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801544c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8015450:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8015454:	f100 80e3 	bmi.w	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015458:	f103 3aff 	add.w	sl, r3, #4294967295
 801545c:	4552      	cmp	r2, sl
 801545e:	f280 80de 	bge.w	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015462:	f1bc 0f00 	cmp.w	ip, #0
 8015466:	f2c0 80da 	blt.w	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801546a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801546e:	45d4      	cmp	ip, sl
 8015470:	f280 80d5 	bge.w	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015474:	b21b      	sxth	r3, r3
 8015476:	fb0c 2203 	mla	r2, ip, r3, r2
 801547a:	9d07      	ldr	r5, [sp, #28]
 801547c:	eb05 0a02 	add.w	sl, r5, r2
 8015480:	5caa      	ldrb	r2, [r5, r2]
 8015482:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8015486:	2800      	cmp	r0, #0
 8015488:	f000 80c0 	beq.w	801560c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801548c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015490:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8015494:	920b      	str	r2, [sp, #44]	; 0x2c
 8015496:	b151      	cbz	r1, 80154ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8015498:	eb0a 0203 	add.w	r2, sl, r3
 801549c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80154a0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80154a4:	9309      	str	r3, [sp, #36]	; 0x24
 80154a6:	7853      	ldrb	r3, [r2, #1]
 80154a8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80154ac:	930c      	str	r3, [sp, #48]	; 0x30
 80154ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80154b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80154b2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80154b6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80154ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80154be:	ea4c 0c03 	orr.w	ip, ip, r3
 80154c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80154c4:	041b      	lsls	r3, r3, #16
 80154c6:	fb10 f201 	smulbb	r2, r0, r1
 80154ca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80154ce:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80154d2:	10d2      	asrs	r2, r2, #3
 80154d4:	432b      	orrs	r3, r5
 80154d6:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80154da:	4353      	muls	r3, r2
 80154dc:	fb0a 330c 	mla	r3, sl, ip, r3
 80154e0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80154e4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80154e8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80154ec:	ea4c 0e0e 	orr.w	lr, ip, lr
 80154f0:	f1c1 0c10 	rsb	ip, r1, #16
 80154f4:	ebac 0c00 	sub.w	ip, ip, r0
 80154f8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80154fc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015500:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015502:	0418      	lsls	r0, r3, #16
 8015504:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015508:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801550c:	4318      	orrs	r0, r3
 801550e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015512:	fb02 c200 	mla	r2, r2, r0, ip
 8015516:	0d53      	lsrs	r3, r2, #21
 8015518:	0952      	lsrs	r2, r2, #5
 801551a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801551e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015522:	431a      	orrs	r2, r3
 8015524:	f8a8 2000 	strh.w	r2, [r8]
 8015528:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801552a:	441c      	add	r4, r3
 801552c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801552e:	f108 0802 	add.w	r8, r8, #2
 8015532:	441e      	add	r6, r3
 8015534:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015538:	e77c      	b.n	8015434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801553a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801553c:	441c      	add	r4, r3
 801553e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015540:	441e      	add	r6, r3
 8015542:	9b06      	ldr	r3, [sp, #24]
 8015544:	3b01      	subs	r3, #1
 8015546:	9306      	str	r3, [sp, #24]
 8015548:	f109 0902 	add.w	r9, r9, #2
 801554c:	e752      	b.n	80153f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801554e:	d020      	beq.n	8015592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015550:	9b06      	ldr	r3, [sp, #24]
 8015552:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8015554:	3b01      	subs	r3, #1
 8015556:	fb00 4003 	mla	r0, r0, r3, r4
 801555a:	1400      	asrs	r0, r0, #16
 801555c:	f53f af67 	bmi.w	801542e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015560:	3901      	subs	r1, #1
 8015562:	4288      	cmp	r0, r1
 8015564:	f6bf af63 	bge.w	801542e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015568:	9920      	ldr	r1, [sp, #128]	; 0x80
 801556a:	fb01 6303 	mla	r3, r1, r3, r6
 801556e:	141b      	asrs	r3, r3, #16
 8015570:	f53f af5d 	bmi.w	801542e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015574:	3a01      	subs	r2, #1
 8015576:	4293      	cmp	r3, r2
 8015578:	f6bf af59 	bge.w	801542e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801557c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8015580:	46ca      	mov	sl, r9
 8015582:	f1b8 0f00 	cmp.w	r8, #0
 8015586:	dc67      	bgt.n	8015658 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015588:	9b06      	ldr	r3, [sp, #24]
 801558a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801558e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8015592:	9b08      	ldr	r3, [sp, #32]
 8015594:	2b00      	cmp	r3, #0
 8015596:	f340 80d7 	ble.w	8015748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801559a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801559e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80155a2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80155a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80155a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80155ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80155b0:	eeb0 6a62 	vmov.f32	s12, s5
 80155b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80155b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80155c0:	ee16 4a10 	vmov	r4, s12
 80155c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80155c8:	eeb0 6a43 	vmov.f32	s12, s6
 80155cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80155d0:	ee12 2a90 	vmov	r2, s5
 80155d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80155d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80155dc:	ee13 2a10 	vmov	r2, s6
 80155e0:	931f      	str	r3, [sp, #124]	; 0x7c
 80155e2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80155e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80155e8:	9320      	str	r3, [sp, #128]	; 0x80
 80155ea:	9b08      	ldr	r3, [sp, #32]
 80155ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80155ee:	3b01      	subs	r3, #1
 80155f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155f4:	9308      	str	r3, [sp, #32]
 80155f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80155f8:	bf08      	it	eq
 80155fa:	4613      	moveq	r3, r2
 80155fc:	ee16 6a10 	vmov	r6, s12
 8015600:	9306      	str	r3, [sp, #24]
 8015602:	eeb0 3a67 	vmov.f32	s6, s15
 8015606:	eef0 2a47 	vmov.f32	s5, s14
 801560a:	e6e4      	b.n	80153d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801560c:	2900      	cmp	r1, #0
 801560e:	f43f af4e 	beq.w	80154ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8015612:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8015616:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801561a:	9309      	str	r3, [sp, #36]	; 0x24
 801561c:	e747      	b.n	80154ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801561e:	f112 0a01 	adds.w	sl, r2, #1
 8015622:	d481      	bmi.n	8015528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015624:	4553      	cmp	r3, sl
 8015626:	f6ff af7f 	blt.w	8015528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801562a:	f11c 0a01 	adds.w	sl, ip, #1
 801562e:	f53f af7b 	bmi.w	8015528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015632:	45d6      	cmp	lr, sl
 8015634:	f6ff af78 	blt.w	8015528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015638:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801563c:	b21b      	sxth	r3, r3
 801563e:	fa0f f28e 	sxth.w	r2, lr
 8015642:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015646:	9201      	str	r2, [sp, #4]
 8015648:	9300      	str	r3, [sp, #0]
 801564a:	9a07      	ldr	r2, [sp, #28]
 801564c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801564e:	463b      	mov	r3, r7
 8015650:	4641      	mov	r1, r8
 8015652:	f7ff fe21 	bl	8015298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015656:	e767      	b.n	8015528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015658:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801565a:	9d07      	ldr	r5, [sp, #28]
 801565c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015660:	1422      	asrs	r2, r4, #16
 8015662:	1431      	asrs	r1, r6, #16
 8015664:	fb03 2101 	mla	r1, r3, r1, r2
 8015668:	9a07      	ldr	r2, [sp, #28]
 801566a:	440a      	add	r2, r1
 801566c:	5c69      	ldrb	r1, [r5, r1]
 801566e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8015672:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015676:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801567a:	f1be 0f00 	cmp.w	lr, #0
 801567e:	d05c      	beq.n	801573a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8015680:	f892 c001 	ldrb.w	ip, [r2, #1]
 8015684:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8015688:	950d      	str	r5, [sp, #52]	; 0x34
 801568a:	b150      	cbz	r0, 80156a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801568c:	eb02 0c03 	add.w	ip, r2, r3
 8015690:	5cd3      	ldrb	r3, [r2, r3]
 8015692:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015696:	930a      	str	r3, [sp, #40]	; 0x28
 8015698:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801569c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80156a0:	930e      	str	r3, [sp, #56]	; 0x38
 80156a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80156a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80156a6:	fb1e f200 	smulbb	r2, lr, r0
 80156aa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80156ae:	10d2      	asrs	r2, r2, #3
 80156b0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80156b4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80156b8:	ea4c 0c03 	orr.w	ip, ip, r3
 80156bc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80156c0:	9311      	str	r3, [sp, #68]	; 0x44
 80156c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156c4:	041b      	lsls	r3, r3, #16
 80156c6:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80156ca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80156ce:	ea43 030b 	orr.w	r3, r3, fp
 80156d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80156d4:	4353      	muls	r3, r2
 80156d6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80156da:	fb05 3c0c 	mla	ip, r5, ip, r3
 80156de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80156e2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80156e6:	ea43 0b01 	orr.w	fp, r3, r1
 80156ea:	f1c0 0110 	rsb	r1, r0, #16
 80156ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80156f0:	eba1 0e0e 	sub.w	lr, r1, lr
 80156f4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80156f8:	fb0e cc0b 	mla	ip, lr, fp, ip
 80156fc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015700:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8015704:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015708:	ea4b 0e0e 	orr.w	lr, fp, lr
 801570c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015710:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015714:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8015718:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801571c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015720:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015724:	ea43 0c0c 	orr.w	ip, r3, ip
 8015728:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801572a:	f82a cb02 	strh.w	ip, [sl], #2
 801572e:	441c      	add	r4, r3
 8015730:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015732:	f108 38ff 	add.w	r8, r8, #4294967295
 8015736:	441e      	add	r6, r3
 8015738:	e723      	b.n	8015582 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801573a:	2800      	cmp	r0, #0
 801573c:	d0b1      	beq.n	80156a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801573e:	5cd3      	ldrb	r3, [r2, r3]
 8015740:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015744:	930a      	str	r3, [sp, #40]	; 0x28
 8015746:	e7ac      	b.n	80156a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8015748:	b013      	add	sp, #76	; 0x4c
 801574a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801574e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801574e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015752:	880d      	ldrh	r5, [r1, #0]
 8015754:	b087      	sub	sp, #28
 8015756:	10ef      	asrs	r7, r5, #3
 8015758:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801575c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015760:	00ed      	lsls	r5, r5, #3
 8015762:	9701      	str	r7, [sp, #4]
 8015764:	b2ed      	uxtb	r5, r5
 8015766:	9502      	str	r5, [sp, #8]
 8015768:	9d01      	ldr	r5, [sp, #4]
 801576a:	9103      	str	r1, [sp, #12]
 801576c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8015770:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8015774:	9902      	ldr	r1, [sp, #8]
 8015776:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801577a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801577e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8015782:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8015786:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801578a:	022d      	lsls	r5, r5, #8
 801578c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8015790:	fb06 0709 	mla	r7, r6, r9, r0
 8015794:	430d      	orrs	r5, r1
 8015796:	2e00      	cmp	r6, #0
 8015798:	eb02 0c07 	add.w	ip, r2, r7
 801579c:	9505      	str	r5, [sp, #20]
 801579e:	f2c0 80b6 	blt.w	801590e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80157a2:	45b3      	cmp	fp, r6
 80157a4:	f340 80b3 	ble.w	801590e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80157a8:	2800      	cmp	r0, #0
 80157aa:	f2c0 80ae 	blt.w	801590a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80157ae:	4581      	cmp	r9, r0
 80157b0:	f340 80ab 	ble.w	801590a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80157b4:	5dd7      	ldrb	r7, [r2, r7]
 80157b6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80157ba:	441f      	add	r7, r3
 80157bc:	1c42      	adds	r2, r0, #1
 80157be:	f100 80a9 	bmi.w	8015914 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80157c2:	4591      	cmp	r9, r2
 80157c4:	f340 80a6 	ble.w	8015914 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80157c8:	2c00      	cmp	r4, #0
 80157ca:	f000 80a3 	beq.w	8015914 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80157ce:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80157d2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80157d6:	441d      	add	r5, r3
 80157d8:	3601      	adds	r6, #1
 80157da:	f100 809f 	bmi.w	801591c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80157de:	45b3      	cmp	fp, r6
 80157e0:	f340 809c 	ble.w	801591c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80157e4:	f1be 0f00 	cmp.w	lr, #0
 80157e8:	f000 8098 	beq.w	801591c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80157ec:	2800      	cmp	r0, #0
 80157ee:	f2c0 8093 	blt.w	8015918 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80157f2:	4581      	cmp	r9, r0
 80157f4:	f340 8090 	ble.w	8015918 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80157f8:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80157fc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015800:	441e      	add	r6, r3
 8015802:	3001      	adds	r0, #1
 8015804:	f100 808d 	bmi.w	8015922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8015808:	4581      	cmp	r9, r0
 801580a:	f340 808a 	ble.w	8015922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801580e:	2c00      	cmp	r4, #0
 8015810:	f000 8087 	beq.w	8015922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8015814:	44e1      	add	r9, ip
 8015816:	f899 2001 	ldrb.w	r2, [r9, #1]
 801581a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801581e:	4413      	add	r3, r2
 8015820:	b2a4      	uxth	r4, r4
 8015822:	fa1f fe8e 	uxth.w	lr, lr
 8015826:	fb04 fb0e 	mul.w	fp, r4, lr
 801582a:	0124      	lsls	r4, r4, #4
 801582c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8015830:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8015834:	eba4 040b 	sub.w	r4, r4, fp
 8015838:	fa1f f08e 	uxth.w	r0, lr
 801583c:	b2a2      	uxth	r2, r4
 801583e:	78ac      	ldrb	r4, [r5, #2]
 8015840:	f897 c002 	ldrb.w	ip, [r7, #2]
 8015844:	9901      	ldr	r1, [sp, #4]
 8015846:	eba9 0900 	sub.w	r9, r9, r0
 801584a:	fa1f f989 	uxth.w	r9, r9
 801584e:	4354      	muls	r4, r2
 8015850:	fb09 440c 	mla	r4, r9, ip, r4
 8015854:	f896 c002 	ldrb.w	ip, [r6, #2]
 8015858:	fb00 440c 	mla	r4, r0, ip, r4
 801585c:	f893 c002 	ldrb.w	ip, [r3, #2]
 8015860:	fa1f fe88 	uxth.w	lr, r8
 8015864:	ea6f 0808 	mvn.w	r8, r8
 8015868:	fa5f f888 	uxtb.w	r8, r8
 801586c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8015870:	fb1a fa08 	smulbb	sl, sl, r8
 8015874:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015878:	fb0c ac0e 	mla	ip, ip, lr, sl
 801587c:	f895 a001 	ldrb.w	sl, [r5, #1]
 8015880:	787c      	ldrb	r4, [r7, #1]
 8015882:	782d      	ldrb	r5, [r5, #0]
 8015884:	783f      	ldrb	r7, [r7, #0]
 8015886:	fb02 fa0a 	mul.w	sl, r2, sl
 801588a:	fb09 aa04 	mla	sl, r9, r4, sl
 801588e:	7874      	ldrb	r4, [r6, #1]
 8015890:	436a      	muls	r2, r5
 8015892:	7835      	ldrb	r5, [r6, #0]
 8015894:	fb00 aa04 	mla	sl, r0, r4, sl
 8015898:	fb09 2207 	mla	r2, r9, r7, r2
 801589c:	785c      	ldrb	r4, [r3, #1]
 801589e:	781b      	ldrb	r3, [r3, #0]
 80158a0:	fb00 2005 	mla	r0, r0, r5, r2
 80158a4:	fb0b a404 	mla	r4, fp, r4, sl
 80158a8:	fb0b 0b03 	mla	fp, fp, r3, r0
 80158ac:	9b02      	ldr	r3, [sp, #8]
 80158ae:	fb11 fa08 	smulbb	sl, r1, r8
 80158b2:	fa1f fc8c 	uxth.w	ip, ip
 80158b6:	fb13 f808 	smulbb	r8, r3, r8
 80158ba:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80158be:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80158c2:	fb04 a40e 	mla	r4, r4, lr, sl
 80158c6:	f10c 0301 	add.w	r3, ip, #1
 80158ca:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80158ce:	fa1f fe8e 	uxth.w	lr, lr
 80158d2:	b2a4      	uxth	r4, r4
 80158d4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80158d8:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80158dc:	f104 0a01 	add.w	sl, r4, #1
 80158e0:	f10e 0c01 	add.w	ip, lr, #1
 80158e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80158e8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80158ec:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80158f0:	0964      	lsrs	r4, r4, #5
 80158f2:	ea4c 0c03 	orr.w	ip, ip, r3
 80158f6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80158fa:	9b03      	ldr	r3, [sp, #12]
 80158fc:	ea4c 0c04 	orr.w	ip, ip, r4
 8015900:	f8a3 c000 	strh.w	ip, [r3]
 8015904:	b007      	add	sp, #28
 8015906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801590a:	af05      	add	r7, sp, #20
 801590c:	e756      	b.n	80157bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801590e:	ad05      	add	r5, sp, #20
 8015910:	462f      	mov	r7, r5
 8015912:	e761      	b.n	80157d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8015914:	ad05      	add	r5, sp, #20
 8015916:	e75f      	b.n	80157d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8015918:	ae05      	add	r6, sp, #20
 801591a:	e772      	b.n	8015802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801591c:	ab05      	add	r3, sp, #20
 801591e:	461e      	mov	r6, r3
 8015920:	e77e      	b.n	8015820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8015922:	ab05      	add	r3, sp, #20
 8015924:	e77c      	b.n	8015820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08015926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015926:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801592a:	b095      	sub	sp, #84	; 0x54
 801592c:	9212      	str	r2, [sp, #72]	; 0x48
 801592e:	9309      	str	r3, [sp, #36]	; 0x24
 8015930:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8015932:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8015936:	930f      	str	r3, [sp, #60]	; 0x3c
 8015938:	910e      	str	r1, [sp, #56]	; 0x38
 801593a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801593e:	9013      	str	r0, [sp, #76]	; 0x4c
 8015940:	6850      	ldr	r0, [r2, #4]
 8015942:	6812      	ldr	r2, [r2, #0]
 8015944:	fb00 1303 	mla	r3, r0, r3, r1
 8015948:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801594c:	930a      	str	r3, [sp, #40]	; 0x28
 801594e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015950:	681b      	ldr	r3, [r3, #0]
 8015952:	930d      	str	r3, [sp, #52]	; 0x34
 8015954:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015956:	685c      	ldr	r4, [r3, #4]
 8015958:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801595a:	43db      	mvns	r3, r3
 801595c:	b2db      	uxtb	r3, r3
 801595e:	3404      	adds	r4, #4
 8015960:	930b      	str	r3, [sp, #44]	; 0x2c
 8015962:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015964:	2b00      	cmp	r3, #0
 8015966:	dc03      	bgt.n	8015970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015968:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801596a:	2b00      	cmp	r3, #0
 801596c:	f340 8255 	ble.w	8015e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8015970:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015972:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015976:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801597a:	1e48      	subs	r0, r1, #1
 801597c:	1e55      	subs	r5, r2, #1
 801597e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015980:	2b00      	cmp	r3, #0
 8015982:	f340 80f9 	ble.w	8015b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8015986:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8015988:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801598a:	1436      	asrs	r6, r6, #16
 801598c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015990:	d406      	bmi.n	80159a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015992:	4286      	cmp	r6, r0
 8015994:	da04      	bge.n	80159a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015996:	2b00      	cmp	r3, #0
 8015998:	db02      	blt.n	80159a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801599a:	42ab      	cmp	r3, r5
 801599c:	f2c0 80ed 	blt.w	8015b7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80159a0:	3601      	adds	r6, #1
 80159a2:	f100 80da 	bmi.w	8015b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80159a6:	42b1      	cmp	r1, r6
 80159a8:	f2c0 80d7 	blt.w	8015b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80159ac:	3301      	adds	r3, #1
 80159ae:	f100 80d4 	bmi.w	8015b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80159b2:	429a      	cmp	r2, r3
 80159b4:	f2c0 80d1 	blt.w	8015b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80159b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159ba:	9311      	str	r3, [sp, #68]	; 0x44
 80159bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159be:	930c      	str	r3, [sp, #48]	; 0x30
 80159c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80159c2:	2b00      	cmp	r3, #0
 80159c4:	f340 80fa 	ble.w	8015bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80159c8:	9826      	ldr	r0, [sp, #152]	; 0x98
 80159ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80159cc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80159ce:	68c6      	ldr	r6, [r0, #12]
 80159d0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80159d2:	141d      	asrs	r5, r3, #16
 80159d4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80159d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80159da:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80159dc:	1400      	asrs	r0, r0, #16
 80159de:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80159e2:	6892      	ldr	r2, [r2, #8]
 80159e4:	f100 813e 	bmi.w	8015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80159e8:	1e57      	subs	r7, r2, #1
 80159ea:	42b8      	cmp	r0, r7
 80159ec:	f280 813a 	bge.w	8015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80159f0:	2d00      	cmp	r5, #0
 80159f2:	f2c0 8137 	blt.w	8015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80159f6:	1e77      	subs	r7, r6, #1
 80159f8:	42bd      	cmp	r5, r7
 80159fa:	f280 8133 	bge.w	8015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80159fe:	b212      	sxth	r2, r2
 8015a00:	fb05 0002 	mla	r0, r5, r2, r0
 8015a04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015a06:	f815 a000 	ldrb.w	sl, [r5, r0]
 8015a0a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8015a0e:	182e      	adds	r6, r5, r0
 8015a10:	eb04 050a 	add.w	r5, r4, sl
 8015a14:	2b00      	cmp	r3, #0
 8015a16:	f000 8117 	beq.w	8015c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8015a1a:	f896 c001 	ldrb.w	ip, [r6, #1]
 8015a1e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015a22:	44a4      	add	ip, r4
 8015a24:	2900      	cmp	r1, #0
 8015a26:	f000 8117 	beq.w	8015c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8015a2a:	18b0      	adds	r0, r6, r2
 8015a2c:	5cb2      	ldrb	r2, [r6, r2]
 8015a2e:	7840      	ldrb	r0, [r0, #1]
 8015a30:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a34:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015a38:	4422      	add	r2, r4
 8015a3a:	4420      	add	r0, r4
 8015a3c:	b29b      	uxth	r3, r3
 8015a3e:	b289      	uxth	r1, r1
 8015a40:	fb03 f901 	mul.w	r9, r3, r1
 8015a44:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015a48:	011b      	lsls	r3, r3, #4
 8015a4a:	b289      	uxth	r1, r1
 8015a4c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8015a50:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015a54:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015a56:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8015a5a:	f8b6 e000 	ldrh.w	lr, [r6]
 8015a5e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8015a62:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015a66:	eba3 0309 	sub.w	r3, r3, r9
 8015a6a:	b29b      	uxth	r3, r3
 8015a6c:	eba8 0801 	sub.w	r8, r8, r1
 8015a70:	fa1f f888 	uxth.w	r8, r8
 8015a74:	435f      	muls	r7, r3
 8015a76:	fb08 770b 	mla	r7, r8, fp, r7
 8015a7a:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015a7e:	9310      	str	r3, [sp, #64]	; 0x40
 8015a80:	fb01 770b 	mla	r7, r1, fp, r7
 8015a84:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015a88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015a8a:	fb09 770b 	mla	r7, r9, fp, r7
 8015a8e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015a92:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015a96:	fb1b fb03 	smulbb	fp, fp, r3
 8015a9a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015a9e:	fb07 b706 	mla	r7, r7, r6, fp
 8015aa2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015aa4:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015aa8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015aac:	f89c c000 	ldrb.w	ip, [ip]
 8015ab0:	435d      	muls	r5, r3
 8015ab2:	fb08 550b 	mla	r5, r8, fp, r5
 8015ab6:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015aba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015abc:	fb01 550b 	mla	r5, r1, fp, r5
 8015ac0:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015ac4:	fb09 550b 	mla	r5, r9, fp, r5
 8015ac8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8015acc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015ad0:	fb1b fb03 	smulbb	fp, fp, r3
 8015ad4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ad6:	fb03 f30c 	mul.w	r3, r3, ip
 8015ada:	f892 c000 	ldrb.w	ip, [r2]
 8015ade:	fb08 330a 	mla	r3, r8, sl, r3
 8015ae2:	fb01 330c 	mla	r3, r1, ip, r3
 8015ae6:	f890 c000 	ldrb.w	ip, [r0]
 8015aea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015aee:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015af2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015af4:	fa5f fe8e 	uxtb.w	lr, lr
 8015af8:	b2bf      	uxth	r7, r7
 8015afa:	fb1e fe03 	smulbb	lr, lr, r3
 8015afe:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015b02:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015b06:	fb05 b506 	mla	r5, r5, r6, fp
 8015b0a:	1c7b      	adds	r3, r7, #1
 8015b0c:	fb0c e606 	mla	r6, ip, r6, lr
 8015b10:	b2ad      	uxth	r5, r5
 8015b12:	b2b6      	uxth	r6, r6
 8015b14:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015b18:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8015b1c:	f105 0b01 	add.w	fp, r5, #1
 8015b20:	1c77      	adds	r7, r6, #1
 8015b22:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8015b26:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015b2a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015b2e:	096d      	lsrs	r5, r5, #5
 8015b30:	431f      	orrs	r7, r3
 8015b32:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015b36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015b38:	433d      	orrs	r5, r7
 8015b3a:	801d      	strh	r5, [r3, #0]
 8015b3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015b3e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8015b40:	3302      	adds	r3, #2
 8015b42:	930c      	str	r3, [sp, #48]	; 0x30
 8015b44:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015b46:	4413      	add	r3, r2
 8015b48:	931f      	str	r3, [sp, #124]	; 0x7c
 8015b4a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015b4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015b4e:	4413      	add	r3, r2
 8015b50:	9320      	str	r3, [sp, #128]	; 0x80
 8015b52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015b54:	3b01      	subs	r3, #1
 8015b56:	9311      	str	r3, [sp, #68]	; 0x44
 8015b58:	e732      	b.n	80159c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015b5a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015b5c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8015b5e:	4433      	add	r3, r6
 8015b60:	931f      	str	r3, [sp, #124]	; 0x7c
 8015b62:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8015b64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015b66:	4433      	add	r3, r6
 8015b68:	9320      	str	r3, [sp, #128]	; 0x80
 8015b6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015b6c:	3b01      	subs	r3, #1
 8015b6e:	9309      	str	r3, [sp, #36]	; 0x24
 8015b70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015b72:	3302      	adds	r3, #2
 8015b74:	930a      	str	r3, [sp, #40]	; 0x28
 8015b76:	e702      	b.n	801597e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015b78:	d027      	beq.n	8015bca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8015b7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015b7c:	9821      	ldr	r0, [sp, #132]	; 0x84
 8015b7e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8015b80:	3b01      	subs	r3, #1
 8015b82:	fb00 5003 	mla	r0, r0, r3, r5
 8015b86:	1400      	asrs	r0, r0, #16
 8015b88:	f53f af16 	bmi.w	80159b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015b8c:	3901      	subs	r1, #1
 8015b8e:	4288      	cmp	r0, r1
 8015b90:	f6bf af12 	bge.w	80159b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015b94:	9922      	ldr	r1, [sp, #136]	; 0x88
 8015b96:	9820      	ldr	r0, [sp, #128]	; 0x80
 8015b98:	fb01 0303 	mla	r3, r1, r3, r0
 8015b9c:	141b      	asrs	r3, r3, #16
 8015b9e:	f53f af0b 	bmi.w	80159b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015ba2:	3a01      	subs	r2, #1
 8015ba4:	4293      	cmp	r3, r2
 8015ba6:	f6bf af07 	bge.w	80159b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015baa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015bac:	9311      	str	r3, [sp, #68]	; 0x44
 8015bae:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8015bb2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015bb4:	930c      	str	r3, [sp, #48]	; 0x30
 8015bb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015bb8:	2b00      	cmp	r3, #0
 8015bba:	dc70      	bgt.n	8015c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8015bbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015bbe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015bc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015bc4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015bc8:	930a      	str	r3, [sp, #40]	; 0x28
 8015bca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bcc:	2b00      	cmp	r3, #0
 8015bce:	f340 8124 	ble.w	8015e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8015bd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015bd6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015bda:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015bde:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015be0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015be4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015be8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015bec:	eef0 6a62 	vmov.f32	s13, s5
 8015bf0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015bf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015bf8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015bfc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8015c00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015c04:	eef0 6a43 	vmov.f32	s13, s6
 8015c08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015c0c:	ee12 2a90 	vmov	r2, s5
 8015c10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015c14:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c18:	ee13 2a10 	vmov	r2, s6
 8015c1c:	9321      	str	r3, [sp, #132]	; 0x84
 8015c1e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015c20:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c24:	9322      	str	r3, [sp, #136]	; 0x88
 8015c26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c28:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015c2a:	3b01      	subs	r3, #1
 8015c2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015c30:	930e      	str	r3, [sp, #56]	; 0x38
 8015c32:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015c34:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8015c38:	bf08      	it	eq
 8015c3a:	4613      	moveq	r3, r2
 8015c3c:	9309      	str	r3, [sp, #36]	; 0x24
 8015c3e:	eeb0 3a67 	vmov.f32	s6, s15
 8015c42:	eef0 2a47 	vmov.f32	s5, s14
 8015c46:	e68c      	b.n	8015962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015c48:	b149      	cbz	r1, 8015c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8015c4a:	5cb2      	ldrb	r2, [r6, r2]
 8015c4c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015c50:	4422      	add	r2, r4
 8015c52:	4628      	mov	r0, r5
 8015c54:	46ac      	mov	ip, r5
 8015c56:	e6f1      	b.n	8015a3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015c58:	4628      	mov	r0, r5
 8015c5a:	462a      	mov	r2, r5
 8015c5c:	e6ee      	b.n	8015a3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015c5e:	4628      	mov	r0, r5
 8015c60:	462a      	mov	r2, r5
 8015c62:	e7f7      	b.n	8015c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8015c64:	1c47      	adds	r7, r0, #1
 8015c66:	f53f af69 	bmi.w	8015b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015c6a:	42ba      	cmp	r2, r7
 8015c6c:	f6ff af66 	blt.w	8015b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015c70:	1c6f      	adds	r7, r5, #1
 8015c72:	f53f af63 	bmi.w	8015b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015c76:	42be      	cmp	r6, r7
 8015c78:	f6ff af60 	blt.w	8015b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015c7c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015c7e:	9002      	str	r0, [sp, #8]
 8015c80:	b236      	sxth	r6, r6
 8015c82:	b212      	sxth	r2, r2
 8015c84:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015c88:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8015c8c:	9200      	str	r2, [sp, #0]
 8015c8e:	9601      	str	r6, [sp, #4]
 8015c90:	4623      	mov	r3, r4
 8015c92:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015c96:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015c98:	f7ff fd59 	bl	801574e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8015c9c:	e74e      	b.n	8015b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015c9e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015ca0:	9820      	ldr	r0, [sp, #128]	; 0x80
 8015ca2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8015ca4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015ca6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015caa:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8015cac:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015cb0:	142d      	asrs	r5, r5, #16
 8015cb2:	1400      	asrs	r0, r0, #16
 8015cb4:	fb02 5000 	mla	r0, r2, r0, r5
 8015cb8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015cba:	f815 9000 	ldrb.w	r9, [r5, r0]
 8015cbe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015cc2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015cc6:	182e      	adds	r6, r5, r0
 8015cc8:	eb04 0509 	add.w	r5, r4, r9
 8015ccc:	2b00      	cmp	r3, #0
 8015cce:	f000 8096 	beq.w	8015dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8015cd2:	7877      	ldrb	r7, [r6, #1]
 8015cd4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015cd8:	4427      	add	r7, r4
 8015cda:	2900      	cmp	r1, #0
 8015cdc:	f000 8097 	beq.w	8015e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8015ce0:	18b0      	adds	r0, r6, r2
 8015ce2:	5cb2      	ldrb	r2, [r6, r2]
 8015ce4:	7840      	ldrb	r0, [r0, #1]
 8015ce6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015cea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015cee:	4422      	add	r2, r4
 8015cf0:	4420      	add	r0, r4
 8015cf2:	b29b      	uxth	r3, r3
 8015cf4:	b289      	uxth	r1, r1
 8015cf6:	fb03 f801 	mul.w	r8, r3, r1
 8015cfa:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015cfc:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015d00:	f8b6 c000 	ldrh.w	ip, [r6]
 8015d04:	78be      	ldrb	r6, [r7, #2]
 8015d06:	f814 9009 	ldrb.w	r9, [r4, r9]
 8015d0a:	011b      	lsls	r3, r3, #4
 8015d0c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8015d10:	b289      	uxth	r1, r1
 8015d12:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015d16:	eba3 0308 	sub.w	r3, r3, r8
 8015d1a:	b29b      	uxth	r3, r3
 8015d1c:	ebae 0e01 	sub.w	lr, lr, r1
 8015d20:	fa1f fe8e 	uxth.w	lr, lr
 8015d24:	435e      	muls	r6, r3
 8015d26:	fb0e 660b 	mla	r6, lr, fp, r6
 8015d2a:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015d2e:	9310      	str	r3, [sp, #64]	; 0x40
 8015d30:	fb01 660b 	mla	r6, r1, fp, r6
 8015d34:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015d38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015d3a:	fb08 660b 	mla	r6, r8, fp, r6
 8015d3e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8015d42:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015d46:	fb1b fb03 	smulbb	fp, fp, r3
 8015d4a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015d4e:	fb06 b60a 	mla	r6, r6, sl, fp
 8015d52:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d54:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015d58:	787d      	ldrb	r5, [r7, #1]
 8015d5a:	783f      	ldrb	r7, [r7, #0]
 8015d5c:	435d      	muls	r5, r3
 8015d5e:	fb0e 550b 	mla	r5, lr, fp, r5
 8015d62:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015d66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015d68:	fb01 550b 	mla	r5, r1, fp, r5
 8015d6c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015d70:	fb08 550b 	mla	r5, r8, fp, r5
 8015d74:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015d78:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015d7c:	fb1b fb03 	smulbb	fp, fp, r3
 8015d80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d82:	437b      	muls	r3, r7
 8015d84:	7817      	ldrb	r7, [r2, #0]
 8015d86:	fb0e 3309 	mla	r3, lr, r9, r3
 8015d8a:	fb01 3307 	mla	r3, r1, r7, r3
 8015d8e:	7807      	ldrb	r7, [r0, #0]
 8015d90:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015d94:	fb08 3707 	mla	r7, r8, r7, r3
 8015d98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015d9a:	fa5f fc8c 	uxtb.w	ip, ip
 8015d9e:	fb1c fc03 	smulbb	ip, ip, r3
 8015da2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015da6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015daa:	fb05 b50a 	mla	r5, r5, sl, fp
 8015dae:	fb07 c70a 	mla	r7, r7, sl, ip
 8015db2:	b2b6      	uxth	r6, r6
 8015db4:	b2ad      	uxth	r5, r5
 8015db6:	b2bf      	uxth	r7, r7
 8015db8:	1c73      	adds	r3, r6, #1
 8015dba:	1c7a      	adds	r2, r7, #1
 8015dbc:	f105 0b01 	add.w	fp, r5, #1
 8015dc0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015dc4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015dc8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015dcc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015dd0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015dd4:	096d      	lsrs	r5, r5, #5
 8015dd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015dd8:	4316      	orrs	r6, r2
 8015dda:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015dde:	432e      	orrs	r6, r5
 8015de0:	f823 6b02 	strh.w	r6, [r3], #2
 8015de4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8015de6:	930c      	str	r3, [sp, #48]	; 0x30
 8015de8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015dea:	4413      	add	r3, r2
 8015dec:	931f      	str	r3, [sp, #124]	; 0x7c
 8015dee:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015df0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015df2:	4413      	add	r3, r2
 8015df4:	9320      	str	r3, [sp, #128]	; 0x80
 8015df6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015df8:	3b01      	subs	r3, #1
 8015dfa:	9311      	str	r3, [sp, #68]	; 0x44
 8015dfc:	e6db      	b.n	8015bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8015dfe:	b149      	cbz	r1, 8015e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8015e00:	5cb2      	ldrb	r2, [r6, r2]
 8015e02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015e06:	4422      	add	r2, r4
 8015e08:	4628      	mov	r0, r5
 8015e0a:	462f      	mov	r7, r5
 8015e0c:	e771      	b.n	8015cf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8015e0e:	4628      	mov	r0, r5
 8015e10:	462a      	mov	r2, r5
 8015e12:	e76e      	b.n	8015cf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8015e14:	4628      	mov	r0, r5
 8015e16:	462a      	mov	r2, r5
 8015e18:	e7f7      	b.n	8015e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8015e1a:	b015      	add	sp, #84	; 0x54
 8015e1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8015e20:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e24:	880f      	ldrh	r7, [r1, #0]
 8015e26:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8015e2a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8015e2e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8015e32:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8015e36:	023c      	lsls	r4, r7, #8
 8015e38:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8015e3c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8015e40:	017c      	lsls	r4, r7, #5
 8015e42:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8015e46:	00ff      	lsls	r7, r7, #3
 8015e48:	ea4b 0404 	orr.w	r4, fp, r4
 8015e4c:	b2ff      	uxtb	r7, r7
 8015e4e:	fb05 ca0e 	mla	sl, r5, lr, ip
 8015e52:	4327      	orrs	r7, r4
 8015e54:	2d00      	cmp	r5, #0
 8015e56:	eb02 080a 	add.w	r8, r2, sl
 8015e5a:	9701      	str	r7, [sp, #4]
 8015e5c:	db7e      	blt.n	8015f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8015e5e:	45a9      	cmp	r9, r5
 8015e60:	dd7c      	ble.n	8015f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8015e62:	f1bc 0f00 	cmp.w	ip, #0
 8015e66:	db77      	blt.n	8015f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8015e68:	45e6      	cmp	lr, ip
 8015e6a:	dd75      	ble.n	8015f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8015e6c:	f812 700a 	ldrb.w	r7, [r2, sl]
 8015e70:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015e74:	441f      	add	r7, r3
 8015e76:	f11c 0201 	adds.w	r2, ip, #1
 8015e7a:	d472      	bmi.n	8015f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015e7c:	4596      	cmp	lr, r2
 8015e7e:	dd70      	ble.n	8015f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015e80:	2800      	cmp	r0, #0
 8015e82:	d06e      	beq.n	8015f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015e84:	f898 4001 	ldrb.w	r4, [r8, #1]
 8015e88:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015e8c:	441c      	add	r4, r3
 8015e8e:	3501      	adds	r5, #1
 8015e90:	d46b      	bmi.n	8015f6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8015e92:	45a9      	cmp	r9, r5
 8015e94:	dd69      	ble.n	8015f6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8015e96:	2e00      	cmp	r6, #0
 8015e98:	d067      	beq.n	8015f6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8015e9a:	f1bc 0f00 	cmp.w	ip, #0
 8015e9e:	db62      	blt.n	8015f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8015ea0:	45e6      	cmp	lr, ip
 8015ea2:	dd60      	ble.n	8015f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8015ea4:	f818 500e 	ldrb.w	r5, [r8, lr]
 8015ea8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015eac:	441d      	add	r5, r3
 8015eae:	f11c 0201 	adds.w	r2, ip, #1
 8015eb2:	d45d      	bmi.n	8015f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8015eb4:	4596      	cmp	lr, r2
 8015eb6:	dd5b      	ble.n	8015f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8015eb8:	2800      	cmp	r0, #0
 8015eba:	d059      	beq.n	8015f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8015ebc:	44c6      	add	lr, r8
 8015ebe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015ec2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015ec6:	4413      	add	r3, r2
 8015ec8:	b280      	uxth	r0, r0
 8015eca:	b2b2      	uxth	r2, r6
 8015ecc:	fb00 f602 	mul.w	r6, r0, r2
 8015ed0:	0100      	lsls	r0, r0, #4
 8015ed2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8015ed6:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8015eda:	1b80      	subs	r0, r0, r6
 8015edc:	fa1f fc82 	uxth.w	ip, r2
 8015ee0:	b282      	uxth	r2, r0
 8015ee2:	78a0      	ldrb	r0, [r4, #2]
 8015ee4:	f897 e002 	ldrb.w	lr, [r7, #2]
 8015ee8:	f897 9000 	ldrb.w	r9, [r7]
 8015eec:	787f      	ldrb	r7, [r7, #1]
 8015eee:	eba8 080c 	sub.w	r8, r8, ip
 8015ef2:	fa1f f888 	uxth.w	r8, r8
 8015ef6:	4350      	muls	r0, r2
 8015ef8:	fb08 0e0e 	mla	lr, r8, lr, r0
 8015efc:	78a8      	ldrb	r0, [r5, #2]
 8015efe:	fb0c e000 	mla	r0, ip, r0, lr
 8015f02:	f893 e002 	ldrb.w	lr, [r3, #2]
 8015f06:	fb06 0e0e 	mla	lr, r6, lr, r0
 8015f0a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8015f0e:	f894 e000 	ldrb.w	lr, [r4]
 8015f12:	fb02 fe0e 	mul.w	lr, r2, lr
 8015f16:	fb08 e909 	mla	r9, r8, r9, lr
 8015f1a:	f895 e000 	ldrb.w	lr, [r5]
 8015f1e:	fb0c 990e 	mla	r9, ip, lr, r9
 8015f22:	f893 e000 	ldrb.w	lr, [r3]
 8015f26:	785b      	ldrb	r3, [r3, #1]
 8015f28:	fb06 9e0e 	mla	lr, r6, lr, r9
 8015f2c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015f30:	ea4e 0e00 	orr.w	lr, lr, r0
 8015f34:	7860      	ldrb	r0, [r4, #1]
 8015f36:	4350      	muls	r0, r2
 8015f38:	786a      	ldrb	r2, [r5, #1]
 8015f3a:	fb08 0007 	mla	r0, r8, r7, r0
 8015f3e:	fb0c 0202 	mla	r2, ip, r2, r0
 8015f42:	fb06 2303 	mla	r3, r6, r3, r2
 8015f46:	095b      	lsrs	r3, r3, #5
 8015f48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015f4c:	ea4e 0303 	orr.w	r3, lr, r3
 8015f50:	800b      	strh	r3, [r1, #0]
 8015f52:	b003      	add	sp, #12
 8015f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f58:	af01      	add	r7, sp, #4
 8015f5a:	e78c      	b.n	8015e76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8015f5c:	ac01      	add	r4, sp, #4
 8015f5e:	4627      	mov	r7, r4
 8015f60:	e795      	b.n	8015e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015f62:	ac01      	add	r4, sp, #4
 8015f64:	e793      	b.n	8015e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015f66:	ad01      	add	r5, sp, #4
 8015f68:	e7a1      	b.n	8015eae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8015f6a:	ab01      	add	r3, sp, #4
 8015f6c:	461d      	mov	r5, r3
 8015f6e:	e7ab      	b.n	8015ec8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8015f70:	ab01      	add	r3, sp, #4
 8015f72:	e7a9      	b.n	8015ec8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08015f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f78:	b08f      	sub	sp, #60	; 0x3c
 8015f7a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8015f7e:	920c      	str	r2, [sp, #48]	; 0x30
 8015f80:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015f82:	910a      	str	r1, [sp, #40]	; 0x28
 8015f84:	9306      	str	r3, [sp, #24]
 8015f86:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8015f8a:	900d      	str	r0, [sp, #52]	; 0x34
 8015f8c:	6850      	ldr	r0, [r2, #4]
 8015f8e:	6812      	ldr	r2, [r2, #0]
 8015f90:	fb00 1303 	mla	r3, r0, r3, r1
 8015f94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015f98:	9307      	str	r3, [sp, #28]
 8015f9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015f9c:	681b      	ldr	r3, [r3, #0]
 8015f9e:	9308      	str	r3, [sp, #32]
 8015fa0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015fa2:	685c      	ldr	r4, [r3, #4]
 8015fa4:	3404      	adds	r4, #4
 8015fa6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015fa8:	2b00      	cmp	r3, #0
 8015faa:	dc03      	bgt.n	8015fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015fac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015fae:	2b00      	cmp	r3, #0
 8015fb0:	f340 81d6 	ble.w	8016360 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8015fb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015fb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015fba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015fbe:	1e48      	subs	r0, r1, #1
 8015fc0:	1e56      	subs	r6, r2, #1
 8015fc2:	9b06      	ldr	r3, [sp, #24]
 8015fc4:	2b00      	cmp	r3, #0
 8015fc6:	f340 80b7 	ble.w	8016138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8015fca:	ea5f 472b 	movs.w	r7, fp, asr #16
 8015fce:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015fd2:	d406      	bmi.n	8015fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015fd4:	4287      	cmp	r7, r0
 8015fd6:	da04      	bge.n	8015fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015fd8:	2b00      	cmp	r3, #0
 8015fda:	db02      	blt.n	8015fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015fdc:	42b3      	cmp	r3, r6
 8015fde:	f2c0 80ac 	blt.w	801613a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8015fe2:	3701      	adds	r7, #1
 8015fe4:	f100 809d 	bmi.w	8016122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015fe8:	42b9      	cmp	r1, r7
 8015fea:	f2c0 809a 	blt.w	8016122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015fee:	3301      	adds	r3, #1
 8015ff0:	f100 8097 	bmi.w	8016122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015ff4:	429a      	cmp	r2, r3
 8015ff6:	f2c0 8094 	blt.w	8016122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015ffa:	9b06      	ldr	r3, [sp, #24]
 8015ffc:	930b      	str	r3, [sp, #44]	; 0x2c
 8015ffe:	9b07      	ldr	r3, [sp, #28]
 8016000:	9309      	str	r3, [sp, #36]	; 0x24
 8016002:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016004:	2b00      	cmp	r3, #0
 8016006:	f340 80b5 	ble.w	8016174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801600a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801600c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801600e:	68c7      	ldr	r7, [r0, #12]
 8016010:	6892      	ldr	r2, [r2, #8]
 8016012:	ea5f 402b 	movs.w	r0, fp, asr #16
 8016016:	ea4f 4625 	mov.w	r6, r5, asr #16
 801601a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801601e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016022:	f100 80fb 	bmi.w	801621c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016026:	f102 3cff 	add.w	ip, r2, #4294967295
 801602a:	4560      	cmp	r0, ip
 801602c:	f280 80f6 	bge.w	801621c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016030:	2e00      	cmp	r6, #0
 8016032:	f2c0 80f3 	blt.w	801621c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016036:	f107 3cff 	add.w	ip, r7, #4294967295
 801603a:	4566      	cmp	r6, ip
 801603c:	f280 80ee 	bge.w	801621c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016040:	b212      	sxth	r2, r2
 8016042:	fb06 0002 	mla	r0, r6, r2, r0
 8016046:	9e08      	ldr	r6, [sp, #32]
 8016048:	1837      	adds	r7, r6, r0
 801604a:	5c30      	ldrb	r0, [r6, r0]
 801604c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8016050:	eb04 0c08 	add.w	ip, r4, r8
 8016054:	2b00      	cmp	r3, #0
 8016056:	f000 80d3 	beq.w	8016200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801605a:	787e      	ldrb	r6, [r7, #1]
 801605c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016060:	4426      	add	r6, r4
 8016062:	2900      	cmp	r1, #0
 8016064:	f000 80d4 	beq.w	8016210 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8016068:	18b8      	adds	r0, r7, r2
 801606a:	5cba      	ldrb	r2, [r7, r2]
 801606c:	7840      	ldrb	r0, [r0, #1]
 801606e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016072:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016076:	4422      	add	r2, r4
 8016078:	4420      	add	r0, r4
 801607a:	b29b      	uxth	r3, r3
 801607c:	b289      	uxth	r1, r1
 801607e:	fb03 f901 	mul.w	r9, r3, r1
 8016082:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016086:	011b      	lsls	r3, r3, #4
 8016088:	b289      	uxth	r1, r1
 801608a:	78b7      	ldrb	r7, [r6, #2]
 801608c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016090:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016094:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016098:	eba3 0309 	sub.w	r3, r3, r9
 801609c:	b29b      	uxth	r3, r3
 801609e:	ebae 0e01 	sub.w	lr, lr, r1
 80160a2:	fa1f fe8e 	uxth.w	lr, lr
 80160a6:	435f      	muls	r7, r3
 80160a8:	fb0e 770a 	mla	r7, lr, sl, r7
 80160ac:	f892 a002 	ldrb.w	sl, [r2, #2]
 80160b0:	fb01 770a 	mla	r7, r1, sl, r7
 80160b4:	f890 a002 	ldrb.w	sl, [r0, #2]
 80160b8:	fb09 7a0a 	mla	sl, r9, sl, r7
 80160bc:	f814 7008 	ldrb.w	r7, [r4, r8]
 80160c0:	f896 8000 	ldrb.w	r8, [r6]
 80160c4:	7876      	ldrb	r6, [r6, #1]
 80160c6:	fb03 f808 	mul.w	r8, r3, r8
 80160ca:	fb0e 8807 	mla	r8, lr, r7, r8
 80160ce:	7817      	ldrb	r7, [r2, #0]
 80160d0:	fb01 8807 	mla	r8, r1, r7, r8
 80160d4:	7807      	ldrb	r7, [r0, #0]
 80160d6:	fb09 8707 	mla	r7, r9, r7, r8
 80160da:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80160de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80160e2:	ea47 070a 	orr.w	r7, r7, sl
 80160e6:	4373      	muls	r3, r6
 80160e8:	f892 a001 	ldrb.w	sl, [r2, #1]
 80160ec:	fb0e 330c 	mla	r3, lr, ip, r3
 80160f0:	fb01 310a 	mla	r1, r1, sl, r3
 80160f4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80160f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80160fa:	fb09 1a0a 	mla	sl, r9, sl, r1
 80160fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016102:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016106:	ea47 070a 	orr.w	r7, r7, sl
 801610a:	801f      	strh	r7, [r3, #0]
 801610c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801610e:	3302      	adds	r3, #2
 8016110:	9309      	str	r3, [sp, #36]	; 0x24
 8016112:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016114:	449b      	add	fp, r3
 8016116:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016118:	441d      	add	r5, r3
 801611a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801611c:	3b01      	subs	r3, #1
 801611e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016120:	e76f      	b.n	8016002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8016122:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016124:	449b      	add	fp, r3
 8016126:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016128:	441d      	add	r5, r3
 801612a:	9b06      	ldr	r3, [sp, #24]
 801612c:	3b01      	subs	r3, #1
 801612e:	9306      	str	r3, [sp, #24]
 8016130:	9b07      	ldr	r3, [sp, #28]
 8016132:	3302      	adds	r3, #2
 8016134:	9307      	str	r3, [sp, #28]
 8016136:	e744      	b.n	8015fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8016138:	d023      	beq.n	8016182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801613a:	9b06      	ldr	r3, [sp, #24]
 801613c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801613e:	3b01      	subs	r3, #1
 8016140:	fb00 b003 	mla	r0, r0, r3, fp
 8016144:	1400      	asrs	r0, r0, #16
 8016146:	f53f af58 	bmi.w	8015ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801614a:	3901      	subs	r1, #1
 801614c:	4288      	cmp	r0, r1
 801614e:	f6bf af54 	bge.w	8015ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016152:	991c      	ldr	r1, [sp, #112]	; 0x70
 8016154:	fb01 5303 	mla	r3, r1, r3, r5
 8016158:	141b      	asrs	r3, r3, #16
 801615a:	f53f af4e 	bmi.w	8015ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801615e:	3a01      	subs	r2, #1
 8016160:	4293      	cmp	r3, r2
 8016162:	f6bf af4a 	bge.w	8015ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016166:	9b06      	ldr	r3, [sp, #24]
 8016168:	9309      	str	r3, [sp, #36]	; 0x24
 801616a:	9b07      	ldr	r3, [sp, #28]
 801616c:	930b      	str	r3, [sp, #44]	; 0x2c
 801616e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016170:	2b00      	cmp	r3, #0
 8016172:	dc70      	bgt.n	8016256 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8016174:	9b06      	ldr	r3, [sp, #24]
 8016176:	9a07      	ldr	r2, [sp, #28]
 8016178:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801617c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016180:	9307      	str	r3, [sp, #28]
 8016182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016184:	2b00      	cmp	r3, #0
 8016186:	f340 80eb 	ble.w	8016360 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801618a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801618e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016192:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016196:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016198:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801619c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80161a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80161a4:	eef0 6a62 	vmov.f32	s13, s5
 80161a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80161ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80161b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80161b4:	ee16 ba90 	vmov	fp, s13
 80161b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80161bc:	eef0 6a43 	vmov.f32	s13, s6
 80161c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80161c4:	ee12 2a90 	vmov	r2, s5
 80161c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80161cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80161d0:	ee13 2a10 	vmov	r2, s6
 80161d4:	931b      	str	r3, [sp, #108]	; 0x6c
 80161d6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80161d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80161dc:	931c      	str	r3, [sp, #112]	; 0x70
 80161de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80161e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80161e2:	3b01      	subs	r3, #1
 80161e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80161e8:	930a      	str	r3, [sp, #40]	; 0x28
 80161ea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80161ec:	bf08      	it	eq
 80161ee:	4613      	moveq	r3, r2
 80161f0:	ee16 5a90 	vmov	r5, s13
 80161f4:	9306      	str	r3, [sp, #24]
 80161f6:	eeb0 3a67 	vmov.f32	s6, s15
 80161fa:	eef0 2a47 	vmov.f32	s5, s14
 80161fe:	e6d2      	b.n	8015fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016200:	b149      	cbz	r1, 8016216 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8016202:	5cba      	ldrb	r2, [r7, r2]
 8016204:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016208:	4422      	add	r2, r4
 801620a:	4660      	mov	r0, ip
 801620c:	4666      	mov	r6, ip
 801620e:	e734      	b.n	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8016210:	4660      	mov	r0, ip
 8016212:	4662      	mov	r2, ip
 8016214:	e731      	b.n	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8016216:	4660      	mov	r0, ip
 8016218:	4662      	mov	r2, ip
 801621a:	e7f7      	b.n	801620c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801621c:	f110 0c01 	adds.w	ip, r0, #1
 8016220:	f53f af74 	bmi.w	801610c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016224:	4562      	cmp	r2, ip
 8016226:	f6ff af71 	blt.w	801610c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801622a:	f116 0c01 	adds.w	ip, r6, #1
 801622e:	f53f af6d 	bmi.w	801610c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016232:	4567      	cmp	r7, ip
 8016234:	f6ff af6a 	blt.w	801610c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016238:	b23f      	sxth	r7, r7
 801623a:	b212      	sxth	r2, r2
 801623c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8016240:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8016244:	9200      	str	r2, [sp, #0]
 8016246:	9701      	str	r7, [sp, #4]
 8016248:	4623      	mov	r3, r4
 801624a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801624e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016250:	f7ff fde6 	bl	8015e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8016254:	e75a      	b.n	801610c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016256:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016258:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801625c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8016260:	1428      	asrs	r0, r5, #16
 8016262:	fb02 6000 	mla	r0, r2, r0, r6
 8016266:	9e08      	ldr	r6, [sp, #32]
 8016268:	f816 8000 	ldrb.w	r8, [r6, r0]
 801626c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016270:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016274:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016278:	1837      	adds	r7, r6, r0
 801627a:	eb04 0c08 	add.w	ip, r4, r8
 801627e:	2b00      	cmp	r3, #0
 8016280:	d060      	beq.n	8016344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8016282:	787e      	ldrb	r6, [r7, #1]
 8016284:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016288:	4426      	add	r6, r4
 801628a:	2900      	cmp	r1, #0
 801628c:	d062      	beq.n	8016354 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801628e:	18b8      	adds	r0, r7, r2
 8016290:	5cba      	ldrb	r2, [r7, r2]
 8016292:	7840      	ldrb	r0, [r0, #1]
 8016294:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016298:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801629c:	4422      	add	r2, r4
 801629e:	4420      	add	r0, r4
 80162a0:	b29b      	uxth	r3, r3
 80162a2:	b289      	uxth	r1, r1
 80162a4:	fb03 f901 	mul.w	r9, r3, r1
 80162a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80162ac:	011b      	lsls	r3, r3, #4
 80162ae:	b289      	uxth	r1, r1
 80162b0:	78b7      	ldrb	r7, [r6, #2]
 80162b2:	f89c a002 	ldrb.w	sl, [ip, #2]
 80162b6:	f89c c001 	ldrb.w	ip, [ip, #1]
 80162ba:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80162be:	eba3 0309 	sub.w	r3, r3, r9
 80162c2:	b29b      	uxth	r3, r3
 80162c4:	ebae 0e01 	sub.w	lr, lr, r1
 80162c8:	fa1f fe8e 	uxth.w	lr, lr
 80162cc:	435f      	muls	r7, r3
 80162ce:	fb0e 770a 	mla	r7, lr, sl, r7
 80162d2:	f892 a002 	ldrb.w	sl, [r2, #2]
 80162d6:	fb01 770a 	mla	r7, r1, sl, r7
 80162da:	f890 a002 	ldrb.w	sl, [r0, #2]
 80162de:	fb09 7a0a 	mla	sl, r9, sl, r7
 80162e2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80162e6:	f896 8000 	ldrb.w	r8, [r6]
 80162ea:	7876      	ldrb	r6, [r6, #1]
 80162ec:	fb03 f808 	mul.w	r8, r3, r8
 80162f0:	fb0e 8807 	mla	r8, lr, r7, r8
 80162f4:	7817      	ldrb	r7, [r2, #0]
 80162f6:	fb01 8807 	mla	r8, r1, r7, r8
 80162fa:	7807      	ldrb	r7, [r0, #0]
 80162fc:	fb09 8707 	mla	r7, r9, r7, r8
 8016300:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016304:	4373      	muls	r3, r6
 8016306:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801630a:	7856      	ldrb	r6, [r2, #1]
 801630c:	ea47 070a 	orr.w	r7, r7, sl
 8016310:	fb0e 330c 	mla	r3, lr, ip, r3
 8016314:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016318:	fb01 3306 	mla	r3, r1, r6, r3
 801631c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8016320:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016324:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016326:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801632a:	ea47 070a 	orr.w	r7, r7, sl
 801632e:	f823 7b02 	strh.w	r7, [r3], #2
 8016332:	930b      	str	r3, [sp, #44]	; 0x2c
 8016334:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016336:	449b      	add	fp, r3
 8016338:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801633a:	441d      	add	r5, r3
 801633c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801633e:	3b01      	subs	r3, #1
 8016340:	9309      	str	r3, [sp, #36]	; 0x24
 8016342:	e714      	b.n	801616e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8016344:	b149      	cbz	r1, 801635a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8016346:	5cba      	ldrb	r2, [r7, r2]
 8016348:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801634c:	4422      	add	r2, r4
 801634e:	4660      	mov	r0, ip
 8016350:	4666      	mov	r6, ip
 8016352:	e7a5      	b.n	80162a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8016354:	4660      	mov	r0, ip
 8016356:	4662      	mov	r2, ip
 8016358:	e7a2      	b.n	80162a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801635a:	4660      	mov	r0, ip
 801635c:	4662      	mov	r2, ip
 801635e:	e7f7      	b.n	8016350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8016360:	b00f      	add	sp, #60	; 0x3c
 8016362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016366 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8016366:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801636a:	b085      	sub	sp, #20
 801636c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8016370:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016374:	9102      	str	r1, [sp, #8]
 8016376:	2c00      	cmp	r4, #0
 8016378:	fb04 710c 	mla	r1, r4, ip, r7
 801637c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016380:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8016384:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8016388:	eb02 0e01 	add.w	lr, r2, r1
 801638c:	f2c0 8122 	blt.w	80165d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8016390:	45a0      	cmp	r8, r4
 8016392:	f340 811f 	ble.w	80165d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8016396:	2f00      	cmp	r7, #0
 8016398:	f2c0 811a 	blt.w	80165d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801639c:	45bc      	cmp	ip, r7
 801639e:	f340 8117 	ble.w	80165d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80163a2:	5c52      	ldrb	r2, [r2, r1]
 80163a4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80163a8:	1c7a      	adds	r2, r7, #1
 80163aa:	f100 8116 	bmi.w	80165da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80163ae:	4594      	cmp	ip, r2
 80163b0:	f340 8113 	ble.w	80165da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80163b4:	2e00      	cmp	r6, #0
 80163b6:	f000 8112 	beq.w	80165de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80163ba:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80163be:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80163c2:	3401      	adds	r4, #1
 80163c4:	f100 810f 	bmi.w	80165e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80163c8:	45a0      	cmp	r8, r4
 80163ca:	f340 810c 	ble.w	80165e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80163ce:	2800      	cmp	r0, #0
 80163d0:	f000 810c 	beq.w	80165ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80163d4:	2f00      	cmp	r7, #0
 80163d6:	f2c0 8104 	blt.w	80165e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80163da:	45bc      	cmp	ip, r7
 80163dc:	f340 8101 	ble.w	80165e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80163e0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80163e4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80163e8:	3701      	adds	r7, #1
 80163ea:	f100 8102 	bmi.w	80165f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80163ee:	45bc      	cmp	ip, r7
 80163f0:	f340 80ff 	ble.w	80165f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80163f4:	2e00      	cmp	r6, #0
 80163f6:	f000 80fe 	beq.w	80165f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80163fa:	44f4      	add	ip, lr
 80163fc:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8016400:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016404:	b2b6      	uxth	r6, r6
 8016406:	b280      	uxth	r0, r0
 8016408:	fb00 fe06 	mul.w	lr, r0, r6
 801640c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8016410:	0136      	lsls	r6, r6, #4
 8016412:	eba6 070e 	sub.w	r7, r6, lr
 8016416:	b280      	uxth	r0, r0
 8016418:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801641c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8016420:	b2bf      	uxth	r7, r7
 8016422:	1a1b      	subs	r3, r3, r0
 8016424:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8016428:	b29b      	uxth	r3, r3
 801642a:	fb0a f607 	mul.w	r6, sl, r7
 801642e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016432:	fb0b 6603 	mla	r6, fp, r3, r6
 8016436:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801643a:	fb00 6609 	mla	r6, r0, r9, r6
 801643e:	fb0e 6608 	mla	r6, lr, r8, r6
 8016442:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016446:	9600      	str	r6, [sp, #0]
 8016448:	2e00      	cmp	r6, #0
 801644a:	f000 80be 	beq.w	80165ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801644e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8016452:	fb0b fc0c 	mul.w	ip, fp, ip
 8016456:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801645a:	fb0b f505 	mul.w	r5, fp, r5
 801645e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8016462:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8016466:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801646a:	44dc      	add	ip, fp
 801646c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016470:	9501      	str	r5, [sp, #4]
 8016472:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8016476:	9503      	str	r5, [sp, #12]
 8016478:	9d01      	ldr	r5, [sp, #4]
 801647a:	9e02      	ldr	r6, [sp, #8]
 801647c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8016480:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016484:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8016488:	fb0a fc0c 	mul.w	ip, sl, ip
 801648c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8016490:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8016494:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016498:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801649c:	4465      	add	r5, ip
 801649e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80164a2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80164a6:	fb09 fc0c 	mul.w	ip, r9, ip
 80164aa:	fb09 f904 	mul.w	r9, r9, r4
 80164ae:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80164b2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80164b6:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80164ba:	fb08 f404 	mul.w	r4, r8, r4
 80164be:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80164c2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80164c6:	fb08 f802 	mul.w	r8, r8, r2
 80164ca:	fb0a fa01 	mul.w	sl, sl, r1
 80164ce:	0a22      	lsrs	r2, r4, #8
 80164d0:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80164d4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80164d8:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80164dc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80164e0:	4414      	add	r4, r2
 80164e2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80164e6:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80164ea:	0a2d      	lsrs	r5, r5, #8
 80164ec:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80164f0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80164f4:	9a03      	ldr	r2, [sp, #12]
 80164f6:	8836      	ldrh	r6, [r6, #0]
 80164f8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80164fc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016500:	437d      	muls	r5, r7
 8016502:	4461      	add	r1, ip
 8016504:	0a24      	lsrs	r4, r4, #8
 8016506:	fb02 5503 	mla	r5, r2, r3, r5
 801650a:	0a09      	lsrs	r1, r1, #8
 801650c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016510:	fb04 540e 	mla	r4, r4, lr, r5
 8016514:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8016518:	fb01 4100 	mla	r1, r1, r0, r4
 801651c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016520:	0a09      	lsrs	r1, r1, #8
 8016522:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016526:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801652a:	fb07 f70a 	mul.w	r7, r7, sl
 801652e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016532:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8016536:	fb03 7101 	mla	r1, r3, r1, r7
 801653a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801653e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016542:	fb0e 1e08 	mla	lr, lr, r8, r1
 8016546:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801654a:	fb00 e101 	mla	r1, r0, r1, lr
 801654e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8016552:	9a00      	ldr	r2, [sp, #0]
 8016554:	b287      	uxth	r7, r0
 8016556:	437a      	muls	r2, r7
 8016558:	0a09      	lsrs	r1, r1, #8
 801655a:	1c53      	adds	r3, r2, #1
 801655c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8016560:	4321      	orrs	r1, r4
 8016562:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016566:	1235      	asrs	r5, r6, #8
 8016568:	0c0a      	lsrs	r2, r1, #16
 801656a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801656e:	b2db      	uxtb	r3, r3
 8016570:	fb12 f207 	smulbb	r2, r2, r7
 8016574:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016578:	fb05 2503 	mla	r5, r5, r3, r2
 801657c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8016580:	10f2      	asrs	r2, r6, #3
 8016582:	b2c8      	uxtb	r0, r1
 8016584:	00f6      	lsls	r6, r6, #3
 8016586:	fb14 f407 	smulbb	r4, r4, r7
 801658a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801658e:	b2f6      	uxtb	r6, r6
 8016590:	fb10 f007 	smulbb	r0, r0, r7
 8016594:	fb02 4203 	mla	r2, r2, r3, r4
 8016598:	b2ad      	uxth	r5, r5
 801659a:	fb06 0303 	mla	r3, r6, r3, r0
 801659e:	b299      	uxth	r1, r3
 80165a0:	b294      	uxth	r4, r2
 80165a2:	1c6b      	adds	r3, r5, #1
 80165a4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80165a8:	1c62      	adds	r2, r4, #1
 80165aa:	1c4b      	adds	r3, r1, #1
 80165ac:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80165b0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80165b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80165b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80165bc:	0952      	lsrs	r2, r2, #5
 80165be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80165c2:	432b      	orrs	r3, r5
 80165c4:	4313      	orrs	r3, r2
 80165c6:	9a02      	ldr	r2, [sp, #8]
 80165c8:	8013      	strh	r3, [r2, #0]
 80165ca:	b005      	add	sp, #20
 80165cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165d0:	2500      	movs	r5, #0
 80165d2:	e6e9      	b.n	80163a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80165d4:	2100      	movs	r1, #0
 80165d6:	460d      	mov	r5, r1
 80165d8:	e6f3      	b.n	80163c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80165da:	2100      	movs	r1, #0
 80165dc:	e6f1      	b.n	80163c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80165de:	4631      	mov	r1, r6
 80165e0:	e6ef      	b.n	80163c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80165e2:	2400      	movs	r4, #0
 80165e4:	e700      	b.n	80163e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80165e6:	2200      	movs	r2, #0
 80165e8:	4614      	mov	r4, r2
 80165ea:	e70b      	b.n	8016404 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80165ec:	4602      	mov	r2, r0
 80165ee:	4604      	mov	r4, r0
 80165f0:	e708      	b.n	8016404 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80165f2:	2200      	movs	r2, #0
 80165f4:	e706      	b.n	8016404 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80165f6:	4632      	mov	r2, r6
 80165f8:	e704      	b.n	8016404 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080165fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80165fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165fe:	b09f      	sub	sp, #124	; 0x7c
 8016600:	921b      	str	r2, [sp, #108]	; 0x6c
 8016602:	9309      	str	r3, [sp, #36]	; 0x24
 8016604:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016606:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801660a:	931c      	str	r3, [sp, #112]	; 0x70
 801660c:	9119      	str	r1, [sp, #100]	; 0x64
 801660e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8016612:	901d      	str	r0, [sp, #116]	; 0x74
 8016614:	6850      	ldr	r0, [r2, #4]
 8016616:	6812      	ldr	r2, [r2, #0]
 8016618:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801661a:	fb00 1303 	mla	r3, r0, r3, r1
 801661e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016622:	930c      	str	r3, [sp, #48]	; 0x30
 8016624:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016626:	681b      	ldr	r3, [r3, #0]
 8016628:	9312      	str	r3, [sp, #72]	; 0x48
 801662a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801662c:	685e      	ldr	r6, [r3, #4]
 801662e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8016632:	930d      	str	r3, [sp, #52]	; 0x34
 8016634:	3604      	adds	r6, #4
 8016636:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016638:	2b00      	cmp	r3, #0
 801663a:	dc03      	bgt.n	8016644 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801663c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801663e:	2b00      	cmp	r3, #0
 8016640:	f340 8388 	ble.w	8016d54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8016644:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016646:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801664a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801664e:	1e48      	subs	r0, r1, #1
 8016650:	1e57      	subs	r7, r2, #1
 8016652:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016654:	2b00      	cmp	r3, #0
 8016656:	f340 8195 	ble.w	8016984 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801665a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801665c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016660:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016664:	d406      	bmi.n	8016674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016666:	4584      	cmp	ip, r0
 8016668:	da04      	bge.n	8016674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801666a:	2b00      	cmp	r3, #0
 801666c:	db02      	blt.n	8016674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801666e:	42bb      	cmp	r3, r7
 8016670:	f2c0 8189 	blt.w	8016986 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8016674:	f11c 0c01 	adds.w	ip, ip, #1
 8016678:	f100 8177 	bmi.w	801696a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801667c:	4561      	cmp	r1, ip
 801667e:	f2c0 8174 	blt.w	801696a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016682:	3301      	adds	r3, #1
 8016684:	f100 8171 	bmi.w	801696a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016688:	429a      	cmp	r2, r3
 801668a:	f2c0 816e 	blt.w	801696a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801668e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016690:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016692:	931a      	str	r3, [sp, #104]	; 0x68
 8016694:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016696:	2b00      	cmp	r3, #0
 8016698:	f340 8193 	ble.w	80169c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801669c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801669e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80166a2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80166a4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80166a8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80166aa:	141b      	asrs	r3, r3, #16
 80166ac:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80166b0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80166b4:	f100 81d6 	bmi.w	8016a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80166b8:	f100 38ff 	add.w	r8, r0, #4294967295
 80166bc:	4543      	cmp	r3, r8
 80166be:	f280 81d1 	bge.w	8016a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80166c2:	f1bc 0f00 	cmp.w	ip, #0
 80166c6:	f2c0 81cd 	blt.w	8016a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80166ca:	f10e 38ff 	add.w	r8, lr, #4294967295
 80166ce:	45c4      	cmp	ip, r8
 80166d0:	f280 81c8 	bge.w	8016a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80166d4:	b200      	sxth	r0, r0
 80166d6:	fb0c 3300 	mla	r3, ip, r0, r3
 80166da:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80166dc:	eb04 0803 	add.w	r8, r4, r3
 80166e0:	5ce3      	ldrb	r3, [r4, r3]
 80166e2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80166e6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80166ea:	2a00      	cmp	r2, #0
 80166ec:	f000 81af 	beq.w	8016a4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80166f0:	f898 c001 	ldrb.w	ip, [r8, #1]
 80166f4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80166f8:	940e      	str	r4, [sp, #56]	; 0x38
 80166fa:	0e24      	lsrs	r4, r4, #24
 80166fc:	9415      	str	r4, [sp, #84]	; 0x54
 80166fe:	b179      	cbz	r1, 8016720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016700:	eb08 0c00 	add.w	ip, r8, r0
 8016704:	f818 0000 	ldrb.w	r0, [r8, r0]
 8016708:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801670c:	900a      	str	r0, [sp, #40]	; 0x28
 801670e:	0e00      	lsrs	r0, r0, #24
 8016710:	9013      	str	r0, [sp, #76]	; 0x4c
 8016712:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8016716:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801671a:	900f      	str	r0, [sp, #60]	; 0x3c
 801671c:	0e00      	lsrs	r0, r0, #24
 801671e:	9016      	str	r0, [sp, #88]	; 0x58
 8016720:	b292      	uxth	r2, r2
 8016722:	b289      	uxth	r1, r1
 8016724:	fb02 f901 	mul.w	r9, r2, r1
 8016728:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801672c:	0112      	lsls	r2, r2, #4
 801672e:	eba2 0809 	sub.w	r8, r2, r9
 8016732:	b289      	uxth	r1, r1
 8016734:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016738:	9815      	ldr	r0, [sp, #84]	; 0x54
 801673a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801673c:	fa1f f888 	uxth.w	r8, r8
 8016740:	1a52      	subs	r2, r2, r1
 8016742:	b292      	uxth	r2, r2
 8016744:	fb08 f000 	mul.w	r0, r8, r0
 8016748:	fb02 000e 	mla	r0, r2, lr, r0
 801674c:	fb01 0004 	mla	r0, r1, r4, r0
 8016750:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016752:	fb09 0004 	mla	r0, r9, r4, r0
 8016756:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801675a:	2800      	cmp	r0, #0
 801675c:	f000 80fa 	beq.w	8016954 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016760:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016764:	d01b      	beq.n	801679e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016766:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801676a:	fb0e fa0a 	mul.w	sl, lr, sl
 801676e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016772:	fb0e fe03 	mul.w	lr, lr, r3
 8016776:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801677a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801677e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016782:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016786:	4453      	add	r3, sl
 8016788:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801678c:	0a1b      	lsrs	r3, r3, #8
 801678e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016792:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016796:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801679a:	ea43 030c 	orr.w	r3, r3, ip
 801679e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80167a0:	2cff      	cmp	r4, #255	; 0xff
 80167a2:	d021      	beq.n	80167e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80167a4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80167a6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80167aa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80167ac:	fb04 fb0b 	mul.w	fp, r4, fp
 80167b0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80167b2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80167b6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80167b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80167bc:	fb04 fa0a 	mul.w	sl, r4, sl
 80167c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80167c4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80167c8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80167cc:	44de      	add	lr, fp
 80167ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80167d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80167d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80167da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80167de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80167e2:	ea4e 040a 	orr.w	r4, lr, sl
 80167e6:	940e      	str	r4, [sp, #56]	; 0x38
 80167e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80167ea:	2cff      	cmp	r4, #255	; 0xff
 80167ec:	d021      	beq.n	8016832 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80167ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80167f0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80167f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80167f6:	fb04 fb0b 	mul.w	fp, r4, fp
 80167fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80167fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016800:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016802:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016806:	fb04 fa0a 	mul.w	sl, r4, sl
 801680a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801680e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016812:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016816:	44de      	add	lr, fp
 8016818:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801681c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016820:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016824:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016828:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801682c:	ea4e 040a 	orr.w	r4, lr, sl
 8016830:	940a      	str	r4, [sp, #40]	; 0x28
 8016832:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016834:	2cff      	cmp	r4, #255	; 0xff
 8016836:	d021      	beq.n	801687c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8016838:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801683a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801683e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016840:	fb04 fb0b 	mul.w	fp, r4, fp
 8016844:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016846:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801684a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801684c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016850:	fb04 fa0a 	mul.w	sl, r4, sl
 8016854:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016858:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801685c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016860:	44de      	add	lr, fp
 8016862:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016866:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801686a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801686e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016872:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016876:	ea4e 040a 	orr.w	r4, lr, sl
 801687a:	940f      	str	r4, [sp, #60]	; 0x3c
 801687c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801687e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016882:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016884:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016888:	fb08 fc0c 	mul.w	ip, r8, ip
 801688c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016890:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016894:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016896:	fb01 cc0e 	mla	ip, r1, lr, ip
 801689a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801689e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80168a0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80168a4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80168a8:	fb08 f80e 	mul.w	r8, r8, lr
 80168ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80168b0:	fb02 8303 	mla	r3, r2, r3, r8
 80168b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80168b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80168b8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80168bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80168be:	fb01 330a 	mla	r3, r1, sl, r3
 80168c2:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80168c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80168c8:	fb09 3901 	mla	r9, r9, r1, r3
 80168cc:	4342      	muls	r2, r0
 80168ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80168d2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80168d6:	883b      	ldrh	r3, [r7, #0]
 80168d8:	1c50      	adds	r0, r2, #1
 80168da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80168de:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80168e2:	ea4c 0c09 	orr.w	ip, ip, r9
 80168e6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80168ea:	1219      	asrs	r1, r3, #8
 80168ec:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80168f0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80168f4:	b2c0      	uxtb	r0, r0
 80168f6:	fb12 f204 	smulbb	r2, r2, r4
 80168fa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80168fe:	fb01 2100 	mla	r1, r1, r0, r2
 8016902:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8016906:	10da      	asrs	r2, r3, #3
 8016908:	fa5f fc8c 	uxtb.w	ip, ip
 801690c:	00db      	lsls	r3, r3, #3
 801690e:	fb1c fc04 	smulbb	ip, ip, r4
 8016912:	b2db      	uxtb	r3, r3
 8016914:	b289      	uxth	r1, r1
 8016916:	fb03 c300 	mla	r3, r3, r0, ip
 801691a:	fa1f fc83 	uxth.w	ip, r3
 801691e:	1c4b      	adds	r3, r1, #1
 8016920:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016924:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016928:	fb1e fe04 	smulbb	lr, lr, r4
 801692c:	f10c 0301 	add.w	r3, ip, #1
 8016930:	fb02 e200 	mla	r2, r2, r0, lr
 8016934:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8016938:	b292      	uxth	r2, r2
 801693a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801693e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016942:	430b      	orrs	r3, r1
 8016944:	1c51      	adds	r1, r2, #1
 8016946:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801694a:	0952      	lsrs	r2, r2, #5
 801694c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016950:	4313      	orrs	r3, r2
 8016952:	803b      	strh	r3, [r7, #0]
 8016954:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016956:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016958:	441a      	add	r2, r3
 801695a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801695c:	9229      	str	r2, [sp, #164]	; 0xa4
 801695e:	441d      	add	r5, r3
 8016960:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016962:	3b01      	subs	r3, #1
 8016964:	3702      	adds	r7, #2
 8016966:	931a      	str	r3, [sp, #104]	; 0x68
 8016968:	e694      	b.n	8016694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801696a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801696c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801696e:	441c      	add	r4, r3
 8016970:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016972:	9429      	str	r4, [sp, #164]	; 0xa4
 8016974:	441d      	add	r5, r3
 8016976:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016978:	3b01      	subs	r3, #1
 801697a:	9309      	str	r3, [sp, #36]	; 0x24
 801697c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801697e:	3302      	adds	r3, #2
 8016980:	930c      	str	r3, [sp, #48]	; 0x30
 8016982:	e666      	b.n	8016652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016984:	d024      	beq.n	80169d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8016986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016988:	982b      	ldr	r0, [sp, #172]	; 0xac
 801698a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801698c:	3b01      	subs	r3, #1
 801698e:	fb00 4003 	mla	r0, r0, r3, r4
 8016992:	1400      	asrs	r0, r0, #16
 8016994:	f53f ae7b 	bmi.w	801668e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016998:	3901      	subs	r1, #1
 801699a:	4288      	cmp	r0, r1
 801699c:	f6bf ae77 	bge.w	801668e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80169a0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80169a2:	fb01 5303 	mla	r3, r1, r3, r5
 80169a6:	141b      	asrs	r3, r3, #16
 80169a8:	f53f ae71 	bmi.w	801668e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80169ac:	3a01      	subs	r2, #1
 80169ae:	4293      	cmp	r3, r2
 80169b0:	f6bf ae6d 	bge.w	801668e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80169b4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80169b8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80169bc:	f1bb 0f00 	cmp.w	fp, #0
 80169c0:	dc70      	bgt.n	8016aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80169c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169c4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80169c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80169ca:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80169ce:	930c      	str	r3, [sp, #48]	; 0x30
 80169d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80169d2:	2b00      	cmp	r3, #0
 80169d4:	f340 81be 	ble.w	8016d54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80169d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80169dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80169e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80169e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80169e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80169ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80169ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80169f2:	eef0 6a62 	vmov.f32	s13, s5
 80169f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80169fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016a02:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8016a06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016a0a:	eef0 6a43 	vmov.f32	s13, s6
 8016a0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016a12:	ee12 2a90 	vmov	r2, s5
 8016a16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a1e:	ee13 2a10 	vmov	r2, s6
 8016a22:	932b      	str	r3, [sp, #172]	; 0xac
 8016a24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a2a:	932c      	str	r3, [sp, #176]	; 0xb0
 8016a2c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016a2e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8016a30:	3b01      	subs	r3, #1
 8016a32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a36:	9319      	str	r3, [sp, #100]	; 0x64
 8016a38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016a3a:	bf08      	it	eq
 8016a3c:	4613      	moveq	r3, r2
 8016a3e:	ee16 5a90 	vmov	r5, s13
 8016a42:	9309      	str	r3, [sp, #36]	; 0x24
 8016a44:	eeb0 3a67 	vmov.f32	s6, s15
 8016a48:	eef0 2a47 	vmov.f32	s5, s14
 8016a4c:	e5f3      	b.n	8016636 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016a4e:	2900      	cmp	r1, #0
 8016a50:	f43f ae66 	beq.w	8016720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016a54:	f818 0000 	ldrb.w	r0, [r8, r0]
 8016a58:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016a5c:	900a      	str	r0, [sp, #40]	; 0x28
 8016a5e:	0e00      	lsrs	r0, r0, #24
 8016a60:	9013      	str	r0, [sp, #76]	; 0x4c
 8016a62:	e65d      	b.n	8016720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016a64:	f113 0801 	adds.w	r8, r3, #1
 8016a68:	f53f af74 	bmi.w	8016954 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016a6c:	4540      	cmp	r0, r8
 8016a6e:	f6ff af71 	blt.w	8016954 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016a72:	f11c 0801 	adds.w	r8, ip, #1
 8016a76:	f53f af6d 	bmi.w	8016954 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016a7a:	45c6      	cmp	lr, r8
 8016a7c:	f6ff af6a 	blt.w	8016954 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016a80:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016a82:	9302      	str	r3, [sp, #8]
 8016a84:	b200      	sxth	r0, r0
 8016a86:	fa0f f38e 	sxth.w	r3, lr
 8016a8a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016a8e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8016a92:	9301      	str	r3, [sp, #4]
 8016a94:	9000      	str	r0, [sp, #0]
 8016a96:	4633      	mov	r3, r6
 8016a98:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016a9a:	981d      	ldr	r0, [sp, #116]	; 0x74
 8016a9c:	4639      	mov	r1, r7
 8016a9e:	f7ff fc62 	bl	8016366 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8016aa2:	e757      	b.n	8016954 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016aa4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016aa6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8016aa8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016aac:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016aae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016ab2:	1427      	asrs	r7, r4, #16
 8016ab4:	142b      	asrs	r3, r5, #16
 8016ab6:	fb01 7303 	mla	r3, r1, r3, r7
 8016aba:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016abc:	18e7      	adds	r7, r4, r3
 8016abe:	5ce3      	ldrb	r3, [r4, r3]
 8016ac0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016ac4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016ac8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016acc:	2a00      	cmp	r2, #0
 8016ace:	f000 8137 	beq.w	8016d40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8016ad2:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016ad6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8016ada:	9410      	str	r4, [sp, #64]	; 0x40
 8016adc:	0e24      	lsrs	r4, r4, #24
 8016ade:	9417      	str	r4, [sp, #92]	; 0x5c
 8016ae0:	b170      	cbz	r0, 8016b00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8016ae2:	eb07 0e01 	add.w	lr, r7, r1
 8016ae6:	5c79      	ldrb	r1, [r7, r1]
 8016ae8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016aec:	910b      	str	r1, [sp, #44]	; 0x2c
 8016aee:	0e09      	lsrs	r1, r1, #24
 8016af0:	9114      	str	r1, [sp, #80]	; 0x50
 8016af2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016af6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016afa:	9111      	str	r1, [sp, #68]	; 0x44
 8016afc:	0e09      	lsrs	r1, r1, #24
 8016afe:	9118      	str	r1, [sp, #96]	; 0x60
 8016b00:	b292      	uxth	r2, r2
 8016b02:	b280      	uxth	r0, r0
 8016b04:	fb02 f800 	mul.w	r8, r2, r0
 8016b08:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016b0c:	0112      	lsls	r2, r2, #4
 8016b0e:	eba2 0e08 	sub.w	lr, r2, r8
 8016b12:	b280      	uxth	r0, r0
 8016b14:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016b18:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8016b1a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016b1c:	fa1f fe8e 	uxth.w	lr, lr
 8016b20:	1a12      	subs	r2, r2, r0
 8016b22:	b292      	uxth	r2, r2
 8016b24:	fb0e f101 	mul.w	r1, lr, r1
 8016b28:	fb02 110c 	mla	r1, r2, ip, r1
 8016b2c:	fb00 1104 	mla	r1, r0, r4, r1
 8016b30:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016b32:	fb08 1104 	mla	r1, r8, r4, r1
 8016b36:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016b3a:	2900      	cmp	r1, #0
 8016b3c:	f000 80f5 	beq.w	8016d2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8016b40:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016b44:	d019      	beq.n	8016b7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8016b46:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016b4a:	fb0c fa0a 	mul.w	sl, ip, sl
 8016b4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b52:	fb0c fc03 	mul.w	ip, ip, r3
 8016b56:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016b5a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016b5e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016b62:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016b66:	4453      	add	r3, sl
 8016b68:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016b6c:	0a1b      	lsrs	r3, r3, #8
 8016b6e:	0a3f      	lsrs	r7, r7, #8
 8016b70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016b74:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016b78:	433b      	orrs	r3, r7
 8016b7a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016b7c:	2cff      	cmp	r4, #255	; 0xff
 8016b7e:	d020      	beq.n	8016bc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8016b80:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016b82:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016b86:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016b88:	4367      	muls	r7, r4
 8016b8a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016b8c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016b90:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016b92:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016b96:	fb04 fa0a 	mul.w	sl, r4, sl
 8016b9a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016b9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ba2:	44bc      	add	ip, r7
 8016ba4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016ba8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016bac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016bb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016bb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016bb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016bbc:	ea4c 040a 	orr.w	r4, ip, sl
 8016bc0:	9410      	str	r4, [sp, #64]	; 0x40
 8016bc2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016bc4:	2cff      	cmp	r4, #255	; 0xff
 8016bc6:	d020      	beq.n	8016c0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8016bc8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016bca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016bce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016bd0:	4367      	muls	r7, r4
 8016bd2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016bd4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016bd8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016bda:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016bde:	fb04 fa0a 	mul.w	sl, r4, sl
 8016be2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016be6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016bea:	44bc      	add	ip, r7
 8016bec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016bf0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016bf4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016bf8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016bfc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016c00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016c04:	ea4c 040a 	orr.w	r4, ip, sl
 8016c08:	940b      	str	r4, [sp, #44]	; 0x2c
 8016c0a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016c0c:	2cff      	cmp	r4, #255	; 0xff
 8016c0e:	d020      	beq.n	8016c52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8016c10:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016c12:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016c16:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016c18:	4367      	muls	r7, r4
 8016c1a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016c1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016c20:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016c22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016c26:	fb04 fa0a 	mul.w	sl, r4, sl
 8016c2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016c2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016c32:	44bc      	add	ip, r7
 8016c34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016c38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016c3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016c40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016c44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016c48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016c4c:	ea4c 040a 	orr.w	r4, ip, sl
 8016c50:	9411      	str	r4, [sp, #68]	; 0x44
 8016c52:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016c54:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016c58:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016c5a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016c5e:	fb0e f707 	mul.w	r7, lr, r7
 8016c62:	fb02 770c 	mla	r7, r2, ip, r7
 8016c66:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016c6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016c6c:	fb00 770c 	mla	r7, r0, ip, r7
 8016c70:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016c74:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016c76:	fb08 770c 	mla	r7, r8, ip, r7
 8016c7a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016c7e:	fb0e fe0c 	mul.w	lr, lr, ip
 8016c82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c86:	fb02 e303 	mla	r3, r2, r3, lr
 8016c8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016c8c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016c8e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016c92:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016c94:	fb00 330a 	mla	r3, r0, sl, r3
 8016c98:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016c9c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016ca0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016ca2:	f8b9 0000 	ldrh.w	r0, [r9]
 8016ca6:	434b      	muls	r3, r1
 8016ca8:	0a3f      	lsrs	r7, r7, #8
 8016caa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016cae:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016cb2:	1c59      	adds	r1, r3, #1
 8016cb4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016cb8:	ea47 070c 	orr.w	r7, r7, ip
 8016cbc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016cc0:	1202      	asrs	r2, r0, #8
 8016cc2:	0c3b      	lsrs	r3, r7, #16
 8016cc4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8016cc8:	b2c9      	uxtb	r1, r1
 8016cca:	fb13 f304 	smulbb	r3, r3, r4
 8016cce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016cd2:	fb02 3201 	mla	r2, r2, r1, r3
 8016cd6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8016cda:	10c3      	asrs	r3, r0, #3
 8016cdc:	b2ff      	uxtb	r7, r7
 8016cde:	00c0      	lsls	r0, r0, #3
 8016ce0:	b292      	uxth	r2, r2
 8016ce2:	fb1c fc04 	smulbb	ip, ip, r4
 8016ce6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016cea:	b2c0      	uxtb	r0, r0
 8016cec:	fb17 f704 	smulbb	r7, r7, r4
 8016cf0:	fb03 c301 	mla	r3, r3, r1, ip
 8016cf4:	fb00 7001 	mla	r0, r0, r1, r7
 8016cf8:	f102 0c01 	add.w	ip, r2, #1
 8016cfc:	b280      	uxth	r0, r0
 8016cfe:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016d02:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016d06:	1c42      	adds	r2, r0, #1
 8016d08:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8016d0c:	b29b      	uxth	r3, r3
 8016d0e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016d12:	ea42 020c 	orr.w	r2, r2, ip
 8016d16:	f103 0c01 	add.w	ip, r3, #1
 8016d1a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016d1e:	095b      	lsrs	r3, r3, #5
 8016d20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d24:	431a      	orrs	r2, r3
 8016d26:	f8a9 2000 	strh.w	r2, [r9]
 8016d2a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016d2c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016d2e:	441a      	add	r2, r3
 8016d30:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016d32:	9229      	str	r2, [sp, #164]	; 0xa4
 8016d34:	f109 0902 	add.w	r9, r9, #2
 8016d38:	441d      	add	r5, r3
 8016d3a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016d3e:	e63d      	b.n	80169bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8016d40:	2800      	cmp	r0, #0
 8016d42:	f43f aedd 	beq.w	8016b00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8016d46:	5c79      	ldrb	r1, [r7, r1]
 8016d48:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016d4c:	910b      	str	r1, [sp, #44]	; 0x2c
 8016d4e:	0e09      	lsrs	r1, r1, #24
 8016d50:	9114      	str	r1, [sp, #80]	; 0x50
 8016d52:	e6d5      	b.n	8016b00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8016d54:	b01f      	add	sp, #124	; 0x7c
 8016d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016d5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016d5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d5e:	b089      	sub	sp, #36	; 0x24
 8016d60:	9101      	str	r1, [sp, #4]
 8016d62:	9801      	ldr	r0, [sp, #4]
 8016d64:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8016d68:	8800      	ldrh	r0, [r0, #0]
 8016d6a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8016d6e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8016d72:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8016d76:	1206      	asrs	r6, r0, #8
 8016d78:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8016d7c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016d80:	9602      	str	r6, [sp, #8]
 8016d82:	10c6      	asrs	r6, r0, #3
 8016d84:	00c0      	lsls	r0, r0, #3
 8016d86:	b2c0      	uxtb	r0, r0
 8016d88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016d8c:	9004      	str	r0, [sp, #16]
 8016d8e:	2f00      	cmp	r7, #0
 8016d90:	fb07 100c 	mla	r0, r7, ip, r1
 8016d94:	9603      	str	r6, [sp, #12]
 8016d96:	eb02 0e00 	add.w	lr, r2, r0
 8016d9a:	f2c0 810a 	blt.w	8016fb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8016d9e:	45b8      	cmp	r8, r7
 8016da0:	f340 8107 	ble.w	8016fb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8016da4:	2900      	cmp	r1, #0
 8016da6:	f2c0 8102 	blt.w	8016fae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8016daa:	458c      	cmp	ip, r1
 8016dac:	f340 80ff 	ble.w	8016fae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8016db0:	5c12      	ldrb	r2, [r2, r0]
 8016db2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8016db6:	1c4a      	adds	r2, r1, #1
 8016db8:	f100 80fe 	bmi.w	8016fb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8016dbc:	4594      	cmp	ip, r2
 8016dbe:	f340 80fb 	ble.w	8016fb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8016dc2:	2d00      	cmp	r5, #0
 8016dc4:	f000 80fa 	beq.w	8016fbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8016dc8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016dcc:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8016dd0:	3701      	adds	r7, #1
 8016dd2:	f100 80f7 	bmi.w	8016fc4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8016dd6:	45b8      	cmp	r8, r7
 8016dd8:	f340 80f4 	ble.w	8016fc4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8016ddc:	2c00      	cmp	r4, #0
 8016dde:	f000 80f4 	beq.w	8016fca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8016de2:	2900      	cmp	r1, #0
 8016de4:	eb0e 020c 	add.w	r2, lr, ip
 8016de8:	f2c0 80ea 	blt.w	8016fc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8016dec:	458c      	cmp	ip, r1
 8016dee:	f340 80e7 	ble.w	8016fc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8016df2:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8016df6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8016dfa:	3101      	adds	r1, #1
 8016dfc:	f100 80e8 	bmi.w	8016fd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8016e00:	458c      	cmp	ip, r1
 8016e02:	f340 80e5 	ble.w	8016fd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8016e06:	2d00      	cmp	r5, #0
 8016e08:	f000 80e4 	beq.w	8016fd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8016e0c:	7852      	ldrb	r2, [r2, #1]
 8016e0e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8016e12:	0e0b      	lsrs	r3, r1, #24
 8016e14:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8016e18:	9300      	str	r3, [sp, #0]
 8016e1a:	b2a4      	uxth	r4, r4
 8016e1c:	b2ab      	uxth	r3, r5
 8016e1e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8016e22:	fb03 f904 	mul.w	r9, r3, r4
 8016e26:	fb0a f505 	mul.w	r5, sl, r5
 8016e2a:	011b      	lsls	r3, r3, #4
 8016e2c:	eba3 0e09 	sub.w	lr, r3, r9
 8016e30:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8016e34:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8016e38:	0a28      	lsrs	r0, r5, #8
 8016e3a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016e3e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8016e42:	4405      	add	r5, r0
 8016e44:	0a2d      	lsrs	r5, r5, #8
 8016e46:	fb0a f303 	mul.w	r3, sl, r3
 8016e4a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8016e4e:	9005      	str	r0, [sp, #20]
 8016e50:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8016e54:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8016e58:	0a1b      	lsrs	r3, r3, #8
 8016e5a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8016e5e:	9306      	str	r3, [sp, #24]
 8016e60:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8016e64:	fb0b f303 	mul.w	r3, fp, r3
 8016e68:	0a1d      	lsrs	r5, r3, #8
 8016e6a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016e6e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8016e72:	fb0b f606 	mul.w	r6, fp, r6
 8016e76:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8016e7a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016e7e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016e82:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016e86:	fb08 f707 	mul.w	r7, r8, r7
 8016e8a:	441d      	add	r5, r3
 8016e8c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8016e90:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016e94:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8016e98:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8016e9c:	fb08 fc0c 	mul.w	ip, r8, ip
 8016ea0:	0a1b      	lsrs	r3, r3, #8
 8016ea2:	9307      	str	r3, [sp, #28]
 8016ea4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8016ea8:	0e0b      	lsrs	r3, r1, #24
 8016eaa:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8016eae:	435f      	muls	r7, r3
 8016eb0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016eb4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016eb8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8016ebc:	4460      	add	r0, ip
 8016ebe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016ec2:	b2a4      	uxth	r4, r4
 8016ec4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016ec8:	0a2d      	lsrs	r5, r5, #8
 8016eca:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8016ece:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ed2:	fa1f fe8e 	uxth.w	lr, lr
 8016ed6:	4359      	muls	r1, r3
 8016ed8:	1b12      	subs	r2, r2, r4
 8016eda:	9b05      	ldr	r3, [sp, #20]
 8016edc:	44bc      	add	ip, r7
 8016ede:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016ee2:	b292      	uxth	r2, r2
 8016ee4:	fb05 f50e 	mul.w	r5, r5, lr
 8016ee8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016eec:	fb03 5502 	mla	r5, r3, r2, r5
 8016ef0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ef4:	9b06      	ldr	r3, [sp, #24]
 8016ef6:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8016efa:	0a36      	lsrs	r6, r6, #8
 8016efc:	0a00      	lsrs	r0, r0, #8
 8016efe:	fb0c 5509 	mla	r5, ip, r9, r5
 8016f02:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016f06:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8016f0a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016f0e:	fb00 5504 	mla	r5, r0, r4, r5
 8016f12:	fb0e f606 	mul.w	r6, lr, r6
 8016f16:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016f1a:	0a09      	lsrs	r1, r1, #8
 8016f1c:	9b07      	ldr	r3, [sp, #28]
 8016f1e:	fb02 6000 	mla	r0, r2, r0, r6
 8016f22:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8016f26:	fb09 0001 	mla	r0, r9, r1, r0
 8016f2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016f2e:	fb0e fe0b 	mul.w	lr, lr, fp
 8016f32:	fb04 0003 	mla	r0, r4, r3, r0
 8016f36:	fb02 e20a 	mla	r2, r2, sl, lr
 8016f3a:	9b00      	ldr	r3, [sp, #0]
 8016f3c:	fb04 2408 	mla	r4, r4, r8, r2
 8016f40:	fb09 4903 	mla	r9, r9, r3, r4
 8016f44:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8016f48:	9b02      	ldr	r3, [sp, #8]
 8016f4a:	9a04      	ldr	r2, [sp, #16]
 8016f4c:	fa5f f989 	uxtb.w	r9, r9
 8016f50:	fb03 f109 	mul.w	r1, r3, r9
 8016f54:	9b03      	ldr	r3, [sp, #12]
 8016f56:	0a2d      	lsrs	r5, r5, #8
 8016f58:	0a00      	lsrs	r0, r0, #8
 8016f5a:	fb03 f309 	mul.w	r3, r3, r9
 8016f5e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016f62:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016f66:	4305      	orrs	r5, r0
 8016f68:	fb02 f909 	mul.w	r9, r2, r9
 8016f6c:	1c58      	adds	r0, r3, #1
 8016f6e:	1c4a      	adds	r2, r1, #1
 8016f70:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016f74:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016f78:	0a2b      	lsrs	r3, r5, #8
 8016f7a:	0c2a      	lsrs	r2, r5, #16
 8016f7c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016f80:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8016f84:	00db      	lsls	r3, r3, #3
 8016f86:	0212      	lsls	r2, r2, #8
 8016f88:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016f8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f90:	4313      	orrs	r3, r2
 8016f92:	f109 0201 	add.w	r2, r9, #1
 8016f96:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8016f9a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8016f9e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016fa2:	431d      	orrs	r5, r3
 8016fa4:	9b01      	ldr	r3, [sp, #4]
 8016fa6:	801d      	strh	r5, [r3, #0]
 8016fa8:	b009      	add	sp, #36	; 0x24
 8016faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fae:	2000      	movs	r0, #0
 8016fb0:	e701      	b.n	8016db6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8016fb2:	2600      	movs	r6, #0
 8016fb4:	4630      	mov	r0, r6
 8016fb6:	e70b      	b.n	8016dd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8016fb8:	2600      	movs	r6, #0
 8016fba:	e709      	b.n	8016dd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8016fbc:	462e      	mov	r6, r5
 8016fbe:	e707      	b.n	8016dd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8016fc0:	2700      	movs	r7, #0
 8016fc2:	e71a      	b.n	8016dfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8016fc4:	2100      	movs	r1, #0
 8016fc6:	460f      	mov	r7, r1
 8016fc8:	e723      	b.n	8016e12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8016fca:	4621      	mov	r1, r4
 8016fcc:	4627      	mov	r7, r4
 8016fce:	e720      	b.n	8016e12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8016fd0:	2100      	movs	r1, #0
 8016fd2:	e71e      	b.n	8016e12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8016fd4:	4629      	mov	r1, r5
 8016fd6:	e71c      	b.n	8016e12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08016fd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fdc:	b09b      	sub	sp, #108	; 0x6c
 8016fde:	9218      	str	r2, [sp, #96]	; 0x60
 8016fe0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016fe2:	9116      	str	r1, [sp, #88]	; 0x58
 8016fe4:	9307      	str	r3, [sp, #28]
 8016fe6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8016fea:	9019      	str	r0, [sp, #100]	; 0x64
 8016fec:	6850      	ldr	r0, [r2, #4]
 8016fee:	6812      	ldr	r2, [r2, #0]
 8016ff0:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8016ff2:	fb00 1303 	mla	r3, r0, r3, r1
 8016ff6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016ffa:	930a      	str	r3, [sp, #40]	; 0x28
 8016ffc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ffe:	681b      	ldr	r3, [r3, #0]
 8017000:	930f      	str	r3, [sp, #60]	; 0x3c
 8017002:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017004:	685e      	ldr	r6, [r3, #4]
 8017006:	3604      	adds	r6, #4
 8017008:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801700a:	2b00      	cmp	r3, #0
 801700c:	dc03      	bgt.n	8017016 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801700e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017010:	2b00      	cmp	r3, #0
 8017012:	f340 8373 	ble.w	80176fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8017016:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017018:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801701c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017020:	1e48      	subs	r0, r1, #1
 8017022:	1e57      	subs	r7, r2, #1
 8017024:	9b07      	ldr	r3, [sp, #28]
 8017026:	2b00      	cmp	r3, #0
 8017028:	f340 8190 	ble.w	801734c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801702c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801702e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017032:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017036:	d406      	bmi.n	8017046 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017038:	4584      	cmp	ip, r0
 801703a:	da04      	bge.n	8017046 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801703c:	2b00      	cmp	r3, #0
 801703e:	db02      	blt.n	8017046 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017040:	42bb      	cmp	r3, r7
 8017042:	f2c0 8184 	blt.w	801734e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8017046:	f11c 0c01 	adds.w	ip, ip, #1
 801704a:	f100 8172 	bmi.w	8017332 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801704e:	4561      	cmp	r1, ip
 8017050:	f2c0 816f 	blt.w	8017332 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017054:	3301      	adds	r3, #1
 8017056:	f100 816c 	bmi.w	8017332 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801705a:	429a      	cmp	r2, r3
 801705c:	f2c0 8169 	blt.w	8017332 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017060:	9b07      	ldr	r3, [sp, #28]
 8017062:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017064:	9317      	str	r3, [sp, #92]	; 0x5c
 8017066:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017068:	2b00      	cmp	r3, #0
 801706a:	f340 818e 	ble.w	801738a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801706e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017070:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017074:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017076:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801707a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801707c:	141b      	asrs	r3, r3, #16
 801707e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017082:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017086:	f100 81d1 	bmi.w	801742c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801708a:	f101 38ff 	add.w	r8, r1, #4294967295
 801708e:	4543      	cmp	r3, r8
 8017090:	f280 81cc 	bge.w	801742c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017094:	f1bc 0f00 	cmp.w	ip, #0
 8017098:	f2c0 81c8 	blt.w	801742c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801709c:	f10e 38ff 	add.w	r8, lr, #4294967295
 80170a0:	45c4      	cmp	ip, r8
 80170a2:	f280 81c3 	bge.w	801742c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80170a6:	b209      	sxth	r1, r1
 80170a8:	fb0c 3301 	mla	r3, ip, r1, r3
 80170ac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80170ae:	eb04 0803 	add.w	r8, r4, r3
 80170b2:	5ce3      	ldrb	r3, [r4, r3]
 80170b4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80170b8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80170bc:	2a00      	cmp	r2, #0
 80170be:	f000 81aa 	beq.w	8017416 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80170c2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80170c6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80170ca:	940b      	str	r4, [sp, #44]	; 0x2c
 80170cc:	0e24      	lsrs	r4, r4, #24
 80170ce:	9412      	str	r4, [sp, #72]	; 0x48
 80170d0:	b178      	cbz	r0, 80170f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80170d2:	eb08 0c01 	add.w	ip, r8, r1
 80170d6:	f818 1001 	ldrb.w	r1, [r8, r1]
 80170da:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80170de:	9108      	str	r1, [sp, #32]
 80170e0:	0e09      	lsrs	r1, r1, #24
 80170e2:	9110      	str	r1, [sp, #64]	; 0x40
 80170e4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80170e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80170ec:	910c      	str	r1, [sp, #48]	; 0x30
 80170ee:	0e09      	lsrs	r1, r1, #24
 80170f0:	9113      	str	r1, [sp, #76]	; 0x4c
 80170f2:	b292      	uxth	r2, r2
 80170f4:	b280      	uxth	r0, r0
 80170f6:	fb02 f900 	mul.w	r9, r2, r0
 80170fa:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80170fe:	0112      	lsls	r2, r2, #4
 8017100:	eba2 0809 	sub.w	r8, r2, r9
 8017104:	b280      	uxth	r0, r0
 8017106:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801710a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801710c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801710e:	fa1f f888 	uxth.w	r8, r8
 8017112:	1a12      	subs	r2, r2, r0
 8017114:	b292      	uxth	r2, r2
 8017116:	fb08 f101 	mul.w	r1, r8, r1
 801711a:	fb02 110e 	mla	r1, r2, lr, r1
 801711e:	fb00 1104 	mla	r1, r0, r4, r1
 8017122:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017124:	fb09 1104 	mla	r1, r9, r4, r1
 8017128:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801712c:	2900      	cmp	r1, #0
 801712e:	f000 80f5 	beq.w	801731c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017132:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017136:	d01b      	beq.n	8017170 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017138:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801713c:	fb0e fa0a 	mul.w	sl, lr, sl
 8017140:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017144:	fb0e fe03 	mul.w	lr, lr, r3
 8017148:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801714c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017150:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017154:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017158:	4453      	add	r3, sl
 801715a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801715e:	0a1b      	lsrs	r3, r3, #8
 8017160:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017164:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017168:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801716c:	ea43 030c 	orr.w	r3, r3, ip
 8017170:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017172:	2cff      	cmp	r4, #255	; 0xff
 8017174:	d021      	beq.n	80171ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8017176:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017178:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801717c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801717e:	fb04 fb0b 	mul.w	fp, r4, fp
 8017182:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017184:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017188:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801718a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801718e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017192:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017196:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801719a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801719e:	44de      	add	lr, fp
 80171a0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80171a4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80171a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80171ac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80171b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80171b4:	ea4e 040a 	orr.w	r4, lr, sl
 80171b8:	940b      	str	r4, [sp, #44]	; 0x2c
 80171ba:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80171bc:	2cff      	cmp	r4, #255	; 0xff
 80171be:	d021      	beq.n	8017204 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80171c0:	9c08      	ldr	r4, [sp, #32]
 80171c2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80171c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80171c8:	fb04 fb0b 	mul.w	fp, r4, fp
 80171cc:	9c08      	ldr	r4, [sp, #32]
 80171ce:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80171d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80171d4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80171d8:	fb04 fa0a 	mul.w	sl, r4, sl
 80171dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80171e0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80171e4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80171e8:	44de      	add	lr, fp
 80171ea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80171ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80171f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80171f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80171fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80171fe:	ea4e 040a 	orr.w	r4, lr, sl
 8017202:	9408      	str	r4, [sp, #32]
 8017204:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017206:	2cff      	cmp	r4, #255	; 0xff
 8017208:	d021      	beq.n	801724e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801720a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801720c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017210:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017212:	fb04 fb0b 	mul.w	fp, r4, fp
 8017216:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017218:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801721c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801721e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017222:	fb04 fa0a 	mul.w	sl, r4, sl
 8017226:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801722a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801722e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017232:	44de      	add	lr, fp
 8017234:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017238:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801723c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017240:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017244:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017248:	ea4e 040a 	orr.w	r4, lr, sl
 801724c:	940c      	str	r4, [sp, #48]	; 0x30
 801724e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017250:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017254:	9c08      	ldr	r4, [sp, #32]
 8017256:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801725a:	fb08 fc0c 	mul.w	ip, r8, ip
 801725e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017262:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017266:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017268:	fb00 cc0e 	mla	ip, r0, lr, ip
 801726c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017270:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017272:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017276:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801727a:	fb08 f80e 	mul.w	r8, r8, lr
 801727e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017282:	fb02 8303 	mla	r3, r2, r3, r8
 8017286:	9a08      	ldr	r2, [sp, #32]
 8017288:	f8b7 8000 	ldrh.w	r8, [r7]
 801728c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017290:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017292:	fb00 330a 	mla	r3, r0, sl, r3
 8017296:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801729a:	fb09 3900 	mla	r9, r9, r0, r3
 801729e:	43c9      	mvns	r1, r1
 80172a0:	ea4f 2228 	mov.w	r2, r8, asr #8
 80172a4:	fa5f fe81 	uxtb.w	lr, r1
 80172a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80172ac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80172b0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80172b4:	fb02 f20e 	mul.w	r2, r2, lr
 80172b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172bc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80172c0:	ea4c 0c09 	orr.w	ip, ip, r9
 80172c4:	1c53      	adds	r3, r2, #1
 80172c6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80172ca:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80172ce:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80172d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80172d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80172da:	4a63      	ldr	r2, [pc, #396]	; (8017468 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80172dc:	fb00 f00e 	mul.w	r0, r0, lr
 80172e0:	b2db      	uxtb	r3, r3
 80172e2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80172e6:	1c43      	adds	r3, r0, #1
 80172e8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80172ec:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80172f0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80172f4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80172f8:	b2c9      	uxtb	r1, r1
 80172fa:	00db      	lsls	r3, r3, #3
 80172fc:	fb01 f10e 	mul.w	r1, r1, lr
 8017300:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017304:	4313      	orrs	r3, r2
 8017306:	1c4a      	adds	r2, r1, #1
 8017308:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801730c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017310:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8017314:	ea4c 0c03 	orr.w	ip, ip, r3
 8017318:	f8a7 c000 	strh.w	ip, [r7]
 801731c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801731e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8017320:	441a      	add	r2, r3
 8017322:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017324:	9225      	str	r2, [sp, #148]	; 0x94
 8017326:	441d      	add	r5, r3
 8017328:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801732a:	3b01      	subs	r3, #1
 801732c:	3702      	adds	r7, #2
 801732e:	9317      	str	r3, [sp, #92]	; 0x5c
 8017330:	e699      	b.n	8017066 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8017332:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017334:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8017336:	441c      	add	r4, r3
 8017338:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801733a:	9425      	str	r4, [sp, #148]	; 0x94
 801733c:	441d      	add	r5, r3
 801733e:	9b07      	ldr	r3, [sp, #28]
 8017340:	3b01      	subs	r3, #1
 8017342:	9307      	str	r3, [sp, #28]
 8017344:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017346:	3302      	adds	r3, #2
 8017348:	930a      	str	r3, [sp, #40]	; 0x28
 801734a:	e66b      	b.n	8017024 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801734c:	d024      	beq.n	8017398 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801734e:	9b07      	ldr	r3, [sp, #28]
 8017350:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8017352:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8017354:	3b01      	subs	r3, #1
 8017356:	fb00 4003 	mla	r0, r0, r3, r4
 801735a:	1400      	asrs	r0, r0, #16
 801735c:	f53f ae80 	bmi.w	8017060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8017360:	3901      	subs	r1, #1
 8017362:	4288      	cmp	r0, r1
 8017364:	f6bf ae7c 	bge.w	8017060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8017368:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801736a:	fb01 5303 	mla	r3, r1, r3, r5
 801736e:	141b      	asrs	r3, r3, #16
 8017370:	f53f ae76 	bmi.w	8017060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8017374:	3a01      	subs	r2, #1
 8017376:	4293      	cmp	r3, r2
 8017378:	f6bf ae72 	bge.w	8017060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801737c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017380:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8017384:	f1bb 0f00 	cmp.w	fp, #0
 8017388:	dc70      	bgt.n	801746c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801738a:	9b07      	ldr	r3, [sp, #28]
 801738c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017390:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017392:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017396:	930a      	str	r3, [sp, #40]	; 0x28
 8017398:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801739a:	2b00      	cmp	r3, #0
 801739c:	f340 81ae 	ble.w	80176fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80173a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80173a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80173a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80173ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80173ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80173b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80173b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80173ba:	eef0 6a62 	vmov.f32	s13, s5
 80173be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80173c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80173c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80173ca:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80173ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80173d2:	eef0 6a43 	vmov.f32	s13, s6
 80173d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80173da:	ee12 2a90 	vmov	r2, s5
 80173de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80173e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80173e6:	ee13 2a10 	vmov	r2, s6
 80173ea:	9327      	str	r3, [sp, #156]	; 0x9c
 80173ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80173ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80173f2:	9328      	str	r3, [sp, #160]	; 0xa0
 80173f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80173f6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80173f8:	3b01      	subs	r3, #1
 80173fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80173fe:	9316      	str	r3, [sp, #88]	; 0x58
 8017400:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017402:	bf08      	it	eq
 8017404:	4613      	moveq	r3, r2
 8017406:	ee16 5a90 	vmov	r5, s13
 801740a:	9307      	str	r3, [sp, #28]
 801740c:	eeb0 3a67 	vmov.f32	s6, s15
 8017410:	eef0 2a47 	vmov.f32	s5, s14
 8017414:	e5f8      	b.n	8017008 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017416:	2800      	cmp	r0, #0
 8017418:	f43f ae6b 	beq.w	80170f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801741c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017420:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017424:	9108      	str	r1, [sp, #32]
 8017426:	0e09      	lsrs	r1, r1, #24
 8017428:	9110      	str	r1, [sp, #64]	; 0x40
 801742a:	e662      	b.n	80170f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801742c:	f113 0801 	adds.w	r8, r3, #1
 8017430:	f53f af74 	bmi.w	801731c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017434:	4541      	cmp	r1, r8
 8017436:	f6ff af71 	blt.w	801731c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801743a:	f11c 0801 	adds.w	r8, ip, #1
 801743e:	f53f af6d 	bmi.w	801731c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017442:	45c6      	cmp	lr, r8
 8017444:	f6ff af6a 	blt.w	801731c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017448:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801744c:	b209      	sxth	r1, r1
 801744e:	fa0f f38e 	sxth.w	r3, lr
 8017452:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8017456:	9301      	str	r3, [sp, #4]
 8017458:	9100      	str	r1, [sp, #0]
 801745a:	4633      	mov	r3, r6
 801745c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801745e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017460:	4639      	mov	r1, r7
 8017462:	f7ff fc7a 	bl	8016d5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8017466:	e759      	b.n	801731c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017468:	fffff800 	.word	0xfffff800
 801746c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801746e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8017470:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017474:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017476:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801747a:	1427      	asrs	r7, r4, #16
 801747c:	142b      	asrs	r3, r5, #16
 801747e:	fb01 7303 	mla	r3, r1, r3, r7
 8017482:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017484:	18e7      	adds	r7, r4, r3
 8017486:	5ce3      	ldrb	r3, [r4, r3]
 8017488:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801748c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017490:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017494:	2a00      	cmp	r2, #0
 8017496:	f000 8127 	beq.w	80176e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801749a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801749e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80174a2:	940d      	str	r4, [sp, #52]	; 0x34
 80174a4:	0e24      	lsrs	r4, r4, #24
 80174a6:	9414      	str	r4, [sp, #80]	; 0x50
 80174a8:	b170      	cbz	r0, 80174c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80174aa:	eb07 0e01 	add.w	lr, r7, r1
 80174ae:	5c79      	ldrb	r1, [r7, r1]
 80174b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80174b4:	9109      	str	r1, [sp, #36]	; 0x24
 80174b6:	0e09      	lsrs	r1, r1, #24
 80174b8:	9111      	str	r1, [sp, #68]	; 0x44
 80174ba:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80174be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80174c2:	910e      	str	r1, [sp, #56]	; 0x38
 80174c4:	0e09      	lsrs	r1, r1, #24
 80174c6:	9115      	str	r1, [sp, #84]	; 0x54
 80174c8:	b292      	uxth	r2, r2
 80174ca:	b280      	uxth	r0, r0
 80174cc:	fb02 f800 	mul.w	r8, r2, r0
 80174d0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80174d4:	0112      	lsls	r2, r2, #4
 80174d6:	eba2 0e08 	sub.w	lr, r2, r8
 80174da:	b280      	uxth	r0, r0
 80174dc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80174e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80174e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80174e4:	fa1f fe8e 	uxth.w	lr, lr
 80174e8:	1a09      	subs	r1, r1, r0
 80174ea:	b289      	uxth	r1, r1
 80174ec:	fb0e f202 	mul.w	r2, lr, r2
 80174f0:	fb01 220c 	mla	r2, r1, ip, r2
 80174f4:	fb00 2204 	mla	r2, r0, r4, r2
 80174f8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80174fa:	fb08 2204 	mla	r2, r8, r4, r2
 80174fe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017502:	2a00      	cmp	r2, #0
 8017504:	f000 80e5 	beq.w	80176d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8017508:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801750c:	d019      	beq.n	8017542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801750e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017512:	fb0c fa0a 	mul.w	sl, ip, sl
 8017516:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801751a:	fb0c fc03 	mul.w	ip, ip, r3
 801751e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017522:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017526:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801752a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801752e:	4453      	add	r3, sl
 8017530:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017534:	0a1b      	lsrs	r3, r3, #8
 8017536:	0a3f      	lsrs	r7, r7, #8
 8017538:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801753c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017540:	433b      	orrs	r3, r7
 8017542:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017544:	2cff      	cmp	r4, #255	; 0xff
 8017546:	d020      	beq.n	801758a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8017548:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801754a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801754e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017550:	4367      	muls	r7, r4
 8017552:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017554:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017558:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801755a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801755e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017562:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017566:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801756a:	44bc      	add	ip, r7
 801756c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017570:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017574:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017578:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801757c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017580:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017584:	ea4c 040a 	orr.w	r4, ip, sl
 8017588:	940d      	str	r4, [sp, #52]	; 0x34
 801758a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801758c:	2cff      	cmp	r4, #255	; 0xff
 801758e:	d020      	beq.n	80175d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8017590:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017592:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017596:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017598:	4367      	muls	r7, r4
 801759a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801759c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80175a0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80175a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80175a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80175aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80175ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80175b2:	44bc      	add	ip, r7
 80175b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80175b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80175bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80175c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80175c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80175c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80175cc:	ea4c 040a 	orr.w	r4, ip, sl
 80175d0:	9409      	str	r4, [sp, #36]	; 0x24
 80175d2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80175d4:	2cff      	cmp	r4, #255	; 0xff
 80175d6:	d020      	beq.n	801761a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80175d8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80175da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80175de:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80175e0:	4367      	muls	r7, r4
 80175e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80175e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80175e8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80175ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80175ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80175f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80175f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80175fa:	44bc      	add	ip, r7
 80175fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017600:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017604:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017608:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801760c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017610:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017614:	ea4c 040a 	orr.w	r4, ip, sl
 8017618:	940e      	str	r4, [sp, #56]	; 0x38
 801761a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801761c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017620:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017622:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017626:	fb0e f707 	mul.w	r7, lr, r7
 801762a:	fb01 770c 	mla	r7, r1, ip, r7
 801762e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017632:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017634:	fb00 770c 	mla	r7, r0, ip, r7
 8017638:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801763c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801763e:	fb08 770c 	mla	r7, r8, ip, r7
 8017642:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017646:	fb0e fe0c 	mul.w	lr, lr, ip
 801764a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801764e:	fb01 e303 	mla	r3, r1, r3, lr
 8017652:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017654:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8017658:	990e      	ldr	r1, [sp, #56]	; 0x38
 801765a:	fb00 330a 	mla	r3, r0, sl, r3
 801765e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8017662:	fb08 3c0c 	mla	ip, r8, ip, r3
 8017666:	f8b9 3000 	ldrh.w	r3, [r9]
 801766a:	43d2      	mvns	r2, r2
 801766c:	1218      	asrs	r0, r3, #8
 801766e:	b2d2      	uxtb	r2, r2
 8017670:	10d9      	asrs	r1, r3, #3
 8017672:	0a3f      	lsrs	r7, r7, #8
 8017674:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017678:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801767c:	00db      	lsls	r3, r3, #3
 801767e:	4350      	muls	r0, r2
 8017680:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017684:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017688:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801768c:	b2db      	uxtb	r3, r3
 801768e:	ea47 070c 	orr.w	r7, r7, ip
 8017692:	4351      	muls	r1, r2
 8017694:	4353      	muls	r3, r2
 8017696:	1c42      	adds	r2, r0, #1
 8017698:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801769c:	0c3a      	lsrs	r2, r7, #16
 801769e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80176a2:	4a18      	ldr	r2, [pc, #96]	; (8017704 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80176a4:	b2c0      	uxtb	r0, r0
 80176a6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80176aa:	1c4a      	adds	r2, r1, #1
 80176ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80176b0:	0a3a      	lsrs	r2, r7, #8
 80176b2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80176b6:	00c9      	lsls	r1, r1, #3
 80176b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80176bc:	4301      	orrs	r1, r0
 80176be:	1c58      	adds	r0, r3, #1
 80176c0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80176c4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80176c8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80176cc:	4308      	orrs	r0, r1
 80176ce:	f8a9 0000 	strh.w	r0, [r9]
 80176d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80176d4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80176d6:	441a      	add	r2, r3
 80176d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80176da:	9225      	str	r2, [sp, #148]	; 0x94
 80176dc:	f109 0902 	add.w	r9, r9, #2
 80176e0:	441d      	add	r5, r3
 80176e2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80176e6:	e64d      	b.n	8017384 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80176e8:	2800      	cmp	r0, #0
 80176ea:	f43f aeed 	beq.w	80174c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80176ee:	5c79      	ldrb	r1, [r7, r1]
 80176f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80176f4:	9109      	str	r1, [sp, #36]	; 0x24
 80176f6:	0e09      	lsrs	r1, r1, #24
 80176f8:	9111      	str	r1, [sp, #68]	; 0x44
 80176fa:	e6e5      	b.n	80174c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80176fc:	b01b      	add	sp, #108	; 0x6c
 80176fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017702:	bf00      	nop
 8017704:	fffff800 	.word	0xfffff800

08017708 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8017708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801770c:	b085      	sub	sp, #20
 801770e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8017712:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017716:	9103      	str	r1, [sp, #12]
 8017718:	fb00 7406 	mla	r4, r0, r6, r7
 801771c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8017720:	2800      	cmp	r0, #0
 8017722:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8017726:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801772a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801772e:	9501      	str	r5, [sp, #4]
 8017730:	eb03 0904 	add.w	r9, r3, r4
 8017734:	f2c0 8150 	blt.w	80179d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8017738:	4583      	cmp	fp, r0
 801773a:	f340 814d 	ble.w	80179d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801773e:	2f00      	cmp	r7, #0
 8017740:	f2c0 8146 	blt.w	80179d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8017744:	42be      	cmp	r6, r7
 8017746:	f340 8143 	ble.w	80179d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801774a:	f813 c004 	ldrb.w	ip, [r3, r4]
 801774e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8017752:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017756:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801775a:	4355      	muls	r5, r2
 801775c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017760:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8017764:	fb0c f203 	mul.w	r2, ip, r3
 8017768:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801776c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8017770:	441d      	add	r5, r3
 8017772:	f102 0320 	add.w	r3, r2, #32
 8017776:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801777a:	0a1b      	lsrs	r3, r3, #8
 801777c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8017780:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017784:	431c      	orrs	r4, r3
 8017786:	1c7b      	adds	r3, r7, #1
 8017788:	f100 812b 	bmi.w	80179e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801778c:	429e      	cmp	r6, r3
 801778e:	f340 8128 	ble.w	80179e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8017792:	2900      	cmp	r1, #0
 8017794:	f000 8128 	beq.w	80179e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8017798:	9a01      	ldr	r2, [sp, #4]
 801779a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801779e:	8855      	ldrh	r5, [r2, #2]
 80177a0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80177a4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80177a8:	fb08 f802 	mul.w	r8, r8, r2
 80177ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80177b0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80177b4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80177b8:	435d      	muls	r5, r3
 80177ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80177be:	44d0      	add	r8, sl
 80177c0:	f105 0a20 	add.w	sl, r5, #32
 80177c4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80177c8:	0a2d      	lsrs	r5, r5, #8
 80177ca:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80177ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80177d2:	432a      	orrs	r2, r5
 80177d4:	3001      	adds	r0, #1
 80177d6:	f100 810d 	bmi.w	80179f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80177da:	4583      	cmp	fp, r0
 80177dc:	f340 810a 	ble.w	80179f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80177e0:	f1be 0f00 	cmp.w	lr, #0
 80177e4:	f000 810b 	beq.w	80179fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80177e8:	2f00      	cmp	r7, #0
 80177ea:	f2c0 8100 	blt.w	80179ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80177ee:	42be      	cmp	r6, r7
 80177f0:	f340 80fd 	ble.w	80179ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80177f4:	9801      	ldr	r0, [sp, #4]
 80177f6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80177fa:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80177fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017802:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8017806:	fb0a fa00 	mul.w	sl, sl, r0
 801780a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801780e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017812:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8017816:	fb05 f808 	mul.w	r8, r5, r8
 801781a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801781e:	4482      	add	sl, r0
 8017820:	f108 0020 	add.w	r0, r8, #32
 8017824:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017828:	0a00      	lsrs	r0, r0, #8
 801782a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801782e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017832:	ea4b 0b00 	orr.w	fp, fp, r0
 8017836:	3701      	adds	r7, #1
 8017838:	f100 80e6 	bmi.w	8017a08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801783c:	42be      	cmp	r6, r7
 801783e:	f340 80e3 	ble.w	8017a08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8017842:	2900      	cmp	r1, #0
 8017844:	f000 80e3 	beq.w	8017a0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8017848:	3601      	adds	r6, #1
 801784a:	9801      	ldr	r0, [sp, #4]
 801784c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017850:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8017854:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8017858:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801785c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017860:	fb09 f906 	mul.w	r9, r9, r6
 8017864:	fb07 f800 	mul.w	r8, r7, r0
 8017868:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801786c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8017870:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8017874:	44d1      	add	r9, sl
 8017876:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801787a:	f108 0020 	add.w	r0, r8, #32
 801787e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017882:	0a00      	lsrs	r0, r0, #8
 8017884:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017888:	4330      	orrs	r0, r6
 801788a:	b28e      	uxth	r6, r1
 801788c:	fa1f f98e 	uxth.w	r9, lr
 8017890:	fb06 f809 	mul.w	r8, r6, r9
 8017894:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8017898:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801789c:	0136      	lsls	r6, r6, #4
 801789e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80178a2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80178a6:	9601      	str	r6, [sp, #4]
 80178a8:	ea4a 0404 	orr.w	r4, sl, r4
 80178ac:	fa1f f689 	uxth.w	r6, r9
 80178b0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80178b4:	fb11 f90e 	smulbb	r9, r1, lr
 80178b8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80178bc:	9602      	str	r6, [sp, #8]
 80178be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80178c2:	4626      	mov	r6, r4
 80178c4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80178c8:	f1ce 0410 	rsb	r4, lr, #16
 80178cc:	1a64      	subs	r4, r4, r1
 80178ce:	ea4a 0202 	orr.w	r2, sl, r2
 80178d2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80178d6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80178da:	434a      	muls	r2, r1
 80178dc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80178e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80178e4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80178e8:	fb04 2406 	mla	r4, r4, r6, r2
 80178ec:	ea4a 0000 	orr.w	r0, sl, r0
 80178f0:	fb09 4200 	mla	r2, r9, r0, r4
 80178f4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80178f8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80178fc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017900:	ea44 0b0b 	orr.w	fp, r4, fp
 8017904:	9c01      	ldr	r4, [sp, #4]
 8017906:	9e02      	ldr	r6, [sp, #8]
 8017908:	9903      	ldr	r1, [sp, #12]
 801790a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801790e:	1ba4      	subs	r4, r4, r6
 8017910:	9e01      	ldr	r6, [sp, #4]
 8017912:	8808      	ldrh	r0, [r1, #0]
 8017914:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8017918:	eba6 0608 	sub.w	r6, r6, r8
 801791c:	b2b6      	uxth	r6, r6
 801791e:	b2a4      	uxth	r4, r4
 8017920:	4373      	muls	r3, r6
 8017922:	fb0c 3304 	mla	r3, ip, r4, r3
 8017926:	9c02      	ldr	r4, [sp, #8]
 8017928:	fb04 3505 	mla	r5, r4, r5, r3
 801792c:	fb08 5707 	mla	r7, r8, r7, r5
 8017930:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017934:	b289      	uxth	r1, r1
 8017936:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801793a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801793e:	434f      	muls	r7, r1
 8017940:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017944:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017948:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801794c:	1c7b      	adds	r3, r7, #1
 801794e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017952:	ea42 0e0e 	orr.w	lr, r2, lr
 8017956:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801795a:	fa1f f28e 	uxth.w	r2, lr
 801795e:	1203      	asrs	r3, r0, #8
 8017960:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8017964:	b2ff      	uxtb	r7, r7
 8017966:	1215      	asrs	r5, r2, #8
 8017968:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801796c:	fb13 f307 	smulbb	r3, r3, r7
 8017970:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017974:	fb05 3501 	mla	r5, r5, r1, r3
 8017978:	10c3      	asrs	r3, r0, #3
 801797a:	10d4      	asrs	r4, r2, #3
 801797c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017980:	fb13 f307 	smulbb	r3, r3, r7
 8017984:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017988:	fb04 3401 	mla	r4, r4, r1, r3
 801798c:	00c3      	lsls	r3, r0, #3
 801798e:	00d2      	lsls	r2, r2, #3
 8017990:	b2db      	uxtb	r3, r3
 8017992:	fb13 f307 	smulbb	r3, r3, r7
 8017996:	b2d2      	uxtb	r2, r2
 8017998:	fb02 3101 	mla	r1, r2, r1, r3
 801799c:	b2ad      	uxth	r5, r5
 801799e:	b289      	uxth	r1, r1
 80179a0:	b2a4      	uxth	r4, r4
 80179a2:	1c6b      	adds	r3, r5, #1
 80179a4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80179a8:	1c62      	adds	r2, r4, #1
 80179aa:	1c4b      	adds	r3, r1, #1
 80179ac:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80179b0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80179b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80179b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80179bc:	0964      	lsrs	r4, r4, #5
 80179be:	432b      	orrs	r3, r5
 80179c0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80179c4:	9a03      	ldr	r2, [sp, #12]
 80179c6:	4323      	orrs	r3, r4
 80179c8:	8013      	strh	r3, [r2, #0]
 80179ca:	b005      	add	sp, #20
 80179cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179d0:	f04f 0c00 	mov.w	ip, #0
 80179d4:	4664      	mov	r4, ip
 80179d6:	e6d6      	b.n	8017786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80179d8:	2300      	movs	r3, #0
 80179da:	469c      	mov	ip, r3
 80179dc:	461a      	mov	r2, r3
 80179de:	461c      	mov	r4, r3
 80179e0:	e6f8      	b.n	80177d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80179e2:	2300      	movs	r3, #0
 80179e4:	461a      	mov	r2, r3
 80179e6:	e6f5      	b.n	80177d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80179e8:	460b      	mov	r3, r1
 80179ea:	460a      	mov	r2, r1
 80179ec:	e6f2      	b.n	80177d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80179ee:	2500      	movs	r5, #0
 80179f0:	46ab      	mov	fp, r5
 80179f2:	e720      	b.n	8017836 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80179f4:	2700      	movs	r7, #0
 80179f6:	463d      	mov	r5, r7
 80179f8:	4638      	mov	r0, r7
 80179fa:	46bb      	mov	fp, r7
 80179fc:	e745      	b.n	801788a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80179fe:	4677      	mov	r7, lr
 8017a00:	4675      	mov	r5, lr
 8017a02:	4670      	mov	r0, lr
 8017a04:	46f3      	mov	fp, lr
 8017a06:	e740      	b.n	801788a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8017a08:	2700      	movs	r7, #0
 8017a0a:	4638      	mov	r0, r7
 8017a0c:	e73d      	b.n	801788a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8017a0e:	460f      	mov	r7, r1
 8017a10:	4608      	mov	r0, r1
 8017a12:	e73a      	b.n	801788a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08017a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a18:	b097      	sub	sp, #92	; 0x5c
 8017a1a:	9214      	str	r2, [sp, #80]	; 0x50
 8017a1c:	9308      	str	r3, [sp, #32]
 8017a1e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8017a20:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8017a24:	9312      	str	r3, [sp, #72]	; 0x48
 8017a26:	9111      	str	r1, [sp, #68]	; 0x44
 8017a28:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8017a2c:	9015      	str	r0, [sp, #84]	; 0x54
 8017a2e:	6850      	ldr	r0, [r2, #4]
 8017a30:	6812      	ldr	r2, [r2, #0]
 8017a32:	fb00 1303 	mla	r3, r0, r3, r1
 8017a36:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017a3a:	9309      	str	r3, [sp, #36]	; 0x24
 8017a3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017a3e:	681b      	ldr	r3, [r3, #0]
 8017a40:	930b      	str	r3, [sp, #44]	; 0x2c
 8017a42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017a44:	685b      	ldr	r3, [r3, #4]
 8017a46:	930c      	str	r3, [sp, #48]	; 0x30
 8017a48:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017a4c:	930a      	str	r3, [sp, #40]	; 0x28
 8017a4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017a50:	2b00      	cmp	r3, #0
 8017a52:	dc03      	bgt.n	8017a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017a54:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017a56:	2b00      	cmp	r3, #0
 8017a58:	f340 83cb 	ble.w	80181f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8017a5c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017a5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017a62:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017a66:	1e48      	subs	r0, r1, #1
 8017a68:	1e55      	subs	r5, r2, #1
 8017a6a:	9b08      	ldr	r3, [sp, #32]
 8017a6c:	2b00      	cmp	r3, #0
 8017a6e:	f340 81a3 	ble.w	8017db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8017a72:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8017a74:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017a76:	1436      	asrs	r6, r6, #16
 8017a78:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017a7c:	d406      	bmi.n	8017a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017a7e:	4286      	cmp	r6, r0
 8017a80:	da04      	bge.n	8017a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017a82:	2b00      	cmp	r3, #0
 8017a84:	db02      	blt.n	8017a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017a86:	42ab      	cmp	r3, r5
 8017a88:	f2c0 8197 	blt.w	8017dba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8017a8c:	3601      	adds	r6, #1
 8017a8e:	f100 8184 	bmi.w	8017d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017a92:	42b1      	cmp	r1, r6
 8017a94:	f2c0 8181 	blt.w	8017d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017a98:	3301      	adds	r3, #1
 8017a9a:	f100 817e 	bmi.w	8017d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017a9e:	429a      	cmp	r2, r3
 8017aa0:	f2c0 817b 	blt.w	8017d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017aa4:	9b08      	ldr	r3, [sp, #32]
 8017aa6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017aa8:	9313      	str	r3, [sp, #76]	; 0x4c
 8017aaa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017aae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017ab0:	2b00      	cmp	r3, #0
 8017ab2:	f340 81a4 	ble.w	8017dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8017ab6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017ab8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8017aba:	1418      	asrs	r0, r3, #16
 8017abc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017abe:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017ac2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017ac4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017ac8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017aca:	142d      	asrs	r5, r5, #16
 8017acc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017ad0:	f100 81f8 	bmi.w	8017ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017ad4:	f102 3eff 	add.w	lr, r2, #4294967295
 8017ad8:	4575      	cmp	r5, lr
 8017ada:	f280 81f3 	bge.w	8017ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017ade:	2800      	cmp	r0, #0
 8017ae0:	f2c0 81f0 	blt.w	8017ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017ae4:	f103 3eff 	add.w	lr, r3, #4294967295
 8017ae8:	4570      	cmp	r0, lr
 8017aea:	f280 81eb 	bge.w	8017ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017aee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017af0:	b212      	sxth	r2, r2
 8017af2:	fb00 5002 	mla	r0, r0, r2, r5
 8017af6:	fa1f fe81 	uxth.w	lr, r1
 8017afa:	eb03 0a00 	add.w	sl, r3, r0
 8017afe:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017b02:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017b06:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017b0a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017b0e:	b29b      	uxth	r3, r3
 8017b10:	f1bc 0f00 	cmp.w	ip, #0
 8017b14:	f000 81b9 	beq.w	8017e8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8017b18:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017b1c:	940d      	str	r4, [sp, #52]	; 0x34
 8017b1e:	eb0a 0b02 	add.w	fp, sl, r2
 8017b22:	fa1f fa8c 	uxth.w	sl, ip
 8017b26:	fb0a fe0e 	mul.w	lr, sl, lr
 8017b2a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017b2e:	fa1f fa8a 	uxth.w	sl, sl
 8017b32:	eba5 050e 	sub.w	r5, r5, lr
 8017b36:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017b3a:	940e      	str	r4, [sp, #56]	; 0x38
 8017b3c:	eba3 030a 	sub.w	r3, r3, sl
 8017b40:	b2ad      	uxth	r5, r5
 8017b42:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017b44:	b29b      	uxth	r3, r3
 8017b46:	fb08 f505 	mul.w	r5, r8, r5
 8017b4a:	fb09 5303 	mla	r3, r9, r3, r5
 8017b4e:	fb0a 3304 	mla	r3, sl, r4, r3
 8017b52:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017b54:	fb0e 3304 	mla	r3, lr, r4, r3
 8017b58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017b5c:	2b00      	cmp	r3, #0
 8017b5e:	f000 810f 	beq.w	8017d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017b62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017b64:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017b68:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017b6c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017b70:	f000 8190 	beq.w	8017e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8017b74:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017b78:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017b7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b80:	fb09 f000 	mul.w	r0, r9, r0
 8017b84:	fb0a fe0e 	mul.w	lr, sl, lr
 8017b88:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017b8c:	f100 0b20 	add.w	fp, r0, #32
 8017b90:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017b94:	44ce      	add	lr, r9
 8017b96:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017b9a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017b9e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017ba2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017ba6:	ea4e 0909 	orr.w	r9, lr, r9
 8017baa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017bae:	8868      	ldrh	r0, [r5, #2]
 8017bb0:	d019      	beq.n	8017be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017bb2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017bb6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017bba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017bbe:	fb08 f800 	mul.w	r8, r8, r0
 8017bc2:	fb0a fe0e 	mul.w	lr, sl, lr
 8017bc6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017bca:	f108 0b20 	add.w	fp, r8, #32
 8017bce:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017bd2:	4486      	add	lr, r0
 8017bd4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017bd8:	0a00      	lsrs	r0, r0, #8
 8017bda:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017bde:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017be2:	ea4e 0000 	orr.w	r0, lr, r0
 8017be6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017bea:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017bee:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017bf2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017bf6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017bfa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017bfe:	ea4e 0909 	orr.w	r9, lr, r9
 8017c02:	ea4a 0000 	orr.w	r0, sl, r0
 8017c06:	f1bc 0f00 	cmp.w	ip, #0
 8017c0a:	f000 8145 	beq.w	8017e98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8017c0e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017c12:	3a01      	subs	r2, #1
 8017c14:	0052      	lsls	r2, r2, #1
 8017c16:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017c18:	3202      	adds	r2, #2
 8017c1a:	2cff      	cmp	r4, #255	; 0xff
 8017c1c:	eb05 0e02 	add.w	lr, r5, r2
 8017c20:	5aaa      	ldrh	r2, [r5, r2]
 8017c22:	d018      	beq.n	8017c56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017c24:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017c28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c2c:	fb04 fa02 	mul.w	sl, r4, r2
 8017c30:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017c34:	fb08 f805 	mul.w	r8, r8, r5
 8017c38:	f10a 0520 	add.w	r5, sl, #32
 8017c3c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017c40:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017c44:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c48:	4442      	add	r2, r8
 8017c4a:	0a2d      	lsrs	r5, r5, #8
 8017c4c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017c50:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017c54:	432a      	orrs	r2, r5
 8017c56:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017c58:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017c5c:	2cff      	cmp	r4, #255	; 0xff
 8017c5e:	d01a      	beq.n	8017c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8017c60:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017c64:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017c68:	fb04 fa05 	mul.w	sl, r4, r5
 8017c6c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017c70:	fb08 f80e 	mul.w	r8, r8, lr
 8017c74:	f10a 0e20 	add.w	lr, sl, #32
 8017c78:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017c7c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017c80:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c84:	4445      	add	r5, r8
 8017c86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017c8a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017c8e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017c92:	ea45 050e 	orr.w	r5, r5, lr
 8017c96:	fb1c fe01 	smulbb	lr, ip, r1
 8017c9a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017c9e:	f1cc 0810 	rsb	r8, ip, #16
 8017ca2:	eba8 0801 	sub.w	r8, r8, r1
 8017ca6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017caa:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017cae:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017cb2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017cb6:	4341      	muls	r1, r0
 8017cb8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017cbc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017cc0:	ea4a 0202 	orr.w	r2, sl, r2
 8017cc4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017cc8:	fb09 1108 	mla	r1, r9, r8, r1
 8017ccc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017cd0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017cd4:	fb0c 1102 	mla	r1, ip, r2, r1
 8017cd8:	ea4b 0505 	orr.w	r5, fp, r5
 8017cdc:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017ce0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017ce4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017ce8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017cec:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017cf0:	ea42 0e0e 	orr.w	lr, r2, lr
 8017cf4:	fa1f f28e 	uxth.w	r2, lr
 8017cf8:	2bff      	cmp	r3, #255	; 0xff
 8017cfa:	d103      	bne.n	8017d04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8017cfc:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017cfe:	29ff      	cmp	r1, #255	; 0xff
 8017d00:	f000 80de 	beq.w	8017ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8017d04:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017d06:	8838      	ldrh	r0, [r7, #0]
 8017d08:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017d0a:	434b      	muls	r3, r1
 8017d0c:	f103 0c01 	add.w	ip, r3, #1
 8017d10:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8017d14:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017d18:	fa5f fc83 	uxtb.w	ip, r3
 8017d1c:	1203      	asrs	r3, r0, #8
 8017d1e:	1215      	asrs	r5, r2, #8
 8017d20:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017d24:	fb13 f30c 	smulbb	r3, r3, ip
 8017d28:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017d2c:	fb05 3501 	mla	r5, r5, r1, r3
 8017d30:	10c3      	asrs	r3, r0, #3
 8017d32:	10d1      	asrs	r1, r2, #3
 8017d34:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017d38:	fb13 f30c 	smulbb	r3, r3, ip
 8017d3c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017d40:	fb01 3104 	mla	r1, r1, r4, r3
 8017d44:	00c3      	lsls	r3, r0, #3
 8017d46:	00d2      	lsls	r2, r2, #3
 8017d48:	b2db      	uxtb	r3, r3
 8017d4a:	b2d2      	uxtb	r2, r2
 8017d4c:	fb13 f30c 	smulbb	r3, r3, ip
 8017d50:	b2ad      	uxth	r5, r5
 8017d52:	fb02 3304 	mla	r3, r2, r4, r3
 8017d56:	b29a      	uxth	r2, r3
 8017d58:	1c6b      	adds	r3, r5, #1
 8017d5a:	b289      	uxth	r1, r1
 8017d5c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017d60:	1c53      	adds	r3, r2, #1
 8017d62:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017d66:	1c4a      	adds	r2, r1, #1
 8017d68:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017d6c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017d70:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017d74:	0949      	lsrs	r1, r1, #5
 8017d76:	432b      	orrs	r3, r5
 8017d78:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017d7c:	430b      	orrs	r3, r1
 8017d7e:	803b      	strh	r3, [r7, #0]
 8017d80:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017d82:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8017d84:	4413      	add	r3, r2
 8017d86:	9321      	str	r3, [sp, #132]	; 0x84
 8017d88:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8017d8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017d8c:	441a      	add	r2, r3
 8017d8e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017d90:	9222      	str	r2, [sp, #136]	; 0x88
 8017d92:	3b01      	subs	r3, #1
 8017d94:	3702      	adds	r7, #2
 8017d96:	9313      	str	r3, [sp, #76]	; 0x4c
 8017d98:	e689      	b.n	8017aae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017d9a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017d9c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8017d9e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8017da0:	4433      	add	r3, r6
 8017da2:	9321      	str	r3, [sp, #132]	; 0x84
 8017da4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017da6:	441c      	add	r4, r3
 8017da8:	9b08      	ldr	r3, [sp, #32]
 8017daa:	9422      	str	r4, [sp, #136]	; 0x88
 8017dac:	3b01      	subs	r3, #1
 8017dae:	9308      	str	r3, [sp, #32]
 8017db0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017db2:	3302      	adds	r3, #2
 8017db4:	9309      	str	r3, [sp, #36]	; 0x24
 8017db6:	e658      	b.n	8017a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8017db8:	d028      	beq.n	8017e0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8017dba:	9b08      	ldr	r3, [sp, #32]
 8017dbc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8017dbe:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8017dc0:	3b01      	subs	r3, #1
 8017dc2:	fb00 5003 	mla	r0, r0, r3, r5
 8017dc6:	1400      	asrs	r0, r0, #16
 8017dc8:	f53f ae6c 	bmi.w	8017aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017dcc:	3901      	subs	r1, #1
 8017dce:	4288      	cmp	r0, r1
 8017dd0:	f6bf ae68 	bge.w	8017aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017dd4:	9924      	ldr	r1, [sp, #144]	; 0x90
 8017dd6:	9822      	ldr	r0, [sp, #136]	; 0x88
 8017dd8:	fb01 0303 	mla	r3, r1, r3, r0
 8017ddc:	141b      	asrs	r3, r3, #16
 8017dde:	f53f ae61 	bmi.w	8017aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017de2:	3a01      	subs	r2, #1
 8017de4:	4293      	cmp	r3, r2
 8017de6:	f6bf ae5d 	bge.w	8017aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017dea:	9b08      	ldr	r3, [sp, #32]
 8017dec:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017df0:	9313      	str	r3, [sp, #76]	; 0x4c
 8017df2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017df6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017df8:	2b00      	cmp	r3, #0
 8017dfa:	f300 8082 	bgt.w	8017f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8017dfe:	9b08      	ldr	r3, [sp, #32]
 8017e00:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017e04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017e06:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017e0a:	9309      	str	r3, [sp, #36]	; 0x24
 8017e0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017e0e:	2b00      	cmp	r3, #0
 8017e10:	f340 81ef 	ble.w	80181f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8017e14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017e18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017e1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017e20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017e22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017e26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017e2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017e2e:	eef0 6a62 	vmov.f32	s13, s5
 8017e32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017e36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017e3e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8017e42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017e46:	eef0 6a43 	vmov.f32	s13, s6
 8017e4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017e4e:	ee12 2a90 	vmov	r2, s5
 8017e52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017e56:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e5a:	ee13 2a10 	vmov	r2, s6
 8017e5e:	9323      	str	r3, [sp, #140]	; 0x8c
 8017e60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017e62:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e66:	9324      	str	r3, [sp, #144]	; 0x90
 8017e68:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017e6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017e6c:	3b01      	subs	r3, #1
 8017e6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e72:	9311      	str	r3, [sp, #68]	; 0x44
 8017e74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017e76:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8017e7a:	bf08      	it	eq
 8017e7c:	4613      	moveq	r3, r2
 8017e7e:	9308      	str	r3, [sp, #32]
 8017e80:	eeb0 3a67 	vmov.f32	s6, s15
 8017e84:	eef0 2a47 	vmov.f32	s5, s14
 8017e88:	e5e1      	b.n	8017a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8017e8a:	fb08 f505 	mul.w	r5, r8, r5
 8017e8e:	fb09 5303 	mla	r3, r9, r3, r5
 8017e92:	e661      	b.n	8017b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8017e94:	4681      	mov	r9, r0
 8017e96:	e688      	b.n	8017baa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8017e98:	f1c1 0210 	rsb	r2, r1, #16
 8017e9c:	4341      	muls	r1, r0
 8017e9e:	fb09 1902 	mla	r9, r9, r2, r1
 8017ea2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017ea6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017eaa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017eae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017eb2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017eb6:	ea42 0909 	orr.w	r9, r2, r9
 8017eba:	fa1f f289 	uxth.w	r2, r9
 8017ebe:	e71b      	b.n	8017cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8017ec0:	803a      	strh	r2, [r7, #0]
 8017ec2:	e75d      	b.n	8017d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017ec4:	f115 0e01 	adds.w	lr, r5, #1
 8017ec8:	f53f af5a 	bmi.w	8017d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017ecc:	4572      	cmp	r2, lr
 8017ece:	f6ff af57 	blt.w	8017d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017ed2:	f110 0e01 	adds.w	lr, r0, #1
 8017ed6:	f53f af53 	bmi.w	8017d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017eda:	4573      	cmp	r3, lr
 8017edc:	f6ff af50 	blt.w	8017d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017ee0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017ee2:	9502      	str	r5, [sp, #8]
 8017ee4:	b21b      	sxth	r3, r3
 8017ee6:	b212      	sxth	r2, r2
 8017ee8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017eec:	9301      	str	r3, [sp, #4]
 8017eee:	9200      	str	r2, [sp, #0]
 8017ef0:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017ef4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017ef8:	4639      	mov	r1, r7
 8017efa:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017efc:	f7ff fc04 	bl	8017708 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017f00:	e73e      	b.n	8017d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017f02:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017f04:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017f08:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017f0a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017f0e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017f10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f14:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017f16:	141f      	asrs	r7, r3, #16
 8017f18:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017f1a:	141b      	asrs	r3, r3, #16
 8017f1c:	fb01 3707 	mla	r7, r1, r7, r3
 8017f20:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017f22:	fa1f fc82 	uxth.w	ip, r2
 8017f26:	eb03 0a07 	add.w	sl, r3, r7
 8017f2a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017f2e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017f32:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017f36:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017f3a:	b29b      	uxth	r3, r3
 8017f3c:	2d00      	cmp	r5, #0
 8017f3e:	f000 813d 	beq.w	80181bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8017f42:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017f46:	940f      	str	r4, [sp, #60]	; 0x3c
 8017f48:	eb0a 0b01 	add.w	fp, sl, r1
 8017f4c:	fa1f fa85 	uxth.w	sl, r5
 8017f50:	fb0a fc0c 	mul.w	ip, sl, ip
 8017f54:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017f58:	fa1f fa8a 	uxth.w	sl, sl
 8017f5c:	eba0 000c 	sub.w	r0, r0, ip
 8017f60:	eba3 030a 	sub.w	r3, r3, sl
 8017f64:	b280      	uxth	r0, r0
 8017f66:	fb08 f000 	mul.w	r0, r8, r0
 8017f6a:	b29b      	uxth	r3, r3
 8017f6c:	fb09 0303 	mla	r3, r9, r3, r0
 8017f70:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017f72:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017f76:	9410      	str	r4, [sp, #64]	; 0x40
 8017f78:	fb0a 3300 	mla	r3, sl, r0, r3
 8017f7c:	fb0c 3304 	mla	r3, ip, r4, r3
 8017f80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017f84:	2b00      	cmp	r3, #0
 8017f86:	f000 810b 	beq.w	80181a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8017f8a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017f8c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017f8e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017f92:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017f96:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017f9a:	f000 8114 	beq.w	80181c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8017f9e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017fa2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017fa6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017faa:	fb09 f707 	mul.w	r7, r9, r7
 8017fae:	fb0a fc0c 	mul.w	ip, sl, ip
 8017fb2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017fb6:	f107 0b20 	add.w	fp, r7, #32
 8017fba:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017fbe:	44cc      	add	ip, r9
 8017fc0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017fc4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017fc8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017fcc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017fd0:	ea4c 0909 	orr.w	r9, ip, r9
 8017fd4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017fd8:	8847      	ldrh	r7, [r0, #2]
 8017fda:	d019      	beq.n	8018010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8017fdc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017fe0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017fe4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017fe8:	fb08 f807 	mul.w	r8, r8, r7
 8017fec:	fb0a fc0c 	mul.w	ip, sl, ip
 8017ff0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017ff4:	f108 0b20 	add.w	fp, r8, #32
 8017ff8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017ffc:	44bc      	add	ip, r7
 8017ffe:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018002:	0a3f      	lsrs	r7, r7, #8
 8018004:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018008:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801800c:	ea4c 0707 	orr.w	r7, ip, r7
 8018010:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018014:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018018:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801801c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018020:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018024:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018028:	ea4c 0909 	orr.w	r9, ip, r9
 801802c:	ea4a 0707 	orr.w	r7, sl, r7
 8018030:	2d00      	cmp	r5, #0
 8018032:	f000 80ca 	beq.w	80181ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8018036:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801803a:	3901      	subs	r1, #1
 801803c:	0049      	lsls	r1, r1, #1
 801803e:	3102      	adds	r1, #2
 8018040:	eb00 0c01 	add.w	ip, r0, r1
 8018044:	5a41      	ldrh	r1, [r0, r1]
 8018046:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018048:	28ff      	cmp	r0, #255	; 0xff
 801804a:	d019      	beq.n	8018080 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801804c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801804e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018052:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018056:	fb04 fa01 	mul.w	sl, r4, r1
 801805a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801805e:	fb08 f800 	mul.w	r8, r8, r0
 8018062:	f10a 0020 	add.w	r0, sl, #32
 8018066:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801806a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801806e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018072:	4441      	add	r1, r8
 8018074:	0a00      	lsrs	r0, r0, #8
 8018076:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801807a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801807e:	4301      	orrs	r1, r0
 8018080:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018082:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018086:	2cff      	cmp	r4, #255	; 0xff
 8018088:	d01a      	beq.n	80180c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801808a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801808e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018092:	fb04 fa00 	mul.w	sl, r4, r0
 8018096:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801809a:	fb08 f80c 	mul.w	r8, r8, ip
 801809e:	f10a 0c20 	add.w	ip, sl, #32
 80180a2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80180a6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80180aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80180ae:	4440      	add	r0, r8
 80180b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80180b4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80180b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80180bc:	ea40 000c 	orr.w	r0, r0, ip
 80180c0:	fb15 fc02 	smulbb	ip, r5, r2
 80180c4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80180c8:	f1c5 0810 	rsb	r8, r5, #16
 80180cc:	eba8 0802 	sub.w	r8, r8, r2
 80180d0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80180d4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80180d8:	437a      	muls	r2, r7
 80180da:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80180de:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80180e2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80180e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80180ea:	fb09 2208 	mla	r2, r9, r8, r2
 80180ee:	ea4a 0101 	orr.w	r1, sl, r1
 80180f2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80180f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80180fa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80180fe:	fb05 2201 	mla	r2, r5, r1, r2
 8018102:	ea4b 0000 	orr.w	r0, fp, r0
 8018106:	fb0c 2200 	mla	r2, ip, r0, r2
 801810a:	0d57      	lsrs	r7, r2, #21
 801810c:	0952      	lsrs	r2, r2, #5
 801810e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018112:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018116:	433a      	orrs	r2, r7
 8018118:	2bff      	cmp	r3, #255	; 0xff
 801811a:	b292      	uxth	r2, r2
 801811c:	d102      	bne.n	8018124 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801811e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018120:	29ff      	cmp	r1, #255	; 0xff
 8018122:	d063      	beq.n	80181ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8018124:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018126:	f8be 1000 	ldrh.w	r1, [lr]
 801812a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801812c:	4343      	muls	r3, r0
 801812e:	1c58      	adds	r0, r3, #1
 8018130:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8018134:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018138:	1208      	asrs	r0, r1, #8
 801813a:	b2db      	uxtb	r3, r3
 801813c:	1215      	asrs	r5, r2, #8
 801813e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018142:	fb10 f003 	smulbb	r0, r0, r3
 8018146:	10cf      	asrs	r7, r1, #3
 8018148:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801814c:	00c9      	lsls	r1, r1, #3
 801814e:	fb05 0504 	mla	r5, r5, r4, r0
 8018152:	b2c9      	uxtb	r1, r1
 8018154:	10d0      	asrs	r0, r2, #3
 8018156:	00d2      	lsls	r2, r2, #3
 8018158:	fb11 f103 	smulbb	r1, r1, r3
 801815c:	b2d2      	uxtb	r2, r2
 801815e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018162:	fb02 1204 	mla	r2, r2, r4, r1
 8018166:	fb17 f703 	smulbb	r7, r7, r3
 801816a:	b2ad      	uxth	r5, r5
 801816c:	b292      	uxth	r2, r2
 801816e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018172:	fb00 7004 	mla	r0, r0, r4, r7
 8018176:	1c6b      	adds	r3, r5, #1
 8018178:	1c57      	adds	r7, r2, #1
 801817a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801817e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018182:	b280      	uxth	r0, r0
 8018184:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018188:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801818c:	433d      	orrs	r5, r7
 801818e:	1c47      	adds	r7, r0, #1
 8018190:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018194:	097f      	lsrs	r7, r7, #5
 8018196:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801819a:	433d      	orrs	r5, r7
 801819c:	f8ae 5000 	strh.w	r5, [lr]
 80181a0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80181a2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80181a4:	4413      	add	r3, r2
 80181a6:	9321      	str	r3, [sp, #132]	; 0x84
 80181a8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80181aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80181ac:	441a      	add	r2, r3
 80181ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80181b0:	9222      	str	r2, [sp, #136]	; 0x88
 80181b2:	3b01      	subs	r3, #1
 80181b4:	f10e 0e02 	add.w	lr, lr, #2
 80181b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80181ba:	e61c      	b.n	8017df6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80181bc:	fb08 f000 	mul.w	r0, r8, r0
 80181c0:	fb09 0303 	mla	r3, r9, r3, r0
 80181c4:	e6dc      	b.n	8017f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80181c6:	46b9      	mov	r9, r7
 80181c8:	e704      	b.n	8017fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80181ca:	f1c2 0110 	rsb	r1, r2, #16
 80181ce:	437a      	muls	r2, r7
 80181d0:	fb09 2901 	mla	r9, r9, r1, r2
 80181d4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80181d8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80181dc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80181e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80181e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80181e8:	4302      	orrs	r2, r0
 80181ea:	e795      	b.n	8018118 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80181ec:	f8ae 2000 	strh.w	r2, [lr]
 80181f0:	e7d6      	b.n	80181a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80181f2:	b017      	add	sp, #92	; 0x5c
 80181f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080181f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80181f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181fc:	b085      	sub	sp, #20
 80181fe:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8018202:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018206:	9103      	str	r1, [sp, #12]
 8018208:	fb00 7406 	mla	r4, r0, r6, r7
 801820c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8018210:	2800      	cmp	r0, #0
 8018212:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8018216:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801821a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801821e:	9501      	str	r5, [sp, #4]
 8018220:	eb02 0904 	add.w	r9, r2, r4
 8018224:	f2c0 8141 	blt.w	80184aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8018228:	4583      	cmp	fp, r0
 801822a:	f340 813e 	ble.w	80184aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801822e:	2f00      	cmp	r7, #0
 8018230:	f2c0 8137 	blt.w	80184a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8018234:	42be      	cmp	r6, r7
 8018236:	f340 8134 	ble.w	80184a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801823a:	f812 c004 	ldrb.w	ip, [r2, r4]
 801823e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8018242:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018246:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801824a:	4355      	muls	r5, r2
 801824c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018250:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8018254:	fb0c f203 	mul.w	r2, ip, r3
 8018258:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801825c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8018260:	441d      	add	r5, r3
 8018262:	f102 0320 	add.w	r3, r2, #32
 8018266:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801826a:	0a1b      	lsrs	r3, r3, #8
 801826c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8018270:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018274:	431c      	orrs	r4, r3
 8018276:	1c7b      	adds	r3, r7, #1
 8018278:	f100 811c 	bmi.w	80184b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801827c:	429e      	cmp	r6, r3
 801827e:	f340 8119 	ble.w	80184b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8018282:	2900      	cmp	r1, #0
 8018284:	f000 8119 	beq.w	80184ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8018288:	9a01      	ldr	r2, [sp, #4]
 801828a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801828e:	8855      	ldrh	r5, [r2, #2]
 8018290:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8018294:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8018298:	fb08 f802 	mul.w	r8, r8, r2
 801829c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80182a0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80182a4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80182a8:	435d      	muls	r5, r3
 80182aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80182ae:	44d0      	add	r8, sl
 80182b0:	f105 0a20 	add.w	sl, r5, #32
 80182b4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80182b8:	0a2d      	lsrs	r5, r5, #8
 80182ba:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80182be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80182c2:	432a      	orrs	r2, r5
 80182c4:	3001      	adds	r0, #1
 80182c6:	f100 80fe 	bmi.w	80184c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80182ca:	4583      	cmp	fp, r0
 80182cc:	f340 80fb 	ble.w	80184c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80182d0:	f1be 0f00 	cmp.w	lr, #0
 80182d4:	f000 80fc 	beq.w	80184d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80182d8:	2f00      	cmp	r7, #0
 80182da:	f2c0 80f1 	blt.w	80184c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80182de:	42be      	cmp	r6, r7
 80182e0:	f340 80ee 	ble.w	80184c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80182e4:	9801      	ldr	r0, [sp, #4]
 80182e6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80182ea:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80182ee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80182f2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80182f6:	fb0a fa00 	mul.w	sl, sl, r0
 80182fa:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80182fe:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018302:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8018306:	fb05 f808 	mul.w	r8, r5, r8
 801830a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801830e:	4482      	add	sl, r0
 8018310:	f108 0020 	add.w	r0, r8, #32
 8018314:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018318:	0a00      	lsrs	r0, r0, #8
 801831a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801831e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018322:	ea4b 0b00 	orr.w	fp, fp, r0
 8018326:	3701      	adds	r7, #1
 8018328:	f100 80d7 	bmi.w	80184da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801832c:	42be      	cmp	r6, r7
 801832e:	f340 80d4 	ble.w	80184da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8018332:	2900      	cmp	r1, #0
 8018334:	f000 80d4 	beq.w	80184e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8018338:	3601      	adds	r6, #1
 801833a:	9801      	ldr	r0, [sp, #4]
 801833c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8018340:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8018344:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8018348:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801834c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018350:	fb09 f906 	mul.w	r9, r9, r6
 8018354:	fb07 f800 	mul.w	r8, r7, r0
 8018358:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801835c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8018360:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8018364:	44d1      	add	r9, sl
 8018366:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801836a:	f108 0020 	add.w	r0, r8, #32
 801836e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018372:	0a00      	lsrs	r0, r0, #8
 8018374:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018378:	4330      	orrs	r0, r6
 801837a:	b28e      	uxth	r6, r1
 801837c:	fa1f f98e 	uxth.w	r9, lr
 8018380:	fb06 f809 	mul.w	r8, r6, r9
 8018384:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8018388:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801838c:	0136      	lsls	r6, r6, #4
 801838e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018392:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8018396:	9601      	str	r6, [sp, #4]
 8018398:	ea4a 0404 	orr.w	r4, sl, r4
 801839c:	fa1f f689 	uxth.w	r6, r9
 80183a0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80183a4:	fb11 f90e 	smulbb	r9, r1, lr
 80183a8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80183ac:	9602      	str	r6, [sp, #8]
 80183ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80183b2:	4626      	mov	r6, r4
 80183b4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80183b8:	f1ce 0410 	rsb	r4, lr, #16
 80183bc:	1a64      	subs	r4, r4, r1
 80183be:	ea4a 0202 	orr.w	r2, sl, r2
 80183c2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80183c6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80183ca:	434a      	muls	r2, r1
 80183cc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80183d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80183d4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80183d8:	fb04 2406 	mla	r4, r4, r6, r2
 80183dc:	ea4a 0000 	orr.w	r0, sl, r0
 80183e0:	fb09 4200 	mla	r2, r9, r0, r4
 80183e4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80183e8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80183ec:	9801      	ldr	r0, [sp, #4]
 80183ee:	9903      	ldr	r1, [sp, #12]
 80183f0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80183f4:	ea44 0b0b 	orr.w	fp, r4, fp
 80183f8:	9c02      	ldr	r4, [sp, #8]
 80183fa:	8809      	ldrh	r1, [r1, #0]
 80183fc:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8018400:	1b00      	subs	r0, r0, r4
 8018402:	9c01      	ldr	r4, [sp, #4]
 8018404:	eba4 0608 	sub.w	r6, r4, r8
 8018408:	b2b6      	uxth	r6, r6
 801840a:	b280      	uxth	r0, r0
 801840c:	4373      	muls	r3, r6
 801840e:	fb0c 3300 	mla	r3, ip, r0, r3
 8018412:	9802      	ldr	r0, [sp, #8]
 8018414:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018418:	fb00 3505 	mla	r5, r0, r5, r3
 801841c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8018420:	fb08 5707 	mla	r7, r8, r7, r5
 8018424:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018428:	120b      	asrs	r3, r1, #8
 801842a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801842e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8018432:	b2ff      	uxtb	r7, r7
 8018434:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018438:	10c8      	asrs	r0, r1, #3
 801843a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801843e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018442:	00c9      	lsls	r1, r1, #3
 8018444:	437b      	muls	r3, r7
 8018446:	ea42 0e0e 	orr.w	lr, r2, lr
 801844a:	b2c9      	uxtb	r1, r1
 801844c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018450:	fa1f f28e 	uxth.w	r2, lr
 8018454:	4378      	muls	r0, r7
 8018456:	434f      	muls	r7, r1
 8018458:	1c59      	adds	r1, r3, #1
 801845a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801845e:	1213      	asrs	r3, r2, #8
 8018460:	f023 0307 	bic.w	r3, r3, #7
 8018464:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018468:	1c41      	adds	r1, r0, #1
 801846a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801846e:	10d1      	asrs	r1, r2, #3
 8018470:	f021 0103 	bic.w	r1, r1, #3
 8018474:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018478:	021b      	lsls	r3, r3, #8
 801847a:	00c9      	lsls	r1, r1, #3
 801847c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018480:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018484:	430b      	orrs	r3, r1
 8018486:	1c79      	adds	r1, r7, #1
 8018488:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801848c:	00d2      	lsls	r2, r2, #3
 801848e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8018492:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018496:	431a      	orrs	r2, r3
 8018498:	9b03      	ldr	r3, [sp, #12]
 801849a:	801a      	strh	r2, [r3, #0]
 801849c:	b005      	add	sp, #20
 801849e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184a2:	f04f 0c00 	mov.w	ip, #0
 80184a6:	4664      	mov	r4, ip
 80184a8:	e6e5      	b.n	8018276 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80184aa:	2300      	movs	r3, #0
 80184ac:	469c      	mov	ip, r3
 80184ae:	461a      	mov	r2, r3
 80184b0:	461c      	mov	r4, r3
 80184b2:	e707      	b.n	80182c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80184b4:	2300      	movs	r3, #0
 80184b6:	461a      	mov	r2, r3
 80184b8:	e704      	b.n	80182c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80184ba:	460b      	mov	r3, r1
 80184bc:	460a      	mov	r2, r1
 80184be:	e701      	b.n	80182c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80184c0:	2500      	movs	r5, #0
 80184c2:	46ab      	mov	fp, r5
 80184c4:	e72f      	b.n	8018326 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80184c6:	2700      	movs	r7, #0
 80184c8:	463d      	mov	r5, r7
 80184ca:	4638      	mov	r0, r7
 80184cc:	46bb      	mov	fp, r7
 80184ce:	e754      	b.n	801837a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80184d0:	4677      	mov	r7, lr
 80184d2:	4675      	mov	r5, lr
 80184d4:	4670      	mov	r0, lr
 80184d6:	46f3      	mov	fp, lr
 80184d8:	e74f      	b.n	801837a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80184da:	2700      	movs	r7, #0
 80184dc:	4638      	mov	r0, r7
 80184de:	e74c      	b.n	801837a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80184e0:	460f      	mov	r7, r1
 80184e2:	4608      	mov	r0, r1
 80184e4:	e749      	b.n	801837a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080184e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80184e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184ec:	b093      	sub	sp, #76	; 0x4c
 80184ee:	9210      	str	r2, [sp, #64]	; 0x40
 80184f0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80184f2:	910e      	str	r1, [sp, #56]	; 0x38
 80184f4:	9306      	str	r3, [sp, #24]
 80184f6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80184fa:	9011      	str	r0, [sp, #68]	; 0x44
 80184fc:	6850      	ldr	r0, [r2, #4]
 80184fe:	6812      	ldr	r2, [r2, #0]
 8018500:	fb00 1303 	mla	r3, r0, r3, r1
 8018504:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018508:	9307      	str	r3, [sp, #28]
 801850a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801850c:	681b      	ldr	r3, [r3, #0]
 801850e:	9308      	str	r3, [sp, #32]
 8018510:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018512:	685b      	ldr	r3, [r3, #4]
 8018514:	9309      	str	r3, [sp, #36]	; 0x24
 8018516:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018518:	2b00      	cmp	r3, #0
 801851a:	dc03      	bgt.n	8018524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801851c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801851e:	2b00      	cmp	r3, #0
 8018520:	f340 83b4 	ble.w	8018c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8018524:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018526:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801852a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801852e:	1e48      	subs	r0, r1, #1
 8018530:	1e55      	subs	r5, r2, #1
 8018532:	9b06      	ldr	r3, [sp, #24]
 8018534:	2b00      	cmp	r3, #0
 8018536:	f340 8163 	ble.w	8018800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801853a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801853c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801853e:	1436      	asrs	r6, r6, #16
 8018540:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018544:	d406      	bmi.n	8018554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018546:	4286      	cmp	r6, r0
 8018548:	da04      	bge.n	8018554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801854a:	2b00      	cmp	r3, #0
 801854c:	db02      	blt.n	8018554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801854e:	42ab      	cmp	r3, r5
 8018550:	f2c0 8157 	blt.w	8018802 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8018554:	3601      	adds	r6, #1
 8018556:	f100 8144 	bmi.w	80187e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801855a:	42b1      	cmp	r1, r6
 801855c:	f2c0 8141 	blt.w	80187e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8018560:	3301      	adds	r3, #1
 8018562:	f100 813e 	bmi.w	80187e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8018566:	429a      	cmp	r2, r3
 8018568:	f2c0 813b 	blt.w	80187e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801856c:	9b06      	ldr	r3, [sp, #24]
 801856e:	9f07      	ldr	r7, [sp, #28]
 8018570:	930f      	str	r3, [sp, #60]	; 0x3c
 8018572:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018576:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018578:	2b00      	cmp	r3, #0
 801857a:	f340 8164 	ble.w	8018846 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801857e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8018580:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8018582:	1418      	asrs	r0, r3, #16
 8018584:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8018586:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801858a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801858c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8018590:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018592:	142d      	asrs	r5, r5, #16
 8018594:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018598:	f100 81ee 	bmi.w	8018978 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801859c:	f102 3eff 	add.w	lr, r2, #4294967295
 80185a0:	4575      	cmp	r5, lr
 80185a2:	f280 81e9 	bge.w	8018978 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80185a6:	2800      	cmp	r0, #0
 80185a8:	f2c0 81e6 	blt.w	8018978 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80185ac:	f103 3eff 	add.w	lr, r3, #4294967295
 80185b0:	4570      	cmp	r0, lr
 80185b2:	f280 81e1 	bge.w	8018978 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80185b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80185b8:	b212      	sxth	r2, r2
 80185ba:	fb00 5002 	mla	r0, r0, r2, r5
 80185be:	fa1f fe81 	uxth.w	lr, r1
 80185c2:	eb03 0a00 	add.w	sl, r3, r0
 80185c6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80185ca:	f813 9000 	ldrb.w	r9, [r3, r0]
 80185ce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80185d2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80185d6:	b29b      	uxth	r3, r3
 80185d8:	f1bc 0f00 	cmp.w	ip, #0
 80185dc:	f000 8179 	beq.w	80188d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80185e0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80185e4:	940a      	str	r4, [sp, #40]	; 0x28
 80185e6:	eb0a 0b02 	add.w	fp, sl, r2
 80185ea:	fa1f fa8c 	uxth.w	sl, ip
 80185ee:	fb0a fe0e 	mul.w	lr, sl, lr
 80185f2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80185f6:	fa1f fa8a 	uxth.w	sl, sl
 80185fa:	eba5 050e 	sub.w	r5, r5, lr
 80185fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018602:	940b      	str	r4, [sp, #44]	; 0x2c
 8018604:	eba3 030a 	sub.w	r3, r3, sl
 8018608:	b2ad      	uxth	r5, r5
 801860a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801860c:	b29b      	uxth	r3, r3
 801860e:	fb08 f505 	mul.w	r5, r8, r5
 8018612:	fb09 5303 	mla	r3, r9, r3, r5
 8018616:	fb0a 3304 	mla	r3, sl, r4, r3
 801861a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801861c:	fb0e 3304 	mla	r3, lr, r4, r3
 8018620:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018624:	2b00      	cmp	r3, #0
 8018626:	f000 80cf 	beq.w	80187c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801862a:	9c08      	ldr	r4, [sp, #32]
 801862c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018630:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018634:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018638:	f000 8150 	beq.w	80188dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801863c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018640:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018644:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018648:	fb09 f000 	mul.w	r0, r9, r0
 801864c:	fb0a fe0e 	mul.w	lr, sl, lr
 8018650:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018654:	f100 0b20 	add.w	fp, r0, #32
 8018658:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801865c:	44ce      	add	lr, r9
 801865e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8018662:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018666:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801866a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801866e:	ea4e 0909 	orr.w	r9, lr, r9
 8018672:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018676:	8868      	ldrh	r0, [r5, #2]
 8018678:	d019      	beq.n	80186ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801867a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801867e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018682:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018686:	fb08 f800 	mul.w	r8, r8, r0
 801868a:	fb0a fe0e 	mul.w	lr, sl, lr
 801868e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8018692:	f108 0b20 	add.w	fp, r8, #32
 8018696:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801869a:	4486      	add	lr, r0
 801869c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80186a0:	0a00      	lsrs	r0, r0, #8
 80186a2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80186a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80186aa:	ea4e 0000 	orr.w	r0, lr, r0
 80186ae:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80186b2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80186b6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80186ba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80186be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80186c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80186c6:	ea4e 0909 	orr.w	r9, lr, r9
 80186ca:	ea4a 0000 	orr.w	r0, sl, r0
 80186ce:	f1bc 0f00 	cmp.w	ip, #0
 80186d2:	f000 8105 	beq.w	80188e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80186d6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80186da:	3a01      	subs	r2, #1
 80186dc:	0052      	lsls	r2, r2, #1
 80186de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80186e0:	3202      	adds	r2, #2
 80186e2:	2cff      	cmp	r4, #255	; 0xff
 80186e4:	eb05 0e02 	add.w	lr, r5, r2
 80186e8:	5aaa      	ldrh	r2, [r5, r2]
 80186ea:	d018      	beq.n	801871e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80186ec:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80186f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80186f4:	fb04 fa02 	mul.w	sl, r4, r2
 80186f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80186fc:	fb08 f805 	mul.w	r8, r8, r5
 8018700:	f10a 0520 	add.w	r5, sl, #32
 8018704:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018708:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801870c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018710:	4442      	add	r2, r8
 8018712:	0a2d      	lsrs	r5, r5, #8
 8018714:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018718:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801871c:	432a      	orrs	r2, r5
 801871e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018720:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018724:	2cff      	cmp	r4, #255	; 0xff
 8018726:	d01a      	beq.n	801875e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018728:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801872c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018730:	fb04 fa05 	mul.w	sl, r4, r5
 8018734:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018738:	fb08 f80e 	mul.w	r8, r8, lr
 801873c:	f10a 0e20 	add.w	lr, sl, #32
 8018740:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018744:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018748:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801874c:	4445      	add	r5, r8
 801874e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018752:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018756:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801875a:	ea45 050e 	orr.w	r5, r5, lr
 801875e:	fb1c fe01 	smulbb	lr, ip, r1
 8018762:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018766:	f1cc 0810 	rsb	r8, ip, #16
 801876a:	eba8 0801 	sub.w	r8, r8, r1
 801876e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018772:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018776:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801877a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801877e:	4341      	muls	r1, r0
 8018780:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018784:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018788:	ea4a 0202 	orr.w	r2, sl, r2
 801878c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8018790:	fb09 1108 	mla	r1, r9, r8, r1
 8018794:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018798:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801879c:	fb0c 1102 	mla	r1, ip, r2, r1
 80187a0:	ea4b 0505 	orr.w	r5, fp, r5
 80187a4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80187a8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80187ac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80187b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187b4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80187b8:	ea42 0e0e 	orr.w	lr, r2, lr
 80187bc:	fa1f f28e 	uxth.w	r2, lr
 80187c0:	2bff      	cmp	r3, #255	; 0xff
 80187c2:	f040 80a1 	bne.w	8018908 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80187c6:	803a      	strh	r2, [r7, #0]
 80187c8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80187ca:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80187cc:	4413      	add	r3, r2
 80187ce:	931d      	str	r3, [sp, #116]	; 0x74
 80187d0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80187d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80187d4:	441a      	add	r2, r3
 80187d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80187d8:	921e      	str	r2, [sp, #120]	; 0x78
 80187da:	3b01      	subs	r3, #1
 80187dc:	3702      	adds	r7, #2
 80187de:	930f      	str	r3, [sp, #60]	; 0x3c
 80187e0:	e6c9      	b.n	8018576 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80187e2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80187e4:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80187e6:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80187e8:	4433      	add	r3, r6
 80187ea:	931d      	str	r3, [sp, #116]	; 0x74
 80187ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80187ee:	441c      	add	r4, r3
 80187f0:	9b06      	ldr	r3, [sp, #24]
 80187f2:	941e      	str	r4, [sp, #120]	; 0x78
 80187f4:	3b01      	subs	r3, #1
 80187f6:	9306      	str	r3, [sp, #24]
 80187f8:	9b07      	ldr	r3, [sp, #28]
 80187fa:	3302      	adds	r3, #2
 80187fc:	9307      	str	r3, [sp, #28]
 80187fe:	e698      	b.n	8018532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018800:	d028      	beq.n	8018854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8018802:	9b06      	ldr	r3, [sp, #24]
 8018804:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018806:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8018808:	3b01      	subs	r3, #1
 801880a:	fb00 5003 	mla	r0, r0, r3, r5
 801880e:	1400      	asrs	r0, r0, #16
 8018810:	f53f aeac 	bmi.w	801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018814:	3901      	subs	r1, #1
 8018816:	4288      	cmp	r0, r1
 8018818:	f6bf aea8 	bge.w	801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801881c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801881e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8018820:	fb01 0303 	mla	r3, r1, r3, r0
 8018824:	141b      	asrs	r3, r3, #16
 8018826:	f53f aea1 	bmi.w	801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801882a:	3a01      	subs	r2, #1
 801882c:	4293      	cmp	r3, r2
 801882e:	f6bf ae9d 	bge.w	801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018832:	9b06      	ldr	r3, [sp, #24]
 8018834:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018838:	930f      	str	r3, [sp, #60]	; 0x3c
 801883a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801883e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018840:	2b00      	cmp	r3, #0
 8018842:	f300 80b6 	bgt.w	80189b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8018846:	9b06      	ldr	r3, [sp, #24]
 8018848:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801884c:	9b07      	ldr	r3, [sp, #28]
 801884e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018852:	9307      	str	r3, [sp, #28]
 8018854:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018856:	2b00      	cmp	r3, #0
 8018858:	f340 8218 	ble.w	8018c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801885c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018860:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018864:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018868:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801886a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801886e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018872:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018876:	eef0 6a62 	vmov.f32	s13, s5
 801887a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801887e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018882:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018886:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801888a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801888e:	eef0 6a43 	vmov.f32	s13, s6
 8018892:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018896:	ee12 2a90 	vmov	r2, s5
 801889a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801889e:	fb92 f3f3 	sdiv	r3, r2, r3
 80188a2:	ee13 2a10 	vmov	r2, s6
 80188a6:	931f      	str	r3, [sp, #124]	; 0x7c
 80188a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80188aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80188ae:	9320      	str	r3, [sp, #128]	; 0x80
 80188b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80188b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80188b4:	3b01      	subs	r3, #1
 80188b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80188ba:	930e      	str	r3, [sp, #56]	; 0x38
 80188bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80188be:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80188c2:	bf08      	it	eq
 80188c4:	4613      	moveq	r3, r2
 80188c6:	9306      	str	r3, [sp, #24]
 80188c8:	eeb0 3a67 	vmov.f32	s6, s15
 80188cc:	eef0 2a47 	vmov.f32	s5, s14
 80188d0:	e621      	b.n	8018516 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80188d2:	fb08 f505 	mul.w	r5, r8, r5
 80188d6:	fb09 5303 	mla	r3, r9, r3, r5
 80188da:	e6a1      	b.n	8018620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80188dc:	4681      	mov	r9, r0
 80188de:	e6c8      	b.n	8018672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80188e0:	f1c1 0210 	rsb	r2, r1, #16
 80188e4:	4341      	muls	r1, r0
 80188e6:	fb09 1902 	mla	r9, r9, r2, r1
 80188ea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80188ee:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80188f2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80188f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80188fa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80188fe:	ea42 0909 	orr.w	r9, r2, r9
 8018902:	fa1f f289 	uxth.w	r2, r9
 8018906:	e75b      	b.n	80187c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018908:	f8b7 c000 	ldrh.w	ip, [r7]
 801890c:	43db      	mvns	r3, r3
 801890e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018912:	fa5f fe83 	uxtb.w	lr, r3
 8018916:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801891a:	fb00 f00e 	mul.w	r0, r0, lr
 801891e:	1c41      	adds	r1, r0, #1
 8018920:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018924:	1211      	asrs	r1, r2, #8
 8018926:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801892a:	f021 0107 	bic.w	r1, r1, #7
 801892e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018932:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018936:	48d7      	ldr	r0, [pc, #860]	; (8018c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8018938:	fb05 f50e 	mul.w	r5, r5, lr
 801893c:	b2c9      	uxtb	r1, r1
 801893e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8018942:	1c69      	adds	r1, r5, #1
 8018944:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018948:	10d1      	asrs	r1, r2, #3
 801894a:	f021 0103 	bic.w	r1, r1, #3
 801894e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8018952:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018956:	b2db      	uxtb	r3, r3
 8018958:	00c9      	lsls	r1, r1, #3
 801895a:	fb03 f30e 	mul.w	r3, r3, lr
 801895e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018962:	4301      	orrs	r1, r0
 8018964:	1c58      	adds	r0, r3, #1
 8018966:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801896a:	00d2      	lsls	r2, r2, #3
 801896c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018970:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018974:	430a      	orrs	r2, r1
 8018976:	e726      	b.n	80187c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8018978:	f115 0e01 	adds.w	lr, r5, #1
 801897c:	f53f af24 	bmi.w	80187c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018980:	4572      	cmp	r2, lr
 8018982:	f6ff af21 	blt.w	80187c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018986:	f110 0e01 	adds.w	lr, r0, #1
 801898a:	f53f af1d 	bmi.w	80187c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801898e:	4573      	cmp	r3, lr
 8018990:	f6ff af1a 	blt.w	80187c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018994:	b21b      	sxth	r3, r3
 8018996:	b212      	sxth	r2, r2
 8018998:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801899c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80189a0:	9301      	str	r3, [sp, #4]
 80189a2:	9200      	str	r2, [sp, #0]
 80189a4:	4639      	mov	r1, r7
 80189a6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80189aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80189ac:	f7ff fc24 	bl	80181f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80189b0:	e70a      	b.n	80187c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80189b2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80189b4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80189b8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80189ba:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80189be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80189c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80189c4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80189c6:	141f      	asrs	r7, r3, #16
 80189c8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80189ca:	141b      	asrs	r3, r3, #16
 80189cc:	fb01 3707 	mla	r7, r1, r7, r3
 80189d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80189d2:	fa1f fc82 	uxth.w	ip, r2
 80189d6:	eb03 0a07 	add.w	sl, r3, r7
 80189da:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80189de:	f813 9007 	ldrb.w	r9, [r3, r7]
 80189e2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80189e6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80189ea:	b29b      	uxth	r3, r3
 80189ec:	2d00      	cmp	r5, #0
 80189ee:	f000 80fe 	beq.w	8018bee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80189f2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80189f6:	940c      	str	r4, [sp, #48]	; 0x30
 80189f8:	eb0a 0b01 	add.w	fp, sl, r1
 80189fc:	fa1f fa85 	uxth.w	sl, r5
 8018a00:	fb0a fc0c 	mul.w	ip, sl, ip
 8018a04:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018a08:	fa1f fa8a 	uxth.w	sl, sl
 8018a0c:	eba0 000c 	sub.w	r0, r0, ip
 8018a10:	eba3 030a 	sub.w	r3, r3, sl
 8018a14:	b280      	uxth	r0, r0
 8018a16:	fb08 f000 	mul.w	r0, r8, r0
 8018a1a:	b29b      	uxth	r3, r3
 8018a1c:	fb09 0303 	mla	r3, r9, r3, r0
 8018a20:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018a22:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018a26:	940d      	str	r4, [sp, #52]	; 0x34
 8018a28:	fb0a 3300 	mla	r3, sl, r0, r3
 8018a2c:	fb0c 3304 	mla	r3, ip, r4, r3
 8018a30:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018a34:	2b00      	cmp	r3, #0
 8018a36:	f000 80cc 	beq.w	8018bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8018a3a:	9808      	ldr	r0, [sp, #32]
 8018a3c:	9c08      	ldr	r4, [sp, #32]
 8018a3e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018a42:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8018a46:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018a4a:	f000 80d5 	beq.w	8018bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8018a4e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018a52:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018a56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018a5a:	fb09 f707 	mul.w	r7, r9, r7
 8018a5e:	fb0a fc0c 	mul.w	ip, sl, ip
 8018a62:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018a66:	f107 0b20 	add.w	fp, r7, #32
 8018a6a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018a6e:	44cc      	add	ip, r9
 8018a70:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018a74:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018a78:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018a7c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018a80:	ea4c 0909 	orr.w	r9, ip, r9
 8018a84:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018a88:	8847      	ldrh	r7, [r0, #2]
 8018a8a:	d019      	beq.n	8018ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8018a8c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018a90:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018a94:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018a98:	fb08 f807 	mul.w	r8, r8, r7
 8018a9c:	fb0a fc0c 	mul.w	ip, sl, ip
 8018aa0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018aa4:	f108 0b20 	add.w	fp, r8, #32
 8018aa8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018aac:	44bc      	add	ip, r7
 8018aae:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018ab2:	0a3f      	lsrs	r7, r7, #8
 8018ab4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018ab8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018abc:	ea4c 0707 	orr.w	r7, ip, r7
 8018ac0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018ac4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018ac8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018acc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018ad0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018ad4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018ad8:	ea4c 0909 	orr.w	r9, ip, r9
 8018adc:	ea4a 0707 	orr.w	r7, sl, r7
 8018ae0:	2d00      	cmp	r5, #0
 8018ae2:	f000 808b 	beq.w	8018bfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8018ae6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018aea:	3901      	subs	r1, #1
 8018aec:	0049      	lsls	r1, r1, #1
 8018aee:	3102      	adds	r1, #2
 8018af0:	eb00 0c01 	add.w	ip, r0, r1
 8018af4:	5a41      	ldrh	r1, [r0, r1]
 8018af6:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018af8:	28ff      	cmp	r0, #255	; 0xff
 8018afa:	d019      	beq.n	8018b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8018afc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018afe:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018b02:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018b06:	fb04 fa01 	mul.w	sl, r4, r1
 8018b0a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018b0e:	fb08 f800 	mul.w	r8, r8, r0
 8018b12:	f10a 0020 	add.w	r0, sl, #32
 8018b16:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8018b1a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018b1e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018b22:	4441      	add	r1, r8
 8018b24:	0a00      	lsrs	r0, r0, #8
 8018b26:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018b2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b2e:	4301      	orrs	r1, r0
 8018b30:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018b32:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018b36:	2cff      	cmp	r4, #255	; 0xff
 8018b38:	d01a      	beq.n	8018b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8018b3a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8018b3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b42:	fb04 fa00 	mul.w	sl, r4, r0
 8018b46:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018b4a:	fb08 f80c 	mul.w	r8, r8, ip
 8018b4e:	f10a 0c20 	add.w	ip, sl, #32
 8018b52:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018b56:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018b5a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018b5e:	4440      	add	r0, r8
 8018b60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018b64:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018b68:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018b6c:	ea40 000c 	orr.w	r0, r0, ip
 8018b70:	fb15 fc02 	smulbb	ip, r5, r2
 8018b74:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018b78:	f1c5 0810 	rsb	r8, r5, #16
 8018b7c:	eba8 0802 	sub.w	r8, r8, r2
 8018b80:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018b84:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018b88:	437a      	muls	r2, r7
 8018b8a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018b8e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018b92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018b96:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018b9a:	fb09 2208 	mla	r2, r9, r8, r2
 8018b9e:	ea4a 0101 	orr.w	r1, sl, r1
 8018ba2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018ba6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018baa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018bae:	fb05 2201 	mla	r2, r5, r1, r2
 8018bb2:	ea4b 0000 	orr.w	r0, fp, r0
 8018bb6:	fb0c 2200 	mla	r2, ip, r0, r2
 8018bba:	0d57      	lsrs	r7, r2, #21
 8018bbc:	0952      	lsrs	r2, r2, #5
 8018bbe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018bc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018bc6:	433a      	orrs	r2, r7
 8018bc8:	2bff      	cmp	r3, #255	; 0xff
 8018bca:	b292      	uxth	r2, r2
 8018bcc:	d127      	bne.n	8018c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8018bce:	f8ae 2000 	strh.w	r2, [lr]
 8018bd2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8018bd4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8018bd6:	4413      	add	r3, r2
 8018bd8:	931d      	str	r3, [sp, #116]	; 0x74
 8018bda:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8018bdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018bde:	441a      	add	r2, r3
 8018be0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018be2:	921e      	str	r2, [sp, #120]	; 0x78
 8018be4:	3b01      	subs	r3, #1
 8018be6:	f10e 0e02 	add.w	lr, lr, #2
 8018bea:	930f      	str	r3, [sp, #60]	; 0x3c
 8018bec:	e627      	b.n	801883e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8018bee:	fb08 f000 	mul.w	r0, r8, r0
 8018bf2:	fb09 0303 	mla	r3, r9, r3, r0
 8018bf6:	e71b      	b.n	8018a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8018bf8:	46b9      	mov	r9, r7
 8018bfa:	e743      	b.n	8018a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8018bfc:	f1c2 0110 	rsb	r1, r2, #16
 8018c00:	437a      	muls	r2, r7
 8018c02:	fb09 2901 	mla	r9, r9, r1, r2
 8018c06:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018c0a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018c0e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018c12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018c16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c1a:	4302      	orrs	r2, r0
 8018c1c:	e7d4      	b.n	8018bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8018c1e:	f8be 7000 	ldrh.w	r7, [lr]
 8018c22:	4c1c      	ldr	r4, [pc, #112]	; (8018c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8018c24:	43db      	mvns	r3, r3
 8018c26:	1238      	asrs	r0, r7, #8
 8018c28:	fa5f fc83 	uxtb.w	ip, r3
 8018c2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018c30:	10fd      	asrs	r5, r7, #3
 8018c32:	fb00 f00c 	mul.w	r0, r0, ip
 8018c36:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018c3a:	fb05 f10c 	mul.w	r1, r5, ip
 8018c3e:	1c45      	adds	r5, r0, #1
 8018c40:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018c44:	1215      	asrs	r5, r2, #8
 8018c46:	f025 0507 	bic.w	r5, r5, #7
 8018c4a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018c4e:	1c4d      	adds	r5, r1, #1
 8018c50:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018c54:	10d1      	asrs	r1, r2, #3
 8018c56:	f021 0103 	bic.w	r1, r1, #3
 8018c5a:	00fb      	lsls	r3, r7, #3
 8018c5c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018c60:	b2db      	uxtb	r3, r3
 8018c62:	b2c0      	uxtb	r0, r0
 8018c64:	00c9      	lsls	r1, r1, #3
 8018c66:	fb03 f30c 	mul.w	r3, r3, ip
 8018c6a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018c6e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018c72:	4308      	orrs	r0, r1
 8018c74:	1c59      	adds	r1, r3, #1
 8018c76:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018c7a:	00d2      	lsls	r2, r2, #3
 8018c7c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018c80:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018c84:	4318      	orrs	r0, r3
 8018c86:	f8ae 0000 	strh.w	r0, [lr]
 8018c8a:	e7a2      	b.n	8018bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8018c8c:	b013      	add	sp, #76	; 0x4c
 8018c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c92:	bf00      	nop
 8018c94:	fffff800 	.word	0xfffff800

08018c98 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018c98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018c9c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8018ca0:	fb05 4c03 	mla	ip, r5, r3, r4
 8018ca4:	2d00      	cmp	r5, #0
 8018ca6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018caa:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8018cae:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8018cb2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8018cb6:	8808      	ldrh	r0, [r1, #0]
 8018cb8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018cbc:	f2c0 80a7 	blt.w	8018e0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8018cc0:	45aa      	cmp	sl, r5
 8018cc2:	f340 80a4 	ble.w	8018e0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8018cc6:	2c00      	cmp	r4, #0
 8018cc8:	f2c0 809f 	blt.w	8018e0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8018ccc:	42a3      	cmp	r3, r4
 8018cce:	f340 809c 	ble.w	8018e0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8018cd2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8018cd6:	1c62      	adds	r2, r4, #1
 8018cd8:	f100 809c 	bmi.w	8018e14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8018cdc:	4293      	cmp	r3, r2
 8018cde:	f340 8099 	ble.w	8018e14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8018ce2:	f1b9 0f00 	cmp.w	r9, #0
 8018ce6:	f000 8095 	beq.w	8018e14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8018cea:	f8be c002 	ldrh.w	ip, [lr, #2]
 8018cee:	3501      	adds	r5, #1
 8018cf0:	f100 8094 	bmi.w	8018e1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8018cf4:	45aa      	cmp	sl, r5
 8018cf6:	f340 8091 	ble.w	8018e1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8018cfa:	2f00      	cmp	r7, #0
 8018cfc:	f000 808e 	beq.w	8018e1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8018d00:	2c00      	cmp	r4, #0
 8018d02:	f2c0 8089 	blt.w	8018e18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8018d06:	42a3      	cmp	r3, r4
 8018d08:	f340 8086 	ble.w	8018e18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8018d0c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8018d10:	3401      	adds	r4, #1
 8018d12:	f100 8086 	bmi.w	8018e22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8018d16:	42a3      	cmp	r3, r4
 8018d18:	f340 8083 	ble.w	8018e22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8018d1c:	f1b9 0f00 	cmp.w	r9, #0
 8018d20:	d07f      	beq.n	8018e22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8018d22:	3301      	adds	r3, #1
 8018d24:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8018d28:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8018d2c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018d30:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8018d34:	fb19 fe07 	smulbb	lr, r9, r7
 8018d38:	ea44 0808 	orr.w	r8, r4, r8
 8018d3c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8018d40:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8018d44:	f1c7 0210 	rsb	r2, r7, #16
 8018d48:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018d4c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018d50:	ea44 0c0c 	orr.w	ip, r4, ip
 8018d54:	eba2 0209 	sub.w	r2, r2, r9
 8018d58:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8018d5c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8018d60:	fb04 f40c 	mul.w	r4, r4, ip
 8018d64:	fb02 4808 	mla	r8, r2, r8, r4
 8018d68:	041a      	lsls	r2, r3, #16
 8018d6a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018d6e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018d72:	4313      	orrs	r3, r2
 8018d74:	042a      	lsls	r2, r5, #16
 8018d76:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018d7a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018d7e:	fb0e 8303 	mla	r3, lr, r3, r8
 8018d82:	432a      	orrs	r2, r5
 8018d84:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8018d88:	fb07 3202 	mla	r2, r7, r2, r3
 8018d8c:	0d53      	lsrs	r3, r2, #21
 8018d8e:	0952      	lsrs	r2, r2, #5
 8018d90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018d94:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018d98:	431a      	orrs	r2, r3
 8018d9a:	b293      	uxth	r3, r2
 8018d9c:	b2b4      	uxth	r4, r6
 8018d9e:	1202      	asrs	r2, r0, #8
 8018da0:	43f6      	mvns	r6, r6
 8018da2:	b2f6      	uxtb	r6, r6
 8018da4:	121d      	asrs	r5, r3, #8
 8018da6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018daa:	fb12 f206 	smulbb	r2, r2, r6
 8018dae:	10c7      	asrs	r7, r0, #3
 8018db0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018db4:	00c0      	lsls	r0, r0, #3
 8018db6:	fb05 2504 	mla	r5, r5, r4, r2
 8018dba:	b2c0      	uxtb	r0, r0
 8018dbc:	10da      	asrs	r2, r3, #3
 8018dbe:	00db      	lsls	r3, r3, #3
 8018dc0:	b2db      	uxtb	r3, r3
 8018dc2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018dc6:	fb10 f006 	smulbb	r0, r0, r6
 8018dca:	b2ad      	uxth	r5, r5
 8018dcc:	fb03 0004 	mla	r0, r3, r4, r0
 8018dd0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018dd4:	fb17 f706 	smulbb	r7, r7, r6
 8018dd8:	b280      	uxth	r0, r0
 8018dda:	1c6b      	adds	r3, r5, #1
 8018ddc:	fb02 7204 	mla	r2, r2, r4, r7
 8018de0:	b292      	uxth	r2, r2
 8018de2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018de6:	1c43      	adds	r3, r0, #1
 8018de8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018dec:	1c50      	adds	r0, r2, #1
 8018dee:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018df2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018df6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018dfa:	0952      	lsrs	r2, r2, #5
 8018dfc:	432b      	orrs	r3, r5
 8018dfe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e02:	4313      	orrs	r3, r2
 8018e04:	800b      	strh	r3, [r1, #0]
 8018e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018e0a:	4680      	mov	r8, r0
 8018e0c:	e763      	b.n	8018cd6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8018e0e:	4684      	mov	ip, r0
 8018e10:	4680      	mov	r8, r0
 8018e12:	e76c      	b.n	8018cee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8018e14:	4684      	mov	ip, r0
 8018e16:	e76a      	b.n	8018cee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8018e18:	4605      	mov	r5, r0
 8018e1a:	e779      	b.n	8018d10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8018e1c:	4603      	mov	r3, r0
 8018e1e:	4605      	mov	r5, r0
 8018e20:	e782      	b.n	8018d28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8018e22:	4603      	mov	r3, r0
 8018e24:	e780      	b.n	8018d28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08018e26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e2a:	b093      	sub	sp, #76	; 0x4c
 8018e2c:	461d      	mov	r5, r3
 8018e2e:	9210      	str	r2, [sp, #64]	; 0x40
 8018e30:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8018e32:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8018e36:	920b      	str	r2, [sp, #44]	; 0x2c
 8018e38:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8018e3c:	910a      	str	r1, [sp, #40]	; 0x28
 8018e3e:	6859      	ldr	r1, [r3, #4]
 8018e40:	681b      	ldr	r3, [r3, #0]
 8018e42:	9011      	str	r0, [sp, #68]	; 0x44
 8018e44:	fb01 2707 	mla	r7, r1, r7, r2
 8018e48:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018e4c:	9307      	str	r3, [sp, #28]
 8018e4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018e50:	681b      	ldr	r3, [r3, #0]
 8018e52:	9309      	str	r3, [sp, #36]	; 0x24
 8018e54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018e56:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8018e5a:	43db      	mvns	r3, r3
 8018e5c:	b2db      	uxtb	r3, r3
 8018e5e:	9308      	str	r3, [sp, #32]
 8018e60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018e62:	2b00      	cmp	r3, #0
 8018e64:	dc03      	bgt.n	8018e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018e66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e68:	2b00      	cmp	r3, #0
 8018e6a:	f340 8203 	ble.w	8019274 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8018e6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018e70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018e74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018e78:	1e48      	subs	r0, r1, #1
 8018e7a:	f102 3cff 	add.w	ip, r2, #4294967295
 8018e7e:	2d00      	cmp	r5, #0
 8018e80:	f340 80da 	ble.w	8019038 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018e84:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018e88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018e8c:	d406      	bmi.n	8018e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e8e:	4586      	cmp	lr, r0
 8018e90:	da04      	bge.n	8018e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e92:	2b00      	cmp	r3, #0
 8018e94:	db02      	blt.n	8018e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e96:	4563      	cmp	r3, ip
 8018e98:	f2c0 80cf 	blt.w	801903a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018e9c:	f11e 0e01 	adds.w	lr, lr, #1
 8018ea0:	f100 80c1 	bmi.w	8019026 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018ea4:	4571      	cmp	r1, lr
 8018ea6:	f2c0 80be 	blt.w	8019026 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018eaa:	3301      	adds	r3, #1
 8018eac:	f100 80bb 	bmi.w	8019026 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018eb0:	429a      	cmp	r2, r3
 8018eb2:	f2c0 80b8 	blt.w	8019026 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018eb6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018eba:	46a9      	mov	r9, r5
 8018ebc:	f1b9 0f00 	cmp.w	r9, #0
 8018ec0:	f340 80d8 	ble.w	8019074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8018ec4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ec6:	1421      	asrs	r1, r4, #16
 8018ec8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018ecc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018ed0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018ed4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018ed8:	f100 8111 	bmi.w	80190fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018edc:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018ee0:	4551      	cmp	r1, sl
 8018ee2:	f280 810c 	bge.w	80190fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018ee6:	2800      	cmp	r0, #0
 8018ee8:	f2c0 8109 	blt.w	80190fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018eec:	f103 3aff 	add.w	sl, r3, #4294967295
 8018ef0:	4550      	cmp	r0, sl
 8018ef2:	f280 8104 	bge.w	80190fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018ef6:	fa0f f38e 	sxth.w	r3, lr
 8018efa:	fb00 1103 	mla	r1, r0, r3, r1
 8018efe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018f00:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8018f04:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8018f08:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8018f0c:	f1bc 0f00 	cmp.w	ip, #0
 8018f10:	d007      	beq.n	8018f22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8018f12:	005b      	lsls	r3, r3, #1
 8018f14:	eb0a 0003 	add.w	r0, sl, r3
 8018f18:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8018f1c:	930c      	str	r3, [sp, #48]	; 0x30
 8018f1e:	8843      	ldrh	r3, [r0, #2]
 8018f20:	930d      	str	r3, [sp, #52]	; 0x34
 8018f22:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8018f26:	fb12 f30c 	smulbb	r3, r2, ip
 8018f2a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018f2e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018f32:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018f36:	10db      	asrs	r3, r3, #3
 8018f38:	ea40 000e 	orr.w	r0, r0, lr
 8018f3c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018f40:	f1cc 0e10 	rsb	lr, ip, #16
 8018f44:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018f48:	ebae 0e02 	sub.w	lr, lr, r2
 8018f4c:	ea4a 0101 	orr.w	r1, sl, r1
 8018f50:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018f54:	4351      	muls	r1, r2
 8018f56:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f58:	9f08      	ldr	r7, [sp, #32]
 8018f5a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018f5e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018f62:	0410      	lsls	r0, r2, #16
 8018f64:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018f68:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018f6c:	4310      	orrs	r0, r2
 8018f6e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018f70:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018f72:	0412      	lsls	r2, r2, #16
 8018f74:	fb03 e000 	mla	r0, r3, r0, lr
 8018f78:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018f7c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018f80:	ea42 020e 	orr.w	r2, r2, lr
 8018f84:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018f88:	fb03 0302 	mla	r3, r3, r2, r0
 8018f8c:	0d5a      	lsrs	r2, r3, #21
 8018f8e:	095b      	lsrs	r3, r3, #5
 8018f90:	f8b8 0000 	ldrh.w	r0, [r8]
 8018f94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018f98:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018f9c:	4313      	orrs	r3, r2
 8018f9e:	b29b      	uxth	r3, r3
 8018fa0:	1201      	asrs	r1, r0, #8
 8018fa2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018fa6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018faa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018fae:	fb11 f107 	smulbb	r1, r1, r7
 8018fb2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018fb6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018fba:	00c0      	lsls	r0, r0, #3
 8018fbc:	fb0c 1c02 	mla	ip, ip, r2, r1
 8018fc0:	b2c0      	uxtb	r0, r0
 8018fc2:	10d9      	asrs	r1, r3, #3
 8018fc4:	00db      	lsls	r3, r3, #3
 8018fc6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018fca:	b2db      	uxtb	r3, r3
 8018fcc:	fb10 f007 	smulbb	r0, r0, r7
 8018fd0:	fa1f fc8c 	uxth.w	ip, ip
 8018fd4:	fb03 0302 	mla	r3, r3, r2, r0
 8018fd8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018fdc:	fb1e fe07 	smulbb	lr, lr, r7
 8018fe0:	fb01 e102 	mla	r1, r1, r2, lr
 8018fe4:	b29a      	uxth	r2, r3
 8018fe6:	f10c 0301 	add.w	r3, ip, #1
 8018fea:	b289      	uxth	r1, r1
 8018fec:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018ff0:	1c53      	adds	r3, r2, #1
 8018ff2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018ff6:	1c4a      	adds	r2, r1, #1
 8018ff8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018ffc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019000:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019004:	0949      	lsrs	r1, r1, #5
 8019006:	ea43 030c 	orr.w	r3, r3, ip
 801900a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801900e:	430b      	orrs	r3, r1
 8019010:	f8a8 3000 	strh.w	r3, [r8]
 8019014:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019016:	441c      	add	r4, r3
 8019018:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801901a:	f108 0802 	add.w	r8, r8, #2
 801901e:	441e      	add	r6, r3
 8019020:	f109 39ff 	add.w	r9, r9, #4294967295
 8019024:	e74a      	b.n	8018ebc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019026:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019028:	441c      	add	r4, r3
 801902a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801902c:	441e      	add	r6, r3
 801902e:	9b07      	ldr	r3, [sp, #28]
 8019030:	3302      	adds	r3, #2
 8019032:	3d01      	subs	r5, #1
 8019034:	9307      	str	r3, [sp, #28]
 8019036:	e722      	b.n	8018e7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019038:	d022      	beq.n	8019080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801903a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801903c:	1e6b      	subs	r3, r5, #1
 801903e:	fb00 4003 	mla	r0, r0, r3, r4
 8019042:	1400      	asrs	r0, r0, #16
 8019044:	f53f af37 	bmi.w	8018eb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019048:	3901      	subs	r1, #1
 801904a:	4288      	cmp	r0, r1
 801904c:	f6bf af33 	bge.w	8018eb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019050:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019052:	fb01 6303 	mla	r3, r1, r3, r6
 8019056:	141b      	asrs	r3, r3, #16
 8019058:	f53f af2d 	bmi.w	8018eb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801905c:	3a01      	subs	r2, #1
 801905e:	4293      	cmp	r3, r2
 8019060:	f6bf af29 	bge.w	8018eb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019064:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8019068:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801906c:	46a8      	mov	r8, r5
 801906e:	f1b8 0f00 	cmp.w	r8, #0
 8019072:	dc5e      	bgt.n	8019132 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019074:	9b07      	ldr	r3, [sp, #28]
 8019076:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801907a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801907e:	9307      	str	r3, [sp, #28]
 8019080:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019082:	2b00      	cmp	r3, #0
 8019084:	f340 80f6 	ble.w	8019274 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019088:	ee30 0a04 	vadd.f32	s0, s0, s8
 801908c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019090:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019094:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019096:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801909a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801909e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80190a2:	eef0 6a62 	vmov.f32	s13, s5
 80190a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80190aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80190b2:	ee16 4a90 	vmov	r4, s13
 80190b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80190ba:	eef0 6a43 	vmov.f32	s13, s6
 80190be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80190c2:	ee12 2a90 	vmov	r2, s5
 80190c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80190ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80190ce:	ee13 2a10 	vmov	r2, s6
 80190d2:	931f      	str	r3, [sp, #124]	; 0x7c
 80190d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80190d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80190da:	9320      	str	r3, [sp, #128]	; 0x80
 80190dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80190de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80190e0:	3b01      	subs	r3, #1
 80190e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190e6:	930a      	str	r3, [sp, #40]	; 0x28
 80190e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80190ea:	ee16 6a90 	vmov	r6, s13
 80190ee:	bf14      	ite	ne
 80190f0:	461d      	movne	r5, r3
 80190f2:	4615      	moveq	r5, r2
 80190f4:	eeb0 3a67 	vmov.f32	s6, s15
 80190f8:	eef0 2a47 	vmov.f32	s5, s14
 80190fc:	e6b0      	b.n	8018e60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80190fe:	f111 0a01 	adds.w	sl, r1, #1
 8019102:	d487      	bmi.n	8019014 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019104:	45d6      	cmp	lr, sl
 8019106:	db85      	blt.n	8019014 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019108:	f110 0a01 	adds.w	sl, r0, #1
 801910c:	d482      	bmi.n	8019014 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801910e:	4553      	cmp	r3, sl
 8019110:	db80      	blt.n	8019014 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019112:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8019114:	9101      	str	r1, [sp, #4]
 8019116:	b21b      	sxth	r3, r3
 8019118:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801911c:	9300      	str	r3, [sp, #0]
 801911e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8019122:	fa0f f38e 	sxth.w	r3, lr
 8019126:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019128:	9811      	ldr	r0, [sp, #68]	; 0x44
 801912a:	4641      	mov	r1, r8
 801912c:	f7ff fdb4 	bl	8018c98 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8019130:	e770      	b.n	8019014 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019132:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019134:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8019136:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801913a:	1430      	asrs	r0, r6, #16
 801913c:	1423      	asrs	r3, r4, #16
 801913e:	fb01 3000 	mla	r0, r1, r0, r3
 8019142:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019144:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8019148:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801914c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019150:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019154:	8858      	ldrh	r0, [r3, #2]
 8019156:	f1be 0f00 	cmp.w	lr, #0
 801915a:	d00b      	beq.n	8019174 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801915c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019160:	3901      	subs	r1, #1
 8019162:	0049      	lsls	r1, r1, #1
 8019164:	3102      	adds	r1, #2
 8019166:	eb03 0b01 	add.w	fp, r3, r1
 801916a:	5a5b      	ldrh	r3, [r3, r1]
 801916c:	930e      	str	r3, [sp, #56]	; 0x38
 801916e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019172:	930f      	str	r3, [sp, #60]	; 0x3c
 8019174:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8019178:	fb12 f30e 	smulbb	r3, r2, lr
 801917c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019180:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019184:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8019188:	10db      	asrs	r3, r3, #3
 801918a:	ea41 010c 	orr.w	r1, r1, ip
 801918e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019192:	f1ce 0c10 	rsb	ip, lr, #16
 8019196:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801919a:	ebac 0c02 	sub.w	ip, ip, r2
 801919e:	ea4b 0000 	orr.w	r0, fp, r0
 80191a2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80191a6:	4350      	muls	r0, r2
 80191a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80191aa:	9f08      	ldr	r7, [sp, #32]
 80191ac:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80191b0:	fb0c 0c01 	mla	ip, ip, r1, r0
 80191b4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80191b8:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80191bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80191be:	980e      	ldr	r0, [sp, #56]	; 0x38
 80191c0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80191c4:	0412      	lsls	r2, r2, #16
 80191c6:	ea4b 0101 	orr.w	r1, fp, r1
 80191ca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80191ce:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80191d2:	fb03 c101 	mla	r1, r3, r1, ip
 80191d6:	4302      	orrs	r2, r0
 80191d8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80191dc:	fb03 1202 	mla	r2, r3, r2, r1
 80191e0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80191e4:	0952      	lsrs	r2, r2, #5
 80191e6:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80191ea:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80191ee:	f8b9 2000 	ldrh.w	r2, [r9]
 80191f2:	ea4b 0303 	orr.w	r3, fp, r3
 80191f6:	b29b      	uxth	r3, r3
 80191f8:	1211      	asrs	r1, r2, #8
 80191fa:	1218      	asrs	r0, r3, #8
 80191fc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019200:	fb11 f107 	smulbb	r1, r1, r7
 8019204:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8019208:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801920c:	00d2      	lsls	r2, r2, #3
 801920e:	fb00 100a 	mla	r0, r0, sl, r1
 8019212:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019216:	10d9      	asrs	r1, r3, #3
 8019218:	b2d2      	uxtb	r2, r2
 801921a:	00db      	lsls	r3, r3, #3
 801921c:	fb1c fc07 	smulbb	ip, ip, r7
 8019220:	fb12 f207 	smulbb	r2, r2, r7
 8019224:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019228:	b2db      	uxtb	r3, r3
 801922a:	b280      	uxth	r0, r0
 801922c:	fb01 c10a 	mla	r1, r1, sl, ip
 8019230:	fb03 230a 	mla	r3, r3, sl, r2
 8019234:	b29b      	uxth	r3, r3
 8019236:	b289      	uxth	r1, r1
 8019238:	1c42      	adds	r2, r0, #1
 801923a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801923e:	f101 0c01 	add.w	ip, r1, #1
 8019242:	1c5a      	adds	r2, r3, #1
 8019244:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019248:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801924c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801924e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019252:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019256:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801925a:	4310      	orrs	r0, r2
 801925c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019260:	441c      	add	r4, r3
 8019262:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019264:	ea40 000c 	orr.w	r0, r0, ip
 8019268:	f829 0b02 	strh.w	r0, [r9], #2
 801926c:	441e      	add	r6, r3
 801926e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019272:	e6fc      	b.n	801906e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8019274:	b013      	add	sp, #76	; 0x4c
 8019276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801927a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801927a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801927e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8019282:	fb0e 4703 	mla	r7, lr, r3, r4
 8019286:	f1be 0f00 	cmp.w	lr, #0
 801928a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801928e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8019292:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8019296:	8808      	ldrh	r0, [r1, #0]
 8019298:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801929c:	db60      	blt.n	8019360 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801929e:	45f1      	cmp	r9, lr
 80192a0:	dd5e      	ble.n	8019360 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80192a2:	2c00      	cmp	r4, #0
 80192a4:	db5a      	blt.n	801935c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80192a6:	42a3      	cmp	r3, r4
 80192a8:	dd58      	ble.n	801935c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80192aa:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80192ae:	1c62      	adds	r2, r4, #1
 80192b0:	d459      	bmi.n	8019366 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80192b2:	4293      	cmp	r3, r2
 80192b4:	dd57      	ble.n	8019366 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80192b6:	2d00      	cmp	r5, #0
 80192b8:	d055      	beq.n	8019366 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80192ba:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80192be:	f11e 0e01 	adds.w	lr, lr, #1
 80192c2:	d454      	bmi.n	801936e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80192c4:	45f1      	cmp	r9, lr
 80192c6:	dd52      	ble.n	801936e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80192c8:	2e00      	cmp	r6, #0
 80192ca:	d050      	beq.n	801936e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80192cc:	2c00      	cmp	r4, #0
 80192ce:	db4c      	blt.n	801936a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80192d0:	42a3      	cmp	r3, r4
 80192d2:	dd4a      	ble.n	801936a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80192d4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80192d8:	3401      	adds	r4, #1
 80192da:	d405      	bmi.n	80192e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80192dc:	42a3      	cmp	r3, r4
 80192de:	dd03      	ble.n	80192e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80192e0:	b115      	cbz	r5, 80192e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80192e2:	3301      	adds	r3, #1
 80192e4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80192e8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80192ec:	fb15 f406 	smulbb	r4, r5, r6
 80192f0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80192f4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80192f8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80192fc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019300:	ea43 0c0c 	orr.w	ip, r3, ip
 8019304:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019308:	f1c6 0310 	rsb	r3, r6, #16
 801930c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019310:	1b5b      	subs	r3, r3, r5
 8019312:	ea4e 0707 	orr.w	r7, lr, r7
 8019316:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801931a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801931e:	437d      	muls	r5, r7
 8019320:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019324:	0403      	lsls	r3, r0, #16
 8019326:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801932a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801932e:	4318      	orrs	r0, r3
 8019330:	0413      	lsls	r3, r2, #16
 8019332:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019336:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801933a:	4313      	orrs	r3, r2
 801933c:	fb04 c000 	mla	r0, r4, r0, ip
 8019340:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019344:	fb06 0003 	mla	r0, r6, r3, r0
 8019348:	0d43      	lsrs	r3, r0, #21
 801934a:	0940      	lsrs	r0, r0, #5
 801934c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019350:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019354:	4318      	orrs	r0, r3
 8019356:	8008      	strh	r0, [r1, #0]
 8019358:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801935c:	4684      	mov	ip, r0
 801935e:	e7a6      	b.n	80192ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8019360:	4607      	mov	r7, r0
 8019362:	4684      	mov	ip, r0
 8019364:	e7ab      	b.n	80192be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8019366:	4607      	mov	r7, r0
 8019368:	e7a9      	b.n	80192be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801936a:	4602      	mov	r2, r0
 801936c:	e7b4      	b.n	80192d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801936e:	4602      	mov	r2, r0
 8019370:	e7ba      	b.n	80192e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08019372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019372:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019376:	b08f      	sub	sp, #60	; 0x3c
 8019378:	461d      	mov	r5, r3
 801937a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801937c:	920c      	str	r2, [sp, #48]	; 0x30
 801937e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8019382:	9107      	str	r1, [sp, #28]
 8019384:	6859      	ldr	r1, [r3, #4]
 8019386:	681b      	ldr	r3, [r3, #0]
 8019388:	900d      	str	r0, [sp, #52]	; 0x34
 801938a:	fb01 2707 	mla	r7, r1, r7, r2
 801938e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8019392:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019394:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8019398:	f8d3 8000 	ldr.w	r8, [r3]
 801939c:	9b07      	ldr	r3, [sp, #28]
 801939e:	2b00      	cmp	r3, #0
 80193a0:	dc03      	bgt.n	80193aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80193a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80193a4:	2b00      	cmp	r3, #0
 80193a6:	f340 8181 	ble.w	80196ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80193aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80193b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80193b4:	1e48      	subs	r0, r1, #1
 80193b6:	f102 3cff 	add.w	ip, r2, #4294967295
 80193ba:	2d00      	cmp	r5, #0
 80193bc:	f340 809b 	ble.w	80194f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80193c0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80193c4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80193c8:	d406      	bmi.n	80193d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80193ca:	4586      	cmp	lr, r0
 80193cc:	da04      	bge.n	80193d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80193ce:	2b00      	cmp	r3, #0
 80193d0:	db02      	blt.n	80193d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80193d2:	4563      	cmp	r3, ip
 80193d4:	f2c0 8090 	blt.w	80194f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80193d8:	f11e 0e01 	adds.w	lr, lr, #1
 80193dc:	f100 8084 	bmi.w	80194e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80193e0:	4571      	cmp	r1, lr
 80193e2:	f2c0 8081 	blt.w	80194e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80193e6:	3301      	adds	r3, #1
 80193e8:	d47e      	bmi.n	80194e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80193ea:	429a      	cmp	r2, r3
 80193ec:	db7c      	blt.n	80194e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80193ee:	46aa      	mov	sl, r5
 80193f0:	46b9      	mov	r9, r7
 80193f2:	f1ba 0f00 	cmp.w	sl, #0
 80193f6:	f340 8099 	ble.w	801952c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80193fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193fc:	1421      	asrs	r1, r4, #16
 80193fe:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019402:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019406:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801940a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801940e:	f100 80d0 	bmi.w	80195b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8019412:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019416:	4559      	cmp	r1, fp
 8019418:	f280 80cb 	bge.w	80195b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801941c:	2800      	cmp	r0, #0
 801941e:	f2c0 80c8 	blt.w	80195b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8019422:	f103 3bff 	add.w	fp, r3, #4294967295
 8019426:	4558      	cmp	r0, fp
 8019428:	f280 80c3 	bge.w	80195b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801942c:	fa0f fe8e 	sxth.w	lr, lr
 8019430:	fb00 110e 	mla	r1, r0, lr, r1
 8019434:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8019438:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801943c:	8841      	ldrh	r1, [r0, #2]
 801943e:	f1bc 0f00 	cmp.w	ip, #0
 8019442:	d00b      	beq.n	801945c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8019444:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8019448:	3b01      	subs	r3, #1
 801944a:	005b      	lsls	r3, r3, #1
 801944c:	3302      	adds	r3, #2
 801944e:	eb00 0e03 	add.w	lr, r0, r3
 8019452:	5ac3      	ldrh	r3, [r0, r3]
 8019454:	9308      	str	r3, [sp, #32]
 8019456:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801945a:	9309      	str	r3, [sp, #36]	; 0x24
 801945c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8019460:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019464:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019468:	ea40 000b 	orr.w	r0, r0, fp
 801946c:	fb12 f30c 	smulbb	r3, r2, ip
 8019470:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019474:	10db      	asrs	r3, r3, #3
 8019476:	f1cc 0e10 	rsb	lr, ip, #16
 801947a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801947e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019482:	ebae 0e02 	sub.w	lr, lr, r2
 8019486:	ea4b 0101 	orr.w	r1, fp, r1
 801948a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801948e:	4351      	muls	r1, r2
 8019490:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019492:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8019496:	fb0e 1e00 	mla	lr, lr, r0, r1
 801949a:	0410      	lsls	r0, r2, #16
 801949c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80194a0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80194a4:	4310      	orrs	r0, r2
 80194a6:	9a08      	ldr	r2, [sp, #32]
 80194a8:	9908      	ldr	r1, [sp, #32]
 80194aa:	0412      	lsls	r2, r2, #16
 80194ac:	fb03 e000 	mla	r0, r3, r0, lr
 80194b0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80194b4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80194b8:	ea42 020e 	orr.w	r2, r2, lr
 80194bc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80194c0:	fb03 0302 	mla	r3, r3, r2, r0
 80194c4:	0d5a      	lsrs	r2, r3, #21
 80194c6:	095b      	lsrs	r3, r3, #5
 80194c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80194cc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80194d0:	4313      	orrs	r3, r2
 80194d2:	f8a9 3000 	strh.w	r3, [r9]
 80194d6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80194d8:	441c      	add	r4, r3
 80194da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80194dc:	f109 0902 	add.w	r9, r9, #2
 80194e0:	441e      	add	r6, r3
 80194e2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80194e6:	e784      	b.n	80193f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80194e8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80194ea:	441c      	add	r4, r3
 80194ec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80194ee:	3d01      	subs	r5, #1
 80194f0:	441e      	add	r6, r3
 80194f2:	3702      	adds	r7, #2
 80194f4:	e761      	b.n	80193ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80194f6:	d01d      	beq.n	8019534 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80194f8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80194fa:	1e6b      	subs	r3, r5, #1
 80194fc:	fb00 4003 	mla	r0, r0, r3, r4
 8019500:	1400      	asrs	r0, r0, #16
 8019502:	f53f af74 	bmi.w	80193ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019506:	3901      	subs	r1, #1
 8019508:	4288      	cmp	r0, r1
 801950a:	f6bf af70 	bge.w	80193ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801950e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8019510:	fb01 6303 	mla	r3, r1, r3, r6
 8019514:	141b      	asrs	r3, r3, #16
 8019516:	f53f af6a 	bmi.w	80193ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801951a:	3a01      	subs	r2, #1
 801951c:	4293      	cmp	r3, r2
 801951e:	f6bf af66 	bge.w	80193ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019522:	46a9      	mov	r9, r5
 8019524:	46ba      	mov	sl, r7
 8019526:	f1b9 0f00 	cmp.w	r9, #0
 801952a:	dc5a      	bgt.n	80195e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801952c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019530:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8019534:	9b07      	ldr	r3, [sp, #28]
 8019536:	2b00      	cmp	r3, #0
 8019538:	f340 80b8 	ble.w	80196ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801953c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019540:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019544:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019548:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801954a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801954e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019552:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019556:	eef0 6a62 	vmov.f32	s13, s5
 801955a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801955e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019562:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019566:	ee16 4a90 	vmov	r4, s13
 801956a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801956e:	eef0 6a43 	vmov.f32	s13, s6
 8019572:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019576:	ee12 2a90 	vmov	r2, s5
 801957a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801957e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019582:	ee13 2a10 	vmov	r2, s6
 8019586:	931b      	str	r3, [sp, #108]	; 0x6c
 8019588:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801958a:	fb92 f3f3 	sdiv	r3, r2, r3
 801958e:	931c      	str	r3, [sp, #112]	; 0x70
 8019590:	9b07      	ldr	r3, [sp, #28]
 8019592:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019594:	3b01      	subs	r3, #1
 8019596:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801959a:	9307      	str	r3, [sp, #28]
 801959c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801959e:	ee16 6a90 	vmov	r6, s13
 80195a2:	bf14      	ite	ne
 80195a4:	461d      	movne	r5, r3
 80195a6:	4615      	moveq	r5, r2
 80195a8:	eeb0 3a67 	vmov.f32	s6, s15
 80195ac:	eef0 2a47 	vmov.f32	s5, s14
 80195b0:	e6f4      	b.n	801939c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80195b2:	f111 0b01 	adds.w	fp, r1, #1
 80195b6:	d48e      	bmi.n	80194d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195b8:	45de      	cmp	lr, fp
 80195ba:	db8c      	blt.n	80194d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195bc:	f110 0b01 	adds.w	fp, r0, #1
 80195c0:	d489      	bmi.n	80194d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195c2:	455b      	cmp	r3, fp
 80195c4:	db87      	blt.n	80194d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195c6:	b21b      	sxth	r3, r3
 80195c8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80195cc:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80195d0:	9300      	str	r3, [sp, #0]
 80195d2:	4642      	mov	r2, r8
 80195d4:	fa0f f38e 	sxth.w	r3, lr
 80195d8:	4649      	mov	r1, r9
 80195da:	980d      	ldr	r0, [sp, #52]	; 0x34
 80195dc:	f7ff fe4d 	bl	801927a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80195e0:	e779      	b.n	80194d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80195e4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80195e8:	1420      	asrs	r0, r4, #16
 80195ea:	1431      	asrs	r1, r6, #16
 80195ec:	fb03 0101 	mla	r1, r3, r1, r0
 80195f0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80195f4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80195f8:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80195fc:	8841      	ldrh	r1, [r0, #2]
 80195fe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019602:	f1be 0f00 	cmp.w	lr, #0
 8019606:	d00b      	beq.n	8019620 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8019608:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801960c:	3b01      	subs	r3, #1
 801960e:	005b      	lsls	r3, r3, #1
 8019610:	3302      	adds	r3, #2
 8019612:	eb00 0b03 	add.w	fp, r0, r3
 8019616:	5ac3      	ldrh	r3, [r0, r3]
 8019618:	930a      	str	r3, [sp, #40]	; 0x28
 801961a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801961e:	930b      	str	r3, [sp, #44]	; 0x2c
 8019620:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8019624:	fb12 f30e 	smulbb	r3, r2, lr
 8019628:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801962c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019630:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019634:	10db      	asrs	r3, r3, #3
 8019636:	ea40 000c 	orr.w	r0, r0, ip
 801963a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801963e:	f1ce 0c10 	rsb	ip, lr, #16
 8019642:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019646:	ebac 0c02 	sub.w	ip, ip, r2
 801964a:	ea4b 0101 	orr.w	r1, fp, r1
 801964e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019652:	4351      	muls	r1, r2
 8019654:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019656:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801965a:	fb0c 1c00 	mla	ip, ip, r0, r1
 801965e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8019662:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8019666:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019668:	990a      	ldr	r1, [sp, #40]	; 0x28
 801966a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801966e:	0412      	lsls	r2, r2, #16
 8019670:	ea4b 0000 	orr.w	r0, fp, r0
 8019674:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019678:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801967c:	fb03 c000 	mla	r0, r3, r0, ip
 8019680:	ea42 0b0b 	orr.w	fp, r2, fp
 8019684:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8019688:	fb03 000b 	mla	r0, r3, fp, r0
 801968c:	0d43      	lsrs	r3, r0, #21
 801968e:	0940      	lsrs	r0, r0, #5
 8019690:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019694:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019698:	4318      	orrs	r0, r3
 801969a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801969c:	f82a 0b02 	strh.w	r0, [sl], #2
 80196a0:	441c      	add	r4, r3
 80196a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80196a4:	f109 39ff 	add.w	r9, r9, #4294967295
 80196a8:	441e      	add	r6, r3
 80196aa:	e73c      	b.n	8019526 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80196ac:	b00f      	add	sp, #60	; 0x3c
 80196ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080196b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80196b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196b6:	b085      	sub	sp, #20
 80196b8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80196bc:	9102      	str	r1, [sp, #8]
 80196be:	2c00      	cmp	r4, #0
 80196c0:	fb04 7103 	mla	r1, r4, r3, r7
 80196c4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80196c8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80196cc:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80196d0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80196d4:	f2c0 811b 	blt.w	801990e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80196d8:	45a6      	cmp	lr, r4
 80196da:	f340 8118 	ble.w	801990e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80196de:	2f00      	cmp	r7, #0
 80196e0:	f2c0 8113 	blt.w	801990a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80196e4:	42bb      	cmp	r3, r7
 80196e6:	f340 8110 	ble.w	801990a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80196ea:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80196ee:	1c7a      	adds	r2, r7, #1
 80196f0:	f100 8110 	bmi.w	8019914 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80196f4:	4293      	cmp	r3, r2
 80196f6:	f340 810d 	ble.w	8019914 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80196fa:	2e00      	cmp	r6, #0
 80196fc:	f000 810c 	beq.w	8019918 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8019700:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8019704:	3401      	adds	r4, #1
 8019706:	f100 810b 	bmi.w	8019920 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801970a:	45a6      	cmp	lr, r4
 801970c:	f340 8108 	ble.w	8019920 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8019710:	2800      	cmp	r0, #0
 8019712:	f000 8108 	beq.w	8019926 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8019716:	2f00      	cmp	r7, #0
 8019718:	f2c0 8100 	blt.w	801991c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801971c:	42bb      	cmp	r3, r7
 801971e:	f340 80fd 	ble.w	801991c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8019722:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019726:	3701      	adds	r7, #1
 8019728:	f100 8100 	bmi.w	801992c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801972c:	42bb      	cmp	r3, r7
 801972e:	f340 80fd 	ble.w	801992c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8019732:	2e00      	cmp	r6, #0
 8019734:	f000 80fc 	beq.w	8019930 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8019738:	3301      	adds	r3, #1
 801973a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801973e:	b2b6      	uxth	r6, r6
 8019740:	b280      	uxth	r0, r0
 8019742:	fb00 fe06 	mul.w	lr, r0, r6
 8019746:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801974a:	0136      	lsls	r6, r6, #4
 801974c:	eba6 070e 	sub.w	r7, r6, lr
 8019750:	b280      	uxth	r0, r0
 8019752:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8019756:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801975a:	b2bf      	uxth	r7, r7
 801975c:	1a1b      	subs	r3, r3, r0
 801975e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8019762:	b29b      	uxth	r3, r3
 8019764:	fb0a f607 	mul.w	r6, sl, r7
 8019768:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801976c:	fb0b 6603 	mla	r6, fp, r3, r6
 8019770:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019774:	fb00 6609 	mla	r6, r0, r9, r6
 8019778:	fb0e 6608 	mla	r6, lr, r8, r6
 801977c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8019780:	9600      	str	r6, [sp, #0]
 8019782:	2e00      	cmp	r6, #0
 8019784:	f000 80be 	beq.w	8019904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8019788:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801978c:	fb0b fc0c 	mul.w	ip, fp, ip
 8019790:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8019794:	fb0b f505 	mul.w	r5, fp, r5
 8019798:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801979c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80197a0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80197a4:	44dc      	add	ip, fp
 80197a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80197aa:	9501      	str	r5, [sp, #4]
 80197ac:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80197b0:	9503      	str	r5, [sp, #12]
 80197b2:	9d01      	ldr	r5, [sp, #4]
 80197b4:	9e02      	ldr	r6, [sp, #8]
 80197b6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80197ba:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80197be:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80197c2:	fb0a fc0c 	mul.w	ip, sl, ip
 80197c6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80197ca:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80197ce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80197d2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80197d6:	4465      	add	r5, ip
 80197d8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80197dc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80197e0:	fb09 fc0c 	mul.w	ip, r9, ip
 80197e4:	fb09 f904 	mul.w	r9, r9, r4
 80197e8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80197ec:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80197f0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80197f4:	fb08 f404 	mul.w	r4, r8, r4
 80197f8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80197fc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019800:	fb08 f802 	mul.w	r8, r8, r2
 8019804:	fb0a fa01 	mul.w	sl, sl, r1
 8019808:	0a22      	lsrs	r2, r4, #8
 801980a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801980e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019812:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8019816:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801981a:	4414      	add	r4, r2
 801981c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8019820:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8019824:	0a2d      	lsrs	r5, r5, #8
 8019826:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801982a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801982e:	9a03      	ldr	r2, [sp, #12]
 8019830:	8836      	ldrh	r6, [r6, #0]
 8019832:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8019836:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801983a:	437d      	muls	r5, r7
 801983c:	4461      	add	r1, ip
 801983e:	0a24      	lsrs	r4, r4, #8
 8019840:	fb02 5503 	mla	r5, r2, r3, r5
 8019844:	0a09      	lsrs	r1, r1, #8
 8019846:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801984a:	fb04 540e 	mla	r4, r4, lr, r5
 801984e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8019852:	fb01 4100 	mla	r1, r1, r0, r4
 8019856:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801985a:	0a09      	lsrs	r1, r1, #8
 801985c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019860:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8019864:	fb07 f70a 	mul.w	r7, r7, sl
 8019868:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801986c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8019870:	fb03 7101 	mla	r1, r3, r1, r7
 8019874:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019878:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801987c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8019880:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8019884:	fb00 e101 	mla	r1, r0, r1, lr
 8019888:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801988c:	9a00      	ldr	r2, [sp, #0]
 801988e:	b287      	uxth	r7, r0
 8019890:	437a      	muls	r2, r7
 8019892:	0a09      	lsrs	r1, r1, #8
 8019894:	1c53      	adds	r3, r2, #1
 8019896:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801989a:	4321      	orrs	r1, r4
 801989c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80198a0:	1235      	asrs	r5, r6, #8
 80198a2:	0c0a      	lsrs	r2, r1, #16
 80198a4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80198a8:	b2db      	uxtb	r3, r3
 80198aa:	fb12 f207 	smulbb	r2, r2, r7
 80198ae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80198b2:	fb05 2503 	mla	r5, r5, r3, r2
 80198b6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80198ba:	10f2      	asrs	r2, r6, #3
 80198bc:	b2c8      	uxtb	r0, r1
 80198be:	00f6      	lsls	r6, r6, #3
 80198c0:	fb14 f407 	smulbb	r4, r4, r7
 80198c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80198c8:	b2f6      	uxtb	r6, r6
 80198ca:	fb10 f007 	smulbb	r0, r0, r7
 80198ce:	fb02 4203 	mla	r2, r2, r3, r4
 80198d2:	b2ad      	uxth	r5, r5
 80198d4:	fb06 0303 	mla	r3, r6, r3, r0
 80198d8:	b299      	uxth	r1, r3
 80198da:	b294      	uxth	r4, r2
 80198dc:	1c6b      	adds	r3, r5, #1
 80198de:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80198e2:	1c62      	adds	r2, r4, #1
 80198e4:	1c4b      	adds	r3, r1, #1
 80198e6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80198ea:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80198ee:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80198f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80198f6:	0952      	lsrs	r2, r2, #5
 80198f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80198fc:	432b      	orrs	r3, r5
 80198fe:	4313      	orrs	r3, r2
 8019900:	9a02      	ldr	r2, [sp, #8]
 8019902:	8013      	strh	r3, [r2, #0]
 8019904:	b005      	add	sp, #20
 8019906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801990a:	2500      	movs	r5, #0
 801990c:	e6ef      	b.n	80196ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801990e:	2100      	movs	r1, #0
 8019910:	460d      	mov	r5, r1
 8019912:	e6f7      	b.n	8019704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8019914:	2100      	movs	r1, #0
 8019916:	e6f5      	b.n	8019704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8019918:	4631      	mov	r1, r6
 801991a:	e6f3      	b.n	8019704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801991c:	2400      	movs	r4, #0
 801991e:	e702      	b.n	8019726 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8019920:	2200      	movs	r2, #0
 8019922:	4614      	mov	r4, r2
 8019924:	e70b      	b.n	801973e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8019926:	4602      	mov	r2, r0
 8019928:	4604      	mov	r4, r0
 801992a:	e708      	b.n	801973e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801992c:	2200      	movs	r2, #0
 801992e:	e706      	b.n	801973e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8019930:	4632      	mov	r2, r6
 8019932:	e704      	b.n	801973e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08019934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019938:	b09d      	sub	sp, #116	; 0x74
 801993a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801993e:	9219      	str	r2, [sp, #100]	; 0x64
 8019940:	9307      	str	r3, [sp, #28]
 8019942:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019944:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8019948:	931a      	str	r3, [sp, #104]	; 0x68
 801994a:	9117      	str	r1, [sp, #92]	; 0x5c
 801994c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8019950:	901b      	str	r0, [sp, #108]	; 0x6c
 8019952:	6850      	ldr	r0, [r2, #4]
 8019954:	6812      	ldr	r2, [r2, #0]
 8019956:	fb00 1303 	mla	r3, r0, r3, r1
 801995a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801995e:	930a      	str	r3, [sp, #40]	; 0x28
 8019960:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019962:	681b      	ldr	r3, [r3, #0]
 8019964:	9310      	str	r3, [sp, #64]	; 0x40
 8019966:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801996a:	930b      	str	r3, [sp, #44]	; 0x2c
 801996c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801996e:	2b00      	cmp	r3, #0
 8019970:	dc03      	bgt.n	801997a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8019972:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019974:	2b00      	cmp	r3, #0
 8019976:	f340 8375 	ble.w	801a064 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801997a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801997c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019980:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019984:	1e48      	subs	r0, r1, #1
 8019986:	1e57      	subs	r7, r2, #1
 8019988:	9b07      	ldr	r3, [sp, #28]
 801998a:	2b00      	cmp	r3, #0
 801998c:	f340 818e 	ble.w	8019cac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8019990:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019994:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019998:	d406      	bmi.n	80199a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801999a:	4584      	cmp	ip, r0
 801999c:	da04      	bge.n	80199a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801999e:	2b00      	cmp	r3, #0
 80199a0:	db02      	blt.n	80199a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80199a2:	42bb      	cmp	r3, r7
 80199a4:	f2c0 8183 	blt.w	8019cae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80199a8:	f11c 0c01 	adds.w	ip, ip, #1
 80199ac:	f100 8173 	bmi.w	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80199b0:	4561      	cmp	r1, ip
 80199b2:	f2c0 8170 	blt.w	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80199b6:	3301      	adds	r3, #1
 80199b8:	f100 816d 	bmi.w	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80199bc:	429a      	cmp	r2, r3
 80199be:	f2c0 816a 	blt.w	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80199c2:	9b07      	ldr	r3, [sp, #28]
 80199c4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80199c6:	9318      	str	r3, [sp, #96]	; 0x60
 80199c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80199ca:	2b00      	cmp	r3, #0
 80199cc:	f340 818c 	ble.w	8019ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80199d0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80199d2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80199d4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80199d8:	689b      	ldr	r3, [r3, #8]
 80199da:	1422      	asrs	r2, r4, #16
 80199dc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80199e0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80199e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80199e8:	f100 81cd 	bmi.w	8019d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80199ec:	f103 38ff 	add.w	r8, r3, #4294967295
 80199f0:	4542      	cmp	r2, r8
 80199f2:	f280 81c8 	bge.w	8019d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80199f6:	f1bc 0f00 	cmp.w	ip, #0
 80199fa:	f2c0 81c4 	blt.w	8019d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80199fe:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019a02:	45c4      	cmp	ip, r8
 8019a04:	f280 81bf 	bge.w	8019d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019a08:	b21b      	sxth	r3, r3
 8019a0a:	fb0c 2203 	mla	r2, ip, r3, r2
 8019a0e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019a10:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019a14:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019a18:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019a1c:	2800      	cmp	r0, #0
 8019a1e:	f000 81a9 	beq.w	8019d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8019a22:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019a26:	950c      	str	r5, [sp, #48]	; 0x30
 8019a28:	0e2d      	lsrs	r5, r5, #24
 8019a2a:	9513      	str	r5, [sp, #76]	; 0x4c
 8019a2c:	b181      	cbz	r1, 8019a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019a2e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019a32:	3b01      	subs	r3, #1
 8019a34:	009b      	lsls	r3, r3, #2
 8019a36:	3304      	adds	r3, #4
 8019a38:	eb08 0c03 	add.w	ip, r8, r3
 8019a3c:	f858 3003 	ldr.w	r3, [r8, r3]
 8019a40:	9308      	str	r3, [sp, #32]
 8019a42:	0e1b      	lsrs	r3, r3, #24
 8019a44:	9311      	str	r3, [sp, #68]	; 0x44
 8019a46:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019a4a:	930d      	str	r3, [sp, #52]	; 0x34
 8019a4c:	0e1b      	lsrs	r3, r3, #24
 8019a4e:	9314      	str	r3, [sp, #80]	; 0x50
 8019a50:	b280      	uxth	r0, r0
 8019a52:	b289      	uxth	r1, r1
 8019a54:	fb00 f901 	mul.w	r9, r0, r1
 8019a58:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019a5c:	0100      	lsls	r0, r0, #4
 8019a5e:	eba0 0809 	sub.w	r8, r0, r9
 8019a62:	b289      	uxth	r1, r1
 8019a64:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019a68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019a6a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a6c:	fa1f f888 	uxth.w	r8, r8
 8019a70:	1a5b      	subs	r3, r3, r1
 8019a72:	b29b      	uxth	r3, r3
 8019a74:	fb08 f000 	mul.w	r0, r8, r0
 8019a78:	fb03 000e 	mla	r0, r3, lr, r0
 8019a7c:	fb01 0005 	mla	r0, r1, r5, r0
 8019a80:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a82:	fb09 0005 	mla	r0, r9, r5, r0
 8019a86:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019a8a:	2800      	cmp	r0, #0
 8019a8c:	f000 80fa 	beq.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019a90:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019a94:	d01b      	beq.n	8019ace <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019a96:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019a9a:	fb0e fa0a 	mul.w	sl, lr, sl
 8019a9e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019aa2:	fb0e fe02 	mul.w	lr, lr, r2
 8019aa6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019aaa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019aae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019ab2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019ab6:	4452      	add	r2, sl
 8019ab8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019abc:	0a12      	lsrs	r2, r2, #8
 8019abe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ac2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019ac6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019aca:	ea42 020c 	orr.w	r2, r2, ip
 8019ace:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019ad0:	2dff      	cmp	r5, #255	; 0xff
 8019ad2:	d021      	beq.n	8019b18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8019ad4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019ad6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019ada:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019adc:	fb05 fb0b 	mul.w	fp, r5, fp
 8019ae0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019ae2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019ae6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019ae8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019aec:	fb05 fa0a 	mul.w	sl, r5, sl
 8019af0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019af4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019af8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019afc:	44de      	add	lr, fp
 8019afe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019b02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019b06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019b0a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019b0e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019b12:	ea4e 050a 	orr.w	r5, lr, sl
 8019b16:	950c      	str	r5, [sp, #48]	; 0x30
 8019b18:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019b1a:	2dff      	cmp	r5, #255	; 0xff
 8019b1c:	d021      	beq.n	8019b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019b1e:	9d08      	ldr	r5, [sp, #32]
 8019b20:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019b24:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019b26:	fb05 fb0b 	mul.w	fp, r5, fp
 8019b2a:	9d08      	ldr	r5, [sp, #32]
 8019b2c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019b30:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019b32:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019b36:	fb05 fa0a 	mul.w	sl, r5, sl
 8019b3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019b3e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019b42:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019b46:	44de      	add	lr, fp
 8019b48:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019b4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019b50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019b54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019b58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019b5c:	ea4e 050a 	orr.w	r5, lr, sl
 8019b60:	9508      	str	r5, [sp, #32]
 8019b62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b64:	2dff      	cmp	r5, #255	; 0xff
 8019b66:	d021      	beq.n	8019bac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8019b68:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019b6a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019b6e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b70:	fb05 fb0b 	mul.w	fp, r5, fp
 8019b74:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019b76:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019b7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b7c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019b80:	fb05 fa0a 	mul.w	sl, r5, sl
 8019b84:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019b88:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019b8c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019b90:	44de      	add	lr, fp
 8019b92:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019b96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019b9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019b9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ba2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ba6:	ea4e 050a 	orr.w	r5, lr, sl
 8019baa:	950d      	str	r5, [sp, #52]	; 0x34
 8019bac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019bae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019bb2:	9d08      	ldr	r5, [sp, #32]
 8019bb4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019bb8:	fb08 fc0c 	mul.w	ip, r8, ip
 8019bbc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019bc0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019bc4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019bc6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019bca:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019bce:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019bd0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019bd4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019bd8:	fb08 f80e 	mul.w	r8, r8, lr
 8019bdc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019be0:	fb03 8202 	mla	r2, r3, r2, r8
 8019be4:	9b08      	ldr	r3, [sp, #32]
 8019be6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019be8:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019bec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019bee:	fb01 220a 	mla	r2, r1, sl, r2
 8019bf2:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019bf6:	fb09 2901 	mla	r9, r9, r1, r2
 8019bfa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019bfc:	883b      	ldrh	r3, [r7, #0]
 8019bfe:	4342      	muls	r2, r0
 8019c00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019c04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019c08:	1c50      	adds	r0, r2, #1
 8019c0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019c0e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019c12:	ea4c 0c09 	orr.w	ip, ip, r9
 8019c16:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019c1a:	1219      	asrs	r1, r3, #8
 8019c1c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019c20:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019c24:	b2c0      	uxtb	r0, r0
 8019c26:	fb12 f205 	smulbb	r2, r2, r5
 8019c2a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019c2e:	fb01 2100 	mla	r1, r1, r0, r2
 8019c32:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019c36:	10da      	asrs	r2, r3, #3
 8019c38:	fa5f fc8c 	uxtb.w	ip, ip
 8019c3c:	00db      	lsls	r3, r3, #3
 8019c3e:	fb1c fc05 	smulbb	ip, ip, r5
 8019c42:	b2db      	uxtb	r3, r3
 8019c44:	b289      	uxth	r1, r1
 8019c46:	fb03 c300 	mla	r3, r3, r0, ip
 8019c4a:	fa1f fc83 	uxth.w	ip, r3
 8019c4e:	1c4b      	adds	r3, r1, #1
 8019c50:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019c54:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019c58:	fb1e fe05 	smulbb	lr, lr, r5
 8019c5c:	f10c 0301 	add.w	r3, ip, #1
 8019c60:	fb02 e200 	mla	r2, r2, r0, lr
 8019c64:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019c68:	b292      	uxth	r2, r2
 8019c6a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019c6e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019c72:	430b      	orrs	r3, r1
 8019c74:	1c51      	adds	r1, r2, #1
 8019c76:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019c7a:	0952      	lsrs	r2, r2, #5
 8019c7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019c80:	4313      	orrs	r3, r2
 8019c82:	803b      	strh	r3, [r7, #0]
 8019c84:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019c86:	441c      	add	r4, r3
 8019c88:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019c8a:	441e      	add	r6, r3
 8019c8c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019c8e:	3b01      	subs	r3, #1
 8019c90:	3702      	adds	r7, #2
 8019c92:	9318      	str	r3, [sp, #96]	; 0x60
 8019c94:	e698      	b.n	80199c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019c96:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019c98:	441c      	add	r4, r3
 8019c9a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019c9c:	441e      	add	r6, r3
 8019c9e:	9b07      	ldr	r3, [sp, #28]
 8019ca0:	3b01      	subs	r3, #1
 8019ca2:	9307      	str	r3, [sp, #28]
 8019ca4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ca6:	3302      	adds	r3, #2
 8019ca8:	930a      	str	r3, [sp, #40]	; 0x28
 8019caa:	e66d      	b.n	8019988 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019cac:	d023      	beq.n	8019cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8019cae:	9b07      	ldr	r3, [sp, #28]
 8019cb0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8019cb2:	3b01      	subs	r3, #1
 8019cb4:	fb00 4003 	mla	r0, r0, r3, r4
 8019cb8:	1400      	asrs	r0, r0, #16
 8019cba:	f53f ae82 	bmi.w	80199c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019cbe:	3901      	subs	r1, #1
 8019cc0:	4288      	cmp	r0, r1
 8019cc2:	f6bf ae7e 	bge.w	80199c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019cc6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019cc8:	fb01 6303 	mla	r3, r1, r3, r6
 8019ccc:	141b      	asrs	r3, r3, #16
 8019cce:	f53f ae78 	bmi.w	80199c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019cd2:	3a01      	subs	r2, #1
 8019cd4:	4293      	cmp	r3, r2
 8019cd6:	f6bf ae74 	bge.w	80199c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019cda:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019cde:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019ce2:	f1bb 0f00 	cmp.w	fp, #0
 8019ce6:	dc6c      	bgt.n	8019dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8019ce8:	9b07      	ldr	r3, [sp, #28]
 8019cea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019cee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019cf0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019cf4:	930a      	str	r3, [sp, #40]	; 0x28
 8019cf6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019cf8:	2b00      	cmp	r3, #0
 8019cfa:	f340 81b3 	ble.w	801a064 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019cfe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d02:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d06:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019d0a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d0c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d10:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d14:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d18:	eef0 6a62 	vmov.f32	s13, s5
 8019d1c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d28:	ee16 4a90 	vmov	r4, s13
 8019d2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d30:	eef0 6a43 	vmov.f32	s13, s6
 8019d34:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d38:	ee12 2a90 	vmov	r2, s5
 8019d3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d40:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d44:	ee13 2a10 	vmov	r2, s6
 8019d48:	9329      	str	r3, [sp, #164]	; 0xa4
 8019d4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d50:	932a      	str	r3, [sp, #168]	; 0xa8
 8019d52:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019d54:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019d56:	3b01      	subs	r3, #1
 8019d58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8019d5e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d60:	bf08      	it	eq
 8019d62:	4613      	moveq	r3, r2
 8019d64:	ee16 6a90 	vmov	r6, s13
 8019d68:	9307      	str	r3, [sp, #28]
 8019d6a:	eeb0 3a67 	vmov.f32	s6, s15
 8019d6e:	eef0 2a47 	vmov.f32	s5, s14
 8019d72:	e5fb      	b.n	801996c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019d74:	2900      	cmp	r1, #0
 8019d76:	f43f ae6b 	beq.w	8019a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019d7a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019d7e:	9308      	str	r3, [sp, #32]
 8019d80:	0e1b      	lsrs	r3, r3, #24
 8019d82:	9311      	str	r3, [sp, #68]	; 0x44
 8019d84:	e664      	b.n	8019a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019d86:	f112 0801 	adds.w	r8, r2, #1
 8019d8a:	f53f af7b 	bmi.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019d8e:	4543      	cmp	r3, r8
 8019d90:	f6ff af78 	blt.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019d94:	f11c 0801 	adds.w	r8, ip, #1
 8019d98:	f53f af74 	bmi.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019d9c:	45c6      	cmp	lr, r8
 8019d9e:	f6ff af71 	blt.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019da2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019da4:	9201      	str	r2, [sp, #4]
 8019da6:	fa0f f28e 	sxth.w	r2, lr
 8019daa:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019dae:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019db2:	9200      	str	r2, [sp, #0]
 8019db4:	b21b      	sxth	r3, r3
 8019db6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019db8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019dba:	4639      	mov	r1, r7
 8019dbc:	f7ff fc79 	bl	80196b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019dc0:	e760      	b.n	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019dc2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019dc4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019dc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019dca:	1427      	asrs	r7, r4, #16
 8019dcc:	1433      	asrs	r3, r6, #16
 8019dce:	fb01 7303 	mla	r3, r1, r3, r7
 8019dd2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019dd6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019dda:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019dde:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019de2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019de6:	2a00      	cmp	r2, #0
 8019de8:	f000 8133 	beq.w	801a052 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8019dec:	687d      	ldr	r5, [r7, #4]
 8019dee:	950e      	str	r5, [sp, #56]	; 0x38
 8019df0:	0e2d      	lsrs	r5, r5, #24
 8019df2:	9515      	str	r5, [sp, #84]	; 0x54
 8019df4:	b178      	cbz	r0, 8019e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8019df6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019dfa:	3901      	subs	r1, #1
 8019dfc:	0089      	lsls	r1, r1, #2
 8019dfe:	3104      	adds	r1, #4
 8019e00:	eb07 0e01 	add.w	lr, r7, r1
 8019e04:	5879      	ldr	r1, [r7, r1]
 8019e06:	9109      	str	r1, [sp, #36]	; 0x24
 8019e08:	0e09      	lsrs	r1, r1, #24
 8019e0a:	9112      	str	r1, [sp, #72]	; 0x48
 8019e0c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019e10:	910f      	str	r1, [sp, #60]	; 0x3c
 8019e12:	0e09      	lsrs	r1, r1, #24
 8019e14:	9116      	str	r1, [sp, #88]	; 0x58
 8019e16:	b292      	uxth	r2, r2
 8019e18:	b280      	uxth	r0, r0
 8019e1a:	fb02 f800 	mul.w	r8, r2, r0
 8019e1e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019e22:	0112      	lsls	r2, r2, #4
 8019e24:	eba2 0e08 	sub.w	lr, r2, r8
 8019e28:	b280      	uxth	r0, r0
 8019e2a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019e2e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019e30:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e32:	fa1f fe8e 	uxth.w	lr, lr
 8019e36:	1a12      	subs	r2, r2, r0
 8019e38:	b292      	uxth	r2, r2
 8019e3a:	fb0e f101 	mul.w	r1, lr, r1
 8019e3e:	fb02 110c 	mla	r1, r2, ip, r1
 8019e42:	fb00 1105 	mla	r1, r0, r5, r1
 8019e46:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e48:	fb08 1105 	mla	r1, r8, r5, r1
 8019e4c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019e50:	2900      	cmp	r1, #0
 8019e52:	f000 80f5 	beq.w	801a040 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8019e56:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019e5a:	d019      	beq.n	8019e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8019e5c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019e60:	fb0c fa0a 	mul.w	sl, ip, sl
 8019e64:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019e68:	fb0c fc03 	mul.w	ip, ip, r3
 8019e6c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019e70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019e74:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019e78:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019e7c:	4453      	add	r3, sl
 8019e7e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019e82:	0a1b      	lsrs	r3, r3, #8
 8019e84:	0a3f      	lsrs	r7, r7, #8
 8019e86:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019e8a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019e8e:	433b      	orrs	r3, r7
 8019e90:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019e92:	2dff      	cmp	r5, #255	; 0xff
 8019e94:	d020      	beq.n	8019ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8019e96:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019e98:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019e9c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019e9e:	436f      	muls	r7, r5
 8019ea0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019ea2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019ea6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019ea8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019eac:	fb05 fa0a 	mul.w	sl, r5, sl
 8019eb0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019eb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019eb8:	44bc      	add	ip, r7
 8019eba:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019ebe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019ec2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ec6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019eca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ece:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ed2:	ea4c 050a 	orr.w	r5, ip, sl
 8019ed6:	950e      	str	r5, [sp, #56]	; 0x38
 8019ed8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019eda:	2dff      	cmp	r5, #255	; 0xff
 8019edc:	d020      	beq.n	8019f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8019ede:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019ee0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019ee4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019ee6:	436f      	muls	r7, r5
 8019ee8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019eea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019eee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019ef0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019ef4:	fb05 fa0a 	mul.w	sl, r5, sl
 8019ef8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019efc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f00:	44bc      	add	ip, r7
 8019f02:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019f06:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019f0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019f12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019f1a:	ea4c 050a 	orr.w	r5, ip, sl
 8019f1e:	9509      	str	r5, [sp, #36]	; 0x24
 8019f20:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f22:	2dff      	cmp	r5, #255	; 0xff
 8019f24:	d020      	beq.n	8019f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8019f26:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019f28:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019f2c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f2e:	436f      	muls	r7, r5
 8019f30:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019f32:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019f36:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f38:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019f3c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019f40:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019f44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f48:	44bc      	add	ip, r7
 8019f4a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019f4e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019f52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019f5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019f62:	ea4c 050a 	orr.w	r5, ip, sl
 8019f66:	950f      	str	r5, [sp, #60]	; 0x3c
 8019f68:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019f6a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019f6e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019f70:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019f74:	fb0e f707 	mul.w	r7, lr, r7
 8019f78:	fb02 770c 	mla	r7, r2, ip, r7
 8019f7c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019f80:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019f82:	fb00 770c 	mla	r7, r0, ip, r7
 8019f86:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019f8a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019f8c:	fb08 770c 	mla	r7, r8, ip, r7
 8019f90:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019f94:	fb0e fe0c 	mul.w	lr, lr, ip
 8019f98:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019f9c:	fb02 e303 	mla	r3, r2, r3, lr
 8019fa0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019fa2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019fa4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019fa8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019faa:	fb00 330a 	mla	r3, r0, sl, r3
 8019fae:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019fb2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019fb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019fb8:	f8b9 0000 	ldrh.w	r0, [r9]
 8019fbc:	4359      	muls	r1, r3
 8019fbe:	0a3f      	lsrs	r7, r7, #8
 8019fc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019fc4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019fc8:	1c4b      	adds	r3, r1, #1
 8019fca:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019fce:	ea47 070c 	orr.w	r7, r7, ip
 8019fd2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019fd6:	1202      	asrs	r2, r0, #8
 8019fd8:	0c3b      	lsrs	r3, r7, #16
 8019fda:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019fde:	b2c9      	uxtb	r1, r1
 8019fe0:	fb13 f305 	smulbb	r3, r3, r5
 8019fe4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019fe8:	fb02 3201 	mla	r2, r2, r1, r3
 8019fec:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019ff0:	10c3      	asrs	r3, r0, #3
 8019ff2:	b2ff      	uxtb	r7, r7
 8019ff4:	00c0      	lsls	r0, r0, #3
 8019ff6:	b2c0      	uxtb	r0, r0
 8019ff8:	fb17 f705 	smulbb	r7, r7, r5
 8019ffc:	fb00 7001 	mla	r0, r0, r1, r7
 801a000:	b292      	uxth	r2, r2
 801a002:	fb1c fc05 	smulbb	ip, ip, r5
 801a006:	b280      	uxth	r0, r0
 801a008:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a00c:	fb03 c301 	mla	r3, r3, r1, ip
 801a010:	1c51      	adds	r1, r2, #1
 801a012:	f100 0c01 	add.w	ip, r0, #1
 801a016:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a01a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801a01e:	b29b      	uxth	r3, r3
 801a020:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a024:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a028:	ea4c 0202 	orr.w	r2, ip, r2
 801a02c:	f103 0c01 	add.w	ip, r3, #1
 801a030:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a034:	095b      	lsrs	r3, r3, #5
 801a036:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a03a:	431a      	orrs	r2, r3
 801a03c:	f8a9 2000 	strh.w	r2, [r9]
 801a040:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a042:	441c      	add	r4, r3
 801a044:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a046:	f109 0902 	add.w	r9, r9, #2
 801a04a:	441e      	add	r6, r3
 801a04c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a050:	e647      	b.n	8019ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801a052:	2800      	cmp	r0, #0
 801a054:	f43f aedf 	beq.w	8019e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801a058:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801a05c:	9109      	str	r1, [sp, #36]	; 0x24
 801a05e:	0e09      	lsrs	r1, r1, #24
 801a060:	9112      	str	r1, [sp, #72]	; 0x48
 801a062:	e6d8      	b.n	8019e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801a064:	b01d      	add	sp, #116	; 0x74
 801a066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a06a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801a06a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a06e:	b085      	sub	sp, #20
 801a070:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801a074:	9102      	str	r1, [sp, #8]
 801a076:	2c00      	cmp	r4, #0
 801a078:	fb04 7103 	mla	r1, r4, r3, r7
 801a07c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801a080:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a084:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801a088:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801a08c:	f2c0 810c 	blt.w	801a2a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801a090:	45a6      	cmp	lr, r4
 801a092:	f340 8109 	ble.w	801a2a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801a096:	2f00      	cmp	r7, #0
 801a098:	f2c0 8104 	blt.w	801a2a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801a09c:	42bb      	cmp	r3, r7
 801a09e:	f340 8101 	ble.w	801a2a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801a0a2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801a0a6:	1c7a      	adds	r2, r7, #1
 801a0a8:	f100 8101 	bmi.w	801a2ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801a0ac:	4293      	cmp	r3, r2
 801a0ae:	f340 80fe 	ble.w	801a2ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801a0b2:	2e00      	cmp	r6, #0
 801a0b4:	f000 80fd 	beq.w	801a2b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801a0b8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801a0bc:	3401      	adds	r4, #1
 801a0be:	f100 80fc 	bmi.w	801a2ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801a0c2:	45a6      	cmp	lr, r4
 801a0c4:	f340 80f9 	ble.w	801a2ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801a0c8:	2800      	cmp	r0, #0
 801a0ca:	f000 80f9 	beq.w	801a2c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801a0ce:	2f00      	cmp	r7, #0
 801a0d0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801a0d4:	f2c0 80ef 	blt.w	801a2b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801a0d8:	42bb      	cmp	r3, r7
 801a0da:	f340 80ec 	ble.w	801a2b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801a0de:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a0e2:	3701      	adds	r7, #1
 801a0e4:	f100 80ef 	bmi.w	801a2c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801a0e8:	42bb      	cmp	r3, r7
 801a0ea:	f340 80ec 	ble.w	801a2c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801a0ee:	2e00      	cmp	r6, #0
 801a0f0:	f000 80eb 	beq.w	801a2ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801a0f4:	6852      	ldr	r2, [r2, #4]
 801a0f6:	b2b6      	uxth	r6, r6
 801a0f8:	b280      	uxth	r0, r0
 801a0fa:	fb00 fe06 	mul.w	lr, r0, r6
 801a0fe:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a102:	0136      	lsls	r6, r6, #4
 801a104:	eba6 070e 	sub.w	r7, r6, lr
 801a108:	b280      	uxth	r0, r0
 801a10a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a10e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a112:	b2bf      	uxth	r7, r7
 801a114:	1a1b      	subs	r3, r3, r0
 801a116:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a11a:	b29b      	uxth	r3, r3
 801a11c:	fb07 f60a 	mul.w	r6, r7, sl
 801a120:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a124:	fb0b 6603 	mla	r6, fp, r3, r6
 801a128:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a12c:	fb00 6609 	mla	r6, r0, r9, r6
 801a130:	fb0e 6608 	mla	r6, lr, r8, r6
 801a134:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a138:	9600      	str	r6, [sp, #0]
 801a13a:	2e00      	cmp	r6, #0
 801a13c:	f000 80af 	beq.w	801a29e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801a140:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a144:	fb0b fc0c 	mul.w	ip, fp, ip
 801a148:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a14c:	fb0b f505 	mul.w	r5, fp, r5
 801a150:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a154:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801a158:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a15c:	44dc      	add	ip, fp
 801a15e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a162:	9501      	str	r5, [sp, #4]
 801a164:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801a168:	9503      	str	r5, [sp, #12]
 801a16a:	9d01      	ldr	r5, [sp, #4]
 801a16c:	9e02      	ldr	r6, [sp, #8]
 801a16e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a172:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a176:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801a17a:	fb0a fc0c 	mul.w	ip, sl, ip
 801a17e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a182:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a186:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a18a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a18e:	4465      	add	r5, ip
 801a190:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a194:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a198:	fb09 fc0c 	mul.w	ip, r9, ip
 801a19c:	fb09 f904 	mul.w	r9, r9, r4
 801a1a0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801a1a4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a1a8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801a1ac:	fb08 f404 	mul.w	r4, r8, r4
 801a1b0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a1b4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a1b8:	fb08 f802 	mul.w	r8, r8, r2
 801a1bc:	fb0a fa01 	mul.w	sl, sl, r1
 801a1c0:	0a22      	lsrs	r2, r4, #8
 801a1c2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801a1c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a1ca:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801a1ce:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a1d2:	4414      	add	r4, r2
 801a1d4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a1d8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801a1dc:	0a2d      	lsrs	r5, r5, #8
 801a1de:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a1e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a1e6:	9a03      	ldr	r2, [sp, #12]
 801a1e8:	8836      	ldrh	r6, [r6, #0]
 801a1ea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a1ee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a1f2:	437d      	muls	r5, r7
 801a1f4:	4461      	add	r1, ip
 801a1f6:	0a24      	lsrs	r4, r4, #8
 801a1f8:	fb02 5503 	mla	r5, r2, r3, r5
 801a1fc:	0a09      	lsrs	r1, r1, #8
 801a1fe:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a202:	fb04 540e 	mla	r4, r4, lr, r5
 801a206:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a20a:	fb01 4100 	mla	r1, r1, r0, r4
 801a20e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a212:	0a09      	lsrs	r1, r1, #8
 801a214:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a218:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801a21c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a220:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801a224:	fb07 f70a 	mul.w	r7, r7, sl
 801a228:	fb03 7101 	mla	r1, r3, r1, r7
 801a22c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a230:	9b00      	ldr	r3, [sp, #0]
 801a232:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a236:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a23a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801a23e:	fb00 e101 	mla	r1, r0, r1, lr
 801a242:	43da      	mvns	r2, r3
 801a244:	1233      	asrs	r3, r6, #8
 801a246:	b2d2      	uxtb	r2, r2
 801a248:	10f0      	asrs	r0, r6, #3
 801a24a:	0a09      	lsrs	r1, r1, #8
 801a24c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a250:	00f6      	lsls	r6, r6, #3
 801a252:	4353      	muls	r3, r2
 801a254:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a258:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a25c:	b2f6      	uxtb	r6, r6
 801a25e:	4321      	orrs	r1, r4
 801a260:	4350      	muls	r0, r2
 801a262:	4356      	muls	r6, r2
 801a264:	1c5a      	adds	r2, r3, #1
 801a266:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a26a:	0c0b      	lsrs	r3, r1, #16
 801a26c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a270:	1c42      	adds	r2, r0, #1
 801a272:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a276:	0a0a      	lsrs	r2, r1, #8
 801a278:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a27c:	021b      	lsls	r3, r3, #8
 801a27e:	00d2      	lsls	r2, r2, #3
 801a280:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a284:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a288:	4313      	orrs	r3, r2
 801a28a:	1c72      	adds	r2, r6, #1
 801a28c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a290:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801a294:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801a298:	4319      	orrs	r1, r3
 801a29a:	9b02      	ldr	r3, [sp, #8]
 801a29c:	8019      	strh	r1, [r3, #0]
 801a29e:	b005      	add	sp, #20
 801a2a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2a4:	2500      	movs	r5, #0
 801a2a6:	e6fe      	b.n	801a0a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801a2a8:	2100      	movs	r1, #0
 801a2aa:	460d      	mov	r5, r1
 801a2ac:	e706      	b.n	801a0bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801a2ae:	2100      	movs	r1, #0
 801a2b0:	e704      	b.n	801a0bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801a2b2:	4631      	mov	r1, r6
 801a2b4:	e702      	b.n	801a0bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801a2b6:	2400      	movs	r4, #0
 801a2b8:	e713      	b.n	801a0e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801a2ba:	2200      	movs	r2, #0
 801a2bc:	4614      	mov	r4, r2
 801a2be:	e71a      	b.n	801a0f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a2c0:	4602      	mov	r2, r0
 801a2c2:	4604      	mov	r4, r0
 801a2c4:	e717      	b.n	801a0f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a2c6:	2200      	movs	r2, #0
 801a2c8:	e715      	b.n	801a0f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a2ca:	4632      	mov	r2, r6
 801a2cc:	e713      	b.n	801a0f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801a2d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2d4:	b09b      	sub	sp, #108	; 0x6c
 801a2d6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801a2da:	9218      	str	r2, [sp, #96]	; 0x60
 801a2dc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a2de:	9116      	str	r1, [sp, #88]	; 0x58
 801a2e0:	9307      	str	r3, [sp, #28]
 801a2e2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801a2e6:	9019      	str	r0, [sp, #100]	; 0x64
 801a2e8:	6850      	ldr	r0, [r2, #4]
 801a2ea:	6812      	ldr	r2, [r2, #0]
 801a2ec:	fb00 1303 	mla	r3, r0, r3, r1
 801a2f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a2f4:	930a      	str	r3, [sp, #40]	; 0x28
 801a2f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a2f8:	681b      	ldr	r3, [r3, #0]
 801a2fa:	930f      	str	r3, [sp, #60]	; 0x3c
 801a2fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a2fe:	2b00      	cmp	r3, #0
 801a300:	dc03      	bgt.n	801a30a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a302:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a304:	2b00      	cmp	r3, #0
 801a306:	f340 8386 	ble.w	801aa16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801a30a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a30c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a310:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a314:	1e48      	subs	r0, r1, #1
 801a316:	1e57      	subs	r7, r2, #1
 801a318:	9b07      	ldr	r3, [sp, #28]
 801a31a:	2b00      	cmp	r3, #0
 801a31c:	f340 8166 	ble.w	801a5ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a320:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a324:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a328:	d406      	bmi.n	801a338 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a32a:	4584      	cmp	ip, r0
 801a32c:	da04      	bge.n	801a338 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a32e:	2b00      	cmp	r3, #0
 801a330:	db02      	blt.n	801a338 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a332:	42bb      	cmp	r3, r7
 801a334:	f2c0 815b 	blt.w	801a5ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a338:	f11c 0c01 	adds.w	ip, ip, #1
 801a33c:	f100 814b 	bmi.w	801a5d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801a340:	4561      	cmp	r1, ip
 801a342:	f2c0 8148 	blt.w	801a5d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801a346:	3301      	adds	r3, #1
 801a348:	f100 8145 	bmi.w	801a5d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801a34c:	429a      	cmp	r2, r3
 801a34e:	f2c0 8142 	blt.w	801a5d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801a352:	9b07      	ldr	r3, [sp, #28]
 801a354:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a356:	9317      	str	r3, [sp, #92]	; 0x5c
 801a358:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a35a:	2b00      	cmp	r3, #0
 801a35c:	f340 8165 	ble.w	801a62a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a360:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801a362:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a364:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a368:	689b      	ldr	r3, [r3, #8]
 801a36a:	1422      	asrs	r2, r4, #16
 801a36c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a370:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a374:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a378:	f100 81d5 	bmi.w	801a726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801a37c:	f103 38ff 	add.w	r8, r3, #4294967295
 801a380:	4542      	cmp	r2, r8
 801a382:	f280 81d0 	bge.w	801a726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801a386:	f1bc 0f00 	cmp.w	ip, #0
 801a38a:	f2c0 81cc 	blt.w	801a726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801a38e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a392:	45c4      	cmp	ip, r8
 801a394:	f280 81c7 	bge.w	801a726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801a398:	b21b      	sxth	r3, r3
 801a39a:	fb0c 2203 	mla	r2, ip, r3, r2
 801a39e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a3a0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a3a4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a3a8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a3ac:	2900      	cmp	r1, #0
 801a3ae:	f000 8182 	beq.w	801a6b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a3b2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a3b6:	950b      	str	r5, [sp, #44]	; 0x2c
 801a3b8:	0e2d      	lsrs	r5, r5, #24
 801a3ba:	9512      	str	r5, [sp, #72]	; 0x48
 801a3bc:	b180      	cbz	r0, 801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801a3be:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a3c2:	3b01      	subs	r3, #1
 801a3c4:	009b      	lsls	r3, r3, #2
 801a3c6:	3304      	adds	r3, #4
 801a3c8:	eb08 0c03 	add.w	ip, r8, r3
 801a3cc:	f858 3003 	ldr.w	r3, [r8, r3]
 801a3d0:	9308      	str	r3, [sp, #32]
 801a3d2:	0e1b      	lsrs	r3, r3, #24
 801a3d4:	9310      	str	r3, [sp, #64]	; 0x40
 801a3d6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a3da:	930c      	str	r3, [sp, #48]	; 0x30
 801a3dc:	0e1b      	lsrs	r3, r3, #24
 801a3de:	9313      	str	r3, [sp, #76]	; 0x4c
 801a3e0:	b289      	uxth	r1, r1
 801a3e2:	b280      	uxth	r0, r0
 801a3e4:	fb01 f900 	mul.w	r9, r1, r0
 801a3e8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a3ec:	0109      	lsls	r1, r1, #4
 801a3ee:	eba1 0809 	sub.w	r8, r1, r9
 801a3f2:	b280      	uxth	r0, r0
 801a3f4:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801a3f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a3fa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a3fc:	fa1f f888 	uxth.w	r8, r8
 801a400:	1a09      	subs	r1, r1, r0
 801a402:	b289      	uxth	r1, r1
 801a404:	fb08 f303 	mul.w	r3, r8, r3
 801a408:	fb01 330e 	mla	r3, r1, lr, r3
 801a40c:	fb00 3305 	mla	r3, r0, r5, r3
 801a410:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a412:	fb09 3305 	mla	r3, r9, r5, r3
 801a416:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a41a:	2b00      	cmp	r3, #0
 801a41c:	f000 80d2 	beq.w	801a5c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a420:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a424:	d01b      	beq.n	801a45e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801a426:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a42a:	fb0e fa0a 	mul.w	sl, lr, sl
 801a42e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a432:	fb0e fe02 	mul.w	lr, lr, r2
 801a436:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a43a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a43e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a442:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a446:	4452      	add	r2, sl
 801a448:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a44c:	0a12      	lsrs	r2, r2, #8
 801a44e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a452:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a456:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a45a:	ea42 020c 	orr.w	r2, r2, ip
 801a45e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a460:	2dff      	cmp	r5, #255	; 0xff
 801a462:	d021      	beq.n	801a4a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801a464:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a466:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a46a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a46c:	fb05 fb0b 	mul.w	fp, r5, fp
 801a470:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a472:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a476:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a478:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a47c:	fb05 fa0a 	mul.w	sl, r5, sl
 801a480:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a484:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a488:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a48c:	44de      	add	lr, fp
 801a48e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a492:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a496:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a49a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a49e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4a2:	ea4e 050a 	orr.w	r5, lr, sl
 801a4a6:	950b      	str	r5, [sp, #44]	; 0x2c
 801a4a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a4aa:	2dff      	cmp	r5, #255	; 0xff
 801a4ac:	d021      	beq.n	801a4f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801a4ae:	9d08      	ldr	r5, [sp, #32]
 801a4b0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a4b4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a4b6:	fb05 fb0b 	mul.w	fp, r5, fp
 801a4ba:	9d08      	ldr	r5, [sp, #32]
 801a4bc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a4c0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a4c2:	fb05 fa0e 	mul.w	sl, r5, lr
 801a4c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a4ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a4d2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a4d6:	44de      	add	lr, fp
 801a4d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a4dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a4e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a4e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4ec:	ea4e 050a 	orr.w	r5, lr, sl
 801a4f0:	9508      	str	r5, [sp, #32]
 801a4f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a4f4:	2dff      	cmp	r5, #255	; 0xff
 801a4f6:	d021      	beq.n	801a53c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801a4f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a4fa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a4fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a500:	fb05 fb0b 	mul.w	fp, r5, fp
 801a504:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a506:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a50a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a50c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a510:	fb05 fa0a 	mul.w	sl, r5, sl
 801a514:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a518:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a51c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a520:	44de      	add	lr, fp
 801a522:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a526:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a52a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a52e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a532:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a536:	ea4e 050a 	orr.w	r5, lr, sl
 801a53a:	950c      	str	r5, [sp, #48]	; 0x30
 801a53c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a53e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a542:	9d08      	ldr	r5, [sp, #32]
 801a544:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a548:	fb08 fc0c 	mul.w	ip, r8, ip
 801a54c:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a550:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a554:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a556:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a55a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a55e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a560:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a564:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a568:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a56c:	fb08 f80e 	mul.w	r8, r8, lr
 801a570:	fb01 8202 	mla	r2, r1, r2, r8
 801a574:	9908      	ldr	r1, [sp, #32]
 801a576:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a57a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a57c:	fb00 220a 	mla	r2, r0, sl, r2
 801a580:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a584:	fb09 2900 	mla	r9, r9, r0, r2
 801a588:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a58c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a590:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a594:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a598:	ea4c 0c09 	orr.w	ip, ip, r9
 801a59c:	2bff      	cmp	r3, #255	; 0xff
 801a59e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801a5a2:	f040 8091 	bne.w	801a6c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801a5a6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a5aa:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a5ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a5b2:	f022 0207 	bic.w	r2, r2, #7
 801a5b6:	431a      	orrs	r2, r3
 801a5b8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a5bc:	ea4c 0c02 	orr.w	ip, ip, r2
 801a5c0:	f8a7 c000 	strh.w	ip, [r7]
 801a5c4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a5c6:	441c      	add	r4, r3
 801a5c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a5ca:	441e      	add	r6, r3
 801a5cc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a5ce:	3b01      	subs	r3, #1
 801a5d0:	3702      	adds	r7, #2
 801a5d2:	9317      	str	r3, [sp, #92]	; 0x5c
 801a5d4:	e6c0      	b.n	801a358 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a5d6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a5d8:	441c      	add	r4, r3
 801a5da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a5dc:	441e      	add	r6, r3
 801a5de:	9b07      	ldr	r3, [sp, #28]
 801a5e0:	3b01      	subs	r3, #1
 801a5e2:	9307      	str	r3, [sp, #28]
 801a5e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5e6:	3302      	adds	r3, #2
 801a5e8:	930a      	str	r3, [sp, #40]	; 0x28
 801a5ea:	e695      	b.n	801a318 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a5ec:	d024      	beq.n	801a638 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801a5ee:	9b07      	ldr	r3, [sp, #28]
 801a5f0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a5f2:	3b01      	subs	r3, #1
 801a5f4:	fb00 4003 	mla	r0, r0, r3, r4
 801a5f8:	1400      	asrs	r0, r0, #16
 801a5fa:	f53f aeaa 	bmi.w	801a352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a5fe:	3901      	subs	r1, #1
 801a600:	4288      	cmp	r0, r1
 801a602:	f6bf aea6 	bge.w	801a352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a606:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a608:	fb01 6303 	mla	r3, r1, r3, r6
 801a60c:	141b      	asrs	r3, r3, #16
 801a60e:	f53f aea0 	bmi.w	801a352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a612:	3a01      	subs	r2, #1
 801a614:	4293      	cmp	r3, r2
 801a616:	f6bf ae9c 	bge.w	801a352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a61a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a61e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a622:	f1bb 0f00 	cmp.w	fp, #0
 801a626:	f300 809a 	bgt.w	801a75e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801a62a:	9b07      	ldr	r3, [sp, #28]
 801a62c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a630:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a632:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a636:	930a      	str	r3, [sp, #40]	; 0x28
 801a638:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a63a:	2b00      	cmp	r3, #0
 801a63c:	f340 81eb 	ble.w	801aa16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801a640:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a644:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a648:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a64c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a64e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a652:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a656:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a65a:	eef0 6a62 	vmov.f32	s13, s5
 801a65e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a662:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a666:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a66a:	ee16 4a90 	vmov	r4, s13
 801a66e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a672:	eef0 6a43 	vmov.f32	s13, s6
 801a676:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a67a:	ee12 2a90 	vmov	r2, s5
 801a67e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a682:	fb92 f3f3 	sdiv	r3, r2, r3
 801a686:	ee13 2a10 	vmov	r2, s6
 801a68a:	9327      	str	r3, [sp, #156]	; 0x9c
 801a68c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a68e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a692:	9328      	str	r3, [sp, #160]	; 0xa0
 801a694:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a696:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a698:	3b01      	subs	r3, #1
 801a69a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a69e:	9316      	str	r3, [sp, #88]	; 0x58
 801a6a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a6a2:	bf08      	it	eq
 801a6a4:	4613      	moveq	r3, r2
 801a6a6:	ee16 6a90 	vmov	r6, s13
 801a6aa:	9307      	str	r3, [sp, #28]
 801a6ac:	eeb0 3a67 	vmov.f32	s6, s15
 801a6b0:	eef0 2a47 	vmov.f32	s5, s14
 801a6b4:	e622      	b.n	801a2fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801a6b6:	2800      	cmp	r0, #0
 801a6b8:	f43f ae92 	beq.w	801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801a6bc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a6c0:	9308      	str	r3, [sp, #32]
 801a6c2:	0e1b      	lsrs	r3, r3, #24
 801a6c4:	9310      	str	r3, [sp, #64]	; 0x40
 801a6c6:	e68b      	b.n	801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801a6c8:	8839      	ldrh	r1, [r7, #0]
 801a6ca:	4dd4      	ldr	r5, [pc, #848]	; (801aa1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801a6cc:	43db      	mvns	r3, r3
 801a6ce:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a6d2:	fa5f f883 	uxtb.w	r8, r3
 801a6d6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a6da:	fb0e fe08 	mul.w	lr, lr, r8
 801a6de:	10c8      	asrs	r0, r1, #3
 801a6e0:	00cb      	lsls	r3, r1, #3
 801a6e2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a6e6:	f10e 0101 	add.w	r1, lr, #1
 801a6ea:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801a6ee:	fb00 f008 	mul.w	r0, r0, r8
 801a6f2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a6f6:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a6fa:	f100 0e01 	add.w	lr, r0, #1
 801a6fe:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a702:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a706:	b2db      	uxtb	r3, r3
 801a708:	b2c9      	uxtb	r1, r1
 801a70a:	00d2      	lsls	r2, r2, #3
 801a70c:	fb03 f308 	mul.w	r3, r3, r8
 801a710:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801a714:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a718:	430a      	orrs	r2, r1
 801a71a:	1c59      	adds	r1, r3, #1
 801a71c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a720:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a724:	e748      	b.n	801a5b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801a726:	f112 0801 	adds.w	r8, r2, #1
 801a72a:	f53f af4b 	bmi.w	801a5c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a72e:	4543      	cmp	r3, r8
 801a730:	f6ff af48 	blt.w	801a5c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a734:	f11c 0801 	adds.w	r8, ip, #1
 801a738:	f53f af44 	bmi.w	801a5c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a73c:	45c6      	cmp	lr, r8
 801a73e:	f6ff af41 	blt.w	801a5c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a742:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a746:	fa0f f28e 	sxth.w	r2, lr
 801a74a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a74e:	9200      	str	r2, [sp, #0]
 801a750:	b21b      	sxth	r3, r3
 801a752:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a754:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a756:	4639      	mov	r1, r7
 801a758:	f7ff fc87 	bl	801a06a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a75c:	e732      	b.n	801a5c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a75e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a760:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a762:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a766:	1421      	asrs	r1, r4, #16
 801a768:	1433      	asrs	r3, r6, #16
 801a76a:	fb07 1303 	mla	r3, r7, r3, r1
 801a76e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a770:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a774:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a778:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a77c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a780:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a784:	2a00      	cmp	r2, #0
 801a786:	f000 8107 	beq.w	801a998 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801a78a:	684d      	ldr	r5, [r1, #4]
 801a78c:	950d      	str	r5, [sp, #52]	; 0x34
 801a78e:	0e2d      	lsrs	r5, r5, #24
 801a790:	9514      	str	r5, [sp, #80]	; 0x50
 801a792:	b178      	cbz	r0, 801a7b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a794:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a798:	3f01      	subs	r7, #1
 801a79a:	00bf      	lsls	r7, r7, #2
 801a79c:	3704      	adds	r7, #4
 801a79e:	eb01 0e07 	add.w	lr, r1, r7
 801a7a2:	59c9      	ldr	r1, [r1, r7]
 801a7a4:	9109      	str	r1, [sp, #36]	; 0x24
 801a7a6:	0e09      	lsrs	r1, r1, #24
 801a7a8:	9111      	str	r1, [sp, #68]	; 0x44
 801a7aa:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a7ae:	910e      	str	r1, [sp, #56]	; 0x38
 801a7b0:	0e09      	lsrs	r1, r1, #24
 801a7b2:	9115      	str	r1, [sp, #84]	; 0x54
 801a7b4:	b292      	uxth	r2, r2
 801a7b6:	b280      	uxth	r0, r0
 801a7b8:	fb02 f900 	mul.w	r9, r2, r0
 801a7bc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a7c0:	0112      	lsls	r2, r2, #4
 801a7c2:	eba2 0e09 	sub.w	lr, r2, r9
 801a7c6:	b280      	uxth	r0, r0
 801a7c8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a7cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a7ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a7d0:	fa1f fe8e 	uxth.w	lr, lr
 801a7d4:	1a09      	subs	r1, r1, r0
 801a7d6:	b289      	uxth	r1, r1
 801a7d8:	fb0e f202 	mul.w	r2, lr, r2
 801a7dc:	fb01 220c 	mla	r2, r1, ip, r2
 801a7e0:	fb00 2205 	mla	r2, r0, r5, r2
 801a7e4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a7e6:	fb09 2205 	mla	r2, r9, r5, r2
 801a7ea:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a7ee:	2a00      	cmp	r2, #0
 801a7f0:	f000 80c9 	beq.w	801a986 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801a7f4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a7f8:	d019      	beq.n	801a82e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801a7fa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a7fe:	fb0c fa0a 	mul.w	sl, ip, sl
 801a802:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a806:	fb0c fc03 	mul.w	ip, ip, r3
 801a80a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a80e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a812:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a816:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a81a:	4453      	add	r3, sl
 801a81c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a820:	0a1b      	lsrs	r3, r3, #8
 801a822:	0a3f      	lsrs	r7, r7, #8
 801a824:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a828:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a82c:	433b      	orrs	r3, r7
 801a82e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a830:	2dff      	cmp	r5, #255	; 0xff
 801a832:	d020      	beq.n	801a876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801a834:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a836:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a83a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a83c:	436f      	muls	r7, r5
 801a83e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a840:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a844:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a846:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a84a:	fb05 fa0a 	mul.w	sl, r5, sl
 801a84e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a852:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a856:	44bc      	add	ip, r7
 801a858:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a85c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a860:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a864:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a868:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a86c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a870:	ea4c 050a 	orr.w	r5, ip, sl
 801a874:	950d      	str	r5, [sp, #52]	; 0x34
 801a876:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a878:	2dff      	cmp	r5, #255	; 0xff
 801a87a:	d020      	beq.n	801a8be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801a87c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a87e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a882:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a884:	436f      	muls	r7, r5
 801a886:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a888:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a88c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a88e:	fb05 fa0c 	mul.w	sl, r5, ip
 801a892:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a896:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a89a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a89e:	44bc      	add	ip, r7
 801a8a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a8a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a8a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a8b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a8b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a8b8:	ea4c 050a 	orr.w	r5, ip, sl
 801a8bc:	9509      	str	r5, [sp, #36]	; 0x24
 801a8be:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a8c0:	2dff      	cmp	r5, #255	; 0xff
 801a8c2:	d020      	beq.n	801a906 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801a8c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a8c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a8ca:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a8cc:	436f      	muls	r7, r5
 801a8ce:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a8d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a8d4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a8d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a8da:	fb05 fa0a 	mul.w	sl, r5, sl
 801a8de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a8e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a8e6:	44bc      	add	ip, r7
 801a8e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a8ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a8f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a8f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a8fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a900:	ea4c 050a 	orr.w	r5, ip, sl
 801a904:	950e      	str	r5, [sp, #56]	; 0x38
 801a906:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a908:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a90c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a90e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a912:	fb0e f707 	mul.w	r7, lr, r7
 801a916:	fb01 770c 	mla	r7, r1, ip, r7
 801a91a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a91e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a920:	fb00 770c 	mla	r7, r0, ip, r7
 801a924:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a928:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a92a:	fb09 770c 	mla	r7, r9, ip, r7
 801a92e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a932:	fb0e fe0c 	mul.w	lr, lr, ip
 801a936:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a93a:	fb01 e303 	mla	r3, r1, r3, lr
 801a93e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a940:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a944:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a946:	fb00 330a 	mla	r3, r0, sl, r3
 801a94a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a94e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a952:	0a3f      	lsrs	r7, r7, #8
 801a954:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a958:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a95c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a960:	ea47 070c 	orr.w	r7, r7, ip
 801a964:	2aff      	cmp	r2, #255	; 0xff
 801a966:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801a96a:	d11e      	bne.n	801a9aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a96c:	097a      	lsrs	r2, r7, #5
 801a96e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a972:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a976:	f023 0307 	bic.w	r3, r3, #7
 801a97a:	4313      	orrs	r3, r2
 801a97c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a980:	431f      	orrs	r7, r3
 801a982:	f8a8 7000 	strh.w	r7, [r8]
 801a986:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a988:	441c      	add	r4, r3
 801a98a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a98c:	f108 0802 	add.w	r8, r8, #2
 801a990:	441e      	add	r6, r3
 801a992:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a996:	e644      	b.n	801a622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801a998:	2800      	cmp	r0, #0
 801a99a:	f43f af0b 	beq.w	801a7b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a99e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a9a2:	9109      	str	r1, [sp, #36]	; 0x24
 801a9a4:	0e09      	lsrs	r1, r1, #24
 801a9a6:	9111      	str	r1, [sp, #68]	; 0x44
 801a9a8:	e704      	b.n	801a7b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a9aa:	f8b8 1000 	ldrh.w	r1, [r8]
 801a9ae:	43d2      	mvns	r2, r2
 801a9b0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a9b4:	fa5f fe82 	uxtb.w	lr, r2
 801a9b8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a9bc:	fb0c fc0e 	mul.w	ip, ip, lr
 801a9c0:	10c8      	asrs	r0, r1, #3
 801a9c2:	00ca      	lsls	r2, r1, #3
 801a9c4:	f10c 0101 	add.w	r1, ip, #1
 801a9c8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a9cc:	0c39      	lsrs	r1, r7, #16
 801a9ce:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a9d2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a9d6:	4911      	ldr	r1, [pc, #68]	; (801aa1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801a9d8:	fb00 f00e 	mul.w	r0, r0, lr
 801a9dc:	fa5f fc8c 	uxtb.w	ip, ip
 801a9e0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a9e4:	b2d2      	uxtb	r2, r2
 801a9e6:	1c41      	adds	r1, r0, #1
 801a9e8:	fb02 f20e 	mul.w	r2, r2, lr
 801a9ec:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a9f0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a9f4:	1c51      	adds	r1, r2, #1
 801a9f6:	00c0      	lsls	r0, r0, #3
 801a9f8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a9fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aa00:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801aa04:	ea4c 0c00 	orr.w	ip, ip, r0
 801aa08:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801aa0c:	ea47 0c0c 	orr.w	ip, r7, ip
 801aa10:	f8a8 c000 	strh.w	ip, [r8]
 801aa14:	e7b7      	b.n	801a986 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801aa16:	b01b      	add	sp, #108	; 0x6c
 801aa18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa1c:	fffff800 	.word	0xfffff800

0801aa20 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801aa20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aa24:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801aa28:	2d00      	cmp	r5, #0
 801aa2a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801aa2e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801aa32:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801aa36:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801aa3a:	fb05 0e03 	mla	lr, r5, r3, r0
 801aa3e:	f2c0 808c 	blt.w	801ab5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801aa42:	45a9      	cmp	r9, r5
 801aa44:	f340 8089 	ble.w	801ab5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801aa48:	2800      	cmp	r0, #0
 801aa4a:	f2c0 8084 	blt.w	801ab56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801aa4e:	4580      	cmp	r8, r0
 801aa50:	f340 8081 	ble.w	801ab56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801aa54:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801aa58:	f01e 0f01 	tst.w	lr, #1
 801aa5c:	5d16      	ldrb	r6, [r2, r4]
 801aa5e:	bf0c      	ite	eq
 801aa60:	f006 060f 	andeq.w	r6, r6, #15
 801aa64:	1136      	asrne	r6, r6, #4
 801aa66:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801aa6a:	b2f6      	uxtb	r6, r6
 801aa6c:	1c44      	adds	r4, r0, #1
 801aa6e:	d477      	bmi.n	801ab60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801aa70:	45a0      	cmp	r8, r4
 801aa72:	dd75      	ble.n	801ab60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801aa74:	2f00      	cmp	r7, #0
 801aa76:	d075      	beq.n	801ab64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801aa78:	f10e 0a01 	add.w	sl, lr, #1
 801aa7c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801aa80:	f01a 0f01 	tst.w	sl, #1
 801aa84:	5d14      	ldrb	r4, [r2, r4]
 801aa86:	bf0c      	ite	eq
 801aa88:	f004 040f 	andeq.w	r4, r4, #15
 801aa8c:	1124      	asrne	r4, r4, #4
 801aa8e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801aa92:	b2e4      	uxtb	r4, r4
 801aa94:	3501      	adds	r5, #1
 801aa96:	d469      	bmi.n	801ab6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801aa98:	45a9      	cmp	r9, r5
 801aa9a:	dd67      	ble.n	801ab6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801aa9c:	f1bc 0f00 	cmp.w	ip, #0
 801aaa0:	d067      	beq.n	801ab72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801aaa2:	2800      	cmp	r0, #0
 801aaa4:	db60      	blt.n	801ab68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801aaa6:	4580      	cmp	r8, r0
 801aaa8:	dd5e      	ble.n	801ab68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801aaaa:	eb03 090e 	add.w	r9, r3, lr
 801aaae:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801aab2:	f019 0f01 	tst.w	r9, #1
 801aab6:	5d55      	ldrb	r5, [r2, r5]
 801aab8:	bf0c      	ite	eq
 801aaba:	f005 050f 	andeq.w	r5, r5, #15
 801aabe:	112d      	asrne	r5, r5, #4
 801aac0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801aac4:	b2ed      	uxtb	r5, r5
 801aac6:	3001      	adds	r0, #1
 801aac8:	d456      	bmi.n	801ab78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801aaca:	4580      	cmp	r8, r0
 801aacc:	dd54      	ble.n	801ab78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801aace:	2f00      	cmp	r7, #0
 801aad0:	d054      	beq.n	801ab7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801aad2:	3301      	adds	r3, #1
 801aad4:	449e      	add	lr, r3
 801aad6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801aada:	f01e 0f01 	tst.w	lr, #1
 801aade:	5cd0      	ldrb	r0, [r2, r3]
 801aae0:	bf0c      	ite	eq
 801aae2:	f000 000f 	andeq.w	r0, r0, #15
 801aae6:	1100      	asrne	r0, r0, #4
 801aae8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801aaec:	b2c3      	uxtb	r3, r0
 801aaee:	b2ba      	uxth	r2, r7
 801aaf0:	fa1f fc8c 	uxth.w	ip, ip
 801aaf4:	fb02 f00c 	mul.w	r0, r2, ip
 801aaf8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801aafc:	0112      	lsls	r2, r2, #4
 801aafe:	fa1f fc8c 	uxth.w	ip, ip
 801ab02:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801ab06:	1a12      	subs	r2, r2, r0
 801ab08:	eba7 070c 	sub.w	r7, r7, ip
 801ab0c:	b292      	uxth	r2, r2
 801ab0e:	b2bf      	uxth	r7, r7
 801ab10:	4362      	muls	r2, r4
 801ab12:	fb06 2207 	mla	r2, r6, r7, r2
 801ab16:	fb0c 2505 	mla	r5, ip, r5, r2
 801ab1a:	fb00 5303 	mla	r3, r0, r3, r5
 801ab1e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ab22:	b1b3      	cbz	r3, 801ab52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801ab24:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ab28:	435a      	muls	r2, r3
 801ab2a:	1c53      	adds	r3, r2, #1
 801ab2c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ab30:	4a2d      	ldr	r2, [pc, #180]	; (801abe8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801ab32:	121b      	asrs	r3, r3, #8
 801ab34:	6812      	ldr	r2, [r2, #0]
 801ab36:	2bff      	cmp	r3, #255	; 0xff
 801ab38:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ab3c:	d120      	bne.n	801ab80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801ab3e:	4b2b      	ldr	r3, [pc, #172]	; (801abec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801ab40:	0950      	lsrs	r0, r2, #5
 801ab42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ab46:	4033      	ands	r3, r6
 801ab48:	4318      	orrs	r0, r3
 801ab4a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ab4e:	4302      	orrs	r2, r0
 801ab50:	800a      	strh	r2, [r1, #0]
 801ab52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab56:	2600      	movs	r6, #0
 801ab58:	e788      	b.n	801aa6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801ab5a:	2400      	movs	r4, #0
 801ab5c:	4626      	mov	r6, r4
 801ab5e:	e799      	b.n	801aa94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ab60:	2400      	movs	r4, #0
 801ab62:	e797      	b.n	801aa94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ab64:	463c      	mov	r4, r7
 801ab66:	e795      	b.n	801aa94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ab68:	2500      	movs	r5, #0
 801ab6a:	e7ac      	b.n	801aac6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801ab6c:	2300      	movs	r3, #0
 801ab6e:	461d      	mov	r5, r3
 801ab70:	e7bd      	b.n	801aaee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ab72:	4663      	mov	r3, ip
 801ab74:	4665      	mov	r5, ip
 801ab76:	e7ba      	b.n	801aaee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ab78:	2300      	movs	r3, #0
 801ab7a:	e7b8      	b.n	801aaee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ab7c:	463b      	mov	r3, r7
 801ab7e:	e7b6      	b.n	801aaee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ab80:	880d      	ldrh	r5, [r1, #0]
 801ab82:	b29f      	uxth	r7, r3
 801ab84:	122c      	asrs	r4, r5, #8
 801ab86:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801ab8a:	43db      	mvns	r3, r3
 801ab8c:	b2db      	uxtb	r3, r3
 801ab8e:	fb10 f007 	smulbb	r0, r0, r7
 801ab92:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ab96:	fb04 0403 	mla	r4, r4, r3, r0
 801ab9a:	b2f6      	uxtb	r6, r6
 801ab9c:	10e8      	asrs	r0, r5, #3
 801ab9e:	b2d2      	uxtb	r2, r2
 801aba0:	00ed      	lsls	r5, r5, #3
 801aba2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801aba6:	fb12 f207 	smulbb	r2, r2, r7
 801abaa:	fb16 f607 	smulbb	r6, r6, r7
 801abae:	b2ed      	uxtb	r5, r5
 801abb0:	b2a4      	uxth	r4, r4
 801abb2:	fb00 6603 	mla	r6, r0, r3, r6
 801abb6:	fb05 2303 	mla	r3, r5, r3, r2
 801abba:	b29a      	uxth	r2, r3
 801abbc:	1c63      	adds	r3, r4, #1
 801abbe:	b2b0      	uxth	r0, r6
 801abc0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801abc4:	1c53      	adds	r3, r2, #1
 801abc6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801abca:	1c42      	adds	r2, r0, #1
 801abcc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801abd0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801abd4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801abd8:	0940      	lsrs	r0, r0, #5
 801abda:	4323      	orrs	r3, r4
 801abdc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801abe0:	4303      	orrs	r3, r0
 801abe2:	800b      	strh	r3, [r1, #0]
 801abe4:	e7b5      	b.n	801ab52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801abe6:	bf00      	nop
 801abe8:	20017758 	.word	0x20017758
 801abec:	00fff800 	.word	0x00fff800

0801abf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abf4:	b097      	sub	sp, #92	; 0x5c
 801abf6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801abfa:	9214      	str	r2, [sp, #80]	; 0x50
 801abfc:	9309      	str	r3, [sp, #36]	; 0x24
 801abfe:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ac00:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ac04:	910d      	str	r1, [sp, #52]	; 0x34
 801ac06:	930f      	str	r3, [sp, #60]	; 0x3c
 801ac08:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801ac0c:	9015      	str	r0, [sp, #84]	; 0x54
 801ac0e:	6850      	ldr	r0, [r2, #4]
 801ac10:	6812      	ldr	r2, [r2, #0]
 801ac12:	fb00 1303 	mla	r3, r0, r3, r1
 801ac16:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ac1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ac1c:	689b      	ldr	r3, [r3, #8]
 801ac1e:	3301      	adds	r3, #1
 801ac20:	f023 0301 	bic.w	r3, r3, #1
 801ac24:	930a      	str	r3, [sp, #40]	; 0x28
 801ac26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ac28:	681f      	ldr	r7, [r3, #0]
 801ac2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ac2c:	2b00      	cmp	r3, #0
 801ac2e:	dc03      	bgt.n	801ac38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ac30:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ac32:	2b00      	cmp	r3, #0
 801ac34:	f340 8287 	ble.w	801b146 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801ac38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ac3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac3e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac42:	1e48      	subs	r0, r1, #1
 801ac44:	f102 3cff 	add.w	ip, r2, #4294967295
 801ac48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac4a:	2b00      	cmp	r3, #0
 801ac4c:	f340 80c4 	ble.w	801add8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ac50:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ac54:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ac58:	d406      	bmi.n	801ac68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ac5a:	4586      	cmp	lr, r0
 801ac5c:	da04      	bge.n	801ac68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ac5e:	2b00      	cmp	r3, #0
 801ac60:	db02      	blt.n	801ac68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ac62:	4563      	cmp	r3, ip
 801ac64:	f2c0 80b9 	blt.w	801adda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ac68:	f11e 0e01 	adds.w	lr, lr, #1
 801ac6c:	f100 80aa 	bmi.w	801adc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ac70:	4571      	cmp	r1, lr
 801ac72:	f2c0 80a7 	blt.w	801adc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ac76:	3301      	adds	r3, #1
 801ac78:	f100 80a4 	bmi.w	801adc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ac7c:	429a      	cmp	r2, r3
 801ac7e:	f2c0 80a1 	blt.w	801adc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ac82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac84:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801ac88:	930e      	str	r3, [sp, #56]	; 0x38
 801ac8a:	46c8      	mov	r8, r9
 801ac8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac8e:	2b00      	cmp	r3, #0
 801ac90:	f340 80c3 	ble.w	801ae1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ac94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ac96:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ac9a:	1423      	asrs	r3, r4, #16
 801ac9c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801aca0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aca4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801aca8:	f100 814d 	bmi.w	801af46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801acac:	f10c 3bff 	add.w	fp, ip, #4294967295
 801acb0:	455b      	cmp	r3, fp
 801acb2:	f280 8148 	bge.w	801af46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801acb6:	2800      	cmp	r0, #0
 801acb8:	f2c0 8145 	blt.w	801af46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801acbc:	f10e 3bff 	add.w	fp, lr, #4294967295
 801acc0:	4558      	cmp	r0, fp
 801acc2:	f280 8140 	bge.w	801af46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801acc6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801acc8:	fb00 3305 	mla	r3, r0, r5, r3
 801accc:	0858      	lsrs	r0, r3, #1
 801acce:	07dd      	lsls	r5, r3, #31
 801acd0:	f817 c000 	ldrb.w	ip, [r7, r0]
 801acd4:	bf54      	ite	pl
 801acd6:	f00c 0c0f 	andpl.w	ip, ip, #15
 801acda:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801acde:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ace2:	fa5f fc8c 	uxtb.w	ip, ip
 801ace6:	2a00      	cmp	r2, #0
 801ace8:	f000 80db 	beq.w	801aea2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801acec:	1c58      	adds	r0, r3, #1
 801acee:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801acf2:	07c0      	lsls	r0, r0, #31
 801acf4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801acf8:	bf54      	ite	pl
 801acfa:	f00e 0e0f 	andpl.w	lr, lr, #15
 801acfe:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ad02:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ad06:	fa5f f08e 	uxtb.w	r0, lr
 801ad0a:	9010      	str	r0, [sp, #64]	; 0x40
 801ad0c:	b1c9      	cbz	r1, 801ad42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ad0e:	4453      	add	r3, sl
 801ad10:	0858      	lsrs	r0, r3, #1
 801ad12:	07dd      	lsls	r5, r3, #31
 801ad14:	5c38      	ldrb	r0, [r7, r0]
 801ad16:	bf54      	ite	pl
 801ad18:	f000 000f 	andpl.w	r0, r0, #15
 801ad1c:	1100      	asrmi	r0, r0, #4
 801ad1e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ad22:	3301      	adds	r3, #1
 801ad24:	b2c0      	uxtb	r0, r0
 801ad26:	900b      	str	r0, [sp, #44]	; 0x2c
 801ad28:	0858      	lsrs	r0, r3, #1
 801ad2a:	07dd      	lsls	r5, r3, #31
 801ad2c:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ad30:	bf54      	ite	pl
 801ad32:	f00e 030f 	andpl.w	r3, lr, #15
 801ad36:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ad3a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ad3e:	b2db      	uxtb	r3, r3
 801ad40:	9311      	str	r3, [sp, #68]	; 0x44
 801ad42:	b292      	uxth	r2, r2
 801ad44:	b289      	uxth	r1, r1
 801ad46:	fb02 f301 	mul.w	r3, r2, r1
 801ad4a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ad4e:	0112      	lsls	r2, r2, #4
 801ad50:	b289      	uxth	r1, r1
 801ad52:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ad56:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ad58:	1ad2      	subs	r2, r2, r3
 801ad5a:	1a40      	subs	r0, r0, r1
 801ad5c:	b292      	uxth	r2, r2
 801ad5e:	436a      	muls	r2, r5
 801ad60:	b280      	uxth	r0, r0
 801ad62:	fb0c 2c00 	mla	ip, ip, r0, r2
 801ad66:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ad68:	fb01 c102 	mla	r1, r1, r2, ip
 801ad6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ad6e:	fb03 1302 	mla	r3, r3, r2, r1
 801ad72:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ad76:	b1db      	cbz	r3, 801adb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ad78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad7a:	4353      	muls	r3, r2
 801ad7c:	1c5a      	adds	r2, r3, #1
 801ad7e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ad82:	4ac6      	ldr	r2, [pc, #792]	; (801b09c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801ad84:	121b      	asrs	r3, r3, #8
 801ad86:	6812      	ldr	r2, [r2, #0]
 801ad88:	2bff      	cmp	r3, #255	; 0xff
 801ad8a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ad8e:	f040 8099 	bne.w	801aec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801ad92:	0953      	lsrs	r3, r2, #5
 801ad94:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ad98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ad9c:	f02c 0c07 	bic.w	ip, ip, #7
 801ada0:	ea43 0c0c 	orr.w	ip, r3, ip
 801ada4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ada8:	ea4c 0202 	orr.w	r2, ip, r2
 801adac:	f8a8 2000 	strh.w	r2, [r8]
 801adb0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801adb2:	441c      	add	r4, r3
 801adb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801adb6:	441e      	add	r6, r3
 801adb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adba:	3b01      	subs	r3, #1
 801adbc:	f108 0802 	add.w	r8, r8, #2
 801adc0:	930e      	str	r3, [sp, #56]	; 0x38
 801adc2:	e763      	b.n	801ac8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801adc4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801adc6:	441c      	add	r4, r3
 801adc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801adca:	441e      	add	r6, r3
 801adcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adce:	3b01      	subs	r3, #1
 801add0:	9309      	str	r3, [sp, #36]	; 0x24
 801add2:	f109 0902 	add.w	r9, r9, #2
 801add6:	e737      	b.n	801ac48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801add8:	d024      	beq.n	801ae24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801adda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801addc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801adde:	3b01      	subs	r3, #1
 801ade0:	fb00 4003 	mla	r0, r0, r3, r4
 801ade4:	1400      	asrs	r0, r0, #16
 801ade6:	f53f af4c 	bmi.w	801ac82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801adea:	3901      	subs	r1, #1
 801adec:	4288      	cmp	r0, r1
 801adee:	f6bf af48 	bge.w	801ac82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801adf2:	9924      	ldr	r1, [sp, #144]	; 0x90
 801adf4:	fb01 6303 	mla	r3, r1, r3, r6
 801adf8:	141b      	asrs	r3, r3, #16
 801adfa:	f53f af42 	bmi.w	801ac82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801adfe:	3a01      	subs	r2, #1
 801ae00:	4293      	cmp	r3, r2
 801ae02:	f6bf af3e 	bge.w	801ac82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ae06:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ae0a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ae0e:	930e      	str	r3, [sp, #56]	; 0x38
 801ae10:	46c8      	mov	r8, r9
 801ae12:	f1bb 0f00 	cmp.w	fp, #0
 801ae16:	f300 80b7 	bgt.w	801af88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ae1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae1c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ae20:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ae24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae26:	2b00      	cmp	r3, #0
 801ae28:	f340 818d 	ble.w	801b146 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801ae2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ae38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ae3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae46:	eef0 6a62 	vmov.f32	s13, s5
 801ae4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae52:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae56:	ee16 4a90 	vmov	r4, s13
 801ae5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae5e:	eef0 6a43 	vmov.f32	s13, s6
 801ae62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae66:	ee12 2a90 	vmov	r2, s5
 801ae6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae6e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae72:	ee13 2a10 	vmov	r2, s6
 801ae76:	9323      	str	r3, [sp, #140]	; 0x8c
 801ae78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ae7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae7e:	9324      	str	r3, [sp, #144]	; 0x90
 801ae80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ae84:	3b01      	subs	r3, #1
 801ae86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae8a:	930d      	str	r3, [sp, #52]	; 0x34
 801ae8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ae8e:	bf08      	it	eq
 801ae90:	4613      	moveq	r3, r2
 801ae92:	ee16 6a90 	vmov	r6, s13
 801ae96:	9309      	str	r3, [sp, #36]	; 0x24
 801ae98:	eeb0 3a67 	vmov.f32	s6, s15
 801ae9c:	eef0 2a47 	vmov.f32	s5, s14
 801aea0:	e6c3      	b.n	801ac2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801aea2:	2900      	cmp	r1, #0
 801aea4:	f43f af4d 	beq.w	801ad42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aea8:	eb0a 0003 	add.w	r0, sl, r3
 801aeac:	0843      	lsrs	r3, r0, #1
 801aeae:	07c0      	lsls	r0, r0, #31
 801aeb0:	5cfb      	ldrb	r3, [r7, r3]
 801aeb2:	bf54      	ite	pl
 801aeb4:	f003 030f 	andpl.w	r3, r3, #15
 801aeb8:	111b      	asrmi	r3, r3, #4
 801aeba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801aebe:	b2db      	uxtb	r3, r3
 801aec0:	930b      	str	r3, [sp, #44]	; 0x2c
 801aec2:	e73e      	b.n	801ad42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aec4:	f8b8 e000 	ldrh.w	lr, [r8]
 801aec8:	fa1f fb83 	uxth.w	fp, r3
 801aecc:	ea4f 202e 	mov.w	r0, lr, asr #8
 801aed0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801aed4:	43db      	mvns	r3, r3
 801aed6:	b2db      	uxtb	r3, r3
 801aed8:	fb11 f10b 	smulbb	r1, r1, fp
 801aedc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aee0:	fb00 1003 	mla	r0, r0, r3, r1
 801aee4:	fa5f fc8c 	uxtb.w	ip, ip
 801aee8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801aeec:	b2d2      	uxtb	r2, r2
 801aeee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aef2:	b280      	uxth	r0, r0
 801aef4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801aef8:	fb1c fc0b 	smulbb	ip, ip, fp
 801aefc:	fa5f fe8e 	uxtb.w	lr, lr
 801af00:	fb12 fb0b 	smulbb	fp, r2, fp
 801af04:	fb01 cc03 	mla	ip, r1, r3, ip
 801af08:	fb0e bb03 	mla	fp, lr, r3, fp
 801af0c:	1c43      	adds	r3, r0, #1
 801af0e:	fa1f fc8c 	uxth.w	ip, ip
 801af12:	fa1f fb8b 	uxth.w	fp, fp
 801af16:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801af1a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801af1e:	f10c 0101 	add.w	r1, ip, #1
 801af22:	f10b 0001 	add.w	r0, fp, #1
 801af26:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801af2a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801af2e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801af32:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801af36:	4318      	orrs	r0, r3
 801af38:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801af3c:	ea40 000c 	orr.w	r0, r0, ip
 801af40:	f8a8 0000 	strh.w	r0, [r8]
 801af44:	e734      	b.n	801adb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801af46:	f113 0b01 	adds.w	fp, r3, #1
 801af4a:	f53f af31 	bmi.w	801adb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801af4e:	45dc      	cmp	ip, fp
 801af50:	f6ff af2e 	blt.w	801adb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801af54:	f110 0b01 	adds.w	fp, r0, #1
 801af58:	f53f af2a 	bmi.w	801adb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801af5c:	45de      	cmp	lr, fp
 801af5e:	f6ff af27 	blt.w	801adb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801af62:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801af64:	9302      	str	r3, [sp, #8]
 801af66:	fa0f f38e 	sxth.w	r3, lr
 801af6a:	9301      	str	r3, [sp, #4]
 801af6c:	fa0f f38c 	sxth.w	r3, ip
 801af70:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801af74:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801af78:	9300      	str	r3, [sp, #0]
 801af7a:	463a      	mov	r2, r7
 801af7c:	4653      	mov	r3, sl
 801af7e:	4641      	mov	r1, r8
 801af80:	9815      	ldr	r0, [sp, #84]	; 0x54
 801af82:	f7ff fd4d 	bl	801aa20 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801af86:	e713      	b.n	801adb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801af88:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801af8a:	1422      	asrs	r2, r4, #16
 801af8c:	1433      	asrs	r3, r6, #16
 801af8e:	fb05 2303 	mla	r3, r5, r3, r2
 801af92:	085a      	lsrs	r2, r3, #1
 801af94:	07dd      	lsls	r5, r3, #31
 801af96:	5cba      	ldrb	r2, [r7, r2]
 801af98:	bf54      	ite	pl
 801af9a:	f002 020f 	andpl.w	r2, r2, #15
 801af9e:	1112      	asrmi	r2, r2, #4
 801afa0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801afa4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801afa8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801afac:	b2d2      	uxtb	r2, r2
 801afae:	2900      	cmp	r1, #0
 801afb0:	d076      	beq.n	801b0a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801afb2:	f103 0e01 	add.w	lr, r3, #1
 801afb6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801afba:	f01e 0f01 	tst.w	lr, #1
 801afbe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801afc2:	bf0c      	ite	eq
 801afc4:	f00c 0c0f 	andeq.w	ip, ip, #15
 801afc8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801afcc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801afd0:	fa5f f58c 	uxtb.w	r5, ip
 801afd4:	9512      	str	r5, [sp, #72]	; 0x48
 801afd6:	b300      	cbz	r0, 801b01a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801afd8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801afda:	442b      	add	r3, r5
 801afdc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801afe0:	07dd      	lsls	r5, r3, #31
 801afe2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801afe6:	bf54      	ite	pl
 801afe8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801afec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aff0:	3301      	adds	r3, #1
 801aff2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aff6:	fa5f f58c 	uxtb.w	r5, ip
 801affa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801affe:	950c      	str	r5, [sp, #48]	; 0x30
 801b000:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b004:	07dd      	lsls	r5, r3, #31
 801b006:	bf54      	ite	pl
 801b008:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b00c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b010:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b014:	fa5f f38c 	uxtb.w	r3, ip
 801b018:	9313      	str	r3, [sp, #76]	; 0x4c
 801b01a:	b289      	uxth	r1, r1
 801b01c:	b280      	uxth	r0, r0
 801b01e:	fb01 f300 	mul.w	r3, r1, r0
 801b022:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801b026:	0109      	lsls	r1, r1, #4
 801b028:	b280      	uxth	r0, r0
 801b02a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801b02e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b030:	1ac9      	subs	r1, r1, r3
 801b032:	ebac 0c00 	sub.w	ip, ip, r0
 801b036:	b289      	uxth	r1, r1
 801b038:	4369      	muls	r1, r5
 801b03a:	fa1f fc8c 	uxth.w	ip, ip
 801b03e:	fb02 120c 	mla	r2, r2, ip, r1
 801b042:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b044:	fb00 2001 	mla	r0, r0, r1, r2
 801b048:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b04a:	fb03 0302 	mla	r3, r3, r2, r0
 801b04e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b052:	b1d3      	cbz	r3, 801b08a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801b054:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b056:	4353      	muls	r3, r2
 801b058:	1c5a      	adds	r2, r3, #1
 801b05a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b05e:	4a0f      	ldr	r2, [pc, #60]	; (801b09c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b060:	121b      	asrs	r3, r3, #8
 801b062:	6812      	ldr	r2, [r2, #0]
 801b064:	2bff      	cmp	r3, #255	; 0xff
 801b066:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801b06a:	d12d      	bne.n	801b0c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b06c:	0953      	lsrs	r3, r2, #5
 801b06e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b072:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b076:	f02c 0c07 	bic.w	ip, ip, #7
 801b07a:	ea43 0c0c 	orr.w	ip, r3, ip
 801b07e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b082:	ea4c 0202 	orr.w	r2, ip, r2
 801b086:	f8a8 2000 	strh.w	r2, [r8]
 801b08a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801b08c:	441c      	add	r4, r3
 801b08e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b090:	f108 0802 	add.w	r8, r8, #2
 801b094:	441e      	add	r6, r3
 801b096:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b09a:	e6ba      	b.n	801ae12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b09c:	20017758 	.word	0x20017758
 801b0a0:	2800      	cmp	r0, #0
 801b0a2:	d0ba      	beq.n	801b01a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801b0a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b0a6:	442b      	add	r3, r5
 801b0a8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b0ac:	07db      	lsls	r3, r3, #31
 801b0ae:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b0b2:	bf54      	ite	pl
 801b0b4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b0b8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b0bc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b0c0:	fa5f f38c 	uxtb.w	r3, ip
 801b0c4:	930c      	str	r3, [sp, #48]	; 0x30
 801b0c6:	e7a8      	b.n	801b01a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801b0c8:	f8b8 e000 	ldrh.w	lr, [r8]
 801b0cc:	fa1f fa83 	uxth.w	sl, r3
 801b0d0:	ea4f 202e 	mov.w	r0, lr, asr #8
 801b0d4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b0d8:	43db      	mvns	r3, r3
 801b0da:	b2db      	uxtb	r3, r3
 801b0dc:	fb11 f10a 	smulbb	r1, r1, sl
 801b0e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b0e4:	fb00 1003 	mla	r0, r0, r3, r1
 801b0e8:	b2d2      	uxtb	r2, r2
 801b0ea:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801b0ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b0f2:	fa5f fe8e 	uxtb.w	lr, lr
 801b0f6:	fb12 f20a 	smulbb	r2, r2, sl
 801b0fa:	fb0e 2203 	mla	r2, lr, r3, r2
 801b0fe:	fa5f fc8c 	uxtb.w	ip, ip
 801b102:	b280      	uxth	r0, r0
 801b104:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b108:	b292      	uxth	r2, r2
 801b10a:	fb1c fc0a 	smulbb	ip, ip, sl
 801b10e:	fb01 cc03 	mla	ip, r1, r3, ip
 801b112:	1c43      	adds	r3, r0, #1
 801b114:	1c51      	adds	r1, r2, #1
 801b116:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b11a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801b11e:	fa1f fc8c 	uxth.w	ip, ip
 801b122:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b126:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b12a:	4308      	orrs	r0, r1
 801b12c:	f10c 0101 	add.w	r1, ip, #1
 801b130:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b134:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b138:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b13c:	ea40 000c 	orr.w	r0, r0, ip
 801b140:	f8a8 0000 	strh.w	r0, [r8]
 801b144:	e7a1      	b.n	801b08a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801b146:	b017      	add	sp, #92	; 0x5c
 801b148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b14c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801b14c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b150:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801b154:	2d00      	cmp	r5, #0
 801b156:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b15a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b15e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801b162:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801b166:	fb05 0e03 	mla	lr, r5, r3, r0
 801b16a:	f2c0 80b0 	blt.w	801b2ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801b16e:	45a9      	cmp	r9, r5
 801b170:	f340 80ad 	ble.w	801b2ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801b174:	2800      	cmp	r0, #0
 801b176:	f2c0 80a8 	blt.w	801b2ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801b17a:	4580      	cmp	r8, r0
 801b17c:	f340 80a5 	ble.w	801b2ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801b180:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801b184:	f01e 0f01 	tst.w	lr, #1
 801b188:	5d16      	ldrb	r6, [r2, r4]
 801b18a:	bf0c      	ite	eq
 801b18c:	f006 060f 	andeq.w	r6, r6, #15
 801b190:	1136      	asrne	r6, r6, #4
 801b192:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b196:	b2f6      	uxtb	r6, r6
 801b198:	1c44      	adds	r4, r0, #1
 801b19a:	f100 809b 	bmi.w	801b2d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801b19e:	45a0      	cmp	r8, r4
 801b1a0:	f340 8098 	ble.w	801b2d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801b1a4:	2f00      	cmp	r7, #0
 801b1a6:	f000 8097 	beq.w	801b2d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801b1aa:	f10e 0a01 	add.w	sl, lr, #1
 801b1ae:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801b1b2:	f01a 0f01 	tst.w	sl, #1
 801b1b6:	5d14      	ldrb	r4, [r2, r4]
 801b1b8:	bf0c      	ite	eq
 801b1ba:	f004 040f 	andeq.w	r4, r4, #15
 801b1be:	1124      	asrne	r4, r4, #4
 801b1c0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b1c4:	b2e4      	uxtb	r4, r4
 801b1c6:	3501      	adds	r5, #1
 801b1c8:	f100 808a 	bmi.w	801b2e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801b1cc:	45a9      	cmp	r9, r5
 801b1ce:	f340 8087 	ble.w	801b2e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801b1d2:	f1bc 0f00 	cmp.w	ip, #0
 801b1d6:	f000 8086 	beq.w	801b2e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801b1da:	2800      	cmp	r0, #0
 801b1dc:	db7e      	blt.n	801b2dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801b1de:	4580      	cmp	r8, r0
 801b1e0:	dd7c      	ble.n	801b2dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801b1e2:	eb03 090e 	add.w	r9, r3, lr
 801b1e6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801b1ea:	f019 0f01 	tst.w	r9, #1
 801b1ee:	5d55      	ldrb	r5, [r2, r5]
 801b1f0:	bf0c      	ite	eq
 801b1f2:	f005 050f 	andeq.w	r5, r5, #15
 801b1f6:	112d      	asrne	r5, r5, #4
 801b1f8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801b1fc:	b2ed      	uxtb	r5, r5
 801b1fe:	3001      	adds	r0, #1
 801b200:	d474      	bmi.n	801b2ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b202:	4580      	cmp	r8, r0
 801b204:	dd72      	ble.n	801b2ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b206:	2f00      	cmp	r7, #0
 801b208:	d072      	beq.n	801b2f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801b20a:	3301      	adds	r3, #1
 801b20c:	449e      	add	lr, r3
 801b20e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b212:	f01e 0f01 	tst.w	lr, #1
 801b216:	5cd0      	ldrb	r0, [r2, r3]
 801b218:	bf0c      	ite	eq
 801b21a:	f000 000f 	andeq.w	r0, r0, #15
 801b21e:	1100      	asrne	r0, r0, #4
 801b220:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b224:	b2c3      	uxtb	r3, r0
 801b226:	b2ba      	uxth	r2, r7
 801b228:	fa1f fc8c 	uxth.w	ip, ip
 801b22c:	fb02 f00c 	mul.w	r0, r2, ip
 801b230:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801b234:	0112      	lsls	r2, r2, #4
 801b236:	fa1f fc8c 	uxth.w	ip, ip
 801b23a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801b23e:	1a12      	subs	r2, r2, r0
 801b240:	eba7 070c 	sub.w	r7, r7, ip
 801b244:	b292      	uxth	r2, r2
 801b246:	b2bf      	uxth	r7, r7
 801b248:	4362      	muls	r2, r4
 801b24a:	fb06 2207 	mla	r2, r6, r7, r2
 801b24e:	fb0c 2505 	mla	r5, ip, r5, r2
 801b252:	fb00 5303 	mla	r3, r0, r3, r5
 801b256:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b25a:	b3a3      	cbz	r3, 801b2c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801b25c:	4a25      	ldr	r2, [pc, #148]	; (801b2f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801b25e:	880e      	ldrh	r6, [r1, #0]
 801b260:	6815      	ldr	r5, [r2, #0]
 801b262:	1234      	asrs	r4, r6, #8
 801b264:	b29a      	uxth	r2, r3
 801b266:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b26a:	43db      	mvns	r3, r3
 801b26c:	b2db      	uxtb	r3, r3
 801b26e:	fb10 f002 	smulbb	r0, r0, r2
 801b272:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b276:	fb04 0403 	mla	r4, r4, r3, r0
 801b27a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801b27e:	10f0      	asrs	r0, r6, #3
 801b280:	b2ed      	uxtb	r5, r5
 801b282:	00f6      	lsls	r6, r6, #3
 801b284:	fb17 f702 	smulbb	r7, r7, r2
 801b288:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b28c:	fb15 f202 	smulbb	r2, r5, r2
 801b290:	b2f6      	uxtb	r6, r6
 801b292:	b2a4      	uxth	r4, r4
 801b294:	fb00 7003 	mla	r0, r0, r3, r7
 801b298:	fb06 2303 	mla	r3, r6, r3, r2
 801b29c:	b29a      	uxth	r2, r3
 801b29e:	1c63      	adds	r3, r4, #1
 801b2a0:	b280      	uxth	r0, r0
 801b2a2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b2a6:	1c53      	adds	r3, r2, #1
 801b2a8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b2ac:	1c42      	adds	r2, r0, #1
 801b2ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b2b2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b2b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b2ba:	0940      	lsrs	r0, r0, #5
 801b2bc:	4323      	orrs	r3, r4
 801b2be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b2c2:	4303      	orrs	r3, r0
 801b2c4:	800b      	strh	r3, [r1, #0]
 801b2c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b2ca:	2600      	movs	r6, #0
 801b2cc:	e764      	b.n	801b198 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801b2ce:	2400      	movs	r4, #0
 801b2d0:	4626      	mov	r6, r4
 801b2d2:	e778      	b.n	801b1c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801b2d4:	2400      	movs	r4, #0
 801b2d6:	e776      	b.n	801b1c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801b2d8:	463c      	mov	r4, r7
 801b2da:	e774      	b.n	801b1c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801b2dc:	2500      	movs	r5, #0
 801b2de:	e78e      	b.n	801b1fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801b2e0:	2300      	movs	r3, #0
 801b2e2:	461d      	mov	r5, r3
 801b2e4:	e79f      	b.n	801b226 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801b2e6:	4663      	mov	r3, ip
 801b2e8:	4665      	mov	r5, ip
 801b2ea:	e79c      	b.n	801b226 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801b2ec:	2300      	movs	r3, #0
 801b2ee:	e79a      	b.n	801b226 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801b2f0:	463b      	mov	r3, r7
 801b2f2:	e798      	b.n	801b226 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801b2f4:	20017758 	.word	0x20017758

0801b2f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2fc:	b093      	sub	sp, #76	; 0x4c
 801b2fe:	461d      	mov	r5, r3
 801b300:	920c      	str	r2, [sp, #48]	; 0x30
 801b302:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b304:	9107      	str	r1, [sp, #28]
 801b306:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801b30a:	9011      	str	r0, [sp, #68]	; 0x44
 801b30c:	6850      	ldr	r0, [r2, #4]
 801b30e:	6812      	ldr	r2, [r2, #0]
 801b310:	fb00 1303 	mla	r3, r0, r3, r1
 801b314:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b318:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b31a:	689b      	ldr	r3, [r3, #8]
 801b31c:	3301      	adds	r3, #1
 801b31e:	f023 0301 	bic.w	r3, r3, #1
 801b322:	9306      	str	r3, [sp, #24]
 801b324:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b326:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801b32a:	681f      	ldr	r7, [r3, #0]
 801b32c:	9b07      	ldr	r3, [sp, #28]
 801b32e:	2b00      	cmp	r3, #0
 801b330:	dc03      	bgt.n	801b33a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801b332:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b334:	2b00      	cmp	r3, #0
 801b336:	f340 8267 	ble.w	801b808 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801b33a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b33c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b340:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b344:	1e48      	subs	r0, r1, #1
 801b346:	f102 3cff 	add.w	ip, r2, #4294967295
 801b34a:	2d00      	cmp	r5, #0
 801b34c:	f340 80b8 	ble.w	801b4c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b350:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b354:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b358:	d406      	bmi.n	801b368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b35a:	4586      	cmp	lr, r0
 801b35c:	da04      	bge.n	801b368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b35e:	2b00      	cmp	r3, #0
 801b360:	db02      	blt.n	801b368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b362:	4563      	cmp	r3, ip
 801b364:	f2c0 80ad 	blt.w	801b4c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801b368:	f11e 0e01 	adds.w	lr, lr, #1
 801b36c:	f100 80a0 	bmi.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801b370:	4571      	cmp	r1, lr
 801b372:	f2c0 809d 	blt.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801b376:	3301      	adds	r3, #1
 801b378:	f100 809a 	bmi.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801b37c:	429a      	cmp	r2, r3
 801b37e:	f2c0 8097 	blt.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801b382:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801b386:	9509      	str	r5, [sp, #36]	; 0x24
 801b388:	46c8      	mov	r8, r9
 801b38a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b38c:	2b00      	cmp	r3, #0
 801b38e:	f340 80b6 	ble.w	801b4fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801b392:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801b396:	9308      	str	r3, [sp, #32]
 801b398:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b39a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b39e:	1423      	asrs	r3, r4, #16
 801b3a0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b3a4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b3a8:	f100 813e 	bmi.w	801b628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b3ac:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b3b0:	455b      	cmp	r3, fp
 801b3b2:	f280 8139 	bge.w	801b628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b3b6:	2800      	cmp	r0, #0
 801b3b8:	f2c0 8136 	blt.w	801b628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b3bc:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b3c0:	4558      	cmp	r0, fp
 801b3c2:	f280 8131 	bge.w	801b628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b3c6:	9a06      	ldr	r2, [sp, #24]
 801b3c8:	fb00 3302 	mla	r3, r0, r2, r3
 801b3cc:	0858      	lsrs	r0, r3, #1
 801b3ce:	07da      	lsls	r2, r3, #31
 801b3d0:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b3d4:	9a08      	ldr	r2, [sp, #32]
 801b3d6:	bf54      	ite	pl
 801b3d8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b3dc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b3e0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b3e4:	fa5f fc8c 	uxtb.w	ip, ip
 801b3e8:	2a00      	cmp	r2, #0
 801b3ea:	f000 80cb 	beq.w	801b584 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b3ee:	1c58      	adds	r0, r3, #1
 801b3f0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801b3f4:	07c0      	lsls	r0, r0, #31
 801b3f6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b3fa:	bf54      	ite	pl
 801b3fc:	f00e 0e0f 	andpl.w	lr, lr, #15
 801b400:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801b404:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801b408:	fa5f fe8e 	uxtb.w	lr, lr
 801b40c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801b410:	b1b9      	cbz	r1, 801b442 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801b412:	4453      	add	r3, sl
 801b414:	0858      	lsrs	r0, r3, #1
 801b416:	07da      	lsls	r2, r3, #31
 801b418:	5c38      	ldrb	r0, [r7, r0]
 801b41a:	bf54      	ite	pl
 801b41c:	f000 000f 	andpl.w	r0, r0, #15
 801b420:	1100      	asrmi	r0, r0, #4
 801b422:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b426:	b2c0      	uxtb	r0, r0
 801b428:	900a      	str	r0, [sp, #40]	; 0x28
 801b42a:	1c58      	adds	r0, r3, #1
 801b42c:	0843      	lsrs	r3, r0, #1
 801b42e:	07c2      	lsls	r2, r0, #31
 801b430:	5cfb      	ldrb	r3, [r7, r3]
 801b432:	bf54      	ite	pl
 801b434:	f003 030f 	andpl.w	r3, r3, #15
 801b438:	111b      	asrmi	r3, r3, #4
 801b43a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b43e:	b2db      	uxtb	r3, r3
 801b440:	930e      	str	r3, [sp, #56]	; 0x38
 801b442:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b446:	b289      	uxth	r1, r1
 801b448:	fb02 f301 	mul.w	r3, r2, r1
 801b44c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b450:	0112      	lsls	r2, r2, #4
 801b452:	b289      	uxth	r1, r1
 801b454:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801b458:	1a40      	subs	r0, r0, r1
 801b45a:	fa1f fe80 	uxth.w	lr, r0
 801b45e:	1ad2      	subs	r2, r2, r3
 801b460:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b462:	b292      	uxth	r2, r2
 801b464:	4342      	muls	r2, r0
 801b466:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801b46a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b46c:	fb01 c102 	mla	r1, r1, r2, ip
 801b470:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b472:	fb03 1302 	mla	r3, r3, r2, r1
 801b476:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b47a:	2bff      	cmp	r3, #255	; 0xff
 801b47c:	f040 8093 	bne.w	801b5a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801b480:	4bbe      	ldr	r3, [pc, #760]	; (801b77c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801b482:	681a      	ldr	r2, [r3, #0]
 801b484:	4bbe      	ldr	r3, [pc, #760]	; (801b780 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801b486:	0951      	lsrs	r1, r2, #5
 801b488:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b48c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b490:	430b      	orrs	r3, r1
 801b492:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b496:	4313      	orrs	r3, r2
 801b498:	f8a8 3000 	strh.w	r3, [r8]
 801b49c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b49e:	441c      	add	r4, r3
 801b4a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b4a2:	441e      	add	r6, r3
 801b4a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4a6:	3b01      	subs	r3, #1
 801b4a8:	f108 0802 	add.w	r8, r8, #2
 801b4ac:	9309      	str	r3, [sp, #36]	; 0x24
 801b4ae:	e76c      	b.n	801b38a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b4b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b4b2:	441c      	add	r4, r3
 801b4b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b4b6:	3d01      	subs	r5, #1
 801b4b8:	441e      	add	r6, r3
 801b4ba:	f109 0902 	add.w	r9, r9, #2
 801b4be:	e744      	b.n	801b34a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b4c0:	d021      	beq.n	801b506 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b4c2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801b4c4:	1e6b      	subs	r3, r5, #1
 801b4c6:	fb00 4003 	mla	r0, r0, r3, r4
 801b4ca:	1400      	asrs	r0, r0, #16
 801b4cc:	f53f af59 	bmi.w	801b382 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b4d0:	3901      	subs	r1, #1
 801b4d2:	4288      	cmp	r0, r1
 801b4d4:	f6bf af55 	bge.w	801b382 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b4d8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801b4da:	fb01 6303 	mla	r3, r1, r3, r6
 801b4de:	141b      	asrs	r3, r3, #16
 801b4e0:	f53f af4f 	bmi.w	801b382 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b4e4:	3a01      	subs	r2, #1
 801b4e6:	4293      	cmp	r3, r2
 801b4e8:	f6bf af4b 	bge.w	801b382 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b4ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b4f0:	9308      	str	r3, [sp, #32]
 801b4f2:	46a8      	mov	r8, r5
 801b4f4:	46ce      	mov	lr, r9
 801b4f6:	f1b8 0f00 	cmp.w	r8, #0
 801b4fa:	f300 80b5 	bgt.w	801b668 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b4fe:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b502:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b506:	9b07      	ldr	r3, [sp, #28]
 801b508:	2b00      	cmp	r3, #0
 801b50a:	f340 817d 	ble.w	801b808 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801b50e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b512:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b516:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b51a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b51c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b520:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b524:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b528:	eef0 6a62 	vmov.f32	s13, s5
 801b52c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b530:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b534:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b538:	ee16 4a90 	vmov	r4, s13
 801b53c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b540:	eef0 6a43 	vmov.f32	s13, s6
 801b544:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b548:	ee12 2a90 	vmov	r2, s5
 801b54c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b550:	fb92 f3f3 	sdiv	r3, r2, r3
 801b554:	ee13 2a10 	vmov	r2, s6
 801b558:	931f      	str	r3, [sp, #124]	; 0x7c
 801b55a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b55c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b560:	9320      	str	r3, [sp, #128]	; 0x80
 801b562:	9b07      	ldr	r3, [sp, #28]
 801b564:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b566:	3b01      	subs	r3, #1
 801b568:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b56c:	9307      	str	r3, [sp, #28]
 801b56e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b570:	ee16 6a90 	vmov	r6, s13
 801b574:	bf14      	ite	ne
 801b576:	461d      	movne	r5, r3
 801b578:	4615      	moveq	r5, r2
 801b57a:	eeb0 3a67 	vmov.f32	s6, s15
 801b57e:	eef0 2a47 	vmov.f32	s5, s14
 801b582:	e6d3      	b.n	801b32c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801b584:	2900      	cmp	r1, #0
 801b586:	f43f af5c 	beq.w	801b442 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801b58a:	eb0a 0003 	add.w	r0, sl, r3
 801b58e:	0843      	lsrs	r3, r0, #1
 801b590:	07c0      	lsls	r0, r0, #31
 801b592:	5cfb      	ldrb	r3, [r7, r3]
 801b594:	bf54      	ite	pl
 801b596:	f003 030f 	andpl.w	r3, r3, #15
 801b59a:	111b      	asrmi	r3, r3, #4
 801b59c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b5a0:	b2db      	uxtb	r3, r3
 801b5a2:	930a      	str	r3, [sp, #40]	; 0x28
 801b5a4:	e74d      	b.n	801b442 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801b5a6:	2b00      	cmp	r3, #0
 801b5a8:	f43f af78 	beq.w	801b49c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b5ac:	4a73      	ldr	r2, [pc, #460]	; (801b77c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801b5ae:	f8b8 c000 	ldrh.w	ip, [r8]
 801b5b2:	6810      	ldr	r0, [r2, #0]
 801b5b4:	fa1f fe83 	uxth.w	lr, r3
 801b5b8:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b5bc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b5c0:	43db      	mvns	r3, r3
 801b5c2:	b2db      	uxtb	r3, r3
 801b5c4:	fb12 f20e 	smulbb	r2, r2, lr
 801b5c8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b5cc:	fb01 2103 	mla	r1, r1, r3, r2
 801b5d0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b5d4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b5d8:	b2c0      	uxtb	r0, r0
 801b5da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b5de:	fb1b fb0e 	smulbb	fp, fp, lr
 801b5e2:	b289      	uxth	r1, r1
 801b5e4:	fb10 fe0e 	smulbb	lr, r0, lr
 801b5e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b5ec:	fa5f fc8c 	uxtb.w	ip, ip
 801b5f0:	fb02 b203 	mla	r2, r2, r3, fp
 801b5f4:	1c48      	adds	r0, r1, #1
 801b5f6:	fb0c e303 	mla	r3, ip, r3, lr
 801b5fa:	b292      	uxth	r2, r2
 801b5fc:	b29b      	uxth	r3, r3
 801b5fe:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801b602:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801b606:	f102 0b01 	add.w	fp, r2, #1
 801b60a:	1c59      	adds	r1, r3, #1
 801b60c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b610:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b614:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b618:	0952      	lsrs	r2, r2, #5
 801b61a:	4301      	orrs	r1, r0
 801b61c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b620:	4311      	orrs	r1, r2
 801b622:	f8a8 1000 	strh.w	r1, [r8]
 801b626:	e739      	b.n	801b49c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b628:	f113 0b01 	adds.w	fp, r3, #1
 801b62c:	f53f af36 	bmi.w	801b49c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b630:	45dc      	cmp	ip, fp
 801b632:	f6ff af33 	blt.w	801b49c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b636:	f110 0b01 	adds.w	fp, r0, #1
 801b63a:	f53f af2f 	bmi.w	801b49c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b63e:	45de      	cmp	lr, fp
 801b640:	f6ff af2c 	blt.w	801b49c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b644:	9a08      	ldr	r2, [sp, #32]
 801b646:	9302      	str	r3, [sp, #8]
 801b648:	fa0f f38e 	sxth.w	r3, lr
 801b64c:	9301      	str	r3, [sp, #4]
 801b64e:	fa0f f38c 	sxth.w	r3, ip
 801b652:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b656:	9105      	str	r1, [sp, #20]
 801b658:	9300      	str	r3, [sp, #0]
 801b65a:	463a      	mov	r2, r7
 801b65c:	4653      	mov	r3, sl
 801b65e:	4641      	mov	r1, r8
 801b660:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b662:	f7ff fd73 	bl	801b14c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b666:	e719      	b.n	801b49c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b668:	9906      	ldr	r1, [sp, #24]
 801b66a:	1422      	asrs	r2, r4, #16
 801b66c:	1433      	asrs	r3, r6, #16
 801b66e:	fb01 2303 	mla	r3, r1, r3, r2
 801b672:	085a      	lsrs	r2, r3, #1
 801b674:	07d9      	lsls	r1, r3, #31
 801b676:	5cba      	ldrb	r2, [r7, r2]
 801b678:	bf54      	ite	pl
 801b67a:	f002 020f 	andpl.w	r2, r2, #15
 801b67e:	1112      	asrmi	r2, r2, #4
 801b680:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b684:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b688:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b68c:	b2d2      	uxtb	r2, r2
 801b68e:	2800      	cmp	r0, #0
 801b690:	d062      	beq.n	801b758 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801b692:	f103 0a01 	add.w	sl, r3, #1
 801b696:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801b69a:	f01a 0f01 	tst.w	sl, #1
 801b69e:	5c79      	ldrb	r1, [r7, r1]
 801b6a0:	bf0c      	ite	eq
 801b6a2:	f001 010f 	andeq.w	r1, r1, #15
 801b6a6:	1109      	asrne	r1, r1, #4
 801b6a8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b6ac:	b2c9      	uxtb	r1, r1
 801b6ae:	910f      	str	r1, [sp, #60]	; 0x3c
 801b6b0:	f1bc 0f00 	cmp.w	ip, #0
 801b6b4:	d019      	beq.n	801b6ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801b6b6:	9908      	ldr	r1, [sp, #32]
 801b6b8:	440b      	add	r3, r1
 801b6ba:	0859      	lsrs	r1, r3, #1
 801b6bc:	f013 0f01 	tst.w	r3, #1
 801b6c0:	5c79      	ldrb	r1, [r7, r1]
 801b6c2:	bf0c      	ite	eq
 801b6c4:	f001 010f 	andeq.w	r1, r1, #15
 801b6c8:	1109      	asrne	r1, r1, #4
 801b6ca:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b6ce:	b2c9      	uxtb	r1, r1
 801b6d0:	3301      	adds	r3, #1
 801b6d2:	910b      	str	r1, [sp, #44]	; 0x2c
 801b6d4:	0859      	lsrs	r1, r3, #1
 801b6d6:	07db      	lsls	r3, r3, #31
 801b6d8:	5c79      	ldrb	r1, [r7, r1]
 801b6da:	bf54      	ite	pl
 801b6dc:	f001 010f 	andpl.w	r1, r1, #15
 801b6e0:	1109      	asrmi	r1, r1, #4
 801b6e2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b6e6:	b2c9      	uxtb	r1, r1
 801b6e8:	9110      	str	r1, [sp, #64]	; 0x40
 801b6ea:	b280      	uxth	r0, r0
 801b6ec:	fa1f fc8c 	uxth.w	ip, ip
 801b6f0:	fb00 f30c 	mul.w	r3, r0, ip
 801b6f4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b6f8:	0100      	lsls	r0, r0, #4
 801b6fa:	fa1f fc8c 	uxth.w	ip, ip
 801b6fe:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b702:	eba1 010c 	sub.w	r1, r1, ip
 801b706:	fa1f fa81 	uxth.w	sl, r1
 801b70a:	1ac0      	subs	r0, r0, r3
 801b70c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b70e:	b280      	uxth	r0, r0
 801b710:	4348      	muls	r0, r1
 801b712:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b714:	fb02 020a 	mla	r2, r2, sl, r0
 801b718:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b71c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b71e:	fb03 c302 	mla	r3, r3, r2, ip
 801b722:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b726:	2bff      	cmp	r3, #255	; 0xff
 801b728:	d12c      	bne.n	801b784 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801b72a:	4b14      	ldr	r3, [pc, #80]	; (801b77c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801b72c:	681a      	ldr	r2, [r3, #0]
 801b72e:	4b14      	ldr	r3, [pc, #80]	; (801b780 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801b730:	0951      	lsrs	r1, r2, #5
 801b732:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b736:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b73a:	430b      	orrs	r3, r1
 801b73c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b740:	4313      	orrs	r3, r2
 801b742:	f8ae 3000 	strh.w	r3, [lr]
 801b746:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b748:	441c      	add	r4, r3
 801b74a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b74c:	f10e 0e02 	add.w	lr, lr, #2
 801b750:	441e      	add	r6, r3
 801b752:	f108 38ff 	add.w	r8, r8, #4294967295
 801b756:	e6ce      	b.n	801b4f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b758:	f1bc 0f00 	cmp.w	ip, #0
 801b75c:	d0c5      	beq.n	801b6ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801b75e:	9908      	ldr	r1, [sp, #32]
 801b760:	440b      	add	r3, r1
 801b762:	0859      	lsrs	r1, r3, #1
 801b764:	07db      	lsls	r3, r3, #31
 801b766:	5c79      	ldrb	r1, [r7, r1]
 801b768:	bf54      	ite	pl
 801b76a:	f001 010f 	andpl.w	r1, r1, #15
 801b76e:	1109      	asrmi	r1, r1, #4
 801b770:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b774:	b2c9      	uxtb	r1, r1
 801b776:	910b      	str	r1, [sp, #44]	; 0x2c
 801b778:	e7b7      	b.n	801b6ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801b77a:	bf00      	nop
 801b77c:	20017758 	.word	0x20017758
 801b780:	fffff800 	.word	0xfffff800
 801b784:	2b00      	cmp	r3, #0
 801b786:	d0de      	beq.n	801b746 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b788:	4a21      	ldr	r2, [pc, #132]	; (801b810 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801b78a:	f8be c000 	ldrh.w	ip, [lr]
 801b78e:	6810      	ldr	r0, [r2, #0]
 801b790:	fa1f fa83 	uxth.w	sl, r3
 801b794:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b798:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b79c:	43db      	mvns	r3, r3
 801b79e:	b2db      	uxtb	r3, r3
 801b7a0:	fb12 f20a 	smulbb	r2, r2, sl
 801b7a4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b7a8:	fb01 2103 	mla	r1, r1, r3, r2
 801b7ac:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b7b0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b7b4:	b2c0      	uxtb	r0, r0
 801b7b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b7ba:	fa5f fc8c 	uxtb.w	ip, ip
 801b7be:	fb10 f00a 	smulbb	r0, r0, sl
 801b7c2:	fb0c 0003 	mla	r0, ip, r3, r0
 801b7c6:	b289      	uxth	r1, r1
 801b7c8:	fb1b fb0a 	smulbb	fp, fp, sl
 801b7cc:	b280      	uxth	r0, r0
 801b7ce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b7d2:	fb02 b203 	mla	r2, r2, r3, fp
 801b7d6:	1c4b      	adds	r3, r1, #1
 801b7d8:	f100 0b01 	add.w	fp, r0, #1
 801b7dc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b7e0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b7e4:	b292      	uxth	r2, r2
 801b7e6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801b7ea:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b7ee:	ea4b 0101 	orr.w	r1, fp, r1
 801b7f2:	f102 0b01 	add.w	fp, r2, #1
 801b7f6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b7fa:	0952      	lsrs	r2, r2, #5
 801b7fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b800:	4311      	orrs	r1, r2
 801b802:	f8ae 1000 	strh.w	r1, [lr]
 801b806:	e79e      	b.n	801b746 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b808:	b013      	add	sp, #76	; 0x4c
 801b80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b80e:	bf00      	nop
 801b810:	20017758 	.word	0x20017758

0801b814 <CRC_Lock>:
 801b814:	b530      	push	{r4, r5, lr}
 801b816:	4a20      	ldr	r2, [pc, #128]	; (801b898 <CRC_Lock+0x84>)
 801b818:	6813      	ldr	r3, [r2, #0]
 801b81a:	f023 0301 	bic.w	r3, r3, #1
 801b81e:	6013      	str	r3, [r2, #0]
 801b820:	4b1e      	ldr	r3, [pc, #120]	; (801b89c <CRC_Lock+0x88>)
 801b822:	681a      	ldr	r2, [r3, #0]
 801b824:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b828:	4022      	ands	r2, r4
 801b82a:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b82e:	42aa      	cmp	r2, r5
 801b830:	d005      	beq.n	801b83e <CRC_Lock+0x2a>
 801b832:	681b      	ldr	r3, [r3, #0]
 801b834:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b838:	4023      	ands	r3, r4
 801b83a:	4293      	cmp	r3, r2
 801b83c:	d124      	bne.n	801b888 <CRC_Lock+0x74>
 801b83e:	4b18      	ldr	r3, [pc, #96]	; (801b8a0 <CRC_Lock+0x8c>)
 801b840:	681b      	ldr	r3, [r3, #0]
 801b842:	bb0b      	cbnz	r3, 801b888 <CRC_Lock+0x74>
 801b844:	4b17      	ldr	r3, [pc, #92]	; (801b8a4 <CRC_Lock+0x90>)
 801b846:	681a      	ldr	r2, [r3, #0]
 801b848:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b84c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801b850:	d00d      	beq.n	801b86e <CRC_Lock+0x5a>
 801b852:	681a      	ldr	r2, [r3, #0]
 801b854:	f240 4483 	movw	r4, #1155	; 0x483
 801b858:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b85c:	42a2      	cmp	r2, r4
 801b85e:	d006      	beq.n	801b86e <CRC_Lock+0x5a>
 801b860:	681b      	ldr	r3, [r3, #0]
 801b862:	f240 4285 	movw	r2, #1157	; 0x485
 801b866:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b86a:	4293      	cmp	r3, r2
 801b86c:	d10c      	bne.n	801b888 <CRC_Lock+0x74>
 801b86e:	4b0e      	ldr	r3, [pc, #56]	; (801b8a8 <CRC_Lock+0x94>)
 801b870:	2201      	movs	r2, #1
 801b872:	601a      	str	r2, [r3, #0]
 801b874:	681a      	ldr	r2, [r3, #0]
 801b876:	2a00      	cmp	r2, #0
 801b878:	d1fc      	bne.n	801b874 <CRC_Lock+0x60>
 801b87a:	4b0c      	ldr	r3, [pc, #48]	; (801b8ac <CRC_Lock+0x98>)
 801b87c:	6018      	str	r0, [r3, #0]
 801b87e:	6818      	ldr	r0, [r3, #0]
 801b880:	1a43      	subs	r3, r0, r1
 801b882:	4258      	negs	r0, r3
 801b884:	4158      	adcs	r0, r3
 801b886:	bd30      	pop	{r4, r5, pc}
 801b888:	4b09      	ldr	r3, [pc, #36]	; (801b8b0 <CRC_Lock+0x9c>)
 801b88a:	2201      	movs	r2, #1
 801b88c:	601a      	str	r2, [r3, #0]
 801b88e:	681a      	ldr	r2, [r3, #0]
 801b890:	2a00      	cmp	r2, #0
 801b892:	d1fc      	bne.n	801b88e <CRC_Lock+0x7a>
 801b894:	4b07      	ldr	r3, [pc, #28]	; (801b8b4 <CRC_Lock+0xa0>)
 801b896:	e7f1      	b.n	801b87c <CRC_Lock+0x68>
 801b898:	e0002000 	.word	0xe0002000
 801b89c:	e000ed00 	.word	0xe000ed00
 801b8a0:	e0042000 	.word	0xe0042000
 801b8a4:	5c001000 	.word	0x5c001000
 801b8a8:	58024c08 	.word	0x58024c08
 801b8ac:	58024c00 	.word	0x58024c00
 801b8b0:	40023008 	.word	0x40023008
 801b8b4:	40023000 	.word	0x40023000

0801b8b8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b8b8:	6101      	str	r1, [r0, #16]
 801b8ba:	4770      	bx	lr

0801b8bc <_ZN8touchgfx8Gestures4tickEv>:
 801b8bc:	7b83      	ldrb	r3, [r0, #14]
 801b8be:	b14b      	cbz	r3, 801b8d4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b8c0:	8903      	ldrh	r3, [r0, #8]
 801b8c2:	3301      	adds	r3, #1
 801b8c4:	b29b      	uxth	r3, r3
 801b8c6:	2b07      	cmp	r3, #7
 801b8c8:	8103      	strh	r3, [r0, #8]
 801b8ca:	bf81      	itttt	hi
 801b8cc:	2300      	movhi	r3, #0
 801b8ce:	8143      	strhhi	r3, [r0, #10]
 801b8d0:	8183      	strhhi	r3, [r0, #12]
 801b8d2:	7383      	strbhi	r3, [r0, #14]
 801b8d4:	4770      	bx	lr
	...

0801b8d8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b8d8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b8dc:	4698      	mov	r8, r3
 801b8de:	8883      	ldrh	r3, [r0, #4]
 801b8e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b8e4:	eba8 0303 	sub.w	r3, r8, r3
 801b8e8:	b21b      	sxth	r3, r3
 801b8ea:	4604      	mov	r4, r0
 801b8ec:	2b00      	cmp	r3, #0
 801b8ee:	4617      	mov	r7, r2
 801b8f0:	4a18      	ldr	r2, [pc, #96]	; (801b954 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801b8f2:	9200      	str	r2, [sp, #0]
 801b8f4:	bfb8      	it	lt
 801b8f6:	425b      	neglt	r3, r3
 801b8f8:	8aa2      	ldrh	r2, [r4, #20]
 801b8fa:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b8fe:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b902:	b21b      	sxth	r3, r3
 801b904:	460e      	mov	r6, r1
 801b906:	4293      	cmp	r3, r2
 801b908:	88c1      	ldrh	r1, [r0, #6]
 801b90a:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b90e:	f04f 0000 	mov.w	r0, #0
 801b912:	f88d 0004 	strb.w	r0, [sp, #4]
 801b916:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b91a:	dc07      	bgt.n	801b92c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801b91c:	1a69      	subs	r1, r5, r1
 801b91e:	b209      	sxth	r1, r1
 801b920:	2900      	cmp	r1, #0
 801b922:	bfb8      	it	lt
 801b924:	4249      	neglt	r1, r1
 801b926:	b209      	sxth	r1, r1
 801b928:	428a      	cmp	r2, r1
 801b92a:	da10      	bge.n	801b94e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801b92c:	6920      	ldr	r0, [r4, #16]
 801b92e:	6803      	ldr	r3, [r0, #0]
 801b930:	4669      	mov	r1, sp
 801b932:	685b      	ldr	r3, [r3, #4]
 801b934:	4798      	blx	r3
 801b936:	eba8 0606 	sub.w	r6, r8, r6
 801b93a:	2300      	movs	r3, #0
 801b93c:	1bef      	subs	r7, r5, r7
 801b93e:	2001      	movs	r0, #1
 801b940:	8123      	strh	r3, [r4, #8]
 801b942:	8166      	strh	r6, [r4, #10]
 801b944:	81a7      	strh	r7, [r4, #12]
 801b946:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b94a:	80e5      	strh	r5, [r4, #6]
 801b94c:	73a0      	strb	r0, [r4, #14]
 801b94e:	b004      	add	sp, #16
 801b950:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b954:	0801e8a4 	.word	0x0801e8a4

0801b958 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b958:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b95a:	461e      	mov	r6, r3
 801b95c:	1e4b      	subs	r3, r1, #1
 801b95e:	2b01      	cmp	r3, #1
 801b960:	b085      	sub	sp, #20
 801b962:	4604      	mov	r4, r0
 801b964:	460d      	mov	r5, r1
 801b966:	4617      	mov	r7, r2
 801b968:	d84b      	bhi.n	801ba02 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b96a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b96e:	1cd3      	adds	r3, r2, #3
 801b970:	b29b      	uxth	r3, r3
 801b972:	2b06      	cmp	r3, #6
 801b974:	d916      	bls.n	801b9a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b976:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801ba18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b97a:	f8cd c004 	str.w	ip, [sp, #4]
 801b97e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b982:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b986:	6900      	ldr	r0, [r0, #16]
 801b988:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b98c:	f04f 0c00 	mov.w	ip, #0
 801b990:	f88d c008 	strb.w	ip, [sp, #8]
 801b994:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b998:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b99c:	6803      	ldr	r3, [r0, #0]
 801b99e:	a901      	add	r1, sp, #4
 801b9a0:	689b      	ldr	r3, [r3, #8]
 801b9a2:	4798      	blx	r3
 801b9a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b9a8:	1cd3      	adds	r3, r2, #3
 801b9aa:	b29b      	uxth	r3, r3
 801b9ac:	2b06      	cmp	r3, #6
 801b9ae:	d916      	bls.n	801b9de <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b9b0:	f8df c064 	ldr.w	ip, [pc, #100]	; 801ba18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b9b4:	f8cd c004 	str.w	ip, [sp, #4]
 801b9b8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b9bc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b9c0:	6920      	ldr	r0, [r4, #16]
 801b9c2:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b9c6:	f04f 0c01 	mov.w	ip, #1
 801b9ca:	f88d c008 	strb.w	ip, [sp, #8]
 801b9ce:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b9d2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b9d6:	6803      	ldr	r3, [r0, #0]
 801b9d8:	a901      	add	r1, sp, #4
 801b9da:	689b      	ldr	r3, [r3, #8]
 801b9dc:	4798      	blx	r3
 801b9de:	4b0d      	ldr	r3, [pc, #52]	; (801ba14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801b9e0:	9301      	str	r3, [sp, #4]
 801b9e2:	6920      	ldr	r0, [r4, #16]
 801b9e4:	f88d 5008 	strb.w	r5, [sp, #8]
 801b9e8:	2300      	movs	r3, #0
 801b9ea:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b9ee:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b9f2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b9f6:	6803      	ldr	r3, [r0, #0]
 801b9f8:	a901      	add	r1, sp, #4
 801b9fa:	681b      	ldr	r3, [r3, #0]
 801b9fc:	4798      	blx	r3
 801b9fe:	b005      	add	sp, #20
 801ba00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ba02:	2900      	cmp	r1, #0
 801ba04:	d1eb      	bne.n	801b9de <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ba06:	80a2      	strh	r2, [r4, #4]
 801ba08:	80c6      	strh	r6, [r0, #6]
 801ba0a:	60a1      	str	r1, [r4, #8]
 801ba0c:	81a1      	strh	r1, [r4, #12]
 801ba0e:	73a1      	strb	r1, [r4, #14]
 801ba10:	e7e5      	b.n	801b9de <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ba12:	bf00      	nop
 801ba14:	0801e890 	.word	0x0801e890
 801ba18:	0801f5b8 	.word	0x0801f5b8

0801ba1c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801ba1c:	b570      	push	{r4, r5, r6, lr}
 801ba1e:	790b      	ldrb	r3, [r1, #4]
 801ba20:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801ba24:	2b00      	cmp	r3, #0
 801ba26:	bf0c      	ite	eq
 801ba28:	2301      	moveq	r3, #1
 801ba2a:	2300      	movne	r3, #0
 801ba2c:	4604      	mov	r4, r0
 801ba2e:	460e      	mov	r6, r1
 801ba30:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801ba34:	d109      	bne.n	801ba4a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801ba36:	b14d      	cbz	r5, 801ba4c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801ba38:	7933      	ldrb	r3, [r6, #4]
 801ba3a:	2b01      	cmp	r3, #1
 801ba3c:	d10c      	bne.n	801ba58 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ba3e:	6823      	ldr	r3, [r4, #0]
 801ba40:	4620      	mov	r0, r4
 801ba42:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801ba44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ba48:	4718      	bx	r3
 801ba4a:	b12d      	cbz	r5, 801ba58 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ba4c:	6823      	ldr	r3, [r4, #0]
 801ba4e:	4620      	mov	r0, r4
 801ba50:	695b      	ldr	r3, [r3, #20]
 801ba52:	4798      	blx	r3
 801ba54:	2d00      	cmp	r5, #0
 801ba56:	d1ef      	bne.n	801ba38 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801ba58:	bd70      	pop	{r4, r5, r6, pc}

0801ba5a <__aeabi_atexit>:
 801ba5a:	460b      	mov	r3, r1
 801ba5c:	4601      	mov	r1, r0
 801ba5e:	4618      	mov	r0, r3
 801ba60:	f000 bdf4 	b.w	801c64c <__cxa_atexit>

0801ba64 <_ZdlPvj>:
 801ba64:	f000 b812 	b.w	801ba8c <_ZdlPv>

0801ba68 <__cxa_guard_acquire>:
 801ba68:	6803      	ldr	r3, [r0, #0]
 801ba6a:	07db      	lsls	r3, r3, #31
 801ba6c:	d406      	bmi.n	801ba7c <__cxa_guard_acquire+0x14>
 801ba6e:	7843      	ldrb	r3, [r0, #1]
 801ba70:	b103      	cbz	r3, 801ba74 <__cxa_guard_acquire+0xc>
 801ba72:	deff      	udf	#255	; 0xff
 801ba74:	2301      	movs	r3, #1
 801ba76:	7043      	strb	r3, [r0, #1]
 801ba78:	4618      	mov	r0, r3
 801ba7a:	4770      	bx	lr
 801ba7c:	2000      	movs	r0, #0
 801ba7e:	4770      	bx	lr

0801ba80 <__cxa_guard_release>:
 801ba80:	2301      	movs	r3, #1
 801ba82:	6003      	str	r3, [r0, #0]
 801ba84:	4770      	bx	lr

0801ba86 <__cxa_pure_virtual>:
 801ba86:	b508      	push	{r3, lr}
 801ba88:	f000 f80e 	bl	801baa8 <_ZSt9terminatev>

0801ba8c <_ZdlPv>:
 801ba8c:	f000 be30 	b.w	801c6f0 <free>

0801ba90 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801ba90:	b508      	push	{r3, lr}
 801ba92:	4780      	blx	r0
 801ba94:	f000 fdae 	bl	801c5f4 <abort>

0801ba98 <_ZSt13get_terminatev>:
 801ba98:	4b02      	ldr	r3, [pc, #8]	; (801baa4 <_ZSt13get_terminatev+0xc>)
 801ba9a:	6818      	ldr	r0, [r3, #0]
 801ba9c:	f3bf 8f5b 	dmb	ish
 801baa0:	4770      	bx	lr
 801baa2:	bf00      	nop
 801baa4:	200000f8 	.word	0x200000f8

0801baa8 <_ZSt9terminatev>:
 801baa8:	b508      	push	{r3, lr}
 801baaa:	f7ff fff5 	bl	801ba98 <_ZSt13get_terminatev>
 801baae:	f7ff ffef 	bl	801ba90 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0801bab4 <cosf>:
 801bab4:	ee10 3a10 	vmov	r3, s0
 801bab8:	b507      	push	{r0, r1, r2, lr}
 801baba:	4a1e      	ldr	r2, [pc, #120]	; (801bb34 <cosf+0x80>)
 801babc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801bac0:	4293      	cmp	r3, r2
 801bac2:	dc06      	bgt.n	801bad2 <cosf+0x1e>
 801bac4:	eddf 0a1c 	vldr	s1, [pc, #112]	; 801bb38 <cosf+0x84>
 801bac8:	b003      	add	sp, #12
 801baca:	f85d eb04 	ldr.w	lr, [sp], #4
 801bace:	f000 b9b7 	b.w	801be40 <__kernel_cosf>
 801bad2:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 801bad6:	db04      	blt.n	801bae2 <cosf+0x2e>
 801bad8:	ee30 0a40 	vsub.f32	s0, s0, s0
 801badc:	b003      	add	sp, #12
 801bade:	f85d fb04 	ldr.w	pc, [sp], #4
 801bae2:	4668      	mov	r0, sp
 801bae4:	f000 f870 	bl	801bbc8 <__ieee754_rem_pio2f>
 801bae8:	f000 0003 	and.w	r0, r0, #3
 801baec:	2801      	cmp	r0, #1
 801baee:	d009      	beq.n	801bb04 <cosf+0x50>
 801baf0:	2802      	cmp	r0, #2
 801baf2:	d010      	beq.n	801bb16 <cosf+0x62>
 801baf4:	b9b0      	cbnz	r0, 801bb24 <cosf+0x70>
 801baf6:	eddd 0a01 	vldr	s1, [sp, #4]
 801bafa:	ed9d 0a00 	vldr	s0, [sp]
 801bafe:	f000 f99f 	bl	801be40 <__kernel_cosf>
 801bb02:	e7eb      	b.n	801badc <cosf+0x28>
 801bb04:	eddd 0a01 	vldr	s1, [sp, #4]
 801bb08:	ed9d 0a00 	vldr	s0, [sp]
 801bb0c:	f000 fc6e 	bl	801c3ec <__kernel_sinf>
 801bb10:	eeb1 0a40 	vneg.f32	s0, s0
 801bb14:	e7e2      	b.n	801badc <cosf+0x28>
 801bb16:	eddd 0a01 	vldr	s1, [sp, #4]
 801bb1a:	ed9d 0a00 	vldr	s0, [sp]
 801bb1e:	f000 f98f 	bl	801be40 <__kernel_cosf>
 801bb22:	e7f5      	b.n	801bb10 <cosf+0x5c>
 801bb24:	eddd 0a01 	vldr	s1, [sp, #4]
 801bb28:	ed9d 0a00 	vldr	s0, [sp]
 801bb2c:	2001      	movs	r0, #1
 801bb2e:	f000 fc5d 	bl	801c3ec <__kernel_sinf>
 801bb32:	e7d3      	b.n	801badc <cosf+0x28>
 801bb34:	3f490fd8 	.word	0x3f490fd8
 801bb38:	00000000 	.word	0x00000000

0801bb3c <sinf>:
 801bb3c:	ee10 3a10 	vmov	r3, s0
 801bb40:	b507      	push	{r0, r1, r2, lr}
 801bb42:	4a1f      	ldr	r2, [pc, #124]	; (801bbc0 <sinf+0x84>)
 801bb44:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801bb48:	4293      	cmp	r3, r2
 801bb4a:	dc07      	bgt.n	801bb5c <sinf+0x20>
 801bb4c:	eddf 0a1d 	vldr	s1, [pc, #116]	; 801bbc4 <sinf+0x88>
 801bb50:	2000      	movs	r0, #0
 801bb52:	b003      	add	sp, #12
 801bb54:	f85d eb04 	ldr.w	lr, [sp], #4
 801bb58:	f000 bc48 	b.w	801c3ec <__kernel_sinf>
 801bb5c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 801bb60:	db04      	blt.n	801bb6c <sinf+0x30>
 801bb62:	ee30 0a40 	vsub.f32	s0, s0, s0
 801bb66:	b003      	add	sp, #12
 801bb68:	f85d fb04 	ldr.w	pc, [sp], #4
 801bb6c:	4668      	mov	r0, sp
 801bb6e:	f000 f82b 	bl	801bbc8 <__ieee754_rem_pio2f>
 801bb72:	f000 0003 	and.w	r0, r0, #3
 801bb76:	2801      	cmp	r0, #1
 801bb78:	d00a      	beq.n	801bb90 <sinf+0x54>
 801bb7a:	2802      	cmp	r0, #2
 801bb7c:	d00f      	beq.n	801bb9e <sinf+0x62>
 801bb7e:	b9c0      	cbnz	r0, 801bbb2 <sinf+0x76>
 801bb80:	eddd 0a01 	vldr	s1, [sp, #4]
 801bb84:	ed9d 0a00 	vldr	s0, [sp]
 801bb88:	2001      	movs	r0, #1
 801bb8a:	f000 fc2f 	bl	801c3ec <__kernel_sinf>
 801bb8e:	e7ea      	b.n	801bb66 <sinf+0x2a>
 801bb90:	eddd 0a01 	vldr	s1, [sp, #4]
 801bb94:	ed9d 0a00 	vldr	s0, [sp]
 801bb98:	f000 f952 	bl	801be40 <__kernel_cosf>
 801bb9c:	e7e3      	b.n	801bb66 <sinf+0x2a>
 801bb9e:	eddd 0a01 	vldr	s1, [sp, #4]
 801bba2:	ed9d 0a00 	vldr	s0, [sp]
 801bba6:	2001      	movs	r0, #1
 801bba8:	f000 fc20 	bl	801c3ec <__kernel_sinf>
 801bbac:	eeb1 0a40 	vneg.f32	s0, s0
 801bbb0:	e7d9      	b.n	801bb66 <sinf+0x2a>
 801bbb2:	eddd 0a01 	vldr	s1, [sp, #4]
 801bbb6:	ed9d 0a00 	vldr	s0, [sp]
 801bbba:	f000 f941 	bl	801be40 <__kernel_cosf>
 801bbbe:	e7f5      	b.n	801bbac <sinf+0x70>
 801bbc0:	3f490fd8 	.word	0x3f490fd8
 801bbc4:	00000000 	.word	0x00000000

0801bbc8 <__ieee754_rem_pio2f>:
 801bbc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bbca:	ee10 6a10 	vmov	r6, s0
 801bbce:	4b8e      	ldr	r3, [pc, #568]	; (801be08 <__ieee754_rem_pio2f+0x240>)
 801bbd0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 801bbd4:	429d      	cmp	r5, r3
 801bbd6:	b087      	sub	sp, #28
 801bbd8:	eef0 7a40 	vmov.f32	s15, s0
 801bbdc:	4604      	mov	r4, r0
 801bbde:	dc05      	bgt.n	801bbec <__ieee754_rem_pio2f+0x24>
 801bbe0:	2300      	movs	r3, #0
 801bbe2:	ed80 0a00 	vstr	s0, [r0]
 801bbe6:	6043      	str	r3, [r0, #4]
 801bbe8:	2000      	movs	r0, #0
 801bbea:	e01a      	b.n	801bc22 <__ieee754_rem_pio2f+0x5a>
 801bbec:	4b87      	ldr	r3, [pc, #540]	; (801be0c <__ieee754_rem_pio2f+0x244>)
 801bbee:	429d      	cmp	r5, r3
 801bbf0:	dc46      	bgt.n	801bc80 <__ieee754_rem_pio2f+0xb8>
 801bbf2:	2e00      	cmp	r6, #0
 801bbf4:	ed9f 0a86 	vldr	s0, [pc, #536]	; 801be10 <__ieee754_rem_pio2f+0x248>
 801bbf8:	4b86      	ldr	r3, [pc, #536]	; (801be14 <__ieee754_rem_pio2f+0x24c>)
 801bbfa:	f025 050f 	bic.w	r5, r5, #15
 801bbfe:	dd1f      	ble.n	801bc40 <__ieee754_rem_pio2f+0x78>
 801bc00:	429d      	cmp	r5, r3
 801bc02:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801bc06:	d00e      	beq.n	801bc26 <__ieee754_rem_pio2f+0x5e>
 801bc08:	ed9f 7a83 	vldr	s14, [pc, #524]	; 801be18 <__ieee754_rem_pio2f+0x250>
 801bc0c:	ee37 0ac7 	vsub.f32	s0, s15, s14
 801bc10:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801bc14:	ed80 0a00 	vstr	s0, [r0]
 801bc18:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801bc1c:	2001      	movs	r0, #1
 801bc1e:	edc4 7a01 	vstr	s15, [r4, #4]
 801bc22:	b007      	add	sp, #28
 801bc24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bc26:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 801be1c <__ieee754_rem_pio2f+0x254>
 801bc2a:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 801be20 <__ieee754_rem_pio2f+0x258>
 801bc2e:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801bc32:	ee77 6ac7 	vsub.f32	s13, s15, s14
 801bc36:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801bc3a:	edc0 6a00 	vstr	s13, [r0]
 801bc3e:	e7eb      	b.n	801bc18 <__ieee754_rem_pio2f+0x50>
 801bc40:	429d      	cmp	r5, r3
 801bc42:	ee77 7a80 	vadd.f32	s15, s15, s0
 801bc46:	d00e      	beq.n	801bc66 <__ieee754_rem_pio2f+0x9e>
 801bc48:	ed9f 7a73 	vldr	s14, [pc, #460]	; 801be18 <__ieee754_rem_pio2f+0x250>
 801bc4c:	ee37 0a87 	vadd.f32	s0, s15, s14
 801bc50:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801bc54:	ed80 0a00 	vstr	s0, [r0]
 801bc58:	ee77 7a87 	vadd.f32	s15, s15, s14
 801bc5c:	f04f 30ff 	mov.w	r0, #4294967295
 801bc60:	edc4 7a01 	vstr	s15, [r4, #4]
 801bc64:	e7dd      	b.n	801bc22 <__ieee754_rem_pio2f+0x5a>
 801bc66:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 801be1c <__ieee754_rem_pio2f+0x254>
 801bc6a:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 801be20 <__ieee754_rem_pio2f+0x258>
 801bc6e:	ee77 7a80 	vadd.f32	s15, s15, s0
 801bc72:	ee77 6a87 	vadd.f32	s13, s15, s14
 801bc76:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801bc7a:	edc0 6a00 	vstr	s13, [r0]
 801bc7e:	e7eb      	b.n	801bc58 <__ieee754_rem_pio2f+0x90>
 801bc80:	4b68      	ldr	r3, [pc, #416]	; (801be24 <__ieee754_rem_pio2f+0x25c>)
 801bc82:	429d      	cmp	r5, r3
 801bc84:	dc72      	bgt.n	801bd6c <__ieee754_rem_pio2f+0x1a4>
 801bc86:	f000 fbf9 	bl	801c47c <fabsf>
 801bc8a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 801be28 <__ieee754_rem_pio2f+0x260>
 801bc8e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801bc92:	eee0 7a07 	vfma.f32	s15, s0, s14
 801bc96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bc9a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801bc9e:	ee17 0a90 	vmov	r0, s15
 801bca2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 801be10 <__ieee754_rem_pio2f+0x248>
 801bca6:	eea7 0a67 	vfms.f32	s0, s14, s15
 801bcaa:	281f      	cmp	r0, #31
 801bcac:	eddf 7a5a 	vldr	s15, [pc, #360]	; 801be18 <__ieee754_rem_pio2f+0x250>
 801bcb0:	ee67 7a27 	vmul.f32	s15, s14, s15
 801bcb4:	eeb1 6a47 	vneg.f32	s12, s14
 801bcb8:	ee70 6a67 	vsub.f32	s13, s0, s15
 801bcbc:	ee16 2a90 	vmov	r2, s13
 801bcc0:	dc1c      	bgt.n	801bcfc <__ieee754_rem_pio2f+0x134>
 801bcc2:	495a      	ldr	r1, [pc, #360]	; (801be2c <__ieee754_rem_pio2f+0x264>)
 801bcc4:	1e47      	subs	r7, r0, #1
 801bcc6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 801bcca:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801bcce:	428b      	cmp	r3, r1
 801bcd0:	d014      	beq.n	801bcfc <__ieee754_rem_pio2f+0x134>
 801bcd2:	6022      	str	r2, [r4, #0]
 801bcd4:	ed94 7a00 	vldr	s14, [r4]
 801bcd8:	ee30 0a47 	vsub.f32	s0, s0, s14
 801bcdc:	2e00      	cmp	r6, #0
 801bcde:	ee30 0a67 	vsub.f32	s0, s0, s15
 801bce2:	ed84 0a01 	vstr	s0, [r4, #4]
 801bce6:	da9c      	bge.n	801bc22 <__ieee754_rem_pio2f+0x5a>
 801bce8:	eeb1 7a47 	vneg.f32	s14, s14
 801bcec:	eeb1 0a40 	vneg.f32	s0, s0
 801bcf0:	ed84 7a00 	vstr	s14, [r4]
 801bcf4:	ed84 0a01 	vstr	s0, [r4, #4]
 801bcf8:	4240      	negs	r0, r0
 801bcfa:	e792      	b.n	801bc22 <__ieee754_rem_pio2f+0x5a>
 801bcfc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 801bd00:	15eb      	asrs	r3, r5, #23
 801bd02:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 801bd06:	2d08      	cmp	r5, #8
 801bd08:	dde3      	ble.n	801bcd2 <__ieee754_rem_pio2f+0x10a>
 801bd0a:	eddf 7a44 	vldr	s15, [pc, #272]	; 801be1c <__ieee754_rem_pio2f+0x254>
 801bd0e:	eddf 5a44 	vldr	s11, [pc, #272]	; 801be20 <__ieee754_rem_pio2f+0x258>
 801bd12:	eef0 6a40 	vmov.f32	s13, s0
 801bd16:	eee6 6a27 	vfma.f32	s13, s12, s15
 801bd1a:	ee30 0a66 	vsub.f32	s0, s0, s13
 801bd1e:	eea6 0a27 	vfma.f32	s0, s12, s15
 801bd22:	eef0 7a40 	vmov.f32	s15, s0
 801bd26:	eed7 7a25 	vfnms.f32	s15, s14, s11
 801bd2a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 801bd2e:	ee15 2a90 	vmov	r2, s11
 801bd32:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 801bd36:	1a5b      	subs	r3, r3, r1
 801bd38:	2b19      	cmp	r3, #25
 801bd3a:	dc04      	bgt.n	801bd46 <__ieee754_rem_pio2f+0x17e>
 801bd3c:	edc4 5a00 	vstr	s11, [r4]
 801bd40:	eeb0 0a66 	vmov.f32	s0, s13
 801bd44:	e7c6      	b.n	801bcd4 <__ieee754_rem_pio2f+0x10c>
 801bd46:	eddf 5a3a 	vldr	s11, [pc, #232]	; 801be30 <__ieee754_rem_pio2f+0x268>
 801bd4a:	eeb0 0a66 	vmov.f32	s0, s13
 801bd4e:	eea6 0a25 	vfma.f32	s0, s12, s11
 801bd52:	ee76 7ac0 	vsub.f32	s15, s13, s0
 801bd56:	eddf 6a37 	vldr	s13, [pc, #220]	; 801be34 <__ieee754_rem_pio2f+0x26c>
 801bd5a:	eee6 7a25 	vfma.f32	s15, s12, s11
 801bd5e:	eed7 7a26 	vfnms.f32	s15, s14, s13
 801bd62:	ee30 7a67 	vsub.f32	s14, s0, s15
 801bd66:	ed84 7a00 	vstr	s14, [r4]
 801bd6a:	e7b3      	b.n	801bcd4 <__ieee754_rem_pio2f+0x10c>
 801bd6c:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 801bd70:	db06      	blt.n	801bd80 <__ieee754_rem_pio2f+0x1b8>
 801bd72:	ee70 7a40 	vsub.f32	s15, s0, s0
 801bd76:	edc0 7a01 	vstr	s15, [r0, #4]
 801bd7a:	edc0 7a00 	vstr	s15, [r0]
 801bd7e:	e733      	b.n	801bbe8 <__ieee754_rem_pio2f+0x20>
 801bd80:	15ea      	asrs	r2, r5, #23
 801bd82:	3a86      	subs	r2, #134	; 0x86
 801bd84:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 801bd88:	ee07 3a90 	vmov	s15, r3
 801bd8c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801bd90:	eddf 6a29 	vldr	s13, [pc, #164]	; 801be38 <__ieee754_rem_pio2f+0x270>
 801bd94:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd98:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801bd9c:	ed8d 7a03 	vstr	s14, [sp, #12]
 801bda0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bda4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801bda8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bdac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801bdb0:	ed8d 7a04 	vstr	s14, [sp, #16]
 801bdb4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bdb8:	eef5 7a40 	vcmp.f32	s15, #0.0
 801bdbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdc0:	edcd 7a05 	vstr	s15, [sp, #20]
 801bdc4:	d11e      	bne.n	801be04 <__ieee754_rem_pio2f+0x23c>
 801bdc6:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801bdca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdce:	bf14      	ite	ne
 801bdd0:	2302      	movne	r3, #2
 801bdd2:	2301      	moveq	r3, #1
 801bdd4:	4919      	ldr	r1, [pc, #100]	; (801be3c <__ieee754_rem_pio2f+0x274>)
 801bdd6:	9101      	str	r1, [sp, #4]
 801bdd8:	2102      	movs	r1, #2
 801bdda:	9100      	str	r1, [sp, #0]
 801bddc:	a803      	add	r0, sp, #12
 801bdde:	4621      	mov	r1, r4
 801bde0:	f000 f88e 	bl	801bf00 <__kernel_rem_pio2f>
 801bde4:	2e00      	cmp	r6, #0
 801bde6:	f6bf af1c 	bge.w	801bc22 <__ieee754_rem_pio2f+0x5a>
 801bdea:	edd4 7a00 	vldr	s15, [r4]
 801bdee:	eef1 7a67 	vneg.f32	s15, s15
 801bdf2:	edc4 7a00 	vstr	s15, [r4]
 801bdf6:	edd4 7a01 	vldr	s15, [r4, #4]
 801bdfa:	eef1 7a67 	vneg.f32	s15, s15
 801bdfe:	edc4 7a01 	vstr	s15, [r4, #4]
 801be02:	e779      	b.n	801bcf8 <__ieee754_rem_pio2f+0x130>
 801be04:	2303      	movs	r3, #3
 801be06:	e7e5      	b.n	801bdd4 <__ieee754_rem_pio2f+0x20c>
 801be08:	3f490fd8 	.word	0x3f490fd8
 801be0c:	4016cbe3 	.word	0x4016cbe3
 801be10:	3fc90f80 	.word	0x3fc90f80
 801be14:	3fc90fd0 	.word	0x3fc90fd0
 801be18:	37354443 	.word	0x37354443
 801be1c:	37354400 	.word	0x37354400
 801be20:	2e85a308 	.word	0x2e85a308
 801be24:	43490f80 	.word	0x43490f80
 801be28:	3f22f984 	.word	0x3f22f984
 801be2c:	0801f880 	.word	0x0801f880
 801be30:	2e85a300 	.word	0x2e85a300
 801be34:	248d3132 	.word	0x248d3132
 801be38:	43800000 	.word	0x43800000
 801be3c:	0801f900 	.word	0x0801f900

0801be40 <__kernel_cosf>:
 801be40:	ee10 3a10 	vmov	r3, s0
 801be44:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801be48:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 801be4c:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 801be50:	da05      	bge.n	801be5e <__kernel_cosf+0x1e>
 801be52:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801be56:	ee17 2a90 	vmov	r2, s15
 801be5a:	2a00      	cmp	r2, #0
 801be5c:	d03d      	beq.n	801beda <__kernel_cosf+0x9a>
 801be5e:	ee60 5a00 	vmul.f32	s11, s0, s0
 801be62:	eddf 7a1f 	vldr	s15, [pc, #124]	; 801bee0 <__kernel_cosf+0xa0>
 801be66:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 801bee4 <__kernel_cosf+0xa4>
 801be6a:	eddf 6a1f 	vldr	s13, [pc, #124]	; 801bee8 <__kernel_cosf+0xa8>
 801be6e:	4a1f      	ldr	r2, [pc, #124]	; (801beec <__kernel_cosf+0xac>)
 801be70:	eea5 7aa7 	vfma.f32	s14, s11, s15
 801be74:	4293      	cmp	r3, r2
 801be76:	eddf 7a1e 	vldr	s15, [pc, #120]	; 801bef0 <__kernel_cosf+0xb0>
 801be7a:	eee7 7a25 	vfma.f32	s15, s14, s11
 801be7e:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 801bef4 <__kernel_cosf+0xb4>
 801be82:	eea7 7aa5 	vfma.f32	s14, s15, s11
 801be86:	eddf 7a1c 	vldr	s15, [pc, #112]	; 801bef8 <__kernel_cosf+0xb8>
 801be8a:	eee7 7a25 	vfma.f32	s15, s14, s11
 801be8e:	eeb0 7a66 	vmov.f32	s14, s13
 801be92:	eea7 7aa5 	vfma.f32	s14, s15, s11
 801be96:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 801be9a:	ee65 7aa6 	vmul.f32	s15, s11, s13
 801be9e:	ee67 6a25 	vmul.f32	s13, s14, s11
 801bea2:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 801bea6:	eea5 7aa6 	vfma.f32	s14, s11, s13
 801beaa:	dc04      	bgt.n	801beb6 <__kernel_cosf+0x76>
 801beac:	ee37 7ac7 	vsub.f32	s14, s15, s14
 801beb0:	ee36 0a47 	vsub.f32	s0, s12, s14
 801beb4:	4770      	bx	lr
 801beb6:	4a11      	ldr	r2, [pc, #68]	; (801befc <__kernel_cosf+0xbc>)
 801beb8:	4293      	cmp	r3, r2
 801beba:	bfda      	itte	le
 801bebc:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 801bec0:	ee06 3a90 	vmovle	s13, r3
 801bec4:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 801bec8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801becc:	ee36 0a66 	vsub.f32	s0, s12, s13
 801bed0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801bed4:	ee30 0a67 	vsub.f32	s0, s0, s15
 801bed8:	4770      	bx	lr
 801beda:	eeb0 0a46 	vmov.f32	s0, s12
 801bede:	4770      	bx	lr
 801bee0:	ad47d74e 	.word	0xad47d74e
 801bee4:	310f74f6 	.word	0x310f74f6
 801bee8:	3d2aaaab 	.word	0x3d2aaaab
 801beec:	3e999999 	.word	0x3e999999
 801bef0:	b493f27c 	.word	0xb493f27c
 801bef4:	37d00d01 	.word	0x37d00d01
 801bef8:	bab60b61 	.word	0xbab60b61
 801befc:	3f480000 	.word	0x3f480000

0801bf00 <__kernel_rem_pio2f>:
 801bf00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf04:	ed2d 8b04 	vpush	{d8-d9}
 801bf08:	b0d9      	sub	sp, #356	; 0x164
 801bf0a:	4688      	mov	r8, r1
 801bf0c:	9002      	str	r0, [sp, #8]
 801bf0e:	49bb      	ldr	r1, [pc, #748]	; (801c1fc <__kernel_rem_pio2f+0x2fc>)
 801bf10:	9866      	ldr	r0, [sp, #408]	; 0x198
 801bf12:	9301      	str	r3, [sp, #4]
 801bf14:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 801bf18:	f8dd e19c 	ldr.w	lr, [sp, #412]	; 0x19c
 801bf1c:	1e59      	subs	r1, r3, #1
 801bf1e:	1d13      	adds	r3, r2, #4
 801bf20:	db27      	blt.n	801bf72 <__kernel_rem_pio2f+0x72>
 801bf22:	f1b2 0b03 	subs.w	fp, r2, #3
 801bf26:	bf48      	it	mi
 801bf28:	f102 0b04 	addmi.w	fp, r2, #4
 801bf2c:	ea4f 00eb 	mov.w	r0, fp, asr #3
 801bf30:	1c45      	adds	r5, r0, #1
 801bf32:	00ec      	lsls	r4, r5, #3
 801bf34:	1a47      	subs	r7, r0, r1
 801bf36:	ed9f 7ab5 	vldr	s14, [pc, #724]	; 801c20c <__kernel_rem_pio2f+0x30c>
 801bf3a:	9403      	str	r4, [sp, #12]
 801bf3c:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 801bf40:	eb0a 0c01 	add.w	ip, sl, r1
 801bf44:	ae1c      	add	r6, sp, #112	; 0x70
 801bf46:	eb0e 0987 	add.w	r9, lr, r7, lsl #2
 801bf4a:	2400      	movs	r4, #0
 801bf4c:	4564      	cmp	r4, ip
 801bf4e:	dd12      	ble.n	801bf76 <__kernel_rem_pio2f+0x76>
 801bf50:	9b01      	ldr	r3, [sp, #4]
 801bf52:	ac1c      	add	r4, sp, #112	; 0x70
 801bf54:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 801bf58:	f50d 7b88 	add.w	fp, sp, #272	; 0x110
 801bf5c:	f04f 0c00 	mov.w	ip, #0
 801bf60:	45d4      	cmp	ip, sl
 801bf62:	dc27      	bgt.n	801bfb4 <__kernel_rem_pio2f+0xb4>
 801bf64:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801bf68:	eddf 7aa8 	vldr	s15, [pc, #672]	; 801c20c <__kernel_rem_pio2f+0x30c>
 801bf6c:	4627      	mov	r7, r4
 801bf6e:	2600      	movs	r6, #0
 801bf70:	e016      	b.n	801bfa0 <__kernel_rem_pio2f+0xa0>
 801bf72:	2000      	movs	r0, #0
 801bf74:	e7dc      	b.n	801bf30 <__kernel_rem_pio2f+0x30>
 801bf76:	42e7      	cmn	r7, r4
 801bf78:	bf5d      	ittte	pl
 801bf7a:	f859 3024 	ldrpl.w	r3, [r9, r4, lsl #2]
 801bf7e:	ee07 3a90 	vmovpl	s15, r3
 801bf82:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 801bf86:	eef0 7a47 	vmovmi.f32	s15, s14
 801bf8a:	ece6 7a01 	vstmia	r6!, {s15}
 801bf8e:	3401      	adds	r4, #1
 801bf90:	e7dc      	b.n	801bf4c <__kernel_rem_pio2f+0x4c>
 801bf92:	ecf9 6a01 	vldmia	r9!, {s13}
 801bf96:	ed97 7a00 	vldr	s14, [r7]
 801bf9a:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bf9e:	3601      	adds	r6, #1
 801bfa0:	428e      	cmp	r6, r1
 801bfa2:	f1a7 0704 	sub.w	r7, r7, #4
 801bfa6:	ddf4      	ble.n	801bf92 <__kernel_rem_pio2f+0x92>
 801bfa8:	eceb 7a01 	vstmia	fp!, {s15}
 801bfac:	f10c 0c01 	add.w	ip, ip, #1
 801bfb0:	3404      	adds	r4, #4
 801bfb2:	e7d5      	b.n	801bf60 <__kernel_rem_pio2f+0x60>
 801bfb4:	ab08      	add	r3, sp, #32
 801bfb6:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 801bfba:	eddf 8a93 	vldr	s17, [pc, #588]	; 801c208 <__kernel_rem_pio2f+0x308>
 801bfbe:	ed9f 9a91 	vldr	s18, [pc, #580]	; 801c204 <__kernel_rem_pio2f+0x304>
 801bfc2:	9304      	str	r3, [sp, #16]
 801bfc4:	eb0e 0b80 	add.w	fp, lr, r0, lsl #2
 801bfc8:	4656      	mov	r6, sl
 801bfca:	00b3      	lsls	r3, r6, #2
 801bfcc:	9305      	str	r3, [sp, #20]
 801bfce:	ab58      	add	r3, sp, #352	; 0x160
 801bfd0:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 801bfd4:	ac08      	add	r4, sp, #32
 801bfd6:	ab44      	add	r3, sp, #272	; 0x110
 801bfd8:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 801bfdc:	46a4      	mov	ip, r4
 801bfde:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 801bfe2:	4637      	mov	r7, r6
 801bfe4:	2f00      	cmp	r7, #0
 801bfe6:	f1a0 0004 	sub.w	r0, r0, #4
 801bfea:	dc4f      	bgt.n	801c08c <__kernel_rem_pio2f+0x18c>
 801bfec:	4628      	mov	r0, r5
 801bfee:	e9cd 1206 	strd	r1, r2, [sp, #24]
 801bff2:	f000 fa8d 	bl	801c510 <scalbnf>
 801bff6:	eeb0 8a40 	vmov.f32	s16, s0
 801bffa:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 801bffe:	ee28 0a00 	vmul.f32	s0, s16, s0
 801c002:	f000 fa43 	bl	801c48c <floorf>
 801c006:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 801c00a:	eea0 8a67 	vfms.f32	s16, s0, s15
 801c00e:	2d00      	cmp	r5, #0
 801c010:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801c014:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801c018:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801c01c:	ee17 9a90 	vmov	r9, s15
 801c020:	ee38 8a40 	vsub.f32	s16, s16, s0
 801c024:	dd44      	ble.n	801c0b0 <__kernel_rem_pio2f+0x1b0>
 801c026:	f106 3cff 	add.w	ip, r6, #4294967295
 801c02a:	ab08      	add	r3, sp, #32
 801c02c:	f1c5 0e08 	rsb	lr, r5, #8
 801c030:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 801c034:	fa47 f00e 	asr.w	r0, r7, lr
 801c038:	4481      	add	r9, r0
 801c03a:	fa00 f00e 	lsl.w	r0, r0, lr
 801c03e:	1a3f      	subs	r7, r7, r0
 801c040:	f1c5 0007 	rsb	r0, r5, #7
 801c044:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 801c048:	4107      	asrs	r7, r0
 801c04a:	2f00      	cmp	r7, #0
 801c04c:	dd3f      	ble.n	801c0ce <__kernel_rem_pio2f+0x1ce>
 801c04e:	f04f 0e00 	mov.w	lr, #0
 801c052:	f109 0901 	add.w	r9, r9, #1
 801c056:	4673      	mov	r3, lr
 801c058:	4576      	cmp	r6, lr
 801c05a:	dc6b      	bgt.n	801c134 <__kernel_rem_pio2f+0x234>
 801c05c:	2d00      	cmp	r5, #0
 801c05e:	dd04      	ble.n	801c06a <__kernel_rem_pio2f+0x16a>
 801c060:	2d01      	cmp	r5, #1
 801c062:	d078      	beq.n	801c156 <__kernel_rem_pio2f+0x256>
 801c064:	2d02      	cmp	r5, #2
 801c066:	f000 8081 	beq.w	801c16c <__kernel_rem_pio2f+0x26c>
 801c06a:	2f02      	cmp	r7, #2
 801c06c:	d12f      	bne.n	801c0ce <__kernel_rem_pio2f+0x1ce>
 801c06e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801c072:	ee30 8a48 	vsub.f32	s16, s0, s16
 801c076:	b353      	cbz	r3, 801c0ce <__kernel_rem_pio2f+0x1ce>
 801c078:	4628      	mov	r0, r5
 801c07a:	e9cd 1206 	strd	r1, r2, [sp, #24]
 801c07e:	f000 fa47 	bl	801c510 <scalbnf>
 801c082:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801c086:	ee38 8a40 	vsub.f32	s16, s16, s0
 801c08a:	e020      	b.n	801c0ce <__kernel_rem_pio2f+0x1ce>
 801c08c:	ee60 7a28 	vmul.f32	s15, s0, s17
 801c090:	3f01      	subs	r7, #1
 801c092:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c096:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c09a:	eea7 0ac9 	vfms.f32	s0, s15, s18
 801c09e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801c0a2:	ecac 0a01 	vstmia	ip!, {s0}
 801c0a6:	ed90 0a00 	vldr	s0, [r0]
 801c0aa:	ee37 0a80 	vadd.f32	s0, s15, s0
 801c0ae:	e799      	b.n	801bfe4 <__kernel_rem_pio2f+0xe4>
 801c0b0:	d105      	bne.n	801c0be <__kernel_rem_pio2f+0x1be>
 801c0b2:	1e70      	subs	r0, r6, #1
 801c0b4:	ab08      	add	r3, sp, #32
 801c0b6:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 801c0ba:	11ff      	asrs	r7, r7, #7
 801c0bc:	e7c5      	b.n	801c04a <__kernel_rem_pio2f+0x14a>
 801c0be:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801c0c2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801c0c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0ca:	da31      	bge.n	801c130 <__kernel_rem_pio2f+0x230>
 801c0cc:	2700      	movs	r7, #0
 801c0ce:	eeb5 8a40 	vcmp.f32	s16, #0.0
 801c0d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0d6:	f040 809b 	bne.w	801c210 <__kernel_rem_pio2f+0x310>
 801c0da:	1e74      	subs	r4, r6, #1
 801c0dc:	46a4      	mov	ip, r4
 801c0de:	2000      	movs	r0, #0
 801c0e0:	45d4      	cmp	ip, sl
 801c0e2:	da4a      	bge.n	801c17a <__kernel_rem_pio2f+0x27a>
 801c0e4:	2800      	cmp	r0, #0
 801c0e6:	d07a      	beq.n	801c1de <__kernel_rem_pio2f+0x2de>
 801c0e8:	ab08      	add	r3, sp, #32
 801c0ea:	3d08      	subs	r5, #8
 801c0ec:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 801c0f0:	2b00      	cmp	r3, #0
 801c0f2:	f000 8081 	beq.w	801c1f8 <__kernel_rem_pio2f+0x2f8>
 801c0f6:	4628      	mov	r0, r5
 801c0f8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801c0fc:	00a5      	lsls	r5, r4, #2
 801c0fe:	f000 fa07 	bl	801c510 <scalbnf>
 801c102:	aa44      	add	r2, sp, #272	; 0x110
 801c104:	1d2b      	adds	r3, r5, #4
 801c106:	ed9f 7a40 	vldr	s14, [pc, #256]	; 801c208 <__kernel_rem_pio2f+0x308>
 801c10a:	18d1      	adds	r1, r2, r3
 801c10c:	4622      	mov	r2, r4
 801c10e:	2a00      	cmp	r2, #0
 801c110:	f280 80ae 	bge.w	801c270 <__kernel_rem_pio2f+0x370>
 801c114:	4622      	mov	r2, r4
 801c116:	2a00      	cmp	r2, #0
 801c118:	f2c0 80cc 	blt.w	801c2b4 <__kernel_rem_pio2f+0x3b4>
 801c11c:	a944      	add	r1, sp, #272	; 0x110
 801c11e:	eb01 0682 	add.w	r6, r1, r2, lsl #2
 801c122:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 801c200 <__kernel_rem_pio2f+0x300>
 801c126:	eddf 7a39 	vldr	s15, [pc, #228]	; 801c20c <__kernel_rem_pio2f+0x30c>
 801c12a:	2000      	movs	r0, #0
 801c12c:	1aa1      	subs	r1, r4, r2
 801c12e:	e0b6      	b.n	801c29e <__kernel_rem_pio2f+0x39e>
 801c130:	2702      	movs	r7, #2
 801c132:	e78c      	b.n	801c04e <__kernel_rem_pio2f+0x14e>
 801c134:	6820      	ldr	r0, [r4, #0]
 801c136:	b94b      	cbnz	r3, 801c14c <__kernel_rem_pio2f+0x24c>
 801c138:	b118      	cbz	r0, 801c142 <__kernel_rem_pio2f+0x242>
 801c13a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c13e:	6020      	str	r0, [r4, #0]
 801c140:	2001      	movs	r0, #1
 801c142:	f10e 0e01 	add.w	lr, lr, #1
 801c146:	3404      	adds	r4, #4
 801c148:	4603      	mov	r3, r0
 801c14a:	e785      	b.n	801c058 <__kernel_rem_pio2f+0x158>
 801c14c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 801c150:	6020      	str	r0, [r4, #0]
 801c152:	4618      	mov	r0, r3
 801c154:	e7f5      	b.n	801c142 <__kernel_rem_pio2f+0x242>
 801c156:	1e74      	subs	r4, r6, #1
 801c158:	a808      	add	r0, sp, #32
 801c15a:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 801c15e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 801c162:	f10d 0c20 	add.w	ip, sp, #32
 801c166:	f84c 0024 	str.w	r0, [ip, r4, lsl #2]
 801c16a:	e77e      	b.n	801c06a <__kernel_rem_pio2f+0x16a>
 801c16c:	1e74      	subs	r4, r6, #1
 801c16e:	a808      	add	r0, sp, #32
 801c170:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 801c174:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 801c178:	e7f3      	b.n	801c162 <__kernel_rem_pio2f+0x262>
 801c17a:	ab08      	add	r3, sp, #32
 801c17c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c180:	f10c 3cff 	add.w	ip, ip, #4294967295
 801c184:	4318      	orrs	r0, r3
 801c186:	e7ab      	b.n	801c0e0 <__kernel_rem_pio2f+0x1e0>
 801c188:	f10c 0c01 	add.w	ip, ip, #1
 801c18c:	f850 4d04 	ldr.w	r4, [r0, #-4]!
 801c190:	2c00      	cmp	r4, #0
 801c192:	d0f9      	beq.n	801c188 <__kernel_rem_pio2f+0x288>
 801c194:	9b05      	ldr	r3, [sp, #20]
 801c196:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 801c19a:	eb0d 0003 	add.w	r0, sp, r3
 801c19e:	9b01      	ldr	r3, [sp, #4]
 801c1a0:	18f4      	adds	r4, r6, r3
 801c1a2:	ab1c      	add	r3, sp, #112	; 0x70
 801c1a4:	1c77      	adds	r7, r6, #1
 801c1a6:	384c      	subs	r0, #76	; 0x4c
 801c1a8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 801c1ac:	4466      	add	r6, ip
 801c1ae:	42be      	cmp	r6, r7
 801c1b0:	f6ff af0b 	blt.w	801bfca <__kernel_rem_pio2f+0xca>
 801c1b4:	f85b 3027 	ldr.w	r3, [fp, r7, lsl #2]
 801c1b8:	f8dd e008 	ldr.w	lr, [sp, #8]
 801c1bc:	ee07 3a90 	vmov	s15, r3
 801c1c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c1c4:	f04f 0c00 	mov.w	ip, #0
 801c1c8:	ece4 7a01 	vstmia	r4!, {s15}
 801c1cc:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801c20c <__kernel_rem_pio2f+0x30c>
 801c1d0:	46a1      	mov	r9, r4
 801c1d2:	458c      	cmp	ip, r1
 801c1d4:	dd07      	ble.n	801c1e6 <__kernel_rem_pio2f+0x2e6>
 801c1d6:	ece0 7a01 	vstmia	r0!, {s15}
 801c1da:	3701      	adds	r7, #1
 801c1dc:	e7e7      	b.n	801c1ae <__kernel_rem_pio2f+0x2ae>
 801c1de:	9804      	ldr	r0, [sp, #16]
 801c1e0:	f04f 0c01 	mov.w	ip, #1
 801c1e4:	e7d2      	b.n	801c18c <__kernel_rem_pio2f+0x28c>
 801c1e6:	ecfe 6a01 	vldmia	lr!, {s13}
 801c1ea:	ed39 7a01 	vldmdb	r9!, {s14}
 801c1ee:	f10c 0c01 	add.w	ip, ip, #1
 801c1f2:	eee6 7a87 	vfma.f32	s15, s13, s14
 801c1f6:	e7ec      	b.n	801c1d2 <__kernel_rem_pio2f+0x2d2>
 801c1f8:	3c01      	subs	r4, #1
 801c1fa:	e775      	b.n	801c0e8 <__kernel_rem_pio2f+0x1e8>
 801c1fc:	0801fc44 	.word	0x0801fc44
 801c200:	0801fc18 	.word	0x0801fc18
 801c204:	43800000 	.word	0x43800000
 801c208:	3b800000 	.word	0x3b800000
 801c20c:	00000000 	.word	0x00000000
 801c210:	9b03      	ldr	r3, [sp, #12]
 801c212:	eeb0 0a48 	vmov.f32	s0, s16
 801c216:	1a98      	subs	r0, r3, r2
 801c218:	f000 f97a 	bl	801c510 <scalbnf>
 801c21c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 801c204 <__kernel_rem_pio2f+0x304>
 801c220:	eeb4 0ac7 	vcmpe.f32	s0, s14
 801c224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c228:	db19      	blt.n	801c25e <__kernel_rem_pio2f+0x35e>
 801c22a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 801c208 <__kernel_rem_pio2f+0x308>
 801c22e:	ee60 7a27 	vmul.f32	s15, s0, s15
 801c232:	aa08      	add	r2, sp, #32
 801c234:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c238:	1c74      	adds	r4, r6, #1
 801c23a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c23e:	3508      	adds	r5, #8
 801c240:	eea7 0ac7 	vfms.f32	s0, s15, s14
 801c244:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c248:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801c24c:	ee10 3a10 	vmov	r3, s0
 801c250:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 801c254:	ee17 3a90 	vmov	r3, s15
 801c258:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 801c25c:	e74b      	b.n	801c0f6 <__kernel_rem_pio2f+0x1f6>
 801c25e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801c262:	aa08      	add	r2, sp, #32
 801c264:	ee10 3a10 	vmov	r3, s0
 801c268:	4634      	mov	r4, r6
 801c26a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 801c26e:	e742      	b.n	801c0f6 <__kernel_rem_pio2f+0x1f6>
 801c270:	a808      	add	r0, sp, #32
 801c272:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 801c276:	9001      	str	r0, [sp, #4]
 801c278:	ee07 0a90 	vmov	s15, r0
 801c27c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c280:	3a01      	subs	r2, #1
 801c282:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c286:	ee20 0a07 	vmul.f32	s0, s0, s14
 801c28a:	ed61 7a01 	vstmdb	r1!, {s15}
 801c28e:	e73e      	b.n	801c10e <__kernel_rem_pio2f+0x20e>
 801c290:	ecfc 6a01 	vldmia	ip!, {s13}
 801c294:	ecb6 7a01 	vldmia	r6!, {s14}
 801c298:	eee6 7a87 	vfma.f32	s15, s13, s14
 801c29c:	3001      	adds	r0, #1
 801c29e:	4550      	cmp	r0, sl
 801c2a0:	dc01      	bgt.n	801c2a6 <__kernel_rem_pio2f+0x3a6>
 801c2a2:	4288      	cmp	r0, r1
 801c2a4:	ddf4      	ble.n	801c290 <__kernel_rem_pio2f+0x390>
 801c2a6:	a858      	add	r0, sp, #352	; 0x160
 801c2a8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 801c2ac:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 801c2b0:	3a01      	subs	r2, #1
 801c2b2:	e730      	b.n	801c116 <__kernel_rem_pio2f+0x216>
 801c2b4:	9a66      	ldr	r2, [sp, #408]	; 0x198
 801c2b6:	2a02      	cmp	r2, #2
 801c2b8:	dc09      	bgt.n	801c2ce <__kernel_rem_pio2f+0x3ce>
 801c2ba:	2a00      	cmp	r2, #0
 801c2bc:	dc2a      	bgt.n	801c314 <__kernel_rem_pio2f+0x414>
 801c2be:	d043      	beq.n	801c348 <__kernel_rem_pio2f+0x448>
 801c2c0:	f009 0007 	and.w	r0, r9, #7
 801c2c4:	b059      	add	sp, #356	; 0x164
 801c2c6:	ecbd 8b04 	vpop	{d8-d9}
 801c2ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c2ce:	9b66      	ldr	r3, [sp, #408]	; 0x198
 801c2d0:	2b03      	cmp	r3, #3
 801c2d2:	d1f5      	bne.n	801c2c0 <__kernel_rem_pio2f+0x3c0>
 801c2d4:	ab30      	add	r3, sp, #192	; 0xc0
 801c2d6:	442b      	add	r3, r5
 801c2d8:	461a      	mov	r2, r3
 801c2da:	4619      	mov	r1, r3
 801c2dc:	4620      	mov	r0, r4
 801c2de:	2800      	cmp	r0, #0
 801c2e0:	f1a1 0104 	sub.w	r1, r1, #4
 801c2e4:	dc51      	bgt.n	801c38a <__kernel_rem_pio2f+0x48a>
 801c2e6:	4621      	mov	r1, r4
 801c2e8:	2901      	cmp	r1, #1
 801c2ea:	f1a2 0204 	sub.w	r2, r2, #4
 801c2ee:	dc5c      	bgt.n	801c3aa <__kernel_rem_pio2f+0x4aa>
 801c2f0:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 801c20c <__kernel_rem_pio2f+0x30c>
 801c2f4:	3304      	adds	r3, #4
 801c2f6:	2c01      	cmp	r4, #1
 801c2f8:	dc67      	bgt.n	801c3ca <__kernel_rem_pio2f+0x4ca>
 801c2fa:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801c2fe:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 801c302:	2f00      	cmp	r7, #0
 801c304:	d167      	bne.n	801c3d6 <__kernel_rem_pio2f+0x4d6>
 801c306:	edc8 6a00 	vstr	s13, [r8]
 801c30a:	ed88 7a01 	vstr	s14, [r8, #4]
 801c30e:	edc8 7a02 	vstr	s15, [r8, #8]
 801c312:	e7d5      	b.n	801c2c0 <__kernel_rem_pio2f+0x3c0>
 801c314:	aa30      	add	r2, sp, #192	; 0xc0
 801c316:	ed1f 7a43 	vldr	s14, [pc, #-268]	; 801c20c <__kernel_rem_pio2f+0x30c>
 801c31a:	4413      	add	r3, r2
 801c31c:	4622      	mov	r2, r4
 801c31e:	2a00      	cmp	r2, #0
 801c320:	da24      	bge.n	801c36c <__kernel_rem_pio2f+0x46c>
 801c322:	b34f      	cbz	r7, 801c378 <__kernel_rem_pio2f+0x478>
 801c324:	eef1 7a47 	vneg.f32	s15, s14
 801c328:	edc8 7a00 	vstr	s15, [r8]
 801c32c:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 801c330:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c334:	aa31      	add	r2, sp, #196	; 0xc4
 801c336:	2301      	movs	r3, #1
 801c338:	429c      	cmp	r4, r3
 801c33a:	da20      	bge.n	801c37e <__kernel_rem_pio2f+0x47e>
 801c33c:	b10f      	cbz	r7, 801c342 <__kernel_rem_pio2f+0x442>
 801c33e:	eef1 7a67 	vneg.f32	s15, s15
 801c342:	edc8 7a01 	vstr	s15, [r8, #4]
 801c346:	e7bb      	b.n	801c2c0 <__kernel_rem_pio2f+0x3c0>
 801c348:	aa30      	add	r2, sp, #192	; 0xc0
 801c34a:	ed5f 7a50 	vldr	s15, [pc, #-320]	; 801c20c <__kernel_rem_pio2f+0x30c>
 801c34e:	4413      	add	r3, r2
 801c350:	2c00      	cmp	r4, #0
 801c352:	da05      	bge.n	801c360 <__kernel_rem_pio2f+0x460>
 801c354:	b10f      	cbz	r7, 801c35a <__kernel_rem_pio2f+0x45a>
 801c356:	eef1 7a67 	vneg.f32	s15, s15
 801c35a:	edc8 7a00 	vstr	s15, [r8]
 801c35e:	e7af      	b.n	801c2c0 <__kernel_rem_pio2f+0x3c0>
 801c360:	ed33 7a01 	vldmdb	r3!, {s14}
 801c364:	3c01      	subs	r4, #1
 801c366:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c36a:	e7f1      	b.n	801c350 <__kernel_rem_pio2f+0x450>
 801c36c:	ed73 7a01 	vldmdb	r3!, {s15}
 801c370:	3a01      	subs	r2, #1
 801c372:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c376:	e7d2      	b.n	801c31e <__kernel_rem_pio2f+0x41e>
 801c378:	eef0 7a47 	vmov.f32	s15, s14
 801c37c:	e7d4      	b.n	801c328 <__kernel_rem_pio2f+0x428>
 801c37e:	ecb2 7a01 	vldmia	r2!, {s14}
 801c382:	3301      	adds	r3, #1
 801c384:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c388:	e7d6      	b.n	801c338 <__kernel_rem_pio2f+0x438>
 801c38a:	edd1 7a00 	vldr	s15, [r1]
 801c38e:	edd1 6a01 	vldr	s13, [r1, #4]
 801c392:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801c396:	3801      	subs	r0, #1
 801c398:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c39c:	ed81 7a00 	vstr	s14, [r1]
 801c3a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c3a4:	edc1 7a01 	vstr	s15, [r1, #4]
 801c3a8:	e799      	b.n	801c2de <__kernel_rem_pio2f+0x3de>
 801c3aa:	edd2 7a00 	vldr	s15, [r2]
 801c3ae:	edd2 6a01 	vldr	s13, [r2, #4]
 801c3b2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801c3b6:	3901      	subs	r1, #1
 801c3b8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c3bc:	ed82 7a00 	vstr	s14, [r2]
 801c3c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c3c4:	edc2 7a01 	vstr	s15, [r2, #4]
 801c3c8:	e78e      	b.n	801c2e8 <__kernel_rem_pio2f+0x3e8>
 801c3ca:	ed33 7a01 	vldmdb	r3!, {s14}
 801c3ce:	3c01      	subs	r4, #1
 801c3d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c3d4:	e78f      	b.n	801c2f6 <__kernel_rem_pio2f+0x3f6>
 801c3d6:	eef1 6a66 	vneg.f32	s13, s13
 801c3da:	eeb1 7a47 	vneg.f32	s14, s14
 801c3de:	edc8 6a00 	vstr	s13, [r8]
 801c3e2:	ed88 7a01 	vstr	s14, [r8, #4]
 801c3e6:	eef1 7a67 	vneg.f32	s15, s15
 801c3ea:	e790      	b.n	801c30e <__kernel_rem_pio2f+0x40e>

0801c3ec <__kernel_sinf>:
 801c3ec:	ee10 3a10 	vmov	r3, s0
 801c3f0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801c3f4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 801c3f8:	da04      	bge.n	801c404 <__kernel_sinf+0x18>
 801c3fa:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801c3fe:	ee17 3a90 	vmov	r3, s15
 801c402:	b35b      	cbz	r3, 801c45c <__kernel_sinf+0x70>
 801c404:	ee20 7a00 	vmul.f32	s14, s0, s0
 801c408:	eddf 7a15 	vldr	s15, [pc, #84]	; 801c460 <__kernel_sinf+0x74>
 801c40c:	ed9f 6a15 	vldr	s12, [pc, #84]	; 801c464 <__kernel_sinf+0x78>
 801c410:	eea7 6a27 	vfma.f32	s12, s14, s15
 801c414:	eddf 7a14 	vldr	s15, [pc, #80]	; 801c468 <__kernel_sinf+0x7c>
 801c418:	eee6 7a07 	vfma.f32	s15, s12, s14
 801c41c:	ed9f 6a13 	vldr	s12, [pc, #76]	; 801c46c <__kernel_sinf+0x80>
 801c420:	eea7 6a87 	vfma.f32	s12, s15, s14
 801c424:	eddf 7a12 	vldr	s15, [pc, #72]	; 801c470 <__kernel_sinf+0x84>
 801c428:	ee60 6a07 	vmul.f32	s13, s0, s14
 801c42c:	eee6 7a07 	vfma.f32	s15, s12, s14
 801c430:	b930      	cbnz	r0, 801c440 <__kernel_sinf+0x54>
 801c432:	ed9f 6a10 	vldr	s12, [pc, #64]	; 801c474 <__kernel_sinf+0x88>
 801c436:	eea7 6a27 	vfma.f32	s12, s14, s15
 801c43a:	eea6 0a26 	vfma.f32	s0, s12, s13
 801c43e:	4770      	bx	lr
 801c440:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 801c444:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801c448:	eee0 7a86 	vfma.f32	s15, s1, s12
 801c44c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 801c450:	eddf 7a09 	vldr	s15, [pc, #36]	; 801c478 <__kernel_sinf+0x8c>
 801c454:	eee6 0aa7 	vfma.f32	s1, s13, s15
 801c458:	ee30 0a60 	vsub.f32	s0, s0, s1
 801c45c:	4770      	bx	lr
 801c45e:	bf00      	nop
 801c460:	2f2ec9d3 	.word	0x2f2ec9d3
 801c464:	b2d72f34 	.word	0xb2d72f34
 801c468:	3638ef1b 	.word	0x3638ef1b
 801c46c:	b9500d01 	.word	0xb9500d01
 801c470:	3c088889 	.word	0x3c088889
 801c474:	be2aaaab 	.word	0xbe2aaaab
 801c478:	3e2aaaab 	.word	0x3e2aaaab

0801c47c <fabsf>:
 801c47c:	ee10 3a10 	vmov	r3, s0
 801c480:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801c484:	ee00 3a10 	vmov	s0, r3
 801c488:	4770      	bx	lr
	...

0801c48c <floorf>:
 801c48c:	ee10 3a10 	vmov	r3, s0
 801c490:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801c494:	3a7f      	subs	r2, #127	; 0x7f
 801c496:	2a16      	cmp	r2, #22
 801c498:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801c49c:	dc2a      	bgt.n	801c4f4 <floorf+0x68>
 801c49e:	2a00      	cmp	r2, #0
 801c4a0:	da11      	bge.n	801c4c6 <floorf+0x3a>
 801c4a2:	eddf 7a18 	vldr	s15, [pc, #96]	; 801c504 <floorf+0x78>
 801c4a6:	ee30 0a27 	vadd.f32	s0, s0, s15
 801c4aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801c4ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c4b2:	dd05      	ble.n	801c4c0 <floorf+0x34>
 801c4b4:	2b00      	cmp	r3, #0
 801c4b6:	da23      	bge.n	801c500 <floorf+0x74>
 801c4b8:	4a13      	ldr	r2, [pc, #76]	; (801c508 <floorf+0x7c>)
 801c4ba:	2900      	cmp	r1, #0
 801c4bc:	bf18      	it	ne
 801c4be:	4613      	movne	r3, r2
 801c4c0:	ee00 3a10 	vmov	s0, r3
 801c4c4:	4770      	bx	lr
 801c4c6:	4911      	ldr	r1, [pc, #68]	; (801c50c <floorf+0x80>)
 801c4c8:	4111      	asrs	r1, r2
 801c4ca:	420b      	tst	r3, r1
 801c4cc:	d0fa      	beq.n	801c4c4 <floorf+0x38>
 801c4ce:	eddf 7a0d 	vldr	s15, [pc, #52]	; 801c504 <floorf+0x78>
 801c4d2:	ee30 0a27 	vadd.f32	s0, s0, s15
 801c4d6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801c4da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c4de:	ddef      	ble.n	801c4c0 <floorf+0x34>
 801c4e0:	2b00      	cmp	r3, #0
 801c4e2:	bfbe      	ittt	lt
 801c4e4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 801c4e8:	fa40 f202 	asrlt.w	r2, r0, r2
 801c4ec:	189b      	addlt	r3, r3, r2
 801c4ee:	ea23 0301 	bic.w	r3, r3, r1
 801c4f2:	e7e5      	b.n	801c4c0 <floorf+0x34>
 801c4f4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 801c4f8:	d3e4      	bcc.n	801c4c4 <floorf+0x38>
 801c4fa:	ee30 0a00 	vadd.f32	s0, s0, s0
 801c4fe:	4770      	bx	lr
 801c500:	2300      	movs	r3, #0
 801c502:	e7dd      	b.n	801c4c0 <floorf+0x34>
 801c504:	7149f2ca 	.word	0x7149f2ca
 801c508:	bf800000 	.word	0xbf800000
 801c50c:	007fffff 	.word	0x007fffff

0801c510 <scalbnf>:
 801c510:	ee10 3a10 	vmov	r3, s0
 801c514:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 801c518:	d025      	beq.n	801c566 <scalbnf+0x56>
 801c51a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 801c51e:	d302      	bcc.n	801c526 <scalbnf+0x16>
 801c520:	ee30 0a00 	vadd.f32	s0, s0, s0
 801c524:	4770      	bx	lr
 801c526:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 801c52a:	d122      	bne.n	801c572 <scalbnf+0x62>
 801c52c:	4b2a      	ldr	r3, [pc, #168]	; (801c5d8 <scalbnf+0xc8>)
 801c52e:	eddf 7a2b 	vldr	s15, [pc, #172]	; 801c5dc <scalbnf+0xcc>
 801c532:	4298      	cmp	r0, r3
 801c534:	ee20 0a27 	vmul.f32	s0, s0, s15
 801c538:	db16      	blt.n	801c568 <scalbnf+0x58>
 801c53a:	ee10 3a10 	vmov	r3, s0
 801c53e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801c542:	3a19      	subs	r2, #25
 801c544:	4402      	add	r2, r0
 801c546:	2afe      	cmp	r2, #254	; 0xfe
 801c548:	dd15      	ble.n	801c576 <scalbnf+0x66>
 801c54a:	ee10 3a10 	vmov	r3, s0
 801c54e:	eddf 7a24 	vldr	s15, [pc, #144]	; 801c5e0 <scalbnf+0xd0>
 801c552:	eddf 6a24 	vldr	s13, [pc, #144]	; 801c5e4 <scalbnf+0xd4>
 801c556:	2b00      	cmp	r3, #0
 801c558:	eeb0 7a67 	vmov.f32	s14, s15
 801c55c:	bfb8      	it	lt
 801c55e:	eef0 7a66 	vmovlt.f32	s15, s13
 801c562:	ee27 0a27 	vmul.f32	s0, s14, s15
 801c566:	4770      	bx	lr
 801c568:	eddf 7a1f 	vldr	s15, [pc, #124]	; 801c5e8 <scalbnf+0xd8>
 801c56c:	ee20 0a27 	vmul.f32	s0, s0, s15
 801c570:	4770      	bx	lr
 801c572:	0dd2      	lsrs	r2, r2, #23
 801c574:	e7e6      	b.n	801c544 <scalbnf+0x34>
 801c576:	2a00      	cmp	r2, #0
 801c578:	dd06      	ble.n	801c588 <scalbnf+0x78>
 801c57a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801c57e:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 801c582:	ee00 3a10 	vmov	s0, r3
 801c586:	4770      	bx	lr
 801c588:	f112 0f16 	cmn.w	r2, #22
 801c58c:	da1a      	bge.n	801c5c4 <scalbnf+0xb4>
 801c58e:	f24c 3350 	movw	r3, #50000	; 0xc350
 801c592:	4298      	cmp	r0, r3
 801c594:	ee10 3a10 	vmov	r3, s0
 801c598:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 801c59c:	dd0a      	ble.n	801c5b4 <scalbnf+0xa4>
 801c59e:	ed9f 0a10 	vldr	s0, [pc, #64]	; 801c5e0 <scalbnf+0xd0>
 801c5a2:	ed9f 7a10 	vldr	s14, [pc, #64]	; 801c5e4 <scalbnf+0xd4>
 801c5a6:	eef0 7a40 	vmov.f32	s15, s0
 801c5aa:	2b00      	cmp	r3, #0
 801c5ac:	bf18      	it	ne
 801c5ae:	eeb0 0a47 	vmovne.f32	s0, s14
 801c5b2:	e7db      	b.n	801c56c <scalbnf+0x5c>
 801c5b4:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 801c5e8 <scalbnf+0xd8>
 801c5b8:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 801c5ec <scalbnf+0xdc>
 801c5bc:	eef0 7a40 	vmov.f32	s15, s0
 801c5c0:	2b00      	cmp	r3, #0
 801c5c2:	e7f3      	b.n	801c5ac <scalbnf+0x9c>
 801c5c4:	3219      	adds	r2, #25
 801c5c6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801c5ca:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 801c5ce:	eddf 7a08 	vldr	s15, [pc, #32]	; 801c5f0 <scalbnf+0xe0>
 801c5d2:	ee07 3a10 	vmov	s14, r3
 801c5d6:	e7c4      	b.n	801c562 <scalbnf+0x52>
 801c5d8:	ffff3cb0 	.word	0xffff3cb0
 801c5dc:	4c000000 	.word	0x4c000000
 801c5e0:	7149f2ca 	.word	0x7149f2ca
 801c5e4:	f149f2ca 	.word	0xf149f2ca
 801c5e8:	0da24260 	.word	0x0da24260
 801c5ec:	8da24260 	.word	0x8da24260
 801c5f0:	33000000 	.word	0x33000000

0801c5f4 <abort>:
 801c5f4:	b508      	push	{r3, lr}
 801c5f6:	2006      	movs	r0, #6
 801c5f8:	f000 fc9e 	bl	801cf38 <raise>
 801c5fc:	2001      	movs	r0, #1
 801c5fe:	f7e5 fc09 	bl	8001e14 <_exit>
	...

0801c604 <__assert_func>:
 801c604:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801c606:	4614      	mov	r4, r2
 801c608:	461a      	mov	r2, r3
 801c60a:	4b09      	ldr	r3, [pc, #36]	; (801c630 <__assert_func+0x2c>)
 801c60c:	681b      	ldr	r3, [r3, #0]
 801c60e:	4605      	mov	r5, r0
 801c610:	68d8      	ldr	r0, [r3, #12]
 801c612:	b14c      	cbz	r4, 801c628 <__assert_func+0x24>
 801c614:	4b07      	ldr	r3, [pc, #28]	; (801c634 <__assert_func+0x30>)
 801c616:	9100      	str	r1, [sp, #0]
 801c618:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801c61c:	4906      	ldr	r1, [pc, #24]	; (801c638 <__assert_func+0x34>)
 801c61e:	462b      	mov	r3, r5
 801c620:	f000 f828 	bl	801c674 <fiprintf>
 801c624:	f7ff ffe6 	bl	801c5f4 <abort>
 801c628:	4b04      	ldr	r3, [pc, #16]	; (801c63c <__assert_func+0x38>)
 801c62a:	461c      	mov	r4, r3
 801c62c:	e7f3      	b.n	801c616 <__assert_func+0x12>
 801c62e:	bf00      	nop
 801c630:	200000fc 	.word	0x200000fc
 801c634:	0801fc50 	.word	0x0801fc50
 801c638:	0801fc5d 	.word	0x0801fc5d
 801c63c:	0801fc8b 	.word	0x0801fc8b

0801c640 <atexit>:
 801c640:	2300      	movs	r3, #0
 801c642:	4601      	mov	r1, r0
 801c644:	461a      	mov	r2, r3
 801c646:	4618      	mov	r0, r3
 801c648:	f000 bd52 	b.w	801d0f0 <__register_exitproc>

0801c64c <__cxa_atexit>:
 801c64c:	b510      	push	{r4, lr}
 801c64e:	4c05      	ldr	r4, [pc, #20]	; (801c664 <__cxa_atexit+0x18>)
 801c650:	4613      	mov	r3, r2
 801c652:	b12c      	cbz	r4, 801c660 <__cxa_atexit+0x14>
 801c654:	460a      	mov	r2, r1
 801c656:	4601      	mov	r1, r0
 801c658:	2002      	movs	r0, #2
 801c65a:	f000 fd49 	bl	801d0f0 <__register_exitproc>
 801c65e:	bd10      	pop	{r4, pc}
 801c660:	4620      	mov	r0, r4
 801c662:	e7fc      	b.n	801c65e <__cxa_atexit+0x12>
 801c664:	0801d0f1 	.word	0x0801d0f1

0801c668 <__errno>:
 801c668:	4b01      	ldr	r3, [pc, #4]	; (801c670 <__errno+0x8>)
 801c66a:	6818      	ldr	r0, [r3, #0]
 801c66c:	4770      	bx	lr
 801c66e:	bf00      	nop
 801c670:	200000fc 	.word	0x200000fc

0801c674 <fiprintf>:
 801c674:	b40e      	push	{r1, r2, r3}
 801c676:	b503      	push	{r0, r1, lr}
 801c678:	4601      	mov	r1, r0
 801c67a:	ab03      	add	r3, sp, #12
 801c67c:	4805      	ldr	r0, [pc, #20]	; (801c694 <fiprintf+0x20>)
 801c67e:	f853 2b04 	ldr.w	r2, [r3], #4
 801c682:	6800      	ldr	r0, [r0, #0]
 801c684:	9301      	str	r3, [sp, #4]
 801c686:	f000 f95b 	bl	801c940 <_vfiprintf_r>
 801c68a:	b002      	add	sp, #8
 801c68c:	f85d eb04 	ldr.w	lr, [sp], #4
 801c690:	b003      	add	sp, #12
 801c692:	4770      	bx	lr
 801c694:	200000fc 	.word	0x200000fc

0801c698 <__libc_init_array>:
 801c698:	b570      	push	{r4, r5, r6, lr}
 801c69a:	4d0d      	ldr	r5, [pc, #52]	; (801c6d0 <__libc_init_array+0x38>)
 801c69c:	4c0d      	ldr	r4, [pc, #52]	; (801c6d4 <__libc_init_array+0x3c>)
 801c69e:	1b64      	subs	r4, r4, r5
 801c6a0:	10a4      	asrs	r4, r4, #2
 801c6a2:	2600      	movs	r6, #0
 801c6a4:	42a6      	cmp	r6, r4
 801c6a6:	d109      	bne.n	801c6bc <__libc_init_array+0x24>
 801c6a8:	4d0b      	ldr	r5, [pc, #44]	; (801c6d8 <__libc_init_array+0x40>)
 801c6aa:	4c0c      	ldr	r4, [pc, #48]	; (801c6dc <__libc_init_array+0x44>)
 801c6ac:	f001 f85a 	bl	801d764 <_init>
 801c6b0:	1b64      	subs	r4, r4, r5
 801c6b2:	10a4      	asrs	r4, r4, #2
 801c6b4:	2600      	movs	r6, #0
 801c6b6:	42a6      	cmp	r6, r4
 801c6b8:	d105      	bne.n	801c6c6 <__libc_init_array+0x2e>
 801c6ba:	bd70      	pop	{r4, r5, r6, pc}
 801c6bc:	f855 3b04 	ldr.w	r3, [r5], #4
 801c6c0:	4798      	blx	r3
 801c6c2:	3601      	adds	r6, #1
 801c6c4:	e7ee      	b.n	801c6a4 <__libc_init_array+0xc>
 801c6c6:	f855 3b04 	ldr.w	r3, [r5], #4
 801c6ca:	4798      	blx	r3
 801c6cc:	3601      	adds	r6, #1
 801c6ce:	e7f2      	b.n	801c6b6 <__libc_init_array+0x1e>
 801c6d0:	08091d60 	.word	0x08091d60
 801c6d4:	08091d60 	.word	0x08091d60
 801c6d8:	08091d60 	.word	0x08091d60
 801c6dc:	08091d74 	.word	0x08091d74

0801c6e0 <malloc>:
 801c6e0:	4b02      	ldr	r3, [pc, #8]	; (801c6ec <malloc+0xc>)
 801c6e2:	4601      	mov	r1, r0
 801c6e4:	6818      	ldr	r0, [r3, #0]
 801c6e6:	f000 b88d 	b.w	801c804 <_malloc_r>
 801c6ea:	bf00      	nop
 801c6ec:	200000fc 	.word	0x200000fc

0801c6f0 <free>:
 801c6f0:	4b02      	ldr	r3, [pc, #8]	; (801c6fc <free+0xc>)
 801c6f2:	4601      	mov	r1, r0
 801c6f4:	6818      	ldr	r0, [r3, #0]
 801c6f6:	f000 b819 	b.w	801c72c <_free_r>
 801c6fa:	bf00      	nop
 801c6fc:	200000fc 	.word	0x200000fc

0801c700 <memcpy>:
 801c700:	440a      	add	r2, r1
 801c702:	4291      	cmp	r1, r2
 801c704:	f100 33ff 	add.w	r3, r0, #4294967295
 801c708:	d100      	bne.n	801c70c <memcpy+0xc>
 801c70a:	4770      	bx	lr
 801c70c:	b510      	push	{r4, lr}
 801c70e:	f811 4b01 	ldrb.w	r4, [r1], #1
 801c712:	f803 4f01 	strb.w	r4, [r3, #1]!
 801c716:	4291      	cmp	r1, r2
 801c718:	d1f9      	bne.n	801c70e <memcpy+0xe>
 801c71a:	bd10      	pop	{r4, pc}

0801c71c <memset>:
 801c71c:	4402      	add	r2, r0
 801c71e:	4603      	mov	r3, r0
 801c720:	4293      	cmp	r3, r2
 801c722:	d100      	bne.n	801c726 <memset+0xa>
 801c724:	4770      	bx	lr
 801c726:	f803 1b01 	strb.w	r1, [r3], #1
 801c72a:	e7f9      	b.n	801c720 <memset+0x4>

0801c72c <_free_r>:
 801c72c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801c72e:	2900      	cmp	r1, #0
 801c730:	d044      	beq.n	801c7bc <_free_r+0x90>
 801c732:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801c736:	9001      	str	r0, [sp, #4]
 801c738:	2b00      	cmp	r3, #0
 801c73a:	f1a1 0404 	sub.w	r4, r1, #4
 801c73e:	bfb8      	it	lt
 801c740:	18e4      	addlt	r4, r4, r3
 801c742:	f000 ff57 	bl	801d5f4 <__malloc_lock>
 801c746:	4a1e      	ldr	r2, [pc, #120]	; (801c7c0 <_free_r+0x94>)
 801c748:	9801      	ldr	r0, [sp, #4]
 801c74a:	6813      	ldr	r3, [r2, #0]
 801c74c:	b933      	cbnz	r3, 801c75c <_free_r+0x30>
 801c74e:	6063      	str	r3, [r4, #4]
 801c750:	6014      	str	r4, [r2, #0]
 801c752:	b003      	add	sp, #12
 801c754:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801c758:	f000 bf52 	b.w	801d600 <__malloc_unlock>
 801c75c:	42a3      	cmp	r3, r4
 801c75e:	d908      	bls.n	801c772 <_free_r+0x46>
 801c760:	6825      	ldr	r5, [r4, #0]
 801c762:	1961      	adds	r1, r4, r5
 801c764:	428b      	cmp	r3, r1
 801c766:	bf01      	itttt	eq
 801c768:	6819      	ldreq	r1, [r3, #0]
 801c76a:	685b      	ldreq	r3, [r3, #4]
 801c76c:	1949      	addeq	r1, r1, r5
 801c76e:	6021      	streq	r1, [r4, #0]
 801c770:	e7ed      	b.n	801c74e <_free_r+0x22>
 801c772:	461a      	mov	r2, r3
 801c774:	685b      	ldr	r3, [r3, #4]
 801c776:	b10b      	cbz	r3, 801c77c <_free_r+0x50>
 801c778:	42a3      	cmp	r3, r4
 801c77a:	d9fa      	bls.n	801c772 <_free_r+0x46>
 801c77c:	6811      	ldr	r1, [r2, #0]
 801c77e:	1855      	adds	r5, r2, r1
 801c780:	42a5      	cmp	r5, r4
 801c782:	d10b      	bne.n	801c79c <_free_r+0x70>
 801c784:	6824      	ldr	r4, [r4, #0]
 801c786:	4421      	add	r1, r4
 801c788:	1854      	adds	r4, r2, r1
 801c78a:	42a3      	cmp	r3, r4
 801c78c:	6011      	str	r1, [r2, #0]
 801c78e:	d1e0      	bne.n	801c752 <_free_r+0x26>
 801c790:	681c      	ldr	r4, [r3, #0]
 801c792:	685b      	ldr	r3, [r3, #4]
 801c794:	6053      	str	r3, [r2, #4]
 801c796:	4421      	add	r1, r4
 801c798:	6011      	str	r1, [r2, #0]
 801c79a:	e7da      	b.n	801c752 <_free_r+0x26>
 801c79c:	d902      	bls.n	801c7a4 <_free_r+0x78>
 801c79e:	230c      	movs	r3, #12
 801c7a0:	6003      	str	r3, [r0, #0]
 801c7a2:	e7d6      	b.n	801c752 <_free_r+0x26>
 801c7a4:	6825      	ldr	r5, [r4, #0]
 801c7a6:	1961      	adds	r1, r4, r5
 801c7a8:	428b      	cmp	r3, r1
 801c7aa:	bf04      	itt	eq
 801c7ac:	6819      	ldreq	r1, [r3, #0]
 801c7ae:	685b      	ldreq	r3, [r3, #4]
 801c7b0:	6063      	str	r3, [r4, #4]
 801c7b2:	bf04      	itt	eq
 801c7b4:	1949      	addeq	r1, r1, r5
 801c7b6:	6021      	streq	r1, [r4, #0]
 801c7b8:	6054      	str	r4, [r2, #4]
 801c7ba:	e7ca      	b.n	801c752 <_free_r+0x26>
 801c7bc:	b003      	add	sp, #12
 801c7be:	bd30      	pop	{r4, r5, pc}
 801c7c0:	2001784c 	.word	0x2001784c

0801c7c4 <sbrk_aligned>:
 801c7c4:	b570      	push	{r4, r5, r6, lr}
 801c7c6:	4e0e      	ldr	r6, [pc, #56]	; (801c800 <sbrk_aligned+0x3c>)
 801c7c8:	460c      	mov	r4, r1
 801c7ca:	6831      	ldr	r1, [r6, #0]
 801c7cc:	4605      	mov	r5, r0
 801c7ce:	b911      	cbnz	r1, 801c7d6 <sbrk_aligned+0x12>
 801c7d0:	f000 fb7a 	bl	801cec8 <_sbrk_r>
 801c7d4:	6030      	str	r0, [r6, #0]
 801c7d6:	4621      	mov	r1, r4
 801c7d8:	4628      	mov	r0, r5
 801c7da:	f000 fb75 	bl	801cec8 <_sbrk_r>
 801c7de:	1c43      	adds	r3, r0, #1
 801c7e0:	d00a      	beq.n	801c7f8 <sbrk_aligned+0x34>
 801c7e2:	1cc4      	adds	r4, r0, #3
 801c7e4:	f024 0403 	bic.w	r4, r4, #3
 801c7e8:	42a0      	cmp	r0, r4
 801c7ea:	d007      	beq.n	801c7fc <sbrk_aligned+0x38>
 801c7ec:	1a21      	subs	r1, r4, r0
 801c7ee:	4628      	mov	r0, r5
 801c7f0:	f000 fb6a 	bl	801cec8 <_sbrk_r>
 801c7f4:	3001      	adds	r0, #1
 801c7f6:	d101      	bne.n	801c7fc <sbrk_aligned+0x38>
 801c7f8:	f04f 34ff 	mov.w	r4, #4294967295
 801c7fc:	4620      	mov	r0, r4
 801c7fe:	bd70      	pop	{r4, r5, r6, pc}
 801c800:	20017850 	.word	0x20017850

0801c804 <_malloc_r>:
 801c804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c808:	1ccd      	adds	r5, r1, #3
 801c80a:	f025 0503 	bic.w	r5, r5, #3
 801c80e:	3508      	adds	r5, #8
 801c810:	2d0c      	cmp	r5, #12
 801c812:	bf38      	it	cc
 801c814:	250c      	movcc	r5, #12
 801c816:	2d00      	cmp	r5, #0
 801c818:	4607      	mov	r7, r0
 801c81a:	db01      	blt.n	801c820 <_malloc_r+0x1c>
 801c81c:	42a9      	cmp	r1, r5
 801c81e:	d905      	bls.n	801c82c <_malloc_r+0x28>
 801c820:	230c      	movs	r3, #12
 801c822:	603b      	str	r3, [r7, #0]
 801c824:	2600      	movs	r6, #0
 801c826:	4630      	mov	r0, r6
 801c828:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c82c:	4e2e      	ldr	r6, [pc, #184]	; (801c8e8 <_malloc_r+0xe4>)
 801c82e:	f000 fee1 	bl	801d5f4 <__malloc_lock>
 801c832:	6833      	ldr	r3, [r6, #0]
 801c834:	461c      	mov	r4, r3
 801c836:	bb34      	cbnz	r4, 801c886 <_malloc_r+0x82>
 801c838:	4629      	mov	r1, r5
 801c83a:	4638      	mov	r0, r7
 801c83c:	f7ff ffc2 	bl	801c7c4 <sbrk_aligned>
 801c840:	1c43      	adds	r3, r0, #1
 801c842:	4604      	mov	r4, r0
 801c844:	d14d      	bne.n	801c8e2 <_malloc_r+0xde>
 801c846:	6834      	ldr	r4, [r6, #0]
 801c848:	4626      	mov	r6, r4
 801c84a:	2e00      	cmp	r6, #0
 801c84c:	d140      	bne.n	801c8d0 <_malloc_r+0xcc>
 801c84e:	6823      	ldr	r3, [r4, #0]
 801c850:	4631      	mov	r1, r6
 801c852:	4638      	mov	r0, r7
 801c854:	eb04 0803 	add.w	r8, r4, r3
 801c858:	f000 fb36 	bl	801cec8 <_sbrk_r>
 801c85c:	4580      	cmp	r8, r0
 801c85e:	d13a      	bne.n	801c8d6 <_malloc_r+0xd2>
 801c860:	6821      	ldr	r1, [r4, #0]
 801c862:	3503      	adds	r5, #3
 801c864:	1a6d      	subs	r5, r5, r1
 801c866:	f025 0503 	bic.w	r5, r5, #3
 801c86a:	3508      	adds	r5, #8
 801c86c:	2d0c      	cmp	r5, #12
 801c86e:	bf38      	it	cc
 801c870:	250c      	movcc	r5, #12
 801c872:	4629      	mov	r1, r5
 801c874:	4638      	mov	r0, r7
 801c876:	f7ff ffa5 	bl	801c7c4 <sbrk_aligned>
 801c87a:	3001      	adds	r0, #1
 801c87c:	d02b      	beq.n	801c8d6 <_malloc_r+0xd2>
 801c87e:	6823      	ldr	r3, [r4, #0]
 801c880:	442b      	add	r3, r5
 801c882:	6023      	str	r3, [r4, #0]
 801c884:	e00e      	b.n	801c8a4 <_malloc_r+0xa0>
 801c886:	6822      	ldr	r2, [r4, #0]
 801c888:	1b52      	subs	r2, r2, r5
 801c88a:	d41e      	bmi.n	801c8ca <_malloc_r+0xc6>
 801c88c:	2a0b      	cmp	r2, #11
 801c88e:	d916      	bls.n	801c8be <_malloc_r+0xba>
 801c890:	1961      	adds	r1, r4, r5
 801c892:	42a3      	cmp	r3, r4
 801c894:	6025      	str	r5, [r4, #0]
 801c896:	bf18      	it	ne
 801c898:	6059      	strne	r1, [r3, #4]
 801c89a:	6863      	ldr	r3, [r4, #4]
 801c89c:	bf08      	it	eq
 801c89e:	6031      	streq	r1, [r6, #0]
 801c8a0:	5162      	str	r2, [r4, r5]
 801c8a2:	604b      	str	r3, [r1, #4]
 801c8a4:	4638      	mov	r0, r7
 801c8a6:	f104 060b 	add.w	r6, r4, #11
 801c8aa:	f000 fea9 	bl	801d600 <__malloc_unlock>
 801c8ae:	f026 0607 	bic.w	r6, r6, #7
 801c8b2:	1d23      	adds	r3, r4, #4
 801c8b4:	1af2      	subs	r2, r6, r3
 801c8b6:	d0b6      	beq.n	801c826 <_malloc_r+0x22>
 801c8b8:	1b9b      	subs	r3, r3, r6
 801c8ba:	50a3      	str	r3, [r4, r2]
 801c8bc:	e7b3      	b.n	801c826 <_malloc_r+0x22>
 801c8be:	6862      	ldr	r2, [r4, #4]
 801c8c0:	42a3      	cmp	r3, r4
 801c8c2:	bf0c      	ite	eq
 801c8c4:	6032      	streq	r2, [r6, #0]
 801c8c6:	605a      	strne	r2, [r3, #4]
 801c8c8:	e7ec      	b.n	801c8a4 <_malloc_r+0xa0>
 801c8ca:	4623      	mov	r3, r4
 801c8cc:	6864      	ldr	r4, [r4, #4]
 801c8ce:	e7b2      	b.n	801c836 <_malloc_r+0x32>
 801c8d0:	4634      	mov	r4, r6
 801c8d2:	6876      	ldr	r6, [r6, #4]
 801c8d4:	e7b9      	b.n	801c84a <_malloc_r+0x46>
 801c8d6:	230c      	movs	r3, #12
 801c8d8:	603b      	str	r3, [r7, #0]
 801c8da:	4638      	mov	r0, r7
 801c8dc:	f000 fe90 	bl	801d600 <__malloc_unlock>
 801c8e0:	e7a1      	b.n	801c826 <_malloc_r+0x22>
 801c8e2:	6025      	str	r5, [r4, #0]
 801c8e4:	e7de      	b.n	801c8a4 <_malloc_r+0xa0>
 801c8e6:	bf00      	nop
 801c8e8:	2001784c 	.word	0x2001784c

0801c8ec <__sfputc_r>:
 801c8ec:	6893      	ldr	r3, [r2, #8]
 801c8ee:	3b01      	subs	r3, #1
 801c8f0:	2b00      	cmp	r3, #0
 801c8f2:	b410      	push	{r4}
 801c8f4:	6093      	str	r3, [r2, #8]
 801c8f6:	da08      	bge.n	801c90a <__sfputc_r+0x1e>
 801c8f8:	6994      	ldr	r4, [r2, #24]
 801c8fa:	42a3      	cmp	r3, r4
 801c8fc:	db01      	blt.n	801c902 <__sfputc_r+0x16>
 801c8fe:	290a      	cmp	r1, #10
 801c900:	d103      	bne.n	801c90a <__sfputc_r+0x1e>
 801c902:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c906:	f000 bb33 	b.w	801cf70 <__swbuf_r>
 801c90a:	6813      	ldr	r3, [r2, #0]
 801c90c:	1c58      	adds	r0, r3, #1
 801c90e:	6010      	str	r0, [r2, #0]
 801c910:	7019      	strb	r1, [r3, #0]
 801c912:	4608      	mov	r0, r1
 801c914:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c918:	4770      	bx	lr

0801c91a <__sfputs_r>:
 801c91a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c91c:	4606      	mov	r6, r0
 801c91e:	460f      	mov	r7, r1
 801c920:	4614      	mov	r4, r2
 801c922:	18d5      	adds	r5, r2, r3
 801c924:	42ac      	cmp	r4, r5
 801c926:	d101      	bne.n	801c92c <__sfputs_r+0x12>
 801c928:	2000      	movs	r0, #0
 801c92a:	e007      	b.n	801c93c <__sfputs_r+0x22>
 801c92c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c930:	463a      	mov	r2, r7
 801c932:	4630      	mov	r0, r6
 801c934:	f7ff ffda 	bl	801c8ec <__sfputc_r>
 801c938:	1c43      	adds	r3, r0, #1
 801c93a:	d1f3      	bne.n	801c924 <__sfputs_r+0xa>
 801c93c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801c940 <_vfiprintf_r>:
 801c940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c944:	460d      	mov	r5, r1
 801c946:	b09d      	sub	sp, #116	; 0x74
 801c948:	4614      	mov	r4, r2
 801c94a:	4698      	mov	r8, r3
 801c94c:	4606      	mov	r6, r0
 801c94e:	b118      	cbz	r0, 801c958 <_vfiprintf_r+0x18>
 801c950:	6983      	ldr	r3, [r0, #24]
 801c952:	b90b      	cbnz	r3, 801c958 <_vfiprintf_r+0x18>
 801c954:	f000 fd48 	bl	801d3e8 <__sinit>
 801c958:	4b89      	ldr	r3, [pc, #548]	; (801cb80 <_vfiprintf_r+0x240>)
 801c95a:	429d      	cmp	r5, r3
 801c95c:	d11b      	bne.n	801c996 <_vfiprintf_r+0x56>
 801c95e:	6875      	ldr	r5, [r6, #4]
 801c960:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801c962:	07d9      	lsls	r1, r3, #31
 801c964:	d405      	bmi.n	801c972 <_vfiprintf_r+0x32>
 801c966:	89ab      	ldrh	r3, [r5, #12]
 801c968:	059a      	lsls	r2, r3, #22
 801c96a:	d402      	bmi.n	801c972 <_vfiprintf_r+0x32>
 801c96c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801c96e:	f000 fdd9 	bl	801d524 <__retarget_lock_acquire_recursive>
 801c972:	89ab      	ldrh	r3, [r5, #12]
 801c974:	071b      	lsls	r3, r3, #28
 801c976:	d501      	bpl.n	801c97c <_vfiprintf_r+0x3c>
 801c978:	692b      	ldr	r3, [r5, #16]
 801c97a:	b9eb      	cbnz	r3, 801c9b8 <_vfiprintf_r+0x78>
 801c97c:	4629      	mov	r1, r5
 801c97e:	4630      	mov	r0, r6
 801c980:	f000 fb48 	bl	801d014 <__swsetup_r>
 801c984:	b1c0      	cbz	r0, 801c9b8 <_vfiprintf_r+0x78>
 801c986:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801c988:	07dc      	lsls	r4, r3, #31
 801c98a:	d50e      	bpl.n	801c9aa <_vfiprintf_r+0x6a>
 801c98c:	f04f 30ff 	mov.w	r0, #4294967295
 801c990:	b01d      	add	sp, #116	; 0x74
 801c992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c996:	4b7b      	ldr	r3, [pc, #492]	; (801cb84 <_vfiprintf_r+0x244>)
 801c998:	429d      	cmp	r5, r3
 801c99a:	d101      	bne.n	801c9a0 <_vfiprintf_r+0x60>
 801c99c:	68b5      	ldr	r5, [r6, #8]
 801c99e:	e7df      	b.n	801c960 <_vfiprintf_r+0x20>
 801c9a0:	4b79      	ldr	r3, [pc, #484]	; (801cb88 <_vfiprintf_r+0x248>)
 801c9a2:	429d      	cmp	r5, r3
 801c9a4:	bf08      	it	eq
 801c9a6:	68f5      	ldreq	r5, [r6, #12]
 801c9a8:	e7da      	b.n	801c960 <_vfiprintf_r+0x20>
 801c9aa:	89ab      	ldrh	r3, [r5, #12]
 801c9ac:	0598      	lsls	r0, r3, #22
 801c9ae:	d4ed      	bmi.n	801c98c <_vfiprintf_r+0x4c>
 801c9b0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801c9b2:	f000 fdb9 	bl	801d528 <__retarget_lock_release_recursive>
 801c9b6:	e7e9      	b.n	801c98c <_vfiprintf_r+0x4c>
 801c9b8:	2300      	movs	r3, #0
 801c9ba:	9309      	str	r3, [sp, #36]	; 0x24
 801c9bc:	2320      	movs	r3, #32
 801c9be:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801c9c2:	f8cd 800c 	str.w	r8, [sp, #12]
 801c9c6:	2330      	movs	r3, #48	; 0x30
 801c9c8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801cb8c <_vfiprintf_r+0x24c>
 801c9cc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801c9d0:	f04f 0901 	mov.w	r9, #1
 801c9d4:	4623      	mov	r3, r4
 801c9d6:	469a      	mov	sl, r3
 801c9d8:	f813 2b01 	ldrb.w	r2, [r3], #1
 801c9dc:	b10a      	cbz	r2, 801c9e2 <_vfiprintf_r+0xa2>
 801c9de:	2a25      	cmp	r2, #37	; 0x25
 801c9e0:	d1f9      	bne.n	801c9d6 <_vfiprintf_r+0x96>
 801c9e2:	ebba 0b04 	subs.w	fp, sl, r4
 801c9e6:	d00b      	beq.n	801ca00 <_vfiprintf_r+0xc0>
 801c9e8:	465b      	mov	r3, fp
 801c9ea:	4622      	mov	r2, r4
 801c9ec:	4629      	mov	r1, r5
 801c9ee:	4630      	mov	r0, r6
 801c9f0:	f7ff ff93 	bl	801c91a <__sfputs_r>
 801c9f4:	3001      	adds	r0, #1
 801c9f6:	f000 80aa 	beq.w	801cb4e <_vfiprintf_r+0x20e>
 801c9fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c9fc:	445a      	add	r2, fp
 801c9fe:	9209      	str	r2, [sp, #36]	; 0x24
 801ca00:	f89a 3000 	ldrb.w	r3, [sl]
 801ca04:	2b00      	cmp	r3, #0
 801ca06:	f000 80a2 	beq.w	801cb4e <_vfiprintf_r+0x20e>
 801ca0a:	2300      	movs	r3, #0
 801ca0c:	f04f 32ff 	mov.w	r2, #4294967295
 801ca10:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ca14:	f10a 0a01 	add.w	sl, sl, #1
 801ca18:	9304      	str	r3, [sp, #16]
 801ca1a:	9307      	str	r3, [sp, #28]
 801ca1c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ca20:	931a      	str	r3, [sp, #104]	; 0x68
 801ca22:	4654      	mov	r4, sl
 801ca24:	2205      	movs	r2, #5
 801ca26:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ca2a:	4858      	ldr	r0, [pc, #352]	; (801cb8c <_vfiprintf_r+0x24c>)
 801ca2c:	f7e3 fbe0 	bl	80001f0 <memchr>
 801ca30:	9a04      	ldr	r2, [sp, #16]
 801ca32:	b9d8      	cbnz	r0, 801ca6c <_vfiprintf_r+0x12c>
 801ca34:	06d1      	lsls	r1, r2, #27
 801ca36:	bf44      	itt	mi
 801ca38:	2320      	movmi	r3, #32
 801ca3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ca3e:	0713      	lsls	r3, r2, #28
 801ca40:	bf44      	itt	mi
 801ca42:	232b      	movmi	r3, #43	; 0x2b
 801ca44:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ca48:	f89a 3000 	ldrb.w	r3, [sl]
 801ca4c:	2b2a      	cmp	r3, #42	; 0x2a
 801ca4e:	d015      	beq.n	801ca7c <_vfiprintf_r+0x13c>
 801ca50:	9a07      	ldr	r2, [sp, #28]
 801ca52:	4654      	mov	r4, sl
 801ca54:	2000      	movs	r0, #0
 801ca56:	f04f 0c0a 	mov.w	ip, #10
 801ca5a:	4621      	mov	r1, r4
 801ca5c:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ca60:	3b30      	subs	r3, #48	; 0x30
 801ca62:	2b09      	cmp	r3, #9
 801ca64:	d94e      	bls.n	801cb04 <_vfiprintf_r+0x1c4>
 801ca66:	b1b0      	cbz	r0, 801ca96 <_vfiprintf_r+0x156>
 801ca68:	9207      	str	r2, [sp, #28]
 801ca6a:	e014      	b.n	801ca96 <_vfiprintf_r+0x156>
 801ca6c:	eba0 0308 	sub.w	r3, r0, r8
 801ca70:	fa09 f303 	lsl.w	r3, r9, r3
 801ca74:	4313      	orrs	r3, r2
 801ca76:	9304      	str	r3, [sp, #16]
 801ca78:	46a2      	mov	sl, r4
 801ca7a:	e7d2      	b.n	801ca22 <_vfiprintf_r+0xe2>
 801ca7c:	9b03      	ldr	r3, [sp, #12]
 801ca7e:	1d19      	adds	r1, r3, #4
 801ca80:	681b      	ldr	r3, [r3, #0]
 801ca82:	9103      	str	r1, [sp, #12]
 801ca84:	2b00      	cmp	r3, #0
 801ca86:	bfbb      	ittet	lt
 801ca88:	425b      	neglt	r3, r3
 801ca8a:	f042 0202 	orrlt.w	r2, r2, #2
 801ca8e:	9307      	strge	r3, [sp, #28]
 801ca90:	9307      	strlt	r3, [sp, #28]
 801ca92:	bfb8      	it	lt
 801ca94:	9204      	strlt	r2, [sp, #16]
 801ca96:	7823      	ldrb	r3, [r4, #0]
 801ca98:	2b2e      	cmp	r3, #46	; 0x2e
 801ca9a:	d10c      	bne.n	801cab6 <_vfiprintf_r+0x176>
 801ca9c:	7863      	ldrb	r3, [r4, #1]
 801ca9e:	2b2a      	cmp	r3, #42	; 0x2a
 801caa0:	d135      	bne.n	801cb0e <_vfiprintf_r+0x1ce>
 801caa2:	9b03      	ldr	r3, [sp, #12]
 801caa4:	1d1a      	adds	r2, r3, #4
 801caa6:	681b      	ldr	r3, [r3, #0]
 801caa8:	9203      	str	r2, [sp, #12]
 801caaa:	2b00      	cmp	r3, #0
 801caac:	bfb8      	it	lt
 801caae:	f04f 33ff 	movlt.w	r3, #4294967295
 801cab2:	3402      	adds	r4, #2
 801cab4:	9305      	str	r3, [sp, #20]
 801cab6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801cb9c <_vfiprintf_r+0x25c>
 801caba:	7821      	ldrb	r1, [r4, #0]
 801cabc:	2203      	movs	r2, #3
 801cabe:	4650      	mov	r0, sl
 801cac0:	f7e3 fb96 	bl	80001f0 <memchr>
 801cac4:	b140      	cbz	r0, 801cad8 <_vfiprintf_r+0x198>
 801cac6:	2340      	movs	r3, #64	; 0x40
 801cac8:	eba0 000a 	sub.w	r0, r0, sl
 801cacc:	fa03 f000 	lsl.w	r0, r3, r0
 801cad0:	9b04      	ldr	r3, [sp, #16]
 801cad2:	4303      	orrs	r3, r0
 801cad4:	3401      	adds	r4, #1
 801cad6:	9304      	str	r3, [sp, #16]
 801cad8:	f814 1b01 	ldrb.w	r1, [r4], #1
 801cadc:	482c      	ldr	r0, [pc, #176]	; (801cb90 <_vfiprintf_r+0x250>)
 801cade:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801cae2:	2206      	movs	r2, #6
 801cae4:	f7e3 fb84 	bl	80001f0 <memchr>
 801cae8:	2800      	cmp	r0, #0
 801caea:	d03f      	beq.n	801cb6c <_vfiprintf_r+0x22c>
 801caec:	4b29      	ldr	r3, [pc, #164]	; (801cb94 <_vfiprintf_r+0x254>)
 801caee:	bb1b      	cbnz	r3, 801cb38 <_vfiprintf_r+0x1f8>
 801caf0:	9b03      	ldr	r3, [sp, #12]
 801caf2:	3307      	adds	r3, #7
 801caf4:	f023 0307 	bic.w	r3, r3, #7
 801caf8:	3308      	adds	r3, #8
 801cafa:	9303      	str	r3, [sp, #12]
 801cafc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cafe:	443b      	add	r3, r7
 801cb00:	9309      	str	r3, [sp, #36]	; 0x24
 801cb02:	e767      	b.n	801c9d4 <_vfiprintf_r+0x94>
 801cb04:	fb0c 3202 	mla	r2, ip, r2, r3
 801cb08:	460c      	mov	r4, r1
 801cb0a:	2001      	movs	r0, #1
 801cb0c:	e7a5      	b.n	801ca5a <_vfiprintf_r+0x11a>
 801cb0e:	2300      	movs	r3, #0
 801cb10:	3401      	adds	r4, #1
 801cb12:	9305      	str	r3, [sp, #20]
 801cb14:	4619      	mov	r1, r3
 801cb16:	f04f 0c0a 	mov.w	ip, #10
 801cb1a:	4620      	mov	r0, r4
 801cb1c:	f810 2b01 	ldrb.w	r2, [r0], #1
 801cb20:	3a30      	subs	r2, #48	; 0x30
 801cb22:	2a09      	cmp	r2, #9
 801cb24:	d903      	bls.n	801cb2e <_vfiprintf_r+0x1ee>
 801cb26:	2b00      	cmp	r3, #0
 801cb28:	d0c5      	beq.n	801cab6 <_vfiprintf_r+0x176>
 801cb2a:	9105      	str	r1, [sp, #20]
 801cb2c:	e7c3      	b.n	801cab6 <_vfiprintf_r+0x176>
 801cb2e:	fb0c 2101 	mla	r1, ip, r1, r2
 801cb32:	4604      	mov	r4, r0
 801cb34:	2301      	movs	r3, #1
 801cb36:	e7f0      	b.n	801cb1a <_vfiprintf_r+0x1da>
 801cb38:	ab03      	add	r3, sp, #12
 801cb3a:	9300      	str	r3, [sp, #0]
 801cb3c:	462a      	mov	r2, r5
 801cb3e:	4b16      	ldr	r3, [pc, #88]	; (801cb98 <_vfiprintf_r+0x258>)
 801cb40:	a904      	add	r1, sp, #16
 801cb42:	4630      	mov	r0, r6
 801cb44:	f3af 8000 	nop.w
 801cb48:	4607      	mov	r7, r0
 801cb4a:	1c78      	adds	r0, r7, #1
 801cb4c:	d1d6      	bne.n	801cafc <_vfiprintf_r+0x1bc>
 801cb4e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801cb50:	07d9      	lsls	r1, r3, #31
 801cb52:	d405      	bmi.n	801cb60 <_vfiprintf_r+0x220>
 801cb54:	89ab      	ldrh	r3, [r5, #12]
 801cb56:	059a      	lsls	r2, r3, #22
 801cb58:	d402      	bmi.n	801cb60 <_vfiprintf_r+0x220>
 801cb5a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801cb5c:	f000 fce4 	bl	801d528 <__retarget_lock_release_recursive>
 801cb60:	89ab      	ldrh	r3, [r5, #12]
 801cb62:	065b      	lsls	r3, r3, #25
 801cb64:	f53f af12 	bmi.w	801c98c <_vfiprintf_r+0x4c>
 801cb68:	9809      	ldr	r0, [sp, #36]	; 0x24
 801cb6a:	e711      	b.n	801c990 <_vfiprintf_r+0x50>
 801cb6c:	ab03      	add	r3, sp, #12
 801cb6e:	9300      	str	r3, [sp, #0]
 801cb70:	462a      	mov	r2, r5
 801cb72:	4b09      	ldr	r3, [pc, #36]	; (801cb98 <_vfiprintf_r+0x258>)
 801cb74:	a904      	add	r1, sp, #16
 801cb76:	4630      	mov	r0, r6
 801cb78:	f000 f880 	bl	801cc7c <_printf_i>
 801cb7c:	e7e4      	b.n	801cb48 <_vfiprintf_r+0x208>
 801cb7e:	bf00      	nop
 801cb80:	0801fce8 	.word	0x0801fce8
 801cb84:	0801fd08 	.word	0x0801fd08
 801cb88:	0801fcc8 	.word	0x0801fcc8
 801cb8c:	0801fc90 	.word	0x0801fc90
 801cb90:	0801fc9a 	.word	0x0801fc9a
 801cb94:	00000000 	.word	0x00000000
 801cb98:	0801c91b 	.word	0x0801c91b
 801cb9c:	0801fc96 	.word	0x0801fc96

0801cba0 <_printf_common>:
 801cba0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cba4:	4616      	mov	r6, r2
 801cba6:	4699      	mov	r9, r3
 801cba8:	688a      	ldr	r2, [r1, #8]
 801cbaa:	690b      	ldr	r3, [r1, #16]
 801cbac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801cbb0:	4293      	cmp	r3, r2
 801cbb2:	bfb8      	it	lt
 801cbb4:	4613      	movlt	r3, r2
 801cbb6:	6033      	str	r3, [r6, #0]
 801cbb8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801cbbc:	4607      	mov	r7, r0
 801cbbe:	460c      	mov	r4, r1
 801cbc0:	b10a      	cbz	r2, 801cbc6 <_printf_common+0x26>
 801cbc2:	3301      	adds	r3, #1
 801cbc4:	6033      	str	r3, [r6, #0]
 801cbc6:	6823      	ldr	r3, [r4, #0]
 801cbc8:	0699      	lsls	r1, r3, #26
 801cbca:	bf42      	ittt	mi
 801cbcc:	6833      	ldrmi	r3, [r6, #0]
 801cbce:	3302      	addmi	r3, #2
 801cbd0:	6033      	strmi	r3, [r6, #0]
 801cbd2:	6825      	ldr	r5, [r4, #0]
 801cbd4:	f015 0506 	ands.w	r5, r5, #6
 801cbd8:	d106      	bne.n	801cbe8 <_printf_common+0x48>
 801cbda:	f104 0a19 	add.w	sl, r4, #25
 801cbde:	68e3      	ldr	r3, [r4, #12]
 801cbe0:	6832      	ldr	r2, [r6, #0]
 801cbe2:	1a9b      	subs	r3, r3, r2
 801cbe4:	42ab      	cmp	r3, r5
 801cbe6:	dc26      	bgt.n	801cc36 <_printf_common+0x96>
 801cbe8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801cbec:	1e13      	subs	r3, r2, #0
 801cbee:	6822      	ldr	r2, [r4, #0]
 801cbf0:	bf18      	it	ne
 801cbf2:	2301      	movne	r3, #1
 801cbf4:	0692      	lsls	r2, r2, #26
 801cbf6:	d42b      	bmi.n	801cc50 <_printf_common+0xb0>
 801cbf8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801cbfc:	4649      	mov	r1, r9
 801cbfe:	4638      	mov	r0, r7
 801cc00:	47c0      	blx	r8
 801cc02:	3001      	adds	r0, #1
 801cc04:	d01e      	beq.n	801cc44 <_printf_common+0xa4>
 801cc06:	6823      	ldr	r3, [r4, #0]
 801cc08:	68e5      	ldr	r5, [r4, #12]
 801cc0a:	6832      	ldr	r2, [r6, #0]
 801cc0c:	f003 0306 	and.w	r3, r3, #6
 801cc10:	2b04      	cmp	r3, #4
 801cc12:	bf08      	it	eq
 801cc14:	1aad      	subeq	r5, r5, r2
 801cc16:	68a3      	ldr	r3, [r4, #8]
 801cc18:	6922      	ldr	r2, [r4, #16]
 801cc1a:	bf0c      	ite	eq
 801cc1c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801cc20:	2500      	movne	r5, #0
 801cc22:	4293      	cmp	r3, r2
 801cc24:	bfc4      	itt	gt
 801cc26:	1a9b      	subgt	r3, r3, r2
 801cc28:	18ed      	addgt	r5, r5, r3
 801cc2a:	2600      	movs	r6, #0
 801cc2c:	341a      	adds	r4, #26
 801cc2e:	42b5      	cmp	r5, r6
 801cc30:	d11a      	bne.n	801cc68 <_printf_common+0xc8>
 801cc32:	2000      	movs	r0, #0
 801cc34:	e008      	b.n	801cc48 <_printf_common+0xa8>
 801cc36:	2301      	movs	r3, #1
 801cc38:	4652      	mov	r2, sl
 801cc3a:	4649      	mov	r1, r9
 801cc3c:	4638      	mov	r0, r7
 801cc3e:	47c0      	blx	r8
 801cc40:	3001      	adds	r0, #1
 801cc42:	d103      	bne.n	801cc4c <_printf_common+0xac>
 801cc44:	f04f 30ff 	mov.w	r0, #4294967295
 801cc48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cc4c:	3501      	adds	r5, #1
 801cc4e:	e7c6      	b.n	801cbde <_printf_common+0x3e>
 801cc50:	18e1      	adds	r1, r4, r3
 801cc52:	1c5a      	adds	r2, r3, #1
 801cc54:	2030      	movs	r0, #48	; 0x30
 801cc56:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801cc5a:	4422      	add	r2, r4
 801cc5c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801cc60:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801cc64:	3302      	adds	r3, #2
 801cc66:	e7c7      	b.n	801cbf8 <_printf_common+0x58>
 801cc68:	2301      	movs	r3, #1
 801cc6a:	4622      	mov	r2, r4
 801cc6c:	4649      	mov	r1, r9
 801cc6e:	4638      	mov	r0, r7
 801cc70:	47c0      	blx	r8
 801cc72:	3001      	adds	r0, #1
 801cc74:	d0e6      	beq.n	801cc44 <_printf_common+0xa4>
 801cc76:	3601      	adds	r6, #1
 801cc78:	e7d9      	b.n	801cc2e <_printf_common+0x8e>
	...

0801cc7c <_printf_i>:
 801cc7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801cc80:	7e0f      	ldrb	r7, [r1, #24]
 801cc82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cc84:	2f78      	cmp	r7, #120	; 0x78
 801cc86:	4691      	mov	r9, r2
 801cc88:	4680      	mov	r8, r0
 801cc8a:	460c      	mov	r4, r1
 801cc8c:	469a      	mov	sl, r3
 801cc8e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801cc92:	d807      	bhi.n	801cca4 <_printf_i+0x28>
 801cc94:	2f62      	cmp	r7, #98	; 0x62
 801cc96:	d80a      	bhi.n	801ccae <_printf_i+0x32>
 801cc98:	2f00      	cmp	r7, #0
 801cc9a:	f000 80d8 	beq.w	801ce4e <_printf_i+0x1d2>
 801cc9e:	2f58      	cmp	r7, #88	; 0x58
 801cca0:	f000 80a3 	beq.w	801cdea <_printf_i+0x16e>
 801cca4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801cca8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801ccac:	e03a      	b.n	801cd24 <_printf_i+0xa8>
 801ccae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801ccb2:	2b15      	cmp	r3, #21
 801ccb4:	d8f6      	bhi.n	801cca4 <_printf_i+0x28>
 801ccb6:	a101      	add	r1, pc, #4	; (adr r1, 801ccbc <_printf_i+0x40>)
 801ccb8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801ccbc:	0801cd15 	.word	0x0801cd15
 801ccc0:	0801cd29 	.word	0x0801cd29
 801ccc4:	0801cca5 	.word	0x0801cca5
 801ccc8:	0801cca5 	.word	0x0801cca5
 801cccc:	0801cca5 	.word	0x0801cca5
 801ccd0:	0801cca5 	.word	0x0801cca5
 801ccd4:	0801cd29 	.word	0x0801cd29
 801ccd8:	0801cca5 	.word	0x0801cca5
 801ccdc:	0801cca5 	.word	0x0801cca5
 801cce0:	0801cca5 	.word	0x0801cca5
 801cce4:	0801cca5 	.word	0x0801cca5
 801cce8:	0801ce35 	.word	0x0801ce35
 801ccec:	0801cd59 	.word	0x0801cd59
 801ccf0:	0801ce17 	.word	0x0801ce17
 801ccf4:	0801cca5 	.word	0x0801cca5
 801ccf8:	0801cca5 	.word	0x0801cca5
 801ccfc:	0801ce57 	.word	0x0801ce57
 801cd00:	0801cca5 	.word	0x0801cca5
 801cd04:	0801cd59 	.word	0x0801cd59
 801cd08:	0801cca5 	.word	0x0801cca5
 801cd0c:	0801cca5 	.word	0x0801cca5
 801cd10:	0801ce1f 	.word	0x0801ce1f
 801cd14:	682b      	ldr	r3, [r5, #0]
 801cd16:	1d1a      	adds	r2, r3, #4
 801cd18:	681b      	ldr	r3, [r3, #0]
 801cd1a:	602a      	str	r2, [r5, #0]
 801cd1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801cd20:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801cd24:	2301      	movs	r3, #1
 801cd26:	e0a3      	b.n	801ce70 <_printf_i+0x1f4>
 801cd28:	6820      	ldr	r0, [r4, #0]
 801cd2a:	6829      	ldr	r1, [r5, #0]
 801cd2c:	0606      	lsls	r6, r0, #24
 801cd2e:	f101 0304 	add.w	r3, r1, #4
 801cd32:	d50a      	bpl.n	801cd4a <_printf_i+0xce>
 801cd34:	680e      	ldr	r6, [r1, #0]
 801cd36:	602b      	str	r3, [r5, #0]
 801cd38:	2e00      	cmp	r6, #0
 801cd3a:	da03      	bge.n	801cd44 <_printf_i+0xc8>
 801cd3c:	232d      	movs	r3, #45	; 0x2d
 801cd3e:	4276      	negs	r6, r6
 801cd40:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801cd44:	485e      	ldr	r0, [pc, #376]	; (801cec0 <_printf_i+0x244>)
 801cd46:	230a      	movs	r3, #10
 801cd48:	e019      	b.n	801cd7e <_printf_i+0x102>
 801cd4a:	680e      	ldr	r6, [r1, #0]
 801cd4c:	602b      	str	r3, [r5, #0]
 801cd4e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cd52:	bf18      	it	ne
 801cd54:	b236      	sxthne	r6, r6
 801cd56:	e7ef      	b.n	801cd38 <_printf_i+0xbc>
 801cd58:	682b      	ldr	r3, [r5, #0]
 801cd5a:	6820      	ldr	r0, [r4, #0]
 801cd5c:	1d19      	adds	r1, r3, #4
 801cd5e:	6029      	str	r1, [r5, #0]
 801cd60:	0601      	lsls	r1, r0, #24
 801cd62:	d501      	bpl.n	801cd68 <_printf_i+0xec>
 801cd64:	681e      	ldr	r6, [r3, #0]
 801cd66:	e002      	b.n	801cd6e <_printf_i+0xf2>
 801cd68:	0646      	lsls	r6, r0, #25
 801cd6a:	d5fb      	bpl.n	801cd64 <_printf_i+0xe8>
 801cd6c:	881e      	ldrh	r6, [r3, #0]
 801cd6e:	4854      	ldr	r0, [pc, #336]	; (801cec0 <_printf_i+0x244>)
 801cd70:	2f6f      	cmp	r7, #111	; 0x6f
 801cd72:	bf0c      	ite	eq
 801cd74:	2308      	moveq	r3, #8
 801cd76:	230a      	movne	r3, #10
 801cd78:	2100      	movs	r1, #0
 801cd7a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801cd7e:	6865      	ldr	r5, [r4, #4]
 801cd80:	60a5      	str	r5, [r4, #8]
 801cd82:	2d00      	cmp	r5, #0
 801cd84:	bfa2      	ittt	ge
 801cd86:	6821      	ldrge	r1, [r4, #0]
 801cd88:	f021 0104 	bicge.w	r1, r1, #4
 801cd8c:	6021      	strge	r1, [r4, #0]
 801cd8e:	b90e      	cbnz	r6, 801cd94 <_printf_i+0x118>
 801cd90:	2d00      	cmp	r5, #0
 801cd92:	d04d      	beq.n	801ce30 <_printf_i+0x1b4>
 801cd94:	4615      	mov	r5, r2
 801cd96:	fbb6 f1f3 	udiv	r1, r6, r3
 801cd9a:	fb03 6711 	mls	r7, r3, r1, r6
 801cd9e:	5dc7      	ldrb	r7, [r0, r7]
 801cda0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801cda4:	4637      	mov	r7, r6
 801cda6:	42bb      	cmp	r3, r7
 801cda8:	460e      	mov	r6, r1
 801cdaa:	d9f4      	bls.n	801cd96 <_printf_i+0x11a>
 801cdac:	2b08      	cmp	r3, #8
 801cdae:	d10b      	bne.n	801cdc8 <_printf_i+0x14c>
 801cdb0:	6823      	ldr	r3, [r4, #0]
 801cdb2:	07de      	lsls	r6, r3, #31
 801cdb4:	d508      	bpl.n	801cdc8 <_printf_i+0x14c>
 801cdb6:	6923      	ldr	r3, [r4, #16]
 801cdb8:	6861      	ldr	r1, [r4, #4]
 801cdba:	4299      	cmp	r1, r3
 801cdbc:	bfde      	ittt	le
 801cdbe:	2330      	movle	r3, #48	; 0x30
 801cdc0:	f805 3c01 	strble.w	r3, [r5, #-1]
 801cdc4:	f105 35ff 	addle.w	r5, r5, #4294967295
 801cdc8:	1b52      	subs	r2, r2, r5
 801cdca:	6122      	str	r2, [r4, #16]
 801cdcc:	f8cd a000 	str.w	sl, [sp]
 801cdd0:	464b      	mov	r3, r9
 801cdd2:	aa03      	add	r2, sp, #12
 801cdd4:	4621      	mov	r1, r4
 801cdd6:	4640      	mov	r0, r8
 801cdd8:	f7ff fee2 	bl	801cba0 <_printf_common>
 801cddc:	3001      	adds	r0, #1
 801cdde:	d14c      	bne.n	801ce7a <_printf_i+0x1fe>
 801cde0:	f04f 30ff 	mov.w	r0, #4294967295
 801cde4:	b004      	add	sp, #16
 801cde6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cdea:	4835      	ldr	r0, [pc, #212]	; (801cec0 <_printf_i+0x244>)
 801cdec:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801cdf0:	6829      	ldr	r1, [r5, #0]
 801cdf2:	6823      	ldr	r3, [r4, #0]
 801cdf4:	f851 6b04 	ldr.w	r6, [r1], #4
 801cdf8:	6029      	str	r1, [r5, #0]
 801cdfa:	061d      	lsls	r5, r3, #24
 801cdfc:	d514      	bpl.n	801ce28 <_printf_i+0x1ac>
 801cdfe:	07df      	lsls	r7, r3, #31
 801ce00:	bf44      	itt	mi
 801ce02:	f043 0320 	orrmi.w	r3, r3, #32
 801ce06:	6023      	strmi	r3, [r4, #0]
 801ce08:	b91e      	cbnz	r6, 801ce12 <_printf_i+0x196>
 801ce0a:	6823      	ldr	r3, [r4, #0]
 801ce0c:	f023 0320 	bic.w	r3, r3, #32
 801ce10:	6023      	str	r3, [r4, #0]
 801ce12:	2310      	movs	r3, #16
 801ce14:	e7b0      	b.n	801cd78 <_printf_i+0xfc>
 801ce16:	6823      	ldr	r3, [r4, #0]
 801ce18:	f043 0320 	orr.w	r3, r3, #32
 801ce1c:	6023      	str	r3, [r4, #0]
 801ce1e:	2378      	movs	r3, #120	; 0x78
 801ce20:	4828      	ldr	r0, [pc, #160]	; (801cec4 <_printf_i+0x248>)
 801ce22:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801ce26:	e7e3      	b.n	801cdf0 <_printf_i+0x174>
 801ce28:	0659      	lsls	r1, r3, #25
 801ce2a:	bf48      	it	mi
 801ce2c:	b2b6      	uxthmi	r6, r6
 801ce2e:	e7e6      	b.n	801cdfe <_printf_i+0x182>
 801ce30:	4615      	mov	r5, r2
 801ce32:	e7bb      	b.n	801cdac <_printf_i+0x130>
 801ce34:	682b      	ldr	r3, [r5, #0]
 801ce36:	6826      	ldr	r6, [r4, #0]
 801ce38:	6961      	ldr	r1, [r4, #20]
 801ce3a:	1d18      	adds	r0, r3, #4
 801ce3c:	6028      	str	r0, [r5, #0]
 801ce3e:	0635      	lsls	r5, r6, #24
 801ce40:	681b      	ldr	r3, [r3, #0]
 801ce42:	d501      	bpl.n	801ce48 <_printf_i+0x1cc>
 801ce44:	6019      	str	r1, [r3, #0]
 801ce46:	e002      	b.n	801ce4e <_printf_i+0x1d2>
 801ce48:	0670      	lsls	r0, r6, #25
 801ce4a:	d5fb      	bpl.n	801ce44 <_printf_i+0x1c8>
 801ce4c:	8019      	strh	r1, [r3, #0]
 801ce4e:	2300      	movs	r3, #0
 801ce50:	6123      	str	r3, [r4, #16]
 801ce52:	4615      	mov	r5, r2
 801ce54:	e7ba      	b.n	801cdcc <_printf_i+0x150>
 801ce56:	682b      	ldr	r3, [r5, #0]
 801ce58:	1d1a      	adds	r2, r3, #4
 801ce5a:	602a      	str	r2, [r5, #0]
 801ce5c:	681d      	ldr	r5, [r3, #0]
 801ce5e:	6862      	ldr	r2, [r4, #4]
 801ce60:	2100      	movs	r1, #0
 801ce62:	4628      	mov	r0, r5
 801ce64:	f7e3 f9c4 	bl	80001f0 <memchr>
 801ce68:	b108      	cbz	r0, 801ce6e <_printf_i+0x1f2>
 801ce6a:	1b40      	subs	r0, r0, r5
 801ce6c:	6060      	str	r0, [r4, #4]
 801ce6e:	6863      	ldr	r3, [r4, #4]
 801ce70:	6123      	str	r3, [r4, #16]
 801ce72:	2300      	movs	r3, #0
 801ce74:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801ce78:	e7a8      	b.n	801cdcc <_printf_i+0x150>
 801ce7a:	6923      	ldr	r3, [r4, #16]
 801ce7c:	462a      	mov	r2, r5
 801ce7e:	4649      	mov	r1, r9
 801ce80:	4640      	mov	r0, r8
 801ce82:	47d0      	blx	sl
 801ce84:	3001      	adds	r0, #1
 801ce86:	d0ab      	beq.n	801cde0 <_printf_i+0x164>
 801ce88:	6823      	ldr	r3, [r4, #0]
 801ce8a:	079b      	lsls	r3, r3, #30
 801ce8c:	d413      	bmi.n	801ceb6 <_printf_i+0x23a>
 801ce8e:	68e0      	ldr	r0, [r4, #12]
 801ce90:	9b03      	ldr	r3, [sp, #12]
 801ce92:	4298      	cmp	r0, r3
 801ce94:	bfb8      	it	lt
 801ce96:	4618      	movlt	r0, r3
 801ce98:	e7a4      	b.n	801cde4 <_printf_i+0x168>
 801ce9a:	2301      	movs	r3, #1
 801ce9c:	4632      	mov	r2, r6
 801ce9e:	4649      	mov	r1, r9
 801cea0:	4640      	mov	r0, r8
 801cea2:	47d0      	blx	sl
 801cea4:	3001      	adds	r0, #1
 801cea6:	d09b      	beq.n	801cde0 <_printf_i+0x164>
 801cea8:	3501      	adds	r5, #1
 801ceaa:	68e3      	ldr	r3, [r4, #12]
 801ceac:	9903      	ldr	r1, [sp, #12]
 801ceae:	1a5b      	subs	r3, r3, r1
 801ceb0:	42ab      	cmp	r3, r5
 801ceb2:	dcf2      	bgt.n	801ce9a <_printf_i+0x21e>
 801ceb4:	e7eb      	b.n	801ce8e <_printf_i+0x212>
 801ceb6:	2500      	movs	r5, #0
 801ceb8:	f104 0619 	add.w	r6, r4, #25
 801cebc:	e7f5      	b.n	801ceaa <_printf_i+0x22e>
 801cebe:	bf00      	nop
 801cec0:	0801fca1 	.word	0x0801fca1
 801cec4:	0801fcb2 	.word	0x0801fcb2

0801cec8 <_sbrk_r>:
 801cec8:	b538      	push	{r3, r4, r5, lr}
 801ceca:	4d06      	ldr	r5, [pc, #24]	; (801cee4 <_sbrk_r+0x1c>)
 801cecc:	2300      	movs	r3, #0
 801cece:	4604      	mov	r4, r0
 801ced0:	4608      	mov	r0, r1
 801ced2:	602b      	str	r3, [r5, #0]
 801ced4:	f7e4 ffcc 	bl	8001e70 <_sbrk>
 801ced8:	1c43      	adds	r3, r0, #1
 801ceda:	d102      	bne.n	801cee2 <_sbrk_r+0x1a>
 801cedc:	682b      	ldr	r3, [r5, #0]
 801cede:	b103      	cbz	r3, 801cee2 <_sbrk_r+0x1a>
 801cee0:	6023      	str	r3, [r4, #0]
 801cee2:	bd38      	pop	{r3, r4, r5, pc}
 801cee4:	200179f0 	.word	0x200179f0

0801cee8 <_raise_r>:
 801cee8:	291f      	cmp	r1, #31
 801ceea:	b538      	push	{r3, r4, r5, lr}
 801ceec:	4604      	mov	r4, r0
 801ceee:	460d      	mov	r5, r1
 801cef0:	d904      	bls.n	801cefc <_raise_r+0x14>
 801cef2:	2316      	movs	r3, #22
 801cef4:	6003      	str	r3, [r0, #0]
 801cef6:	f04f 30ff 	mov.w	r0, #4294967295
 801cefa:	bd38      	pop	{r3, r4, r5, pc}
 801cefc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801cefe:	b112      	cbz	r2, 801cf06 <_raise_r+0x1e>
 801cf00:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801cf04:	b94b      	cbnz	r3, 801cf1a <_raise_r+0x32>
 801cf06:	4620      	mov	r0, r4
 801cf08:	f000 f830 	bl	801cf6c <_getpid_r>
 801cf0c:	462a      	mov	r2, r5
 801cf0e:	4601      	mov	r1, r0
 801cf10:	4620      	mov	r0, r4
 801cf12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801cf16:	f000 b817 	b.w	801cf48 <_kill_r>
 801cf1a:	2b01      	cmp	r3, #1
 801cf1c:	d00a      	beq.n	801cf34 <_raise_r+0x4c>
 801cf1e:	1c59      	adds	r1, r3, #1
 801cf20:	d103      	bne.n	801cf2a <_raise_r+0x42>
 801cf22:	2316      	movs	r3, #22
 801cf24:	6003      	str	r3, [r0, #0]
 801cf26:	2001      	movs	r0, #1
 801cf28:	e7e7      	b.n	801cefa <_raise_r+0x12>
 801cf2a:	2400      	movs	r4, #0
 801cf2c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801cf30:	4628      	mov	r0, r5
 801cf32:	4798      	blx	r3
 801cf34:	2000      	movs	r0, #0
 801cf36:	e7e0      	b.n	801cefa <_raise_r+0x12>

0801cf38 <raise>:
 801cf38:	4b02      	ldr	r3, [pc, #8]	; (801cf44 <raise+0xc>)
 801cf3a:	4601      	mov	r1, r0
 801cf3c:	6818      	ldr	r0, [r3, #0]
 801cf3e:	f7ff bfd3 	b.w	801cee8 <_raise_r>
 801cf42:	bf00      	nop
 801cf44:	200000fc 	.word	0x200000fc

0801cf48 <_kill_r>:
 801cf48:	b538      	push	{r3, r4, r5, lr}
 801cf4a:	4d07      	ldr	r5, [pc, #28]	; (801cf68 <_kill_r+0x20>)
 801cf4c:	2300      	movs	r3, #0
 801cf4e:	4604      	mov	r4, r0
 801cf50:	4608      	mov	r0, r1
 801cf52:	4611      	mov	r1, r2
 801cf54:	602b      	str	r3, [r5, #0]
 801cf56:	f7e4 ff55 	bl	8001e04 <_kill>
 801cf5a:	1c43      	adds	r3, r0, #1
 801cf5c:	d102      	bne.n	801cf64 <_kill_r+0x1c>
 801cf5e:	682b      	ldr	r3, [r5, #0]
 801cf60:	b103      	cbz	r3, 801cf64 <_kill_r+0x1c>
 801cf62:	6023      	str	r3, [r4, #0]
 801cf64:	bd38      	pop	{r3, r4, r5, pc}
 801cf66:	bf00      	nop
 801cf68:	200179f0 	.word	0x200179f0

0801cf6c <_getpid_r>:
 801cf6c:	f7e4 bf48 	b.w	8001e00 <_getpid>

0801cf70 <__swbuf_r>:
 801cf70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cf72:	460e      	mov	r6, r1
 801cf74:	4614      	mov	r4, r2
 801cf76:	4605      	mov	r5, r0
 801cf78:	b118      	cbz	r0, 801cf82 <__swbuf_r+0x12>
 801cf7a:	6983      	ldr	r3, [r0, #24]
 801cf7c:	b90b      	cbnz	r3, 801cf82 <__swbuf_r+0x12>
 801cf7e:	f000 fa33 	bl	801d3e8 <__sinit>
 801cf82:	4b21      	ldr	r3, [pc, #132]	; (801d008 <__swbuf_r+0x98>)
 801cf84:	429c      	cmp	r4, r3
 801cf86:	d12b      	bne.n	801cfe0 <__swbuf_r+0x70>
 801cf88:	686c      	ldr	r4, [r5, #4]
 801cf8a:	69a3      	ldr	r3, [r4, #24]
 801cf8c:	60a3      	str	r3, [r4, #8]
 801cf8e:	89a3      	ldrh	r3, [r4, #12]
 801cf90:	071a      	lsls	r2, r3, #28
 801cf92:	d52f      	bpl.n	801cff4 <__swbuf_r+0x84>
 801cf94:	6923      	ldr	r3, [r4, #16]
 801cf96:	b36b      	cbz	r3, 801cff4 <__swbuf_r+0x84>
 801cf98:	6923      	ldr	r3, [r4, #16]
 801cf9a:	6820      	ldr	r0, [r4, #0]
 801cf9c:	1ac0      	subs	r0, r0, r3
 801cf9e:	6963      	ldr	r3, [r4, #20]
 801cfa0:	b2f6      	uxtb	r6, r6
 801cfa2:	4283      	cmp	r3, r0
 801cfa4:	4637      	mov	r7, r6
 801cfa6:	dc04      	bgt.n	801cfb2 <__swbuf_r+0x42>
 801cfa8:	4621      	mov	r1, r4
 801cfaa:	4628      	mov	r0, r5
 801cfac:	f000 f988 	bl	801d2c0 <_fflush_r>
 801cfb0:	bb30      	cbnz	r0, 801d000 <__swbuf_r+0x90>
 801cfb2:	68a3      	ldr	r3, [r4, #8]
 801cfb4:	3b01      	subs	r3, #1
 801cfb6:	60a3      	str	r3, [r4, #8]
 801cfb8:	6823      	ldr	r3, [r4, #0]
 801cfba:	1c5a      	adds	r2, r3, #1
 801cfbc:	6022      	str	r2, [r4, #0]
 801cfbe:	701e      	strb	r6, [r3, #0]
 801cfc0:	6963      	ldr	r3, [r4, #20]
 801cfc2:	3001      	adds	r0, #1
 801cfc4:	4283      	cmp	r3, r0
 801cfc6:	d004      	beq.n	801cfd2 <__swbuf_r+0x62>
 801cfc8:	89a3      	ldrh	r3, [r4, #12]
 801cfca:	07db      	lsls	r3, r3, #31
 801cfcc:	d506      	bpl.n	801cfdc <__swbuf_r+0x6c>
 801cfce:	2e0a      	cmp	r6, #10
 801cfd0:	d104      	bne.n	801cfdc <__swbuf_r+0x6c>
 801cfd2:	4621      	mov	r1, r4
 801cfd4:	4628      	mov	r0, r5
 801cfd6:	f000 f973 	bl	801d2c0 <_fflush_r>
 801cfda:	b988      	cbnz	r0, 801d000 <__swbuf_r+0x90>
 801cfdc:	4638      	mov	r0, r7
 801cfde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801cfe0:	4b0a      	ldr	r3, [pc, #40]	; (801d00c <__swbuf_r+0x9c>)
 801cfe2:	429c      	cmp	r4, r3
 801cfe4:	d101      	bne.n	801cfea <__swbuf_r+0x7a>
 801cfe6:	68ac      	ldr	r4, [r5, #8]
 801cfe8:	e7cf      	b.n	801cf8a <__swbuf_r+0x1a>
 801cfea:	4b09      	ldr	r3, [pc, #36]	; (801d010 <__swbuf_r+0xa0>)
 801cfec:	429c      	cmp	r4, r3
 801cfee:	bf08      	it	eq
 801cff0:	68ec      	ldreq	r4, [r5, #12]
 801cff2:	e7ca      	b.n	801cf8a <__swbuf_r+0x1a>
 801cff4:	4621      	mov	r1, r4
 801cff6:	4628      	mov	r0, r5
 801cff8:	f000 f80c 	bl	801d014 <__swsetup_r>
 801cffc:	2800      	cmp	r0, #0
 801cffe:	d0cb      	beq.n	801cf98 <__swbuf_r+0x28>
 801d000:	f04f 37ff 	mov.w	r7, #4294967295
 801d004:	e7ea      	b.n	801cfdc <__swbuf_r+0x6c>
 801d006:	bf00      	nop
 801d008:	0801fce8 	.word	0x0801fce8
 801d00c:	0801fd08 	.word	0x0801fd08
 801d010:	0801fcc8 	.word	0x0801fcc8

0801d014 <__swsetup_r>:
 801d014:	4b32      	ldr	r3, [pc, #200]	; (801d0e0 <__swsetup_r+0xcc>)
 801d016:	b570      	push	{r4, r5, r6, lr}
 801d018:	681d      	ldr	r5, [r3, #0]
 801d01a:	4606      	mov	r6, r0
 801d01c:	460c      	mov	r4, r1
 801d01e:	b125      	cbz	r5, 801d02a <__swsetup_r+0x16>
 801d020:	69ab      	ldr	r3, [r5, #24]
 801d022:	b913      	cbnz	r3, 801d02a <__swsetup_r+0x16>
 801d024:	4628      	mov	r0, r5
 801d026:	f000 f9df 	bl	801d3e8 <__sinit>
 801d02a:	4b2e      	ldr	r3, [pc, #184]	; (801d0e4 <__swsetup_r+0xd0>)
 801d02c:	429c      	cmp	r4, r3
 801d02e:	d10f      	bne.n	801d050 <__swsetup_r+0x3c>
 801d030:	686c      	ldr	r4, [r5, #4]
 801d032:	89a3      	ldrh	r3, [r4, #12]
 801d034:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d038:	0719      	lsls	r1, r3, #28
 801d03a:	d42c      	bmi.n	801d096 <__swsetup_r+0x82>
 801d03c:	06dd      	lsls	r5, r3, #27
 801d03e:	d411      	bmi.n	801d064 <__swsetup_r+0x50>
 801d040:	2309      	movs	r3, #9
 801d042:	6033      	str	r3, [r6, #0]
 801d044:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801d048:	81a3      	strh	r3, [r4, #12]
 801d04a:	f04f 30ff 	mov.w	r0, #4294967295
 801d04e:	e03e      	b.n	801d0ce <__swsetup_r+0xba>
 801d050:	4b25      	ldr	r3, [pc, #148]	; (801d0e8 <__swsetup_r+0xd4>)
 801d052:	429c      	cmp	r4, r3
 801d054:	d101      	bne.n	801d05a <__swsetup_r+0x46>
 801d056:	68ac      	ldr	r4, [r5, #8]
 801d058:	e7eb      	b.n	801d032 <__swsetup_r+0x1e>
 801d05a:	4b24      	ldr	r3, [pc, #144]	; (801d0ec <__swsetup_r+0xd8>)
 801d05c:	429c      	cmp	r4, r3
 801d05e:	bf08      	it	eq
 801d060:	68ec      	ldreq	r4, [r5, #12]
 801d062:	e7e6      	b.n	801d032 <__swsetup_r+0x1e>
 801d064:	0758      	lsls	r0, r3, #29
 801d066:	d512      	bpl.n	801d08e <__swsetup_r+0x7a>
 801d068:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d06a:	b141      	cbz	r1, 801d07e <__swsetup_r+0x6a>
 801d06c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d070:	4299      	cmp	r1, r3
 801d072:	d002      	beq.n	801d07a <__swsetup_r+0x66>
 801d074:	4630      	mov	r0, r6
 801d076:	f7ff fb59 	bl	801c72c <_free_r>
 801d07a:	2300      	movs	r3, #0
 801d07c:	6363      	str	r3, [r4, #52]	; 0x34
 801d07e:	89a3      	ldrh	r3, [r4, #12]
 801d080:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801d084:	81a3      	strh	r3, [r4, #12]
 801d086:	2300      	movs	r3, #0
 801d088:	6063      	str	r3, [r4, #4]
 801d08a:	6923      	ldr	r3, [r4, #16]
 801d08c:	6023      	str	r3, [r4, #0]
 801d08e:	89a3      	ldrh	r3, [r4, #12]
 801d090:	f043 0308 	orr.w	r3, r3, #8
 801d094:	81a3      	strh	r3, [r4, #12]
 801d096:	6923      	ldr	r3, [r4, #16]
 801d098:	b94b      	cbnz	r3, 801d0ae <__swsetup_r+0x9a>
 801d09a:	89a3      	ldrh	r3, [r4, #12]
 801d09c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801d0a0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801d0a4:	d003      	beq.n	801d0ae <__swsetup_r+0x9a>
 801d0a6:	4621      	mov	r1, r4
 801d0a8:	4630      	mov	r0, r6
 801d0aa:	f000 fa63 	bl	801d574 <__smakebuf_r>
 801d0ae:	89a0      	ldrh	r0, [r4, #12]
 801d0b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d0b4:	f010 0301 	ands.w	r3, r0, #1
 801d0b8:	d00a      	beq.n	801d0d0 <__swsetup_r+0xbc>
 801d0ba:	2300      	movs	r3, #0
 801d0bc:	60a3      	str	r3, [r4, #8]
 801d0be:	6963      	ldr	r3, [r4, #20]
 801d0c0:	425b      	negs	r3, r3
 801d0c2:	61a3      	str	r3, [r4, #24]
 801d0c4:	6923      	ldr	r3, [r4, #16]
 801d0c6:	b943      	cbnz	r3, 801d0da <__swsetup_r+0xc6>
 801d0c8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801d0cc:	d1ba      	bne.n	801d044 <__swsetup_r+0x30>
 801d0ce:	bd70      	pop	{r4, r5, r6, pc}
 801d0d0:	0781      	lsls	r1, r0, #30
 801d0d2:	bf58      	it	pl
 801d0d4:	6963      	ldrpl	r3, [r4, #20]
 801d0d6:	60a3      	str	r3, [r4, #8]
 801d0d8:	e7f4      	b.n	801d0c4 <__swsetup_r+0xb0>
 801d0da:	2000      	movs	r0, #0
 801d0dc:	e7f7      	b.n	801d0ce <__swsetup_r+0xba>
 801d0de:	bf00      	nop
 801d0e0:	200000fc 	.word	0x200000fc
 801d0e4:	0801fce8 	.word	0x0801fce8
 801d0e8:	0801fd08 	.word	0x0801fd08
 801d0ec:	0801fcc8 	.word	0x0801fcc8

0801d0f0 <__register_exitproc>:
 801d0f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d0f4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801d1b0 <__register_exitproc+0xc0>
 801d0f8:	4606      	mov	r6, r0
 801d0fa:	f8d8 0000 	ldr.w	r0, [r8]
 801d0fe:	461f      	mov	r7, r3
 801d100:	460d      	mov	r5, r1
 801d102:	4691      	mov	r9, r2
 801d104:	f000 fa0e 	bl	801d524 <__retarget_lock_acquire_recursive>
 801d108:	4b25      	ldr	r3, [pc, #148]	; (801d1a0 <__register_exitproc+0xb0>)
 801d10a:	681c      	ldr	r4, [r3, #0]
 801d10c:	b934      	cbnz	r4, 801d11c <__register_exitproc+0x2c>
 801d10e:	4c25      	ldr	r4, [pc, #148]	; (801d1a4 <__register_exitproc+0xb4>)
 801d110:	601c      	str	r4, [r3, #0]
 801d112:	4b25      	ldr	r3, [pc, #148]	; (801d1a8 <__register_exitproc+0xb8>)
 801d114:	b113      	cbz	r3, 801d11c <__register_exitproc+0x2c>
 801d116:	681b      	ldr	r3, [r3, #0]
 801d118:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801d11c:	6863      	ldr	r3, [r4, #4]
 801d11e:	2b1f      	cmp	r3, #31
 801d120:	dd07      	ble.n	801d132 <__register_exitproc+0x42>
 801d122:	f8d8 0000 	ldr.w	r0, [r8]
 801d126:	f000 f9ff 	bl	801d528 <__retarget_lock_release_recursive>
 801d12a:	f04f 30ff 	mov.w	r0, #4294967295
 801d12e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d132:	b34e      	cbz	r6, 801d188 <__register_exitproc+0x98>
 801d134:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801d138:	b988      	cbnz	r0, 801d15e <__register_exitproc+0x6e>
 801d13a:	4b1c      	ldr	r3, [pc, #112]	; (801d1ac <__register_exitproc+0xbc>)
 801d13c:	b923      	cbnz	r3, 801d148 <__register_exitproc+0x58>
 801d13e:	f8d8 0000 	ldr.w	r0, [r8]
 801d142:	f000 f9f0 	bl	801d526 <__retarget_lock_release>
 801d146:	e7f0      	b.n	801d12a <__register_exitproc+0x3a>
 801d148:	f44f 7084 	mov.w	r0, #264	; 0x108
 801d14c:	f7ff fac8 	bl	801c6e0 <malloc>
 801d150:	2800      	cmp	r0, #0
 801d152:	d0f4      	beq.n	801d13e <__register_exitproc+0x4e>
 801d154:	2300      	movs	r3, #0
 801d156:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801d15a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801d15e:	6863      	ldr	r3, [r4, #4]
 801d160:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801d164:	2201      	movs	r2, #1
 801d166:	409a      	lsls	r2, r3
 801d168:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801d16c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801d170:	4313      	orrs	r3, r2
 801d172:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801d176:	2e02      	cmp	r6, #2
 801d178:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801d17c:	bf02      	ittt	eq
 801d17e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801d182:	4313      	orreq	r3, r2
 801d184:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801d188:	6863      	ldr	r3, [r4, #4]
 801d18a:	f8d8 0000 	ldr.w	r0, [r8]
 801d18e:	1c5a      	adds	r2, r3, #1
 801d190:	3302      	adds	r3, #2
 801d192:	6062      	str	r2, [r4, #4]
 801d194:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801d198:	f000 f9c6 	bl	801d528 <__retarget_lock_release_recursive>
 801d19c:	2000      	movs	r0, #0
 801d19e:	e7c6      	b.n	801d12e <__register_exitproc+0x3e>
 801d1a0:	200179e8 	.word	0x200179e8
 801d1a4:	2001795c 	.word	0x2001795c
 801d1a8:	0801fcc4 	.word	0x0801fcc4
 801d1ac:	0801c6e1 	.word	0x0801c6e1
 801d1b0:	20000160 	.word	0x20000160

0801d1b4 <__sflush_r>:
 801d1b4:	898a      	ldrh	r2, [r1, #12]
 801d1b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d1ba:	4605      	mov	r5, r0
 801d1bc:	0710      	lsls	r0, r2, #28
 801d1be:	460c      	mov	r4, r1
 801d1c0:	d458      	bmi.n	801d274 <__sflush_r+0xc0>
 801d1c2:	684b      	ldr	r3, [r1, #4]
 801d1c4:	2b00      	cmp	r3, #0
 801d1c6:	dc05      	bgt.n	801d1d4 <__sflush_r+0x20>
 801d1c8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801d1ca:	2b00      	cmp	r3, #0
 801d1cc:	dc02      	bgt.n	801d1d4 <__sflush_r+0x20>
 801d1ce:	2000      	movs	r0, #0
 801d1d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d1d4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d1d6:	2e00      	cmp	r6, #0
 801d1d8:	d0f9      	beq.n	801d1ce <__sflush_r+0x1a>
 801d1da:	2300      	movs	r3, #0
 801d1dc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801d1e0:	682f      	ldr	r7, [r5, #0]
 801d1e2:	602b      	str	r3, [r5, #0]
 801d1e4:	d032      	beq.n	801d24c <__sflush_r+0x98>
 801d1e6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801d1e8:	89a3      	ldrh	r3, [r4, #12]
 801d1ea:	075a      	lsls	r2, r3, #29
 801d1ec:	d505      	bpl.n	801d1fa <__sflush_r+0x46>
 801d1ee:	6863      	ldr	r3, [r4, #4]
 801d1f0:	1ac0      	subs	r0, r0, r3
 801d1f2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801d1f4:	b10b      	cbz	r3, 801d1fa <__sflush_r+0x46>
 801d1f6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d1f8:	1ac0      	subs	r0, r0, r3
 801d1fa:	2300      	movs	r3, #0
 801d1fc:	4602      	mov	r2, r0
 801d1fe:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d200:	6a21      	ldr	r1, [r4, #32]
 801d202:	4628      	mov	r0, r5
 801d204:	47b0      	blx	r6
 801d206:	1c43      	adds	r3, r0, #1
 801d208:	89a3      	ldrh	r3, [r4, #12]
 801d20a:	d106      	bne.n	801d21a <__sflush_r+0x66>
 801d20c:	6829      	ldr	r1, [r5, #0]
 801d20e:	291d      	cmp	r1, #29
 801d210:	d82c      	bhi.n	801d26c <__sflush_r+0xb8>
 801d212:	4a2a      	ldr	r2, [pc, #168]	; (801d2bc <__sflush_r+0x108>)
 801d214:	40ca      	lsrs	r2, r1
 801d216:	07d6      	lsls	r6, r2, #31
 801d218:	d528      	bpl.n	801d26c <__sflush_r+0xb8>
 801d21a:	2200      	movs	r2, #0
 801d21c:	6062      	str	r2, [r4, #4]
 801d21e:	04d9      	lsls	r1, r3, #19
 801d220:	6922      	ldr	r2, [r4, #16]
 801d222:	6022      	str	r2, [r4, #0]
 801d224:	d504      	bpl.n	801d230 <__sflush_r+0x7c>
 801d226:	1c42      	adds	r2, r0, #1
 801d228:	d101      	bne.n	801d22e <__sflush_r+0x7a>
 801d22a:	682b      	ldr	r3, [r5, #0]
 801d22c:	b903      	cbnz	r3, 801d230 <__sflush_r+0x7c>
 801d22e:	6560      	str	r0, [r4, #84]	; 0x54
 801d230:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d232:	602f      	str	r7, [r5, #0]
 801d234:	2900      	cmp	r1, #0
 801d236:	d0ca      	beq.n	801d1ce <__sflush_r+0x1a>
 801d238:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d23c:	4299      	cmp	r1, r3
 801d23e:	d002      	beq.n	801d246 <__sflush_r+0x92>
 801d240:	4628      	mov	r0, r5
 801d242:	f7ff fa73 	bl	801c72c <_free_r>
 801d246:	2000      	movs	r0, #0
 801d248:	6360      	str	r0, [r4, #52]	; 0x34
 801d24a:	e7c1      	b.n	801d1d0 <__sflush_r+0x1c>
 801d24c:	6a21      	ldr	r1, [r4, #32]
 801d24e:	2301      	movs	r3, #1
 801d250:	4628      	mov	r0, r5
 801d252:	47b0      	blx	r6
 801d254:	1c41      	adds	r1, r0, #1
 801d256:	d1c7      	bne.n	801d1e8 <__sflush_r+0x34>
 801d258:	682b      	ldr	r3, [r5, #0]
 801d25a:	2b00      	cmp	r3, #0
 801d25c:	d0c4      	beq.n	801d1e8 <__sflush_r+0x34>
 801d25e:	2b1d      	cmp	r3, #29
 801d260:	d001      	beq.n	801d266 <__sflush_r+0xb2>
 801d262:	2b16      	cmp	r3, #22
 801d264:	d101      	bne.n	801d26a <__sflush_r+0xb6>
 801d266:	602f      	str	r7, [r5, #0]
 801d268:	e7b1      	b.n	801d1ce <__sflush_r+0x1a>
 801d26a:	89a3      	ldrh	r3, [r4, #12]
 801d26c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d270:	81a3      	strh	r3, [r4, #12]
 801d272:	e7ad      	b.n	801d1d0 <__sflush_r+0x1c>
 801d274:	690f      	ldr	r7, [r1, #16]
 801d276:	2f00      	cmp	r7, #0
 801d278:	d0a9      	beq.n	801d1ce <__sflush_r+0x1a>
 801d27a:	0793      	lsls	r3, r2, #30
 801d27c:	680e      	ldr	r6, [r1, #0]
 801d27e:	bf08      	it	eq
 801d280:	694b      	ldreq	r3, [r1, #20]
 801d282:	600f      	str	r7, [r1, #0]
 801d284:	bf18      	it	ne
 801d286:	2300      	movne	r3, #0
 801d288:	eba6 0807 	sub.w	r8, r6, r7
 801d28c:	608b      	str	r3, [r1, #8]
 801d28e:	f1b8 0f00 	cmp.w	r8, #0
 801d292:	dd9c      	ble.n	801d1ce <__sflush_r+0x1a>
 801d294:	6a21      	ldr	r1, [r4, #32]
 801d296:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801d298:	4643      	mov	r3, r8
 801d29a:	463a      	mov	r2, r7
 801d29c:	4628      	mov	r0, r5
 801d29e:	47b0      	blx	r6
 801d2a0:	2800      	cmp	r0, #0
 801d2a2:	dc06      	bgt.n	801d2b2 <__sflush_r+0xfe>
 801d2a4:	89a3      	ldrh	r3, [r4, #12]
 801d2a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d2aa:	81a3      	strh	r3, [r4, #12]
 801d2ac:	f04f 30ff 	mov.w	r0, #4294967295
 801d2b0:	e78e      	b.n	801d1d0 <__sflush_r+0x1c>
 801d2b2:	4407      	add	r7, r0
 801d2b4:	eba8 0800 	sub.w	r8, r8, r0
 801d2b8:	e7e9      	b.n	801d28e <__sflush_r+0xda>
 801d2ba:	bf00      	nop
 801d2bc:	20400001 	.word	0x20400001

0801d2c0 <_fflush_r>:
 801d2c0:	b538      	push	{r3, r4, r5, lr}
 801d2c2:	690b      	ldr	r3, [r1, #16]
 801d2c4:	4605      	mov	r5, r0
 801d2c6:	460c      	mov	r4, r1
 801d2c8:	b913      	cbnz	r3, 801d2d0 <_fflush_r+0x10>
 801d2ca:	2500      	movs	r5, #0
 801d2cc:	4628      	mov	r0, r5
 801d2ce:	bd38      	pop	{r3, r4, r5, pc}
 801d2d0:	b118      	cbz	r0, 801d2da <_fflush_r+0x1a>
 801d2d2:	6983      	ldr	r3, [r0, #24]
 801d2d4:	b90b      	cbnz	r3, 801d2da <_fflush_r+0x1a>
 801d2d6:	f000 f887 	bl	801d3e8 <__sinit>
 801d2da:	4b14      	ldr	r3, [pc, #80]	; (801d32c <_fflush_r+0x6c>)
 801d2dc:	429c      	cmp	r4, r3
 801d2de:	d11b      	bne.n	801d318 <_fflush_r+0x58>
 801d2e0:	686c      	ldr	r4, [r5, #4]
 801d2e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801d2e6:	2b00      	cmp	r3, #0
 801d2e8:	d0ef      	beq.n	801d2ca <_fflush_r+0xa>
 801d2ea:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801d2ec:	07d0      	lsls	r0, r2, #31
 801d2ee:	d404      	bmi.n	801d2fa <_fflush_r+0x3a>
 801d2f0:	0599      	lsls	r1, r3, #22
 801d2f2:	d402      	bmi.n	801d2fa <_fflush_r+0x3a>
 801d2f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801d2f6:	f000 f915 	bl	801d524 <__retarget_lock_acquire_recursive>
 801d2fa:	4628      	mov	r0, r5
 801d2fc:	4621      	mov	r1, r4
 801d2fe:	f7ff ff59 	bl	801d1b4 <__sflush_r>
 801d302:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801d304:	07da      	lsls	r2, r3, #31
 801d306:	4605      	mov	r5, r0
 801d308:	d4e0      	bmi.n	801d2cc <_fflush_r+0xc>
 801d30a:	89a3      	ldrh	r3, [r4, #12]
 801d30c:	059b      	lsls	r3, r3, #22
 801d30e:	d4dd      	bmi.n	801d2cc <_fflush_r+0xc>
 801d310:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801d312:	f000 f909 	bl	801d528 <__retarget_lock_release_recursive>
 801d316:	e7d9      	b.n	801d2cc <_fflush_r+0xc>
 801d318:	4b05      	ldr	r3, [pc, #20]	; (801d330 <_fflush_r+0x70>)
 801d31a:	429c      	cmp	r4, r3
 801d31c:	d101      	bne.n	801d322 <_fflush_r+0x62>
 801d31e:	68ac      	ldr	r4, [r5, #8]
 801d320:	e7df      	b.n	801d2e2 <_fflush_r+0x22>
 801d322:	4b04      	ldr	r3, [pc, #16]	; (801d334 <_fflush_r+0x74>)
 801d324:	429c      	cmp	r4, r3
 801d326:	bf08      	it	eq
 801d328:	68ec      	ldreq	r4, [r5, #12]
 801d32a:	e7da      	b.n	801d2e2 <_fflush_r+0x22>
 801d32c:	0801fce8 	.word	0x0801fce8
 801d330:	0801fd08 	.word	0x0801fd08
 801d334:	0801fcc8 	.word	0x0801fcc8

0801d338 <std>:
 801d338:	2300      	movs	r3, #0
 801d33a:	b510      	push	{r4, lr}
 801d33c:	4604      	mov	r4, r0
 801d33e:	e9c0 3300 	strd	r3, r3, [r0]
 801d342:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801d346:	6083      	str	r3, [r0, #8]
 801d348:	8181      	strh	r1, [r0, #12]
 801d34a:	6643      	str	r3, [r0, #100]	; 0x64
 801d34c:	81c2      	strh	r2, [r0, #14]
 801d34e:	6183      	str	r3, [r0, #24]
 801d350:	4619      	mov	r1, r3
 801d352:	2208      	movs	r2, #8
 801d354:	305c      	adds	r0, #92	; 0x5c
 801d356:	f7ff f9e1 	bl	801c71c <memset>
 801d35a:	4b05      	ldr	r3, [pc, #20]	; (801d370 <std+0x38>)
 801d35c:	6263      	str	r3, [r4, #36]	; 0x24
 801d35e:	4b05      	ldr	r3, [pc, #20]	; (801d374 <std+0x3c>)
 801d360:	62a3      	str	r3, [r4, #40]	; 0x28
 801d362:	4b05      	ldr	r3, [pc, #20]	; (801d378 <std+0x40>)
 801d364:	62e3      	str	r3, [r4, #44]	; 0x2c
 801d366:	4b05      	ldr	r3, [pc, #20]	; (801d37c <std+0x44>)
 801d368:	6224      	str	r4, [r4, #32]
 801d36a:	6323      	str	r3, [r4, #48]	; 0x30
 801d36c:	bd10      	pop	{r4, pc}
 801d36e:	bf00      	nop
 801d370:	0801d60d 	.word	0x0801d60d
 801d374:	0801d62f 	.word	0x0801d62f
 801d378:	0801d667 	.word	0x0801d667
 801d37c:	0801d68b 	.word	0x0801d68b

0801d380 <_cleanup_r>:
 801d380:	4901      	ldr	r1, [pc, #4]	; (801d388 <_cleanup_r+0x8>)
 801d382:	f000 b8af 	b.w	801d4e4 <_fwalk_reent>
 801d386:	bf00      	nop
 801d388:	0801d2c1 	.word	0x0801d2c1

0801d38c <__sfmoreglue>:
 801d38c:	b570      	push	{r4, r5, r6, lr}
 801d38e:	2268      	movs	r2, #104	; 0x68
 801d390:	1e4d      	subs	r5, r1, #1
 801d392:	4355      	muls	r5, r2
 801d394:	460e      	mov	r6, r1
 801d396:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801d39a:	f7ff fa33 	bl	801c804 <_malloc_r>
 801d39e:	4604      	mov	r4, r0
 801d3a0:	b140      	cbz	r0, 801d3b4 <__sfmoreglue+0x28>
 801d3a2:	2100      	movs	r1, #0
 801d3a4:	e9c0 1600 	strd	r1, r6, [r0]
 801d3a8:	300c      	adds	r0, #12
 801d3aa:	60a0      	str	r0, [r4, #8]
 801d3ac:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801d3b0:	f7ff f9b4 	bl	801c71c <memset>
 801d3b4:	4620      	mov	r0, r4
 801d3b6:	bd70      	pop	{r4, r5, r6, pc}

0801d3b8 <__sfp_lock_acquire>:
 801d3b8:	4801      	ldr	r0, [pc, #4]	; (801d3c0 <__sfp_lock_acquire+0x8>)
 801d3ba:	f000 b8b3 	b.w	801d524 <__retarget_lock_acquire_recursive>
 801d3be:	bf00      	nop
 801d3c0:	200179ee 	.word	0x200179ee

0801d3c4 <__sfp_lock_release>:
 801d3c4:	4801      	ldr	r0, [pc, #4]	; (801d3cc <__sfp_lock_release+0x8>)
 801d3c6:	f000 b8af 	b.w	801d528 <__retarget_lock_release_recursive>
 801d3ca:	bf00      	nop
 801d3cc:	200179ee 	.word	0x200179ee

0801d3d0 <__sinit_lock_acquire>:
 801d3d0:	4801      	ldr	r0, [pc, #4]	; (801d3d8 <__sinit_lock_acquire+0x8>)
 801d3d2:	f000 b8a7 	b.w	801d524 <__retarget_lock_acquire_recursive>
 801d3d6:	bf00      	nop
 801d3d8:	200179ef 	.word	0x200179ef

0801d3dc <__sinit_lock_release>:
 801d3dc:	4801      	ldr	r0, [pc, #4]	; (801d3e4 <__sinit_lock_release+0x8>)
 801d3de:	f000 b8a3 	b.w	801d528 <__retarget_lock_release_recursive>
 801d3e2:	bf00      	nop
 801d3e4:	200179ef 	.word	0x200179ef

0801d3e8 <__sinit>:
 801d3e8:	b510      	push	{r4, lr}
 801d3ea:	4604      	mov	r4, r0
 801d3ec:	f7ff fff0 	bl	801d3d0 <__sinit_lock_acquire>
 801d3f0:	69a3      	ldr	r3, [r4, #24]
 801d3f2:	b11b      	cbz	r3, 801d3fc <__sinit+0x14>
 801d3f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d3f8:	f7ff bff0 	b.w	801d3dc <__sinit_lock_release>
 801d3fc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801d400:	6523      	str	r3, [r4, #80]	; 0x50
 801d402:	4b13      	ldr	r3, [pc, #76]	; (801d450 <__sinit+0x68>)
 801d404:	4a13      	ldr	r2, [pc, #76]	; (801d454 <__sinit+0x6c>)
 801d406:	681b      	ldr	r3, [r3, #0]
 801d408:	62a2      	str	r2, [r4, #40]	; 0x28
 801d40a:	42a3      	cmp	r3, r4
 801d40c:	bf04      	itt	eq
 801d40e:	2301      	moveq	r3, #1
 801d410:	61a3      	streq	r3, [r4, #24]
 801d412:	4620      	mov	r0, r4
 801d414:	f000 f820 	bl	801d458 <__sfp>
 801d418:	6060      	str	r0, [r4, #4]
 801d41a:	4620      	mov	r0, r4
 801d41c:	f000 f81c 	bl	801d458 <__sfp>
 801d420:	60a0      	str	r0, [r4, #8]
 801d422:	4620      	mov	r0, r4
 801d424:	f000 f818 	bl	801d458 <__sfp>
 801d428:	2200      	movs	r2, #0
 801d42a:	60e0      	str	r0, [r4, #12]
 801d42c:	2104      	movs	r1, #4
 801d42e:	6860      	ldr	r0, [r4, #4]
 801d430:	f7ff ff82 	bl	801d338 <std>
 801d434:	68a0      	ldr	r0, [r4, #8]
 801d436:	2201      	movs	r2, #1
 801d438:	2109      	movs	r1, #9
 801d43a:	f7ff ff7d 	bl	801d338 <std>
 801d43e:	68e0      	ldr	r0, [r4, #12]
 801d440:	2202      	movs	r2, #2
 801d442:	2112      	movs	r1, #18
 801d444:	f7ff ff78 	bl	801d338 <std>
 801d448:	2301      	movs	r3, #1
 801d44a:	61a3      	str	r3, [r4, #24]
 801d44c:	e7d2      	b.n	801d3f4 <__sinit+0xc>
 801d44e:	bf00      	nop
 801d450:	0801fc8c 	.word	0x0801fc8c
 801d454:	0801d381 	.word	0x0801d381

0801d458 <__sfp>:
 801d458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d45a:	4607      	mov	r7, r0
 801d45c:	f7ff ffac 	bl	801d3b8 <__sfp_lock_acquire>
 801d460:	4b1e      	ldr	r3, [pc, #120]	; (801d4dc <__sfp+0x84>)
 801d462:	681e      	ldr	r6, [r3, #0]
 801d464:	69b3      	ldr	r3, [r6, #24]
 801d466:	b913      	cbnz	r3, 801d46e <__sfp+0x16>
 801d468:	4630      	mov	r0, r6
 801d46a:	f7ff ffbd 	bl	801d3e8 <__sinit>
 801d46e:	3648      	adds	r6, #72	; 0x48
 801d470:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801d474:	3b01      	subs	r3, #1
 801d476:	d503      	bpl.n	801d480 <__sfp+0x28>
 801d478:	6833      	ldr	r3, [r6, #0]
 801d47a:	b30b      	cbz	r3, 801d4c0 <__sfp+0x68>
 801d47c:	6836      	ldr	r6, [r6, #0]
 801d47e:	e7f7      	b.n	801d470 <__sfp+0x18>
 801d480:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801d484:	b9d5      	cbnz	r5, 801d4bc <__sfp+0x64>
 801d486:	4b16      	ldr	r3, [pc, #88]	; (801d4e0 <__sfp+0x88>)
 801d488:	60e3      	str	r3, [r4, #12]
 801d48a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801d48e:	6665      	str	r5, [r4, #100]	; 0x64
 801d490:	f000 f847 	bl	801d522 <__retarget_lock_init_recursive>
 801d494:	f7ff ff96 	bl	801d3c4 <__sfp_lock_release>
 801d498:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801d49c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801d4a0:	6025      	str	r5, [r4, #0]
 801d4a2:	61a5      	str	r5, [r4, #24]
 801d4a4:	2208      	movs	r2, #8
 801d4a6:	4629      	mov	r1, r5
 801d4a8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801d4ac:	f7ff f936 	bl	801c71c <memset>
 801d4b0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801d4b4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801d4b8:	4620      	mov	r0, r4
 801d4ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801d4bc:	3468      	adds	r4, #104	; 0x68
 801d4be:	e7d9      	b.n	801d474 <__sfp+0x1c>
 801d4c0:	2104      	movs	r1, #4
 801d4c2:	4638      	mov	r0, r7
 801d4c4:	f7ff ff62 	bl	801d38c <__sfmoreglue>
 801d4c8:	4604      	mov	r4, r0
 801d4ca:	6030      	str	r0, [r6, #0]
 801d4cc:	2800      	cmp	r0, #0
 801d4ce:	d1d5      	bne.n	801d47c <__sfp+0x24>
 801d4d0:	f7ff ff78 	bl	801d3c4 <__sfp_lock_release>
 801d4d4:	230c      	movs	r3, #12
 801d4d6:	603b      	str	r3, [r7, #0]
 801d4d8:	e7ee      	b.n	801d4b8 <__sfp+0x60>
 801d4da:	bf00      	nop
 801d4dc:	0801fc8c 	.word	0x0801fc8c
 801d4e0:	ffff0001 	.word	0xffff0001

0801d4e4 <_fwalk_reent>:
 801d4e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d4e8:	4606      	mov	r6, r0
 801d4ea:	4688      	mov	r8, r1
 801d4ec:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801d4f0:	2700      	movs	r7, #0
 801d4f2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801d4f6:	f1b9 0901 	subs.w	r9, r9, #1
 801d4fa:	d505      	bpl.n	801d508 <_fwalk_reent+0x24>
 801d4fc:	6824      	ldr	r4, [r4, #0]
 801d4fe:	2c00      	cmp	r4, #0
 801d500:	d1f7      	bne.n	801d4f2 <_fwalk_reent+0xe>
 801d502:	4638      	mov	r0, r7
 801d504:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d508:	89ab      	ldrh	r3, [r5, #12]
 801d50a:	2b01      	cmp	r3, #1
 801d50c:	d907      	bls.n	801d51e <_fwalk_reent+0x3a>
 801d50e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801d512:	3301      	adds	r3, #1
 801d514:	d003      	beq.n	801d51e <_fwalk_reent+0x3a>
 801d516:	4629      	mov	r1, r5
 801d518:	4630      	mov	r0, r6
 801d51a:	47c0      	blx	r8
 801d51c:	4307      	orrs	r7, r0
 801d51e:	3568      	adds	r5, #104	; 0x68
 801d520:	e7e9      	b.n	801d4f6 <_fwalk_reent+0x12>

0801d522 <__retarget_lock_init_recursive>:
 801d522:	4770      	bx	lr

0801d524 <__retarget_lock_acquire_recursive>:
 801d524:	4770      	bx	lr

0801d526 <__retarget_lock_release>:
 801d526:	4770      	bx	lr

0801d528 <__retarget_lock_release_recursive>:
 801d528:	4770      	bx	lr

0801d52a <__swhatbuf_r>:
 801d52a:	b570      	push	{r4, r5, r6, lr}
 801d52c:	460e      	mov	r6, r1
 801d52e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d532:	2900      	cmp	r1, #0
 801d534:	b096      	sub	sp, #88	; 0x58
 801d536:	4614      	mov	r4, r2
 801d538:	461d      	mov	r5, r3
 801d53a:	da08      	bge.n	801d54e <__swhatbuf_r+0x24>
 801d53c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801d540:	2200      	movs	r2, #0
 801d542:	602a      	str	r2, [r5, #0]
 801d544:	061a      	lsls	r2, r3, #24
 801d546:	d410      	bmi.n	801d56a <__swhatbuf_r+0x40>
 801d548:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801d54c:	e00e      	b.n	801d56c <__swhatbuf_r+0x42>
 801d54e:	466a      	mov	r2, sp
 801d550:	f000 f8c2 	bl	801d6d8 <_fstat_r>
 801d554:	2800      	cmp	r0, #0
 801d556:	dbf1      	blt.n	801d53c <__swhatbuf_r+0x12>
 801d558:	9a01      	ldr	r2, [sp, #4]
 801d55a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801d55e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801d562:	425a      	negs	r2, r3
 801d564:	415a      	adcs	r2, r3
 801d566:	602a      	str	r2, [r5, #0]
 801d568:	e7ee      	b.n	801d548 <__swhatbuf_r+0x1e>
 801d56a:	2340      	movs	r3, #64	; 0x40
 801d56c:	2000      	movs	r0, #0
 801d56e:	6023      	str	r3, [r4, #0]
 801d570:	b016      	add	sp, #88	; 0x58
 801d572:	bd70      	pop	{r4, r5, r6, pc}

0801d574 <__smakebuf_r>:
 801d574:	898b      	ldrh	r3, [r1, #12]
 801d576:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801d578:	079d      	lsls	r5, r3, #30
 801d57a:	4606      	mov	r6, r0
 801d57c:	460c      	mov	r4, r1
 801d57e:	d507      	bpl.n	801d590 <__smakebuf_r+0x1c>
 801d580:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801d584:	6023      	str	r3, [r4, #0]
 801d586:	6123      	str	r3, [r4, #16]
 801d588:	2301      	movs	r3, #1
 801d58a:	6163      	str	r3, [r4, #20]
 801d58c:	b002      	add	sp, #8
 801d58e:	bd70      	pop	{r4, r5, r6, pc}
 801d590:	ab01      	add	r3, sp, #4
 801d592:	466a      	mov	r2, sp
 801d594:	f7ff ffc9 	bl	801d52a <__swhatbuf_r>
 801d598:	9900      	ldr	r1, [sp, #0]
 801d59a:	4605      	mov	r5, r0
 801d59c:	4630      	mov	r0, r6
 801d59e:	f7ff f931 	bl	801c804 <_malloc_r>
 801d5a2:	b948      	cbnz	r0, 801d5b8 <__smakebuf_r+0x44>
 801d5a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801d5a8:	059a      	lsls	r2, r3, #22
 801d5aa:	d4ef      	bmi.n	801d58c <__smakebuf_r+0x18>
 801d5ac:	f023 0303 	bic.w	r3, r3, #3
 801d5b0:	f043 0302 	orr.w	r3, r3, #2
 801d5b4:	81a3      	strh	r3, [r4, #12]
 801d5b6:	e7e3      	b.n	801d580 <__smakebuf_r+0xc>
 801d5b8:	4b0d      	ldr	r3, [pc, #52]	; (801d5f0 <__smakebuf_r+0x7c>)
 801d5ba:	62b3      	str	r3, [r6, #40]	; 0x28
 801d5bc:	89a3      	ldrh	r3, [r4, #12]
 801d5be:	6020      	str	r0, [r4, #0]
 801d5c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801d5c4:	81a3      	strh	r3, [r4, #12]
 801d5c6:	9b00      	ldr	r3, [sp, #0]
 801d5c8:	6163      	str	r3, [r4, #20]
 801d5ca:	9b01      	ldr	r3, [sp, #4]
 801d5cc:	6120      	str	r0, [r4, #16]
 801d5ce:	b15b      	cbz	r3, 801d5e8 <__smakebuf_r+0x74>
 801d5d0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d5d4:	4630      	mov	r0, r6
 801d5d6:	f000 f891 	bl	801d6fc <_isatty_r>
 801d5da:	b128      	cbz	r0, 801d5e8 <__smakebuf_r+0x74>
 801d5dc:	89a3      	ldrh	r3, [r4, #12]
 801d5de:	f023 0303 	bic.w	r3, r3, #3
 801d5e2:	f043 0301 	orr.w	r3, r3, #1
 801d5e6:	81a3      	strh	r3, [r4, #12]
 801d5e8:	89a0      	ldrh	r0, [r4, #12]
 801d5ea:	4305      	orrs	r5, r0
 801d5ec:	81a5      	strh	r5, [r4, #12]
 801d5ee:	e7cd      	b.n	801d58c <__smakebuf_r+0x18>
 801d5f0:	0801d381 	.word	0x0801d381

0801d5f4 <__malloc_lock>:
 801d5f4:	4801      	ldr	r0, [pc, #4]	; (801d5fc <__malloc_lock+0x8>)
 801d5f6:	f7ff bf95 	b.w	801d524 <__retarget_lock_acquire_recursive>
 801d5fa:	bf00      	nop
 801d5fc:	200179ed 	.word	0x200179ed

0801d600 <__malloc_unlock>:
 801d600:	4801      	ldr	r0, [pc, #4]	; (801d608 <__malloc_unlock+0x8>)
 801d602:	f7ff bf91 	b.w	801d528 <__retarget_lock_release_recursive>
 801d606:	bf00      	nop
 801d608:	200179ed 	.word	0x200179ed

0801d60c <__sread>:
 801d60c:	b510      	push	{r4, lr}
 801d60e:	460c      	mov	r4, r1
 801d610:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d614:	f000 f894 	bl	801d740 <_read_r>
 801d618:	2800      	cmp	r0, #0
 801d61a:	bfab      	itete	ge
 801d61c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801d61e:	89a3      	ldrhlt	r3, [r4, #12]
 801d620:	181b      	addge	r3, r3, r0
 801d622:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801d626:	bfac      	ite	ge
 801d628:	6563      	strge	r3, [r4, #84]	; 0x54
 801d62a:	81a3      	strhlt	r3, [r4, #12]
 801d62c:	bd10      	pop	{r4, pc}

0801d62e <__swrite>:
 801d62e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d632:	461f      	mov	r7, r3
 801d634:	898b      	ldrh	r3, [r1, #12]
 801d636:	05db      	lsls	r3, r3, #23
 801d638:	4605      	mov	r5, r0
 801d63a:	460c      	mov	r4, r1
 801d63c:	4616      	mov	r6, r2
 801d63e:	d505      	bpl.n	801d64c <__swrite+0x1e>
 801d640:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d644:	2302      	movs	r3, #2
 801d646:	2200      	movs	r2, #0
 801d648:	f000 f868 	bl	801d71c <_lseek_r>
 801d64c:	89a3      	ldrh	r3, [r4, #12]
 801d64e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d652:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801d656:	81a3      	strh	r3, [r4, #12]
 801d658:	4632      	mov	r2, r6
 801d65a:	463b      	mov	r3, r7
 801d65c:	4628      	mov	r0, r5
 801d65e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801d662:	f000 b817 	b.w	801d694 <_write_r>

0801d666 <__sseek>:
 801d666:	b510      	push	{r4, lr}
 801d668:	460c      	mov	r4, r1
 801d66a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d66e:	f000 f855 	bl	801d71c <_lseek_r>
 801d672:	1c43      	adds	r3, r0, #1
 801d674:	89a3      	ldrh	r3, [r4, #12]
 801d676:	bf15      	itete	ne
 801d678:	6560      	strne	r0, [r4, #84]	; 0x54
 801d67a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801d67e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801d682:	81a3      	strheq	r3, [r4, #12]
 801d684:	bf18      	it	ne
 801d686:	81a3      	strhne	r3, [r4, #12]
 801d688:	bd10      	pop	{r4, pc}

0801d68a <__sclose>:
 801d68a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d68e:	f000 b813 	b.w	801d6b8 <_close_r>
	...

0801d694 <_write_r>:
 801d694:	b538      	push	{r3, r4, r5, lr}
 801d696:	4d07      	ldr	r5, [pc, #28]	; (801d6b4 <_write_r+0x20>)
 801d698:	4604      	mov	r4, r0
 801d69a:	4608      	mov	r0, r1
 801d69c:	4611      	mov	r1, r2
 801d69e:	2200      	movs	r2, #0
 801d6a0:	602a      	str	r2, [r5, #0]
 801d6a2:	461a      	mov	r2, r3
 801d6a4:	f7e4 fbca 	bl	8001e3c <_write>
 801d6a8:	1c43      	adds	r3, r0, #1
 801d6aa:	d102      	bne.n	801d6b2 <_write_r+0x1e>
 801d6ac:	682b      	ldr	r3, [r5, #0]
 801d6ae:	b103      	cbz	r3, 801d6b2 <_write_r+0x1e>
 801d6b0:	6023      	str	r3, [r4, #0]
 801d6b2:	bd38      	pop	{r3, r4, r5, pc}
 801d6b4:	200179f0 	.word	0x200179f0

0801d6b8 <_close_r>:
 801d6b8:	b538      	push	{r3, r4, r5, lr}
 801d6ba:	4d06      	ldr	r5, [pc, #24]	; (801d6d4 <_close_r+0x1c>)
 801d6bc:	2300      	movs	r3, #0
 801d6be:	4604      	mov	r4, r0
 801d6c0:	4608      	mov	r0, r1
 801d6c2:	602b      	str	r3, [r5, #0]
 801d6c4:	f7e4 fbc8 	bl	8001e58 <_close>
 801d6c8:	1c43      	adds	r3, r0, #1
 801d6ca:	d102      	bne.n	801d6d2 <_close_r+0x1a>
 801d6cc:	682b      	ldr	r3, [r5, #0]
 801d6ce:	b103      	cbz	r3, 801d6d2 <_close_r+0x1a>
 801d6d0:	6023      	str	r3, [r4, #0]
 801d6d2:	bd38      	pop	{r3, r4, r5, pc}
 801d6d4:	200179f0 	.word	0x200179f0

0801d6d8 <_fstat_r>:
 801d6d8:	b538      	push	{r3, r4, r5, lr}
 801d6da:	4d07      	ldr	r5, [pc, #28]	; (801d6f8 <_fstat_r+0x20>)
 801d6dc:	2300      	movs	r3, #0
 801d6de:	4604      	mov	r4, r0
 801d6e0:	4608      	mov	r0, r1
 801d6e2:	4611      	mov	r1, r2
 801d6e4:	602b      	str	r3, [r5, #0]
 801d6e6:	f7e4 fbba 	bl	8001e5e <_fstat>
 801d6ea:	1c43      	adds	r3, r0, #1
 801d6ec:	d102      	bne.n	801d6f4 <_fstat_r+0x1c>
 801d6ee:	682b      	ldr	r3, [r5, #0]
 801d6f0:	b103      	cbz	r3, 801d6f4 <_fstat_r+0x1c>
 801d6f2:	6023      	str	r3, [r4, #0]
 801d6f4:	bd38      	pop	{r3, r4, r5, pc}
 801d6f6:	bf00      	nop
 801d6f8:	200179f0 	.word	0x200179f0

0801d6fc <_isatty_r>:
 801d6fc:	b538      	push	{r3, r4, r5, lr}
 801d6fe:	4d06      	ldr	r5, [pc, #24]	; (801d718 <_isatty_r+0x1c>)
 801d700:	2300      	movs	r3, #0
 801d702:	4604      	mov	r4, r0
 801d704:	4608      	mov	r0, r1
 801d706:	602b      	str	r3, [r5, #0]
 801d708:	f7e4 fbae 	bl	8001e68 <_isatty>
 801d70c:	1c43      	adds	r3, r0, #1
 801d70e:	d102      	bne.n	801d716 <_isatty_r+0x1a>
 801d710:	682b      	ldr	r3, [r5, #0]
 801d712:	b103      	cbz	r3, 801d716 <_isatty_r+0x1a>
 801d714:	6023      	str	r3, [r4, #0]
 801d716:	bd38      	pop	{r3, r4, r5, pc}
 801d718:	200179f0 	.word	0x200179f0

0801d71c <_lseek_r>:
 801d71c:	b538      	push	{r3, r4, r5, lr}
 801d71e:	4d07      	ldr	r5, [pc, #28]	; (801d73c <_lseek_r+0x20>)
 801d720:	4604      	mov	r4, r0
 801d722:	4608      	mov	r0, r1
 801d724:	4611      	mov	r1, r2
 801d726:	2200      	movs	r2, #0
 801d728:	602a      	str	r2, [r5, #0]
 801d72a:	461a      	mov	r2, r3
 801d72c:	f7e4 fb9e 	bl	8001e6c <_lseek>
 801d730:	1c43      	adds	r3, r0, #1
 801d732:	d102      	bne.n	801d73a <_lseek_r+0x1e>
 801d734:	682b      	ldr	r3, [r5, #0]
 801d736:	b103      	cbz	r3, 801d73a <_lseek_r+0x1e>
 801d738:	6023      	str	r3, [r4, #0]
 801d73a:	bd38      	pop	{r3, r4, r5, pc}
 801d73c:	200179f0 	.word	0x200179f0

0801d740 <_read_r>:
 801d740:	b538      	push	{r3, r4, r5, lr}
 801d742:	4d07      	ldr	r5, [pc, #28]	; (801d760 <_read_r+0x20>)
 801d744:	4604      	mov	r4, r0
 801d746:	4608      	mov	r0, r1
 801d748:	4611      	mov	r1, r2
 801d74a:	2200      	movs	r2, #0
 801d74c:	602a      	str	r2, [r5, #0]
 801d74e:	461a      	mov	r2, r3
 801d750:	f7e4 fb66 	bl	8001e20 <_read>
 801d754:	1c43      	adds	r3, r0, #1
 801d756:	d102      	bne.n	801d75e <_read_r+0x1e>
 801d758:	682b      	ldr	r3, [r5, #0]
 801d75a:	b103      	cbz	r3, 801d75e <_read_r+0x1e>
 801d75c:	6023      	str	r3, [r4, #0]
 801d75e:	bd38      	pop	{r3, r4, r5, pc}
 801d760:	200179f0 	.word	0x200179f0

0801d764 <_init>:
 801d764:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d766:	bf00      	nop
 801d768:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801d76a:	bc08      	pop	{r3}
 801d76c:	469e      	mov	lr, r3
 801d76e:	4770      	bx	lr

0801d770 <_fini>:
 801d770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d772:	bf00      	nop
 801d774:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801d776:	bc08      	pop	{r3}
 801d778:	469e      	mov	lr, r3
 801d77a:	4770      	bx	lr
